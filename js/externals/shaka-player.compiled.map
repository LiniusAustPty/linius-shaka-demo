{
"version":3,
"file":"../dist/shaka-player.compiled.js",
"lineCount":1433,
"mappings":"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",
"sources":[" [synthetic:base] "," [synthetic:util/defines] "," [synthetic:util/defineproperty] "," [synthetic:util/global] "," [synthetic:es6/symbol] "," [synthetic:es6/util/makeiterator] "," [synthetic:util/polyfill] "," [synthetic:es6/promise/promise] "," [synthetic:es6/promise/finally] "," [synthetic:es6/execute_async_generator] "," [synthetic:es6/generator_engine] "," [synthetic:es6/util/arrayfromiterator] "," [synthetic:es6/util/arrayfromiterable] "," [synthetic:es6/conformance] "," [synthetic:util/owns] "," [synthetic:es6/weakmap] "," [synthetic:es6/map] "," [synthetic:es6/set] "," [synthetic:util/findinternal] "," [synthetic:es6/array/findindex] "," [synthetic:es6/util/iteratorfromarray] "," [synthetic:es6/array/keys] "," [synthetic:es6/array/values] "," [synthetic:es6/array/from] "," [synthetic:es6/object/is] "," [synthetic:es6/array/includes] "," [synthetic:util/checkstringargs] "," [synthetic:es6/string/includes] "," [synthetic:es6/array/find] "," [synthetic:es6/string/startswith] ","../third_party/closure/goog/base.js","../lib/debug/asserts.js","../lib/abr/ewma.js","../lib/abr/ewma_bandwidth_estimator.js","../lib/debug/log.js","../third_party/closure/goog/uri/utils.js","../third_party/closure/goog/uri/uri.js","../lib/util/public_promise.js","../lib/net/backoff.js","../lib/util/error.js","../lib/util/abortable_operation.js","../lib/util/fake_event.js","../lib/util/multi_map.js","../lib/util/fake_event_target.js","../lib/util/i_destroyable.js","../lib/util/object_utils.js","../lib/util/array_utils.js","../lib/util/operation_manager.js","../lib/net/networking_engine.js","../lib/util/event_manager.js","../lib/util/functional.js","../lib/util/iterables.js","../lib/util/map_utils.js","../lib/util/mime_utils.js","../lib/util/string_utils.js","../lib/util/timer.js","../lib/util/uint8array_utils.js","../lib/media/drm_engine.js","../lib/media/time_ranges_utils.js","../lib/text/cue.js","../lib/util/manifest_parser_utils.js","../lib/media/transmuxer.js","../lib/text/text_engine.js","../lib/media/media_source_engine.js","../lib/util/language_utils.js","../lib/util/stream_utils.js","../lib/abr/simple_abr_manager.js","../lib/cast/cast_utils.js","../lib/cast/cast_sender.js","../lib/cast/cast_proxy.js","../lib/cast/cast_receiver.js","../lib/util/xml_utils.js","../lib/dash/content_protection.js","../lib/dash/mpd_utils.js","../lib/media/segment_reference.js","../lib/util/data_view_reader.js","../lib/util/mp4_parser.js","../lib/media/mp4_segment_index_parser.js","../lib/media/segment_index.js","../lib/util/ebml_parser.js","../lib/media/webm_segment_index_parser.js","../lib/dash/segment_base.js","../lib/dash/segment_list.js","../lib/dash/segment_template.js","../lib/media/manifest_parser.js","../lib/media/presentation_timeline.js","../lib/dash/dash_parser.js","../lib/hls/hls_classes.js","../lib/hls/hls_utils.js","../lib/util/text_parser.js","../lib/hls/manifest_text_parser.js","../lib/net/data_uri_plugin.js","../lib/hls/hls_parser.js","../lib/media/active_stream_map.js","../lib/media/adaptation_set.js","../lib/media/adaptation_set_criteria.js","../lib/media/gap_jumping_controller.js","../lib/media/video_wrapper.js","../lib/media/playhead.js","../lib/util/destroyer.js","../lib/media/playhead_observer.js","../lib/vstub/vstub_segment_list.js","../lib/media/streaming_engine.js","../lib/net/http_plugin_utils.js","../lib/net/http_fetch_plugin.js","../lib/net/http_xhr_plugin.js","../lib/offline/download_manager.js","../lib/offline/indexeddb/db_operation.js","../lib/offline/indexeddb/db_connection.js","../lib/offline/indexeddb/eme_session_storage_cell.js","../lib/offline/storage_muxer.js","../lib/offline/indexeddb/v1_storage_cell.js","../lib/offline/indexeddb/v2_storage_cell.js","../lib/offline/indexeddb/storage_mechanism.js","../lib/offline/offline_uri.js","../lib/offline/manifest_converter.js","../lib/offline/offline_manifest_parser.js","../lib/offline/offline_scheme.js","../lib/offline/session_deleter.js","../lib/text/simple_text_displayer.js","../lib/util/config_utils.js","../lib/util/player_configuration.js","../lib/player.js","../lib/offline/stored_content_utils.js","../lib/offline/stream_bandwidth_estimator.js","../lib/util/manifest_filter.js","../lib/offline/storage.js","../lib/polyfill/all.js","../lib/polyfill/fullscreen.js","../lib/polyfill/indexed_db.js","../lib/polyfill/input_event.js","../lib/polyfill/mathround.js","../lib/polyfill/mediasource.js","../lib/util/pssh.js","../lib/polyfill/patchedmediakeys_ms.js","../lib/polyfill/patchedmediakeys_nop.js","../lib/polyfill/patchedmediakeys_webkit.js","../lib/polyfill/video_play_promise.js","../lib/polyfill/videoplaybackquality.js","../lib/polyfill/vttcue.js","../lib/text/ttml_text_parser.js","../lib/text/mp4_ttml_parser.js","../lib/text/vtt_text_parser.js","../lib/text/mp4_vtt_parser.js","../lib/vstub/vstub_parser.js","../third_party/language-mapping-list/language-mapping-list.js","../ui/localization.js","../ui/locales.js","../ui/ui_utils.js","../ui/controls.js","../ui/ui.js"],
"sourcesContent":["/*\n * Copyright 2012 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n/**\n * @fileoverview The base namespace for code injected by the compiler\n * at compile-time.\n *\n * @author nicksantos@google.com (Nick Santos)\n */\n\n/** @const */\nvar $jscomp = $jscomp || {};\n\n/** @const Locals for goog.scope */\n$jscomp.scope = {};\n","/*\n * Copyright 2017 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n\n\n/**\n * Whether to assume ES5 is available.  This enables removing several\n * internal polyfills, which must otherwise be detected at runtime.\n * @define {boolean}\n */\n$jscomp.ASSUME_ES5 = false;\n\n/**\n * Whether to skip the conformance check and simply use the polyfill always.\n * @define {boolean}\n */\n$jscomp.ASSUME_NO_NATIVE_MAP = false;\n\n/**\n * Whether to skip the conformance check and simply use the polyfill always.\n * @define {boolean}\n */\n$jscomp.ASSUME_NO_NATIVE_SET = false;\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides methods to polyfill native objects.\n * @suppress {reportUnknownTypes}\n */\n'require util/defines';\n\n\n/**\n * Polyfill for Object.defineProperty() method:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\n *\n * Refuses to define properties on Array.prototype and Object.prototype,\n * since we can't make them non-enumerable and this messes up peoples' for\n * loops.  Beyond this, we simply assign values and not worry\n * about enumerability or writeability.\n * @param {?} target\n * @param {string} property\n * @param {?} descriptor\n * @suppress {reportUnknownTypes}\n */\n$jscomp.defineProperty =\n    $jscomp.ASSUME_ES5 || typeof Object.defineProperties == 'function' ?\n    Object.defineProperty :\n    function(target, property, descriptor) {\n      descriptor = /** @type {!ObjectPropertyDescriptor} */ (descriptor);\n      // NOTE: This is currently never called with a descriptor outside\n      // the control of the compiler.  If we ever decide to polyfill either\n      // Object.defineProperty or Reflect.defineProperty for ES3, we should\n      // explicitly check for `get` or `set` on the descriptor and throw a\n      // TypeError, since it's impossible to properly polyfill it.\n      if (target == Array.prototype || target == Object.prototype) return;\n      target[property] = descriptor.value;\n    };\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Runtime code to store the global object.\n */\n'require base';\n'declare global';\n'declare window';\n\n\n/**\n * @param {!Object} maybeGlobal\n * @return {!Object} The global object.\n * @suppress {undefinedVars|reportUnknownTypes}\n */\n$jscomp.getGlobal = function(maybeGlobal) {\n  return (typeof window != 'undefined' && window === maybeGlobal) ?\n      maybeGlobal :\n      (typeof global != 'undefined' && global != null) ? global : maybeGlobal;\n};\n\n\n// TODO(sdh): This should be typed as \"the global object\", but there's not\n// currently any way to do this in the existing type system.\n/**\n * The global object. For browsers we could just use `this` but in Node that\n * doesn't work.\n * @const {?}\n */\n$jscomp.global = $jscomp.getGlobal(this);\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require util/defineproperty';\n'require util/global';\n\n/** @const {string} */\n$jscomp.SYMBOL_PREFIX = 'jscomp_symbol_';\n\n\n/**\n * Initializes the Symbol function.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.initSymbol = function() {\n  // Only need to do this once. All future calls are no-ops.\n  $jscomp.initSymbol = function() {};\n\n  if (!$jscomp.global['Symbol']) {\n    $jscomp.global['Symbol'] = $jscomp.Symbol;\n  }\n};\n\n\n/**\n * Produces \"symbols\" (actually just unique strings).\n * @param {string=} opt_description\n * @return {symbol}\n */\n$jscomp.Symbol = /** @type {function(): !Function} */ (function() {\n  var counter = 0;\n  /**\n   * @param {string=} opt_description\n   * @return {symbol}\n   * @suppress {reportUnknownTypes}\n   */\n  function Symbol(opt_description) {\n    return /** @type {?} */ (\n        $jscomp.SYMBOL_PREFIX + (opt_description || '') + (counter++));\n  }\n  return Symbol;\n})();\n\n\n/**\n * Initializes Symbol.iterator (if it's not already defined) and adds a\n * Symbol.iterator property to the Array prototype.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.initSymbolIterator = function() {\n  $jscomp.initSymbol();\n  var symbolIterator = $jscomp.global['Symbol'].iterator;\n  if (!symbolIterator) {\n    symbolIterator = $jscomp.global['Symbol'].iterator =\n        $jscomp.global['Symbol']('iterator');\n  }\n\n  if (typeof Array.prototype[symbolIterator] != 'function') {\n    $jscomp.defineProperty(\n        Array.prototype, symbolIterator, {\n          configurable: true,\n          writable: true,\n          /**\n           * @this {Array}\n           * @return {!IteratorIterable}\n           */\n          value: function() {\n            return $jscomp.arrayIterator(this);\n          }\n        });\n  }\n\n  // Only need to do this once. All future calls are no-ops.\n  $jscomp.initSymbolIterator = function() {};\n};\n\n\n/**\n * Returns an iterator from the given array.\n * @param {!Array<T>} array\n * @return {!IteratorIterable<T>}\n * @template T\n */\n$jscomp.arrayIterator = function(array) {\n  var index = 0;\n  return $jscomp.iteratorPrototype(function() {\n    if (index < array.length) {\n      return {\n        done: false,\n        value: array[index++],\n      };\n    } else {\n      return {done: true};\n    }\n  });\n};\n\n\n/**\n * Returns an iterator with the given `next` method.  Passing\n * all iterators through this function allows easily extending\n * the definition of `%IteratorPrototype%` if methods are ever\n * added to it in the future.\n *\n * @param {function(this: Iterator<T>): T} next\n * @return {!IteratorIterable<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.iteratorPrototype = function(next) {\n  $jscomp.initSymbolIterator();\n\n  var iterator = {next: next};\n  /**\n   * @this {IteratorIterable}\n   * @return {!IteratorIterable}\n   */\n  iterator[$jscomp.global['Symbol'].iterator] = function() { return this; };\n  return /** @type {!IteratorIterable} */ (iterator);\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for for-of loops.\n */\n'require es6/symbol';\n\n\n/**\n * Creates an iterator for the given iterable.\n *\n * @param {string|!Iterable<T>|!Iterator<T>|!Arguments<T>} iterable\n * @return {!Iterator<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.makeIterator = function(iterable) {\n  $jscomp.initSymbolIterator();\n\n  // NOTE: Disabling typechecking because [] not allowed on @struct.\n  var iteratorFunction = /** @type {?} */ (iterable)[Symbol.iterator];\n  return iteratorFunction ? iteratorFunction.call(iterable) :\n      $jscomp.arrayIterator(/** @type {!Array} */ (iterable));\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides methods to polyfill native objects.\n */\n'require util/defineproperty';\n'require util/global';\n\n\n/**\n * @param {string} target Qualified name of the class or method to polyfill,\n *     e.g. 'Array.prototype.includes' or 'Map'.\n * @param {?function(*): *} polyfill A function that takes the current browser\n *     implementation of the target and returns an optional new polyfill\n *     implementation.  If null is returned, then no polyfill will be added.  A\n *     null argument for this parameter indicates that the function will not be\n *     polyfilled, and is only useful for `build_polyfill_table.js` bookkeeping.\n * @param {string} fromLang The language level in which the target is expected\n *     to already be present in the browser.  The compiler requires that\n *     `languageOut < fromLang` before injecting a polyfill (i.e. if the\n *     specified output language already includes the feature then there's no\n *     need to polyfill it).\n * @param {string} toLang The language level required by the polyfill\n *     implementation.  The compiler will issue an error if a polyfill is\n *     required, but `languageOut < toLang`.  Additionally, the\n *     `build_polyfill_table.js` script audits the polyfill dependency tree to\n *     ensure that no polyfill with a lower `toLang` depends on one with a\n *     higher `toLang`.\n * @suppress {reportUnknownTypes}\n * @noinline\n * NOTE: We prevent inlining so RemoveUnusedPolyfills can always recognize this\n * call.\n */\n$jscomp.polyfill = function(target, polyfill, fromLang, toLang) {\n  if (!polyfill) return;\n  var obj = $jscomp.global;\n  var split = target.split('.');\n  for (var i = 0; i < split.length - 1; i++) {\n    var key = split[i];\n    if (!(key in obj)) obj[key] = {};  // Might want to be defineProperty.\n    obj = obj[key];\n  }\n  var property = split[split.length - 1];\n  var orig = obj[property];\n  var impl = polyfill(orig);\n  if (impl == orig || impl == null) return;\n  $jscomp.defineProperty(\n      obj, property, {configurable: true, writable: true, value: impl});\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n'require es6/util/makeiterator';\n'require util/global';\n'require util/polyfill';\n\n/**\n * Should we unconditionally override a native Promise implementation with our\n * own?\n * @define {boolean}\n */\n$jscomp.FORCE_POLYFILL_PROMISE = false;\n\n\n$jscomp.polyfill('Promise',\n    /**\n     * @param {*} NativePromise\n     * @return {*}\n     * @suppress {reportUnknownTypes}\n     */\n    function(NativePromise) {\n  // TODO(bradfordcsmith): Do we need to add checks for standards conformance?\n  //     e.g. The version of FireFox we currently use for testing has a Promise\n  //     that fails to reject attempts to fulfill it with itself, but that\n  //     isn't reasonably testable here.\n  if (NativePromise && !$jscomp.FORCE_POLYFILL_PROMISE) {\n    return NativePromise;\n  }\n\n  /**\n    * Schedules code to be executed asynchronously.\n    * @constructor\n    * @struct\n    */\n  function AsyncExecutor() {\n    /**\n     * Batch of functions to execute.\n     *\n     * Will be `null` initially and immediately after a batch finishes\n     * executing.\n     * @private {?Array<function()>}\n     */\n    this.batch_ = null;\n  }\n\n  /**\n   * Schedule a function to execute asynchronously.\n   *\n   * -   The function will execute:\n   *     -   After the current call stack has completed executing.\n   *     -   After any functions previously scheduled using this object.\n   * -   The return value will be ignored.\n   * -   An exception thrown by the method will be caught and asynchronously\n   *     rethrown when it cannot interrupt any other code. This class provides\n   *     no way to catch such exceptions.\n   * @param {function():?} f\n   * @return {!AsyncExecutor} this object\n   */\n  AsyncExecutor.prototype.asyncExecute = function(f) {\n    if (this.batch_ == null) {\n      // no batch created yet, or last batch was fully executed\n      this.batch_ = [];\n      this.asyncExecuteBatch_();\n    }\n    this.batch_.push(f);\n    return this;\n  };\n\n  /**\n   * Schedule execution of the jobs in `this.batch_`.\n   * @private\n   */\n  AsyncExecutor.prototype.asyncExecuteBatch_ = function() {\n    var self = this;\n    this.asyncExecuteFunction(function() { self.executeBatch_(); });\n  };\n\n  // NOTE: We want to make sure AsyncExecutor will work as expected even if\n  // testing code should override setTimeout()\n  /** @const {function(!Function, number)} */\n  var nativeSetTimeout = $jscomp.global['setTimeout'];\n\n  /**\n   * Schedule a function to execute asynchronously as soon as possible.\n   *\n   * NOTE: May be overridden for testing.\n   * @package\n   * @param {function()} f\n   */\n  AsyncExecutor.prototype.asyncExecuteFunction = function(f) {\n    nativeSetTimeout(f, 0);\n  };\n\n  /**\n   * Execute scheduled jobs in a batch until all are executed or the batch\n   * execution time limit has been reached.\n   * @private\n   */\n  AsyncExecutor.prototype.executeBatch_ = function() {\n    while (this.batch_ && this.batch_.length) {\n      var /** !Array<?function()> */ executingBatch = this.batch_;\n      // Executions scheduled while executing this batch go into a new one to\n      // avoid the batch array getting too big.\n      this.batch_ = [];\n      for (var i = 0; i < executingBatch.length; ++i) {\n        var f = /** @type {function()} */ (executingBatch[i]);\n        executingBatch[i] = null;  // free memory\n        try {\n          f();\n        } catch (error) {\n          this.asyncThrow_(error);\n        }\n      }\n    }\n    // All jobs finished executing, so force scheduling a new batch next\n    // time asyncExecute() is called.\n    this.batch_ = null;\n  };\n\n  /**\n   * @private\n   * @param {*} exception\n   */\n  AsyncExecutor.prototype.asyncThrow_ = function(exception) {\n    this.asyncExecuteFunction(function() { throw exception; });\n  };\n\n  /**\n   * @enum {number}\n   */\n  var PromiseState = {\n    /** The Promise is waiting for resolution. */\n    PENDING: 0,\n\n    /** The Promise has been resolved with a fulfillment value. */\n    FULFILLED: 1,\n\n    /** The Promise has been resolved with a rejection reason. */\n    REJECTED: 2\n  };\n\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\n   * @param {function(\n   *             function((TYPE|IThenable<TYPE>|Thenable|null)=),\n   *             function(*=))} executor\n   * @constructor\n   * @extends {Promise<TYPE>}\n   * @template TYPE\n   */\n  var PolyfillPromise = function(executor) {\n    /** @private {PromiseState} */\n    this.state_ = PromiseState.PENDING;\n\n    /**\n     * The settled result of the Promise. Immutable once set with either a\n     * fulfillment value or rejection reason.\n     * @private {*}\n     */\n    this.result_ = undefined;\n\n    /**\n     * These functions must be asynchronously executed when this promise\n     * settles.\n     * @private {?Array<function()>}\n     */\n    this.onSettledCallbacks_ = [];\n\n    var resolveAndReject = this.createResolveAndReject_();\n    try {\n      executor(resolveAndReject.resolve, resolveAndReject.reject);\n    } catch (e) {\n      resolveAndReject.reject(e);\n    }\n  };\n\n\n  /**\n   * Create a pair of functions for resolving or rejecting this Promise.\n   *\n   * <p>After the resolve or reject function has been called once, later calls\n   * do nothing.\n   * @private\n   * @return {{\n   *     resolve: function((TYPE|IThenable<TYPE>|Thenable|null)=),\n   *     reject:  function(*=)\n   * }}\n   */\n  PolyfillPromise.prototype.createResolveAndReject_ = function() {\n    var thisPromise = this;\n    var alreadyCalled = false;\n    /**\n     * @param {function(this:PolyfillPromise<TYPE>, T)} method\n     * @return {function(T)}\n     * @template T\n     */\n    function firstCallWins(method) {\n      return function(x) {\n        if (!alreadyCalled) {\n          alreadyCalled = true;\n          method.call(thisPromise, x);\n        }\n      };\n    }\n    return {\n      resolve: firstCallWins(this.resolveTo_),\n      reject: firstCallWins(this.reject_)\n    };\n  };\n\n\n  /**\n   * @private\n   * @param {*} value\n   */\n  PolyfillPromise.prototype.resolveTo_ = function(value) {\n    if (value === this) {\n      this.reject_(new TypeError('A Promise cannot resolve to itself'));\n    } else if (value instanceof PolyfillPromise) {\n      this.settleSameAsPromise_(/** @type {!PolyfillPromise} */ (value));\n    } else if (isObject(value)) {\n      this.resolveToNonPromiseObj_(/** @type {!Object} */ (value));\n    } else {\n      this.fulfill_(value);\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {!Object} obj\n   * @suppress {strictMissingProperties} obj.then\n   */\n  PolyfillPromise.prototype.resolveToNonPromiseObj_ = function(obj) {\n    var thenMethod = undefined;\n\n    try {\n      thenMethod = obj.then;\n    } catch (error) {\n      this.reject_(error);\n      return;\n    }\n    if (typeof thenMethod == 'function') {\n      this.settleSameAsThenable_(thenMethod, /** @type {!Thenable} */ (obj));\n    } else {\n      this.fulfill_(obj);\n    }\n  };\n\n\n  /**\n   * @param {*} value anything\n   * @return {boolean}\n   */\n  function isObject(value) {\n    switch (typeof value) {\n      case 'object':\n        return value != null;\n      case 'function':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Reject this promise for the given reason.\n   * @private\n   * @param {*} reason\n   * @throws {!Error} if this promise is already fulfilled or rejected.\n   */\n  PolyfillPromise.prototype.reject_ = function(reason) {\n    this.settle_(PromiseState.REJECTED, reason);\n  };\n\n  /**\n   * Fulfill this promise with the given value.\n   * @private\n   * @param {!TYPE} value\n   * @throws {!Error} when this promise is already fulfilled or rejected.\n   */\n  PolyfillPromise.prototype.fulfill_ = function(value) {\n    this.settle_(PromiseState.FULFILLED, value);\n  };\n\n  /**\n   * Fulfill or reject this promise with the given value/reason.\n   * @private\n   * @param {!PromiseState} settledState (FULFILLED or REJECTED)\n   * @param {*} valueOrReason\n   * @throws {!Error} when this promise is already fulfilled or rejected.\n   */\n  PolyfillPromise.prototype.settle_ = function(settledState, valueOrReason) {\n    if (this.state_ != PromiseState.PENDING) {\n      throw new Error(\n          'Cannot settle(' + settledState + ', ' + valueOrReason +\n          '): Promise already settled in state' + this.state_);\n    }\n    this.state_ = settledState;\n    this.result_ = valueOrReason;\n    this.executeOnSettledCallbacks_();\n  };\n\n  PolyfillPromise.prototype.executeOnSettledCallbacks_ = function() {\n    if (this.onSettledCallbacks_ != null) {\n      for (var i = 0; i < this.onSettledCallbacks_.length; ++i) {\n        asyncExecutor.asyncExecute(this.onSettledCallbacks_[i]);\n      }\n      this.onSettledCallbacks_ = null;  // free memory\n    }\n  };\n\n  /**\n   * All promise async execution is managed by a single executor for the\n   * sake of efficiency.\n   * @const {!AsyncExecutor}\n   */\n  var asyncExecutor = new AsyncExecutor();\n\n  /**\n   * Arrange to settle this promise in the same way as the given thenable.\n   * @private\n   * @param {!PolyfillPromise} promise\n   */\n  PolyfillPromise.prototype.settleSameAsPromise_ = function(promise) {\n    var methods = this.createResolveAndReject_();\n\n    // Calling then() would create an unnecessary extra promise.\n    promise.callWhenSettled_(methods.resolve, methods.reject);\n  };\n\n  /**\n   * Arrange to settle this promise in the same way as the given thenable.\n   * @private\n   * @param {function(\n   *     function((TYPE|IThenable<TYPE>|Thenable|null)=),\n   *     function(*=))\n   * } thenMethod\n   * @param {!Thenable} thenable\n   */\n  PolyfillPromise.prototype.settleSameAsThenable_ = function(\n      thenMethod, thenable) {\n    var methods = this.createResolveAndReject_();\n\n    // Don't trust an unknown thenable implementation not to throw exceptions.\n    try {\n      thenMethod.call(thenable, methods.resolve, methods.reject);\n    } catch (error) {\n      methods.reject(error);\n    }\n  };\n\n  /** @override */\n  PolyfillPromise.prototype.then = function(onFulfilled, onRejected) {\n    var resolveChild;\n    var rejectChild;\n    var childPromise = new PolyfillPromise(function(resolve, reject) {\n      resolveChild = resolve;\n      rejectChild = reject;\n    });\n    function createCallback(paramF, defaultF) {\n      // The spec says to ignore non-function values for onFulfilled and\n      // onRejected\n      if (typeof paramF == 'function') {\n        return function(x) {\n          try {\n            resolveChild(paramF(x));\n          } catch (error) {\n            rejectChild(error);\n          }\n        };\n      } else {\n        return defaultF;\n      }\n    }\n\n    this.callWhenSettled_(\n        createCallback(onFulfilled, resolveChild),\n        createCallback(onRejected, rejectChild));\n    return childPromise;\n  };\n\n  /** @override */\n  PolyfillPromise.prototype.catch = function(onRejected) {\n    return this.then(undefined, onRejected);\n  };\n\n\n  PolyfillPromise.prototype.callWhenSettled_ = function(\n      onFulfilled, onRejected) {\n    var /** !PolyfillPromise */ thisPromise = this;\n    function callback() {\n      switch (thisPromise.state_) {\n        case PromiseState.FULFILLED:\n          onFulfilled(thisPromise.result_);\n          break;\n        case PromiseState.REJECTED:\n          onRejected(thisPromise.result_);\n          break;\n        default:\n          throw new Error('Unexpected state: ' + thisPromise.state_);\n      }\n    }\n    if (this.onSettledCallbacks_ == null) {\n      // we've already settled\n      asyncExecutor.asyncExecute(callback);\n    } else {\n      this.onSettledCallbacks_.push(callback);\n    }\n  };\n\n  // called locally, so give it a name\n  function resolvingPromise(opt_value) {\n    if (opt_value instanceof PolyfillPromise) {\n      return opt_value;\n    } else {\n      return new PolyfillPromise(function(resolve, reject) {\n        resolve(opt_value);\n      });\n    }\n  }\n  PolyfillPromise['resolve'] = resolvingPromise;\n\n\n  PolyfillPromise['reject'] = function(opt_reason) {\n    return new PolyfillPromise(function(resolve, reject) {\n      reject(opt_reason);\n    });\n  };\n\n\n  PolyfillPromise['race'] = function(thenablesOrValues) {\n    return new PolyfillPromise(function(resolve, reject) {\n      var iterator = $jscomp.makeIterator(thenablesOrValues);\n      for (var /** !IIterableResult<*> */ iterRec = iterator.next();\n           !iterRec.done;\n           iterRec = iterator.next()) {\n        // Using resolvingPromise() allows us to treat all elements the same\n        // way.\n        // NOTE: resolvingPromise(promise) always returns the argument\n        // unchanged.\n        // Using .callWhenSettled_() instead of .then() avoids creating an\n        // unnecessary extra promise.\n        resolvingPromise(iterRec.value).callWhenSettled_(resolve, reject);\n      }\n    });\n  };\n\n\n  PolyfillPromise['all'] = function(thenablesOrValues) {\n    var iterator = $jscomp.makeIterator(thenablesOrValues);\n    var /** !IIterableResult<*> */ iterRec = iterator.next();\n\n    if (iterRec.done) {\n      return resolvingPromise([]);\n    } else {\n      return new PolyfillPromise(function(resolveAll, rejectAll) {\n        var resultsArray = [];\n        var unresolvedCount = 0;\n\n        function onFulfilled(i) {\n          return function(ithResult) {\n            resultsArray[i] = ithResult;\n            unresolvedCount--;\n            if (unresolvedCount == 0) {\n              resolveAll(resultsArray);\n            }\n          };\n        }\n\n        do {\n          resultsArray.push(undefined);\n          unresolvedCount++;\n          // Using resolvingPromise() allows us to treat all elements the same\n          // way.\n          // NOTE: resolvingPromise(promise) always returns the argument\n          // unchanged. Using .callWhenSettled_() instead of .then() avoids\n          // creating an unnecessary extra promise.\n          resolvingPromise(iterRec.value)\n              .callWhenSettled_(\n                  onFulfilled(resultsArray.length - 1), rejectAll);\n          iterRec = iterator.next();\n        } while (!iterRec.done);\n      });\n    }\n  };\n\n  return PolyfillPromise;\n}, 'es6', 'es3');\n","/*\n * Copyright 2018 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require util/polyfill';\n'require es6/promise/promise';\n\n$jscomp.polyfill('Promise.prototype.finally', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * @this {!Promise<VALUE>}\n   * @param {function():?} onFinally\n   * @return {!Promise<VALUE>}\n   * @template VALUE\n   * @suppress {reportUnknownTypes}\n   */\n  var polyfill = function(onFinally) {\n    return this.then(\n        function(value) {\n          var promise = Promise.resolve(onFinally());\n          return promise.then(function () { return value; });\n        },\n        function(reason) {\n          var promise = Promise.resolve(onFinally());\n          return promise.then(function () { throw reason; });\n        });\n  };\n\n  return polyfill;\n}, 'es8', 'es3');\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n'require es6/promise';\n\n/**\n * Handles the execution of an async function.\n *\n * An async function, foo(a, b), will be rewritten as:\n *\n * ```\n * function foo(a, b) {\n *   let $jscomp$async$this = this;\n *   let $jscomp$async$arguments = arguments;\n *   let $jscomp$async$super$get$x = () => super.x;\n *   function* $jscomp$async$generator() {\n *     // original body of foo() with:\n *     // - await (x) replaced with yield (x)\n *     // - arguments replaced with $jscomp$async$arguments\n *     // - this replaced with $jscomp$async$this\n *     // - super.x replaced with $jscomp$async$super$get$x()\n *     // - super.x(5) replaced with  $jscomp$async$super$get$x()\n *     //      .call($jscomp$async$this, 5)\n *   }\n *   return $jscomp.executeAsyncGenerator($jscomp$async$generator());\n * }\n * ```\n * @param {!Generator<?>} generator\n * @return {!Promise<?>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.asyncExecutePromiseGenerator = function(generator) {\n  function passValueToGenerator(value) {\n    return generator.next(value);\n  }\n\n  function passErrorToGenerator(error) {\n    return generator.throw(error);\n  }\n\n  return new Promise(function(resolve, reject) {\n    function handleGeneratorRecord(/** !IIterableResult<*> */ genRec) {\n      if (genRec.done) {\n        resolve(genRec.value);\n      } else {\n        // One can await a non-promise, so genRec.value\n        // might not already be a promise.\n        Promise.resolve(genRec.value)\n            .then(passValueToGenerator, passErrorToGenerator)\n            .then(handleGeneratorRecord, reject);\n      }\n    }\n\n    handleGeneratorRecord(generator.next());\n  });\n};\n\n/**\n * Handles the execution of a generator function returning promises.\n *\n * An async function, foo(a, b), will be rewritten as:\n *\n * ```\n * function foo(a, b) {\n *   let $jscomp$async$this = this;\n *   let $jscomp$async$arguments = arguments;\n *   let $jscomp$async$super$get$x = () => super.x;\n *   return $jscomp.asyncExecutePromiseGeneratorFunction(\n *       function* () {\n *         // original body of foo() with:\n *         // - await (x) replaced with yield (x)\n *         // - arguments replaced with $jscomp$async$arguments\n *         // - this replaced with $jscomp$async$this\n *         // - super.x replaced with $jscomp$async$super$get$x()\n *         // - super.x(5) replaced with  $jscomp$async$super$get$x()\n *         //      .call($jscomp$async$this, 5)\n *       });\n * }\n * ```\n * @param {function(): !Generator<?>} generatorFunction\n * @return {!Promise<?>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.asyncExecutePromiseGeneratorFunction = function(generatorFunction) {\n  return $jscomp.asyncExecutePromiseGenerator(generatorFunction());\n};\n","/*\n * Copyright 2018 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n'require es6/symbol';\n'require es6/util/makeiterator';\n\n/**\n * @fileoverview Implementation for $jscomp.generator\n *\n * This closure-compiler internal JavaScript library provides an ES3-compatible\n * API for writing generator functions using a minimum of boilerplate.\n *\n * Example:\n * ```javascript\n * // yields numbers starting with the given value, then incrementing by the\n * // value supplied to the next() method until the computed value is <= min or\n * // >= max. Then it returns the total number of times it yielded.\n * // If the client code calls throw(), the error will be logged and then\n * // yielded, but the generator won't terminate.\n * function *es6Definition(start, min, max) {\n *   let currentValue = start;\n *   let yieldCount = 0;\n *   while (currentValue > min && currentValue < max) {\n *     try {\n *       currentValue += yield(currentValue);\n *     } catch (e) {\n *       yield(e);\n *       console.log('client threw error', e);\n *     } finally {\n *       yieldCount++;\n *     }\n *   }\n *   return [yieldCount, currentValue];\n * }\n *\n * function es3Definition(start, min, max) {\n *   var currentValue;\n *   var yieldCount;\n *   var e;\n *\n *   return $jscomp.generator.createGenerator(\n *       es3Definition,\n *       function (context$) {\n *         switch (context$.nextAddress) {\n *           case 1: // execution always starts with 1\n *             currentValue = start;\n *             yieldCount = 0;\n *             // fall-through\n *\n *           case 2:\n *             if (!(currentValue > min && currentValue < max)) {\n *               // exit while loop:\n *               return context$.jumpTo(3);\n *             }\n *             // try {\n *             JSCompiler_temp_const$jscomp$1 = currentValue;\n *             context$.setCatchFinallyBlocks(4, 5);\n *             return context$.yield(currentValue, 7);\n *\n *           case 7:\n *             currentValue =\n *                 JSCompiler_temp_const$jscomp$1 + context$.yieldResult;\n *             // fall-through: execute finally block\n *\n *           case 5: // finally block start\n *             context$.enterFinallyBlock();\n *             yieldCount++;\n *             return context$.leaveFinallyBlock(6);\n *\n *           case 4: // catch block start\n *             e = context$.enterCatchBlock();\n *             return context$.yield(e, 8);\n *\n *           case 8: // finish catch block\n *             console.log('client threw error', e);\n *             return context$.jumpTo(5);\n *\n *           case 6:\n *             context$.jumpTo(2);\n *             break;\n *\n *           case 3:\n *             // come back here when while loop block exits\n *             return context$.return([yieldCount, currentValue]);\n *         }\n *       }\n *   });\n * };\n * ```\n */\n\n/** @const */\n$jscomp.generator = {};\n\n/**\n * Ensures that the iterator result is actually an object.\n *\n * @private\n * @final\n * @param {*} result\n * @return {void}\n * @throws {TypeError} if the result is not an instenace of Object.\n */\n$jscomp.generator.ensureIteratorResultIsObject_ = function(result) {\n  if (result instanceof Object) {\n    return;\n  }\n  throw new TypeError('Iterator result ' + result + ' is not an object');\n};\n\n\n/**\n * Tracks state machine state used by generator.Engine.\n *\n * @template VALUE\n * @constructor\n * @final\n * @struct\n */\n$jscomp.generator.Context = function() {\n  /**\n   * Whether the generator program is being executed at the moment in the\n   * current context. Is used to prevent reentrancy.\n   *\n   * @private\n   * @type {boolean}\n   */\n  this.isRunning_ = false;\n\n  /**\n   * An iterator that should yield all its values before the main program can\n   * continue.\n   *\n   * @private\n   * @type {?Iterator<VALUE>}\n   */\n  this.yieldAllIterator_ = null;\n\n  /**\n   * The value that will be sent to the program as the result of suspended\n   * yield expression.\n   *\n   * @type {?}\n   */\n  this.yieldResult = undefined;\n\n  /**\n   * The next address where the state machine execution should be resumed.\n   *\n   * <p>Program execution starts at 1 and ends at 0.\n   *\n   * @type {number}\n   */\n  this.nextAddress = 1;\n\n  /**\n   * The address that should be executed once an exception is thrown.\n   *\n   * <p>Value of 0 means no catch block exist that would handles an exception.\n   *\n   * @private\n   * @type {number}\n   */\n  this.catchAddress_ = 0;\n\n  /**\n   * The address that should be executed once the result is being returned\n   * or if the exception is thrown and there is no catchAddress specified.\n   *\n   * <p>Value of 0 means no finally block is set.\n   *\n   * @private\n   * @type {number}\n   */\n  this.finallyAddress_ = 0;\n\n  /**\n   * Stores information for the runtime propagation of values and control\n   * flow such as the behaviour of statements (break, continue, return and\n   * throw) that perform nonlocal transfers of control.\n   *\n   * @private\n   * @type {null|{return: VALUE}|{exception, isException: boolean}|{jumpTo: number}}.\n   */\n  this.abruptCompletion_ = null;\n\n  /**\n   * The preserved abruptCompletion_ when entering a `finally` block. If\n   * the `finally` block completes normally the preserved abruptCompletion_ is\n   * restored:\n   * <pre>\n   * try {\n   * } finally {  // nesting level 0\n   *   // abruptCompletion_ is saved in finallyContexts_[0]\n   *   try {\n   *   } finally {  // nesting level 1\n   *     // abruptCompletion_ is saved in finallyContexts_[1]\n   *     ...\n   *     // abruptCompletion_ is restored from finallyContexts_[1]\n   *   }\n   *   // abruptCompletion_ is restored from finallyContexts_[0]\n   * }\n   * <pre>\n   *\n   * @private\n   * @type {?Array<null|{return: VALUE}|{exception, isException: boolean}|{jumpTo: number}>}.\n   */\n  this.finallyContexts_ = null;\n};\n\n/**\n * Marks generator program as being run.\n *\n * @private\n * @final\n * @return {void}\n * @throws {TypeError} if generator is already running.\n */\n$jscomp.generator.Context.prototype.start_ = function() {\n  if (this.isRunning_) {\n    throw new TypeError('Generator is already running');\n  }\n  this.isRunning_ = true;\n};\n\n/**\n *\n *\n * @private\n * @final\n * @return {void}\n */\n$jscomp.generator.Context.prototype.stop_ = function() {\n  this.isRunning_ = false;\n};\n\n/**\n * Transfers program execution to an appropriate catch/finally block that\n * should be executed if exception occurs.\n *\n * @private\n * @final\n * @return {void}\n */\n$jscomp.generator.Context.prototype.jumpToErrorHandler_ = function() {\n  this.nextAddress = this.catchAddress_ || this.finallyAddress_;\n};\n\n/**\n * Sets the result of suspended yield expression.\n *\n * @private\n * @final\n * @param {?=} value The value to send to the generator.\n * @return {void}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.next_ = function(value) {\n  this.yieldResult = value;\n};\n\n/**\n * Throws exception as the result of suspended yield.\n *\n * @private\n * @final\n * @param {?} e\n * @return {void}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.throw_ = function(e) {\n  this.abruptCompletion_ = {exception: e, isException: true};\n  this.jumpToErrorHandler_();\n};\n\n/**\n * Returns a value as the result of generator function.\n *\n * @final\n * @param {VALUE=} value\n * @return {void}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.return = function(value) {\n  this.abruptCompletion_ = {return: /** @type {VALUE} */ (value)};\n  this.nextAddress = this.finallyAddress_;\n};\n\n/**\n * Changes the context so the program execution will continue from the given\n * state after executing nessesary pending finally blocks first.\n *\n * @final\n * @param {number} nextAddress The state that should be run.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.jumpThroughFinallyBlocks = function(\n    nextAddress) {\n  this.abruptCompletion_ = {jumpTo: nextAddress};\n  this.nextAddress = this.finallyAddress_;\n};\n\n/**\n * Pauses the state machine program assosiated with generator function to yield\n * a value.\n *\n * @final\n * @param {VALUE} value The value to return from the generator function via\n *     the iterator protocol.\n * @param {number} resumeAddress The address where the program should resume.\n * @return {{value: VALUE}}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.yield = function(value, resumeAddress) {\n  this.nextAddress = resumeAddress;\n  return {value: value};\n};\n\n/**\n * Causes the state machine program to yield all values from an iterator.\n *\n * @final\n * @param {string|!Iterator<VALUE>|!Iterable<VALUE>|!Arguments<VALUE>} iterable\n *     Iterator to yeild all values from.\n * @param {number} resumeAddress The address where the program should resume.\n * @return {void | {value: VALUE}}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.yieldAll = function(\n    iterable, resumeAddress) {\n  /** @const @type {!Iterator<VALUE>} */ var iterator =\n      $jscomp.makeIterator(iterable);\n  /** @const */ var result = iterator.next();\n  $jscomp.generator.ensureIteratorResultIsObject_(result);\n  if (result.done) {\n    // If `someGenerator` in `x = yield *someGenerator` completes immediately,\n    // x is the return value of that generator.\n    this.yieldResult = result.value;\n    this.nextAddress = resumeAddress;\n    return;\n  }\n  this.yieldAllIterator_ = iterator;\n  return this.yield(result.value, resumeAddress);\n};\n\n/**\n * Changes the context so the program execution will continue from the given\n * state.\n *\n * @final\n * @param {number} nextAddress The state the program should continue\n * @return {void}\n */\n$jscomp.generator.Context.prototype.jumpTo = function(nextAddress) {\n  this.nextAddress = nextAddress;\n};\n\n/**\n * Changes the context so the program execution ends.\n *\n * @final\n * @return {void}\n */\n$jscomp.generator.Context.prototype.jumpToEnd = function() {\n  this.nextAddress = 0;\n};\n\n/**\n * Sets catch / finally handlers.\n * Used for try statements with catch blocks.\n *\n * @final\n * @param {number} catchAddress The address of the catch block.\n * @param {number=} finallyAddress The address of the finally block.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.setCatchFinallyBlocks = function(\n    catchAddress, finallyAddress) {\n  this.catchAddress_ = catchAddress;\n  if (finallyAddress != undefined) {\n    this.finallyAddress_ = finallyAddress;\n  }\n};\n\n/**\n * Sets finally handler.\n * Used for try statements without catch blocks.\n *\n * @const\n * @param {number=} finallyAddress The address of the finally block or 0.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.setFinallyBlock = function(finallyAddress) {\n  this.catchAddress_ = 0;\n  this.finallyAddress_ = finallyAddress || 0;\n};\n\n/**\n * Sets a catch handler and jumps to the next address.\n * Used for try statements without finally blocks.\n *\n * @final\n * @param {number} nextAddress The state that should be run next.\n * @param {number=} catchAddress The address of the catch block or 0.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.leaveTryBlock = function(\n    nextAddress, catchAddress) {\n  this.nextAddress = nextAddress;\n  this.catchAddress_ = catchAddress || 0;\n};\n\n/**\n * Initializes exception variable in the beginning of catch block.\n *\n * @final\n * @param {number=} nextCatchBlockAddress The address of the next catch block\n *     that is preceded by no finally blocks.\n * @return {?} Returns an exception that was thrown from \"try\" block.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.enterCatchBlock = function(\n    nextCatchBlockAddress) {\n  this.catchAddress_ = nextCatchBlockAddress || 0;\n  /** @const */ var exception =\n      /** @type {{exception, isException: boolean}} */ (this.abruptCompletion_)\n          .exception;\n  this.abruptCompletion_ = null;\n  return exception;\n};\n\n/**\n * Saves the current throw context which will be restored at the end of finally\n * block.\n *\n * @final\n * @param {number=} nextCatchAddress\n * @param {number=} nextFinallyAddress\n * @param {number=} finallyDepth The nesting level of current \"finally\" block.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.enterFinallyBlock = function(\n    nextCatchAddress, nextFinallyAddress, finallyDepth) {\n  if (!finallyDepth) {\n    this.finallyContexts_ = [this.abruptCompletion_];\n  } else {\n    /**\n     * @type {!Array<null|{return: VALUE}|{exception, isException: boolean}|{jumpTo: number}>}\n     */\n    (this.finallyContexts_)[finallyDepth] = this.abruptCompletion_;\n  }\n  this.catchAddress_ = nextCatchAddress || 0;\n  this.finallyAddress_ = nextFinallyAddress || 0;\n};\n\n/**\n * Figures out whether the program execution should continue normally, or jump\n * to the closest catch/finally block.\n *\n * @final\n * @param {number} nextAddress The state that should be run next.\n * @param {number=} finallyDepth The nesting level of current \"finally\" block.\n * @return {void}\n * @suppress {strictMissingProperties}\n */\n$jscomp.generator.Context.prototype.leaveFinallyBlock = function(\n    nextAddress, finallyDepth) {\n  // There could be trailing finally contexts if a nested finally throws an\n  // exception or return.\n  // e.g.\n  // try {\n  //   ...\n  //   return 1;\n  // } finally {\n  //   // finallyDepth == 0\n  //   // finallyContext == [{return: 1}]\n  //   try {\n  //     ...\n  //     try {\n  //       throw new Error(2);\n  //     } finally {\n  //       // finallyDepth == 1\n  //       // finallyContext == [{return: 1}, {exception: Error(2)}]\n  //       try {\n  //         throw new Error(3);\n  //       } finally {\n  //         // finallyDepth == 2\n  //         // finallyContext == [\n  //         //     {return: 1},\n  //         //     {exception: Error(2)},\n  //         //     {exception: Error(3)}\n  //         // ]\n  //         throw new Error(4); // gets written in abruptCompletion_\n  //         // leaveFinallyBlock() never gets called here\n  //       }\n  //       // leaveFinallyBlock() never gets called here\n  //     }\n  //   } catch (e) {\n  //      // swallow error\n  //      // abruptCompletion becomes null\n  //   } finally {\n  //     // finallyDepth == 1\n  //     // finallyContext == [\n  //     //     {return: 1},\n  //     //     null, // overwritten, because catch swallowed the error\n  //     //     {exception: Error(3)}  // left over\n  //     // ]\n  //     // leaveFinallyBlock() called here\n  //     // finallyContext == [{return: 1}]\n  //     // abruptCompletion == null\n  //   }\n  //   // leaveFinallyBlock() called here\n  //   // finallyContext = []\n  //   // abruptCompletion == {return: 1};\n  // }\n  /** @const */ var preservedContext =\n      /**\n       * @type {!Array<null|{return: VALUE}|{exception, isException: boolean}|{jumpTo: number}>}\n       */\n      (this.finallyContexts_).splice(finallyDepth || 0)[0];\n  /** @const */ var abruptCompletion = this.abruptCompletion_ =\n      this.abruptCompletion_ || preservedContext;\n  if (abruptCompletion) {\n    if (abruptCompletion.isException) {\n      return this.jumpToErrorHandler_();\n    }\n    // Check if there is a pending break/continue jump that is not preceded by\n    // finally blocks that should be executed before.\n    // We always generate case numbers for the start and end of loops before\n    // numbers for anything they contain, so any finally blocks within will be\n    // guaranteed to have higher addresses than the loop break and continue\n    // positions.\n    // e.g.\n    // l1: while (...) {            // generated addresses: 100: break l1;\n    //       try {                  // generated addresses: 101: finally,\n    //         try {                // generated addresses: 102: finally,\n    //           l2: while (...) {  // generated addresses: 103: break l2;\n    //\n    //                 if (...) {\n    //                   break l1;  // becomes\n    //                              // $context.jumpThroughFinallyBlocks(101),\n    //                              // since 2 finally blocks must be crossed\n    //                 }\n    //                 break l2;    // becomes $context.jumpTo(103)\n    //               }\n    //         } finally {\n    //           // When leaving this finally block:\n    //           // 1. We keep the abrupt completion indicating 'break l1'\n    //           // 2. We jump to the enclosing finally block.\n    //         }\n    //       } finally {\n    //         // When leaving this finally block:\n    //         // 1. We complete the abruptCompletion indicating 'break l1' by\n    //         //   jumping to the loop start address.\n    //         // 2. Abrupt completion is now null, so normal execution\n    //         //   continues from there.\n    //       }\n    //     }\n    if (abruptCompletion.jumpTo != undefined &&\n        this.finallyAddress_ < abruptCompletion.jumpTo) {\n      this.nextAddress = abruptCompletion.jumpTo;\n      this.abruptCompletion_ = null;\n    } else {\n      this.nextAddress = this.finallyAddress_;\n    }\n  } else {\n    this.nextAddress = nextAddress;\n  }\n};\n\n/**\n * Is used in transpilation of `for in` statements.\n *\n * <p><code>for (var i in obj) {...}</code> becomes:\n * <pre>\n * for (var i, $for$in = context$.forIn(obj);\n *      (i = $for$in.getNext()) != null;\n *      ) {\n *   ...\n * }\n * </pre>\n *\n * @final\n * @param {?} object\n * @return {!$jscomp.generator.Context.PropertyIterator}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.forIn = function(object) {\n  return new $jscomp.generator.Context.PropertyIterator(object);\n};\n\n/**\n * @constructor\n * @final\n * @struct\n * @param {?} object\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.PropertyIterator = function(object) {\n  /**\n   * @private\n   * @const\n   * @type {?}\n   */\n  this.object_ = object;\n\n  /**\n   * @private\n   * @const\n   * @type {!Array<string>}\n   */\n  this.properties_ = [];\n\n  for (var property in /** @type {!Object} */ (object)) {\n    this.properties_.push(property);\n  }\n  this.properties_.reverse();\n};\n\n/**\n * Returns the next object's property that is still valid.\n *\n * @final\n * @return {?string}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.PropertyIterator.prototype.getNext = function() {\n  // The JS spec does not require that properties added after the loop begins\n  // be included in the loop, but it does require that the current property\n  // must still exist on the object when the loop iteration starts.\n  while (this.properties_.length > 0) {\n    /** @const */ var property = this.properties_.pop();\n    if (property in /** @type {!Object} */ (this.object_)) {\n      return property;\n    }\n  }\n  return null;\n};\n\n/**\n * Engine handling execution of a state machine associated with the generator\n * program and its context.\n *\n * @private\n * @template VALUE\n * @constructor\n * @final\n * @struct\n * @param {function(!$jscomp.generator.Context<VALUE>): (void|{value: VALUE})} program\n */\n$jscomp.generator.Engine_ = function(program) {\n  /**\n   * @private\n   * @const\n   * @type {!$jscomp.generator.Context<VALUE>}\n   */\n  this.context_ = new $jscomp.generator.Context();\n\n  /**\n   * @private\n   * @const\n   * @type {function(!$jscomp.generator.Context<VALUE>): (void|{value: VALUE})}\n   */\n  this.program_ = program;\n};\n\n/**\n * Returns an object with two properties done and value.\n * You can also provide a parameter to the next method to send a value to the\n * generator.\n *\n * @private\n * @final\n * @param {?=} value The value to send to the generator.\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Engine_.prototype.next_ = function(value) {\n  this.context_.start_();\n  if (this.context_.yieldAllIterator_) {\n    return this.yieldAllStep_(\n        this.context_.yieldAllIterator_.next, value, this.context_.next_);\n  }\n  this.context_.next_(value);\n  return this.nextStep_();\n};\n\n/**\n * Attempts to finish the generator with a given value.\n *\n * @private\n * @final\n * @param {VALUE} value The value to return.\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Engine_.prototype.return_ = function(value) {\n  this.context_.start_();\n  /** @const */ var yieldAllIterator = this.context_.yieldAllIterator_;\n  if (yieldAllIterator) {\n    /** @const @type {function(VALUE): !IIterableResult<VALUE>} */ var\n        returnFunction =\n            'return' in yieldAllIterator ? yieldAllIterator['return'] :\n                                           function(v) {\n                                             return {value: v, done: true};\n                                           };\n    return this.yieldAllStep_(returnFunction, value, this.context_.return);\n  }\n  this.context_.return(value);\n  return this.nextStep_();\n};\n\n/**\n * Resumes the execution of a generator by throwing an error into it and\n * returns an object with two properties done and value.\n *\n * @private\n * @final\n * @param {?} exception The exception to throw.\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Engine_.prototype.throw_ = function(exception) {\n  this.context_.start_();\n  if (this.context_.yieldAllIterator_) {\n    return this.yieldAllStep_(\n        this.context_.yieldAllIterator_['throw'], exception,\n        this.context_.next_);\n  }\n  this.context_.throw_(exception);\n  return this.nextStep_();\n};\n\n/**\n * Redirects next/throw/return method calls to an iterator passed to \"yield *\".\n *\n * @private\n * @final\n * @template T\n * @param {function(this:Iterator<VALUE>, T): !IIterableResult<VALUE>} action\n * @param {T} value\n * @param {function(this:$jscomp.generator.Context, VALUE): void} nextAction\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Engine_.prototype.yieldAllStep_ = function(\n    action, value, nextAction) {\n  try {\n    /** @const */ var result = action.call(\n        /** @type {!Iterator<VALUE>} */ (this.context_.yieldAllIterator_),\n        value);\n    $jscomp.generator.ensureIteratorResultIsObject_(result);\n    if (!result.done) {\n      this.context_.stop_();\n      return result;\n    }\n    // After `x = yield *someGenerator()` x is the return value of the\n    // generator, not a value passed to this generator by the next() method.\n    /** @const */ var resultValue = result.value;\n  } catch (e) {\n    this.context_.yieldAllIterator_ = null;\n    this.context_.throw_(e);\n    return this.nextStep_();\n  }\n  this.context_.yieldAllIterator_ = null;\n  nextAction.call(this.context_, resultValue);\n  return this.nextStep_();\n};\n\n/**\n * Continues/resumes program execution until the next suspension point (yield).\n *\n * @private\n * @final\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes, strictMissingProperties}\n */\n$jscomp.generator.Engine_.prototype.nextStep_ = function() {\n  while (this.context_.nextAddress) {\n    try {\n      /** @const */ var yieldValue = this.program_(this.context_);\n      if (yieldValue) {\n        this.context_.stop_();\n        return {value: yieldValue.value, done: false};\n      }\n    } catch (e) {\n      this.context_.yieldResult = undefined;\n      this.context_.throw_(e);\n    }\n  }\n\n  this.context_.stop_();\n  if (this.context_.abruptCompletion_) {\n    /** @const */ var abruptCompletion = this.context_.abruptCompletion_;\n    this.context_.abruptCompletion_ = null;\n    if (abruptCompletion.isException) {\n      throw abruptCompletion.exception;\n    }\n    return {value: abruptCompletion.return, done: true};\n  }\n  return {value: /** @type {?} */ (undefined), done: true};\n};\n\n/**\n * The Generator object that is returned by a generator function and it\n * conforms to both the iterable protocol and the iterator protocol.\n *\n * @private\n * @template VALUE\n * @constructor\n * @final\n * @implements {Generator<VALUE>}\n * @param {!$jscomp.generator.Engine_<VALUE>} engine\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Generator_ = function(engine) {\n  /** @const @override */\n  this.next = function(opt_value) {\n    return engine.next_(opt_value);\n  };\n\n  /** @const @override */\n  this.throw = function(exception) {\n    return engine.throw_(exception);\n  };\n\n  /** @const @override */\n  this.return = function(value) {\n    return engine.return_(value);\n  };\n\n  $jscomp.initSymbolIterator();\n\n  /** @this {$jscomp.generator.Generator_<VALUE>} */\n  this[Symbol.iterator] = function() {\n    return this;\n  };\n\n  // TODO(skill): uncomment once Symbol.toStringTag is polyfilled:\n  // this[Symbol.toStringTag] = 'Generator';\n};\n\n/**\n * Creates a generator backed up by Engine running a given program.\n *\n * @final\n * @template VALUE\n * @param {function(this:?, ...): (!Iterator<VALUE>|!Iterable<VALUE>)} generator\n * @param {function(!$jscomp.generator.Context<VALUE>): (void|{value: VALUE})} program\n * @return {!Generator<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.createGenerator = function(generator, program) {\n  // The spec says that `myGenFunc() instanceof myGenFunc` must be true.\n  // We'll make this work by setting the prototype before calling the\n  // constructor every time. All of the methods of the object are defined on the\n  // instance by the constructor, so this does no harm.\n  // We also cast Generator_ to Object to hide dynamic inheritance from\n  // jscompiler, it makes ConformanceRules$BanUnknownThis happy.\n  /** @type {!Function} */ ($jscomp.generator.Generator_).prototype =\n      generator.prototype;\n  return new $jscomp.generator.Generator_(\n      new $jscomp.generator.Engine_(program));\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for array destructuring.\n */\n'require base';\n\n\n/**\n * Copies the values from an Iterator into an Array. The important difference\n * between this and $jscomp.arrayFromIterable is that if the iterator's\n * next() method has already been called one or more times, this method returns\n * only the values that haven't been yielded yet.\n * @param {!Iterator<T>} iterator\n * @return {!Array<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.arrayFromIterator = function(iterator) {\n  var i;\n  var arr = [];\n  while (!(i = iterator.next()).done) {\n    arr.push(i.value);\n  }\n  return arr;\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for array destructuring.\n */\n'require es6/util/makeiterator';\n'require es6/util/arrayfromiterator';\n\n\n/**\n * Copies the values from an Iterable into an Array.\n * @param {string|!Array<T>|!Iterable<T>|!Arguments<T>} iterable\n * @return {!Array<T>}\n * @template T\n */\n$jscomp.arrayFromIterable = function(iterable) {\n  if (iterable instanceof Array) {\n    return iterable;\n  } else {\n    return $jscomp.arrayFromIterator($jscomp.makeIterator(iterable));\n  }\n};\n","/*\n * Copyright 2017 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require util/global';\n\n\n/**\n * @fileoverview Check one of the most obscure features of ES6 as a proxy\n * for full conformance.  If this is enabled, this test is used instead of\n * larger, more specific conformance tests.\n */\n\n/**\n * Check ES6 conformance by checking an obscure detail of Proxy that\n * wasn't implemented correctly until after all other ES6 features in\n * most browsers.\n * @return {boolean} Whether Proxy works correctly.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.checkEs6ConformanceViaProxy = function() {\n  try {\n    var proxied = {};\n    var proxy = Object.create(new $jscomp.global['Proxy'](proxied, {\n      'get': function (target, key, receiver) {\n        return target == proxied && key == 'q' && receiver == proxy;\n      }\n    }));\n    return proxy['q'] === true;\n  } catch (err) {\n    return false;\n  }\n};\n\n/**\n * If this is true, assume that a runtime which implements Proxy also\n * implements the rest of the ECMAScript 2015 spec.\n * @define {boolean}\n */\n$jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS = false;\n\n/**\n * Whether the runtime implements the entire ECMAScript 2015 spec.\n * @const {boolean}\n */\n$jscomp.ES6_CONFORMANCE =\n    $jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS &&\n    $jscomp.checkEs6ConformanceViaProxy();\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n\n/**\n * Synonym for Object.prototype.hasOwnProperty.call(obj, prop).\n * @param {!Object} obj\n * @param {string} prop\n * @return {boolean}\n */\n$jscomp.owns = function(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require es6/conformance';\n'require es6/symbol';\n'require es6/util/makeiterator';\n'require util/defineproperty';\n'require util/owns';\n'require util/polyfill';\n\n$jscomp.polyfill('WeakMap',\n    /**\n     * @param {*} NativeWeakMap\n     * @return {*}\n     * @suppress {reportUnknownTypes}\n     */\n    function(NativeWeakMap) {\n  /**\n   * Checks conformance of the existing WeakMap.\n   * @return {boolean} True if the browser's implementation conforms.\n   */\n  function isConformant() {\n    if (!NativeWeakMap || !Object.seal) return false;\n    try {\n      var x = Object.seal({});\n      var y = Object.seal({});\n      var map = new /** @type {function(new: WeakMap, !Array)} */ (\n          NativeWeakMap)([[x, 2], [y, 3]]);\n      if (map.get(x) != 2 || map.get(y) != 3) return false;\n      map.delete(x);\n      map.set(y, 4);\n      return !map.has(x) && map.get(y) == 4;\n    } catch (err) { // This should hopefully never happen, but let's be safe.\n      return false;\n    }\n  }\n  if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {\n    if (NativeWeakMap && $jscomp.ES6_CONFORMANCE) return NativeWeakMap;\n  } else {\n    if (isConformant()) return NativeWeakMap;\n  }\n\n  var prop = '$jscomp_hidden_' + Math.random();\n\n  /**\n   * Inserts the hidden property into the target.\n   * @param {!Object} target\n   */\n  function insert(target) {\n    if (!$jscomp.owns(target, prop)) {\n      var obj = {};\n      // TODO(sdh): This property will be enumerated in IE8.  If this becomes\n      // a problem, we could avoid it by copying an infrequently-used non-enum\n      // method (like toLocaleString) onto the object itself and encoding the\n      // property on the copy instead.  This codepath must be easily removable\n      // if IE8 support is not needed.\n      $jscomp.defineProperty(target, prop, {value: obj});\n    }\n  }\n\n  /**\n   * Monkey-patches the freezing methods to ensure that the hidden\n   * property is added before any freezing happens.\n   * @param {string} name\n   */\n  function patch(name) {\n    var prev = Object[name];\n    if (prev) {\n      Object[name] = function(target) {\n        insert(target);\n        return prev(target);\n      };\n    }\n  }\n  patch('freeze');\n  patch('preventExtensions');\n  patch('seal');\n  // Note: no need to patch Reflect.preventExtensions since the polyfill\n  // just calls Object.preventExtensions anyway (and if it's not polyfilled\n  // then neither is WeakMap).\n\n  var index = 0;\n\n  /**\n   * Polyfill for WeakMap:\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap\n   *\n   * This implementation is as non-leaky as possible, due to patching\n   * the freezing and sealing operations.  It does not include any logic\n   * to handle cases where a key was somehow made non-extensible without\n   * the special hidden property being added.  It takes some care to ensure\n   * the hidden property is not enumerated over nor discoverable, though\n   * it's not completely secure (particularly in IE8).\n   *\n   * @constructor\n   * @extends {WeakMap<KEY, VALUE>}\n   * @template KEY, VALUE\n   * @param {!Iterator<!Array<KEY|VALUE>>|!Array<!Array<KEY|VALUE>>|null=}\n   *     opt_iterable Optional initial data.\n   */\n  var PolyfillWeakMap = function(opt_iterable) {\n    /** @private @const {string} */\n    this.id_ = (index += (Math.random() + 1)).toString();\n\n    if (opt_iterable) {\n      $jscomp.initSymbol();\n      $jscomp.initSymbolIterator();\n      var iter = $jscomp.makeIterator(opt_iterable);\n      var entry;\n      while (!(entry = iter.next()).done) {\n        var item = entry.value;\n        this.set(/** @type {KEY} */ (item[0]), /** @type {VALUE} */ (item[1]));\n      }\n    }\n  };\n\n  /** @override */\n  PolyfillWeakMap.prototype.set = function(key, value) {\n    insert(key);\n    if (!$jscomp.owns(key, prop)) {\n      // NOTE: If the insert() call fails on the key, but the property\n      // has previously successfully been added higher up the prototype\n      // chain, then we'll silently misbehave.  Instead, throw immediately\n      // before doing something bad.  If this becomes a problem (e.g. due\n      // to some rogue frozen objects) then we may need to add a slow and\n      // leaky fallback array to each WeakMap instance, as well as extra\n      // logic in each accessor to use it (*only*) when necessary.\n      throw new Error('WeakMap key fail: ' + key);\n    }\n    key[prop][this.id_] = value;\n    return this;\n  };\n\n  /** @override */\n  PolyfillWeakMap.prototype.get = function(key) {\n    return $jscomp.owns(key, prop) ? key[prop][this.id_] : undefined;\n  };\n\n  /** @override */\n  PolyfillWeakMap.prototype.has = function(key) {\n    return $jscomp.owns(key, prop) && $jscomp.owns(key[prop], this.id_);\n  };\n\n  /** @override */\n  PolyfillWeakMap.prototype.delete = function(key) {\n    if (!$jscomp.owns(key, prop) ||\n        !$jscomp.owns(key[prop], this.id_)) {\n      return false;\n    }\n    return delete key[prop][this.id_];\n  };\n\n  return PolyfillWeakMap;\n}, 'es6', 'es3');\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require es6/conformance';\n'require es6/symbol';\n'require es6/util/makeiterator';\n'require es6/weakmap';\n'require util/defines';\n'require util/owns';\n'require util/polyfill';\n\n\n/**\n * Internal record type for entries.\n * @record\n * @template KEY, VALUE\n * @suppress {reportUnknownTypes}\n */\n$jscomp.MapEntry = function() {\n  /** @type {!$jscomp.MapEntry<KEY, VALUE>} */\n  this.previous;\n  /** @type {!$jscomp.MapEntry<KEY, VALUE>} */\n  this.next;\n  /** @type {?Object} */\n  this.head;\n  /** @type {KEY} */\n  this.key;\n  /** @type {VALUE} */\n  this.value;\n};\n\n\n$jscomp.polyfill('Map',\n    /**\n     * @param {*} NativeMap\n     * @return {*}\n     * @suppress {reportUnknownTypes}\n     */\n    function(NativeMap) {\n\n  /**\n   * Checks conformance of the existing Map.\n   * @return {boolean} True if the browser's implementation conforms.\n   * @suppress {missingProperties} \"entries\" unknown prototype\n   */\n  function isConformant() {\n    if ($jscomp.ASSUME_NO_NATIVE_MAP ||\n        !NativeMap ||\n        typeof NativeMap != \"function\" ||\n        !NativeMap.prototype.entries ||\n        typeof Object.seal != 'function') {\n      return false;\n    }\n    // Some implementations don't support constructor arguments.\n    try {\n      NativeMap = /** @type {function(new: Map, !Iterator=)} */ (NativeMap);\n      var key = Object.seal({x: 4});\n      var map = new NativeMap($jscomp.makeIterator([[key, 's']]));\n      if (map.get(key) != 's' || map.size != 1 || map.get({x: 4}) ||\n          map.set({x: 4}, 't') != map || map.size != 2) {\n        return false;\n      }\n      var /** !Iterator<!Array> */ iter = map.entries();\n      var item = iter.next();\n      if (item.done || item.value[0] != key || item.value[1] != 's') {\n        return false;\n      }\n      item = iter.next();\n      if (item.done || item.value[0].x != 4 ||\n          item.value[1] != 't' || !iter.next().done) {\n        return false;\n      }\n      return true;\n    } catch (err) { // This should hopefully never happen, but let's be safe.\n      return false;\n    }\n  }\n\n  if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {\n    if (NativeMap && $jscomp.ES6_CONFORMANCE) return NativeMap;\n  } else {\n    if (isConformant()) return NativeMap;\n  }\n\n  // We depend on Symbol.iterator, so ensure it's loaded.\n  $jscomp.initSymbol();\n  $jscomp.initSymbolIterator();\n\n\n  /** @const {!WeakMap<!Object, string>} */\n  var idMap = new WeakMap();\n\n\n  /**\n   * Polyfill for the global Map data type.\n   * @constructor\n   * @struct\n   * @extends {Map<KEY, VALUE>}\n   * @implements {Iterable<!Array<KEY|VALUE>>}\n   * @template KEY, VALUE\n   * @param {!Iterable<!Array<KEY|VALUE>>|!Array<!Array<KEY|VALUE>>|null=}\n   *     opt_iterable Optional data to populate the map.\n   */\n  // TODO(sdh): fix param type if heterogeneous arrays ever supported.\n  var PolyfillMap = function(opt_iterable) {\n    /** @private {!Object<!Array<!$jscomp.MapEntry<KEY, VALUE>>>} */\n    this.data_ = {};\n\n    /** @private {!$jscomp.MapEntry<KEY, VALUE>} */\n    this.head_ = createHead();\n\n    // Note: this property should not be changed.  If we're willing to give up\n    // ES3 support, we could define it as a property directly.  It should be\n    // marked readonly if such an annotation ever comes into existence.\n    /** @type {number} */\n    this.size = 0;\n\n    if (opt_iterable) {\n      var iter = $jscomp.makeIterator(opt_iterable);\n      var entry;\n      while (!(entry = iter.next()).done) {\n        var item =\n            /** @type {!IIterableResult<!Array<KEY|VALUE>>} */ (entry).value;\n        this.set(/** @type {KEY} */ (item[0]), /** @type {VALUE} */ (item[1]));\n      }\n    }\n  };\n\n\n  /** @override */\n  PolyfillMap.prototype.set = function(key, value) {\n    var r = maybeGetEntry(this, key);\n    if (!r.list) {\n      r.list = (this.data_[r.id] = []);\n    }\n    if (!r.entry) {\n      r.entry = {\n        next: this.head_,\n        previous: this.head_.previous,\n        head: this.head_,\n        key: key,\n        value: value,\n      };\n      r.list.push(r.entry);\n      this.head_.previous.next = r.entry;\n      this.head_.previous = r.entry;\n      this.size++;\n    } else {\n      r.entry.value = value;\n    }\n    return this;\n  };\n\n\n  /** @override */\n  PolyfillMap.prototype.delete = function(key) {\n    var r = maybeGetEntry(this, key);\n    if (r.entry && r.list) {\n      r.list.splice(r.index, 1);\n      if (!r.list.length) delete this.data_[r.id];\n      r.entry.previous.next = r.entry.next;\n      r.entry.next.previous = r.entry.previous;\n      r.entry.head = null;\n      this.size--;\n      return true;\n    }\n    return false;\n  };\n\n\n  /** @override */\n  PolyfillMap.prototype.clear = function() {\n    this.data_ = {};\n    this.head_ = this.head_.previous = createHead();\n    this.size = 0;\n  };\n\n\n  /** @override */\n  PolyfillMap.prototype.has = function(key) {\n    return !!(maybeGetEntry(this, key).entry);\n  };\n\n\n  /** @override */\n  PolyfillMap.prototype.get = function(key) {\n    var entry = maybeGetEntry(this, key).entry;\n    // NOTE: this cast is a lie, but so is the extern.\n    return /** @type {VALUE} */ (entry &&\n      /** @type {VALUE} */ (entry.value));\n  };\n\n\n  /** @override */\n  PolyfillMap.prototype.entries = function() {\n    return makeIterator(this, /** @return {!Array<(KEY|VALUE)>} */ function(\n        /** !$jscomp.MapEntry<KEY, VALUE> */ entry) {\n      return ([entry.key, entry.value]);\n    });\n  };\n\n\n  /** @override */\n  PolyfillMap.prototype.keys = function() {\n    return makeIterator(this, /** @return {KEY} */ function(\n        /** !$jscomp.MapEntry<KEY, VALUE> */ entry) {\n      return entry.key;\n    });\n  };\n\n\n  /** @override */\n  PolyfillMap.prototype.values = function() {\n    return makeIterator(this, /** @return {VALUE} */ function(\n        /** !$jscomp.MapEntry<KEY, VALUE> */ entry) {\n      return entry.value;\n    });\n  };\n\n\n  /** @override */\n  PolyfillMap.prototype.forEach = function(callback, opt_thisArg) {\n    var iter = this.entries();\n    var item;\n    while (!(item = iter.next()).done) {\n      var entry = item.value;\n      callback.call(\n          /** @type {?} */ (opt_thisArg),\n          /** @type {VALUE} */ (entry[1]),\n          /** @type {KEY} */ (entry[0]),\n          this);\n    }\n  };\n\n\n  /** @type {?} */ (PolyfillMap.prototype)[Symbol.iterator] =\n      PolyfillMap.prototype.entries;\n\n\n  /**\n   * Returns an entry or undefined.\n   * @param {!PolyfillMap<KEY, VALUE>} map\n   * @param {KEY} key\n   * @return {{id: string,\n   *           list: (!Array<!$jscomp.MapEntry<KEY, VALUE>>|undefined),\n   *           index: number,\n   *           entry: (!$jscomp.MapEntry<KEY, VALUE>|undefined)}}\n   * @template KEY, VALUE\n   */\n  var maybeGetEntry = function(map, key) {\n    var id = getId(key);\n    var list = map.data_[id];\n    if (list && $jscomp.owns(map.data_, id)) {\n      for (var index = 0; index < list.length; index++) {\n        var entry = list[index];\n        if ((key !== key && entry.key !== entry.key) || key === entry.key) {\n          return {id: id, list: list, index: index, entry: entry};\n        }\n      }\n    }\n    return {id: id, list: list, index: -1, entry: undefined};\n  };\n\n\n  /**\n   * Maps over the entries with the given function.\n   * @param {!PolyfillMap<KEY, VALUE>} map\n   * @param {function(!$jscomp.MapEntry<KEY, VALUE>): T} func\n   * @return {!IteratorIterable<T>}\n   * @template KEY, VALUE, T\n   * @private\n   */\n  var makeIterator = function(map, func) {\n    var entry = map.head_;\n    return $jscomp.iteratorPrototype(function() {\n      if (entry) {\n        while (entry.head != map.head_) {\n          entry = entry.previous;\n        }\n        while (entry.next != entry.head) {\n          entry = entry.next;\n          return {done: false, value: func(entry)};\n        }\n        entry = null; // make sure depletion is permanent\n      }\n      return {done: true, value: void 0};\n    });\n  };\n\n\n  /**\n   * Makes a new \"head\" element.\n   * @return {!$jscomp.MapEntry<KEY, VALUE>}\n   * @template KEY, VALUE\n   * @suppress {checkTypes} ignore missing key/value for head only\n   */\n  var createHead = function() {\n    var head = /** type {!$jscomp.MapEntry<KEY, VALUE>} */ ({});\n    head.previous = head.next = head.head = head;\n    return head;\n  };\n\n\n  /**\n   * Counter for generating IDs.\n   * @private {number}\n   */\n  var mapIndex = 0;\n\n\n  /**\n   * @param {*} obj An extensible object.\n   * @return {string} A unique ID.\n   */\n  var getId = function(obj) {\n    var type = obj && typeof obj;\n    if (type == 'object' || type == 'function') {\n      obj = /** @type {!Object} */ (obj);\n      if (!idMap.has(obj)) {\n        var id = '' + (++mapIndex);\n        idMap.set(obj, id);\n        return id;\n      }\n      return idMap.get(obj);\n    }\n    // Add a prefix since obj could be '__proto__';\n    return 'p_' + obj;\n  };\n\n\n  return PolyfillMap;\n}, 'es6', 'es3');\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require es6/conformance';\n'require es6/map';\n'require es6/symbol';\n'require util/defines';\n'require util/polyfill';\n\n$jscomp.polyfill('Set',\n    /**\n     * @param {*} NativeSet\n     * @return {*}\n     * @suppress {reportUnknownTypes}\n     */\n    function(NativeSet) {\n\n  /**\n   * Checks conformance of the existing Set.\n   * @return {boolean} True if the browser's implementation conforms.\n   * @suppress {missingProperties} \"entries\" unknown prototype\n   */\n  function isConformant() {\n    if ($jscomp.ASSUME_NO_NATIVE_SET ||\n        !NativeSet ||\n        typeof NativeSet != \"function\" ||\n        !NativeSet.prototype.entries ||\n        typeof Object.seal != 'function') {\n      return false;\n    }\n    // Some implementations don't support constructor arguments.\n    try {\n      NativeSet = /** @type {function(new: Set, !Iterator=)} */ (NativeSet);\n      var value = Object.seal({x: 4});\n      var set = new NativeSet($jscomp.makeIterator([value]));\n      if (!set.has(value) || set.size != 1 || set.add(value) != set ||\n          set.size != 1 || set.add({x: 4}) != set || set.size != 2) {\n        return false;\n      }\n      var iter = set.entries();\n      var item = iter.next();\n      if (item.done || item.value[0] != value || item.value[1] != value) {\n        return false;\n      }\n      item = iter.next();\n      if (item.done || item.value[0] == value || item.value[0].x != 4 ||\n          item.value[1] != item.value[0]) {\n        return false;\n      }\n      return iter.next().done;\n    } catch (err) { // This should hopefully never happen, but let's be safe.\n      return false;\n    }\n  }\n\n  if ($jscomp.USE_PROXY_FOR_ES6_CONFORMANCE_CHECKS) {\n    if (NativeSet && $jscomp.ES6_CONFORMANCE) return NativeSet;\n  } else {\n    if (isConformant()) return NativeSet;\n  }\n\n  // We depend on Symbol.iterator, so ensure it's loaded.\n  $jscomp.initSymbol();\n  $jscomp.initSymbolIterator();\n\n\n\n  /**\n   * Polyfill for the global Map data type.\n   * @constructor\n   * @struct\n   * @extends {Set<VALUE>}\n   * @implements {Iterable<VALUE>}\n   * @template KEY, VALUE\n   * @param {!Iterable<VALUE>|!Array<VALUE>|null=} opt_iterable\n   *     Optional data to populate the set.\n   */\n  // TODO(sdh): fix param type if heterogeneous arrays ever supported.\n  var PolyfillSet = function(opt_iterable) {\n    /** @private @const {!Map<VALUE, VALUE>} */\n    this.map_ = new Map();\n    if (opt_iterable) {\n      var iter = $jscomp.makeIterator(opt_iterable);\n      var entry;\n      while (!(entry = iter.next()).done) {\n        var item = /** @type {!IIterableResult<VALUE>} */ (entry).value;\n        this.add(item);\n      }\n    }\n    // Note: this property should not be changed.  If we're willing to give up\n    // ES3 support, we could define it as a property directly.  It should be\n    // marked readonly if such an annotation ever comes into existence.\n    this.size = this.map_.size;\n  };\n\n\n  /** @override */\n  PolyfillSet.prototype.add = function(value) {\n    this.map_.set(value, value);\n    this.size = this.map_.size;\n    return this;\n  };\n\n\n  /** @override */\n  PolyfillSet.prototype.delete = function(value) {\n    var result = this.map_.delete(value);\n    this.size = this.map_.size;\n    return result;\n  };\n\n\n  /** @override */\n  PolyfillSet.prototype.clear = function() {\n    this.map_.clear();\n    this.size = 0;\n  };\n\n\n  /** @override */\n  PolyfillSet.prototype.has = function(value) {\n    return this.map_.has(value);\n  };\n\n\n  /** @override */\n  PolyfillSet.prototype.entries = function() {\n    return this.map_.entries();\n  };\n\n\n  /** @override */\n  PolyfillSet.prototype.values = function() {\n    return this.map_.values();\n  };\n\n\n  /** @override */\n  PolyfillSet.prototype.keys = PolyfillSet.prototype.values;\n\n\n  /** @type {?} */ (PolyfillSet.prototype)[Symbol.iterator] =\n      PolyfillSet.prototype.values;\n\n\n  /** @override */\n  PolyfillSet.prototype.forEach = function(callback, opt_thisArg) {\n    var set = this;\n    this.map_.forEach(function(value) {\n      return callback.call(/** @type {?} */ (opt_thisArg), value, value, set);\n    });\n  };\n\n\n  return PolyfillSet;\n}, 'es6', 'es3');\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility for Array methods that find elements.\n */\n'require base';\n\n// TODO(sdh): would be nice to template on the ARRAY type as well,\n// so that the third arg type of callback can be refined to be\n// exactly the same as the array type, but then there's no way to\n// enforce that it must, in fact, be an array.\n/**\n * Internal implementation of find.\n * @param {!IArrayLike<VALUE>} array\n * @param {function(this: THIS, VALUE, number, !IArrayLike<VALUE>): *} callback\n * @param {THIS} thisArg\n * @return {{i: number, v: (VALUE|undefined)}}\n * @template THIS, VALUE\n * @suppress {reportUnknownTypes}\n */\n$jscomp.findInternal = function(array, callback, thisArg) {\n  if (array instanceof String) {\n    array = /** @type {!IArrayLike} */ (String(array));\n  }\n  var len = array.length;\n  for (var i = 0; i < len; i++) {\n    var value = array[i];\n    if (callback.call(thisArg, value, i, array)) return {i: i, v: value};\n  }\n  return {i: -1, v: void 0};\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require util/findinternal';\n'require util/polyfill';\n\n$jscomp.polyfill('Array.prototype.findIndex', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Finds an element that satisfies the given predicate, returning its index.\n   *\n   * @this {!IArrayLike<VALUE>}\n   * @param {function(this: THIS, VALUE, number, !IArrayLike<VALUE>): *}\n   *     callback\n   * @param {THIS=} opt_thisArg\n   * @return {number} The found value, or undefined.\n   * @template VALUE, THIS\n   * @suppress {reportUnknownTypes}\n   */\n  var polyfill = function(callback, opt_thisArg) {\n    return $jscomp.findInternal(this, callback, opt_thisArg).i;\n  };\n\n  return polyfill;\n}, 'es6', 'es3');\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utilities for iterator-returning methods.\n */\n'require es6/symbol';\n\n\n/**\n * Creates an iterator from an array-like, with a transformation function.\n * @param {!IArrayLike<INPUT>} array\n * @param {function(number, INPUT): OUTPUT} transform\n * @return {!IteratorIterable<OUTPUT>}\n * @template INPUT, OUTPUT\n * @suppress {checkTypes|reportUnknownTypes}\n */\n$jscomp.iteratorFromArray = function(array, transform) {\n  $jscomp.initSymbolIterator();\n  // NOTE: IE8 doesn't support indexing from boxed Strings.\n  if (array instanceof String) array = array + '';\n  var i = 0;\n  var iter = {\n    next: function() {\n      if (i < array.length) {\n        var index = i++;\n        return {value: transform(index, array[index]), done: false};\n      }\n      iter.next = function() { return {done: true, value: void 0}; };\n      return iter.next();\n    }\n  };\n  iter[Symbol.iterator] = function() { return iter; };\n  return iter;\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require es6/util/iteratorfromarray';\n'require util/polyfill';\n\n$jscomp.polyfill('Array.prototype.keys', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Returns an iterator of keys of the given array.\n   *\n   * @this {!IArrayLike}\n   * @return {!IteratorIterable<number>}\n   */\n  var polyfill = function() {\n    return $jscomp.iteratorFromArray(this, function(i) { return i; });\n  };\n\n  return polyfill;\n}, 'es6', 'es3');\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require es6/util/iteratorfromarray';\n'require util/polyfill';\n\n// NOTE: Although Array.prototype.values was added to the 2015 edition of the\n// spec, we consider it an \"ES8\" feature because many browsers which are\n// otherwise ES6-compatible, have not implemented it due to web compatibility\n// issues. See https://bugs.chromium.org/p/chromium/issues/detail?id=615873\n$jscomp.polyfill('Array.prototype.values', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Returns an iterator of values of the given array.\n   *\n   * @this {!IArrayLike<VALUE>}\n   * @return {!IteratorIterable<VALUE>}\n   * @template VALUE\n   * @suppress {reportUnknownTypes}\n   */\n  var polyfill = function() {\n    return $jscomp.iteratorFromArray(this, function(k, v) { return v; });\n  };\n\n  return polyfill;\n}, 'es8', 'es3');\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require es6/symbol';\n'require util/polyfill';\n\n$jscomp.polyfill('Array.from', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Creates a new Array from an array-like or iterable object.\n   *\n   * <p>Polyfills the static function Array.from().  Does not support\n   * constructor inheritance (i.e. (subclass of Array).from), and\n   * relies on the compiler to check the validity of inputs rather\n   * than producing spec-compliant TypeErrors.\n   *\n   * @param {!IArrayLike<INPUT>|!Iterable<INPUT>} arrayLike\n   *     An array-like or iterable.\n   * @param {(function(this: THIS, INPUT): OUTPUT)=} opt_mapFn\n   *     Function to call on each argument.\n   * @param {THIS=} opt_thisArg\n   *     Object to use as 'this' when calling mapFn.\n   * @return {!Array<OUTPUT>}\n   * @template INPUT, OUTPUT, THIS\n   * @suppress {reportUnknownTypes}\n   */\n  var polyfill = function(arrayLike, opt_mapFn, opt_thisArg) {\n    $jscomp.initSymbolIterator();\n    opt_mapFn = opt_mapFn != null ? opt_mapFn : function(x) { return x; };\n    var result = [];\n    // NOTE: this is cast to ? because [] on @struct is an error\n    var iteratorFunction = /** @type {?} */ (arrayLike)[Symbol.iterator];\n    if (typeof iteratorFunction == 'function') {\n      arrayLike = iteratorFunction.call(arrayLike);\n      var next;\n      while (!(next = arrayLike.next()).done) {\n        result.push(\n            opt_mapFn.call(/** @type {?} */ (opt_thisArg), next.value));\n      }\n    } else {\n      var len = arrayLike.length;  // need to support non-iterables\n      for (var i = 0; i < len; i++) {\n        result.push(\n            opt_mapFn.call(/** @type {?} */ (opt_thisArg), arrayLike[i]));\n      }\n    }\n    return result;\n  };\n\n  return polyfill;\n}, 'es6', 'es3');\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require util/polyfill';\n\n$jscomp.polyfill('Object.is', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Polyfill for Object.is() method:\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n   *\n   * Determines whether two values are the same value (that is,\n   * functionally equivalent).  This is the same as ===-equality,\n   * except for two cases: 0 is not the same as -0, and NaN is\n   * the same as NaN.\n   *\n   * @param {*} left\n   * @param {*} right\n   * @return {boolean}\n   */\n  var polyfill = function(left, right) {\n    if (left === right) {\n      // Handle the 0 === -0 exception\n      return (left !== 0) || (1 / left === 1 / /** @type {number} */ (right));\n    } else {\n      // Handle the NaN !== NaN exception\n      return (left !== left) && (right !== right);\n    }\n  };\n\n  return polyfill;\n}, 'es6', 'es3');\n","/*\n * Copyright 2017 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require es6/object/is';\n'require util/polyfill';\n\n$jscomp.polyfill('Array.prototype.includes', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Polyfills Array.prototype.includes.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/includes\n   *\n   * @this {!IArrayLike<T>}\n   * @param {T} searchElement\n   * @param {number=} opt_fromIndex\n   * @return {boolean}\n   * @template T\n   * @suppress {reportUnknownTypes}\n   */\n  var includes = function(searchElement, opt_fromIndex) {\n    var array = this;\n    if (array instanceof String) {\n      array = /** @type {!IArrayLike} */ (String(array));\n    }\n    var len = array.length;\n    var i = opt_fromIndex || 0;\n    if (i < 0) {\n      i = Math.max(i + len, 0);\n    }\n    for (; i < len; i++) {\n      var element = array[i];\n      if (element === searchElement || Object.is(element, searchElement)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  return includes;\n}, 'es7', 'es3');\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n\n\n/**\n * Throws if the argument is a RegExp, or if thisArg is undefined.\n * @param {?} thisArg The 'this' arg, which must be defined.\n * @param {*} arg The first argument of the function, which mustn't be a RegExp.\n * @param {string} func Name of the function, for reporting.\n * @return {string} The thisArg, coerced to a string.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.checkStringArgs = function(thisArg, arg, func) {\n  if (thisArg == null) {\n    throw new TypeError(\n        \"The 'this' value for String.prototype.\" + func +\n        ' must not be null or undefined');\n  }\n  if (arg instanceof RegExp) {\n    throw new TypeError(\n        'First argument to String.prototype.' + func +\n        ' must not be a regular expression');\n  }\n  return thisArg + '';\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require util/checkstringargs';\n'require util/polyfill';\n\n$jscomp.polyfill('String.prototype.includes', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Searches for a substring, starting at the given position.\n   *\n   * <p>Polyfills the instance method String.prototype.includes().\n   *\n   * @this {string}\n   * @param {string} searchString\n   * @param {number=} opt_position\n   * @return {boolean}\n   */\n  var polyfill = function(searchString, opt_position) {\n    'use strict';\n    var string = $jscomp.checkStringArgs(this, searchString, 'includes');\n    return string.indexOf(searchString, opt_position || 0) !== -1;\n  };\n\n  return polyfill;\n}, 'es6', 'es3');\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require util/findinternal';\n'require util/polyfill';\n\n$jscomp.polyfill('Array.prototype.find', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Finds and returns an element that satisfies the given predicate.\n   *\n   * @this {!IArrayLike<VALUE>}\n   * @param {function(this: THIS, VALUE, number, !IArrayLike<VALUE>): *}\n   *     callback\n   * @param {THIS=} opt_thisArg\n   * @return {VALUE|undefined} The found value, or undefined.\n   * @template VALUE, THIS\n   * @suppress {reportUnknownTypes}\n   */\n  var polyfill = function(callback, opt_thisArg) {\n    return $jscomp.findInternal(this, callback, opt_thisArg).v;\n  };\n\n  return polyfill;\n}, 'es6', 'es3');\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require util/checkstringargs';\n'require util/polyfill';\n\n$jscomp.polyfill('String.prototype.startsWith', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Tests whether the string starts with a given substring.\n   *\n   * <p>Polyfills the instance method String.prototype.startsWith().\n   *\n   * @this {string}\n   * @param {string} searchString\n   * @param {number=} opt_position\n   * @return {boolean}\n   */\n  var polyfill = function(searchString, opt_position) {\n    'use strict';\n    var string = $jscomp.checkStringArgs(this, searchString, 'startsWith');\n    searchString = searchString + '';\n    var strLen = string.length;\n    var searchLen = searchString.length;\n    var i = Math.max(\n        0,\n        Math.min(/** @type {number} */ (opt_position) | 0, string.length));\n    var j = 0;\n    while (j < searchLen && i < strLen) {\n      if (string[i++] != searchString[j++]) return false;\n    }\n    return j >= searchLen;\n  };\n\n  return polyfill;\n}, 'es6', 'es3');\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Bootstrap for the Google JS Library (Closure).\n *\n * In uncompiled mode base.js will write out Closure's deps file, unless the\n * global <code>CLOSURE_NO_DEPS</code> is set to true.  This allows projects to\n * include their own deps file(s) from different locations.\n *\n *\n * @provideGoog\n */\n\n\n/**\n * @define {boolean} Overridden to true by the compiler when --closure_pass\n *     or --mark_as_compiled is specified.\n */\nvar COMPILED = false;\n\n\n/**\n * Base namespace for the Closure library.  Checks to see goog is already\n * defined in the current scope before assigning to prevent clobbering if\n * base.js is loaded more than once.\n *\n * @const\n */\nvar goog = goog || {};\n\n\n/**\n * Reference to the global context.  In most cases this will be 'window'.\n */\ngoog.global = this;\n\n\n/**\n * A hook for overriding the define values in uncompiled mode.\n *\n * In uncompiled mode, {@code CLOSURE_UNCOMPILED_DEFINES} may be defined before\n * loading base.js.  If a key is defined in {@code CLOSURE_UNCOMPILED_DEFINES},\n * {@code goog.define} will use the value instead of the default value.  This\n * allows flags to be overwritten without compilation (this is normally\n * accomplished with the compiler's \"define\" flag).\n *\n * Example:\n * <pre>\n *   var CLOSURE_UNCOMPILED_DEFINES = {'goog.DEBUG': false};\n * </pre>\n *\n * @type {Object.<string, (string|number|boolean)>|undefined}\n */\ngoog.global.CLOSURE_UNCOMPILED_DEFINES;\n\n\n/**\n * A hook for overriding the define values in uncompiled or compiled mode,\n * like CLOSURE_UNCOMPILED_DEFINES but effective in compiled code.  In\n * uncompiled code CLOSURE_UNCOMPILED_DEFINES takes precedence.\n *\n * Also unlike CLOSURE_UNCOMPILED_DEFINES the values must be number, boolean or\n * string literals or the compiler will emit an error.\n *\n * While any @define value may be set, only those set with goog.define will be\n * effective for uncompiled code.\n *\n * Example:\n * <pre>\n *   var CLOSURE_DEFINES = {'goog.DEBUG': false};\n * </pre>\n *\n * @type {Object.<string, (string|number|boolean)>|undefined}\n */\ngoog.global.CLOSURE_DEFINES;\n\n\n/**\n * Returns true if the specified value is not undefined.\n * WARNING: Do not use this to test if an object has a property. Use the in\n * operator instead.\n *\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is defined.\n */\ngoog.isDef = function(val) {\n  // void 0 always evaluates to undefined and hence we do not need to depend on\n  // the definition of the global variable named 'undefined'.\n  return val !== void 0;\n};\n\n\n/**\n * Builds an object structure for the provided namespace path, ensuring that\n * names that already exist are not overwritten. For example:\n * \"a.b.c\" -> a = {};a.b={};a.b.c={};\n * Used by goog.provide and goog.exportSymbol.\n * @param {string} name name of the object that this file defines.\n * @param {*=} object the object to expose at the end of the path.\n * @param {Object=} objectToExportTo The object to add the path to; default\n *     is |goog.global|.\n * @private\n */\ngoog.exportPath_ = function(name, object, objectToExportTo) {\n  var parts = name.split('.');\n  var cur = objectToExportTo || goog.global;\n\n  // Internet Explorer exhibits strange behavior when throwing errors from\n  // methods externed in this manner.  See the testExportSymbolExceptions in\n  // base_test.html for an example.\n  if (!(parts[0] in cur) && cur.execScript) {\n    cur.execScript('var ' + parts[0]);\n  }\n\n  // Certain browsers cannot parse code in the form for((a in b); c;);\n  // This pattern is produced by the JSCompiler when it collapses the\n  // statement above into the conditional loop below. To prevent this from\n  // happening, use a for-loop and reserve the init logic as below.\n\n  // Parentheses added to eliminate strict JS warning in Firefox.\n  for (var part; parts.length && (part = parts.shift());) {\n    if (!parts.length && goog.isDef(object)) {\n      // last part and we have an object; use it\n      cur[part] = object;\n    } else if (cur[part]) {\n      cur = cur[part];\n    } else {\n      cur = cur[part] = {};\n    }\n  }\n};\n\n\n/**\n * Defines a named value. In uncompiled mode, the value is retreived from\n * CLOSURE_DEFINES or CLOSURE_UNCOMPILED_DEFINES if the object is defined and\n * has the property specified, and otherwise used the defined defaultValue.\n * When compiled, the default can be overridden using compiler command-line\n * options.\n *\n * @param {string} name The distinguished name to provide.\n * @param {string|number|boolean} defaultValue\n */\ngoog.define = function(name, defaultValue) {\n  var value = defaultValue;\n  if (!COMPILED) {\n    if (goog.global.CLOSURE_UNCOMPILED_DEFINES &&\n        Object.prototype.hasOwnProperty.call(\n            goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {\n      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];\n    } else if (goog.global.CLOSURE_DEFINES &&\n        Object.prototype.hasOwnProperty.call(\n            goog.global.CLOSURE_DEFINES, name)) {\n      value = goog.global.CLOSURE_DEFINES[name];\n    }\n  }\n  goog.exportPath_(name, value);\n};\n\n\n/**\n * @define {boolean} DEBUG is provided as a convenience so that debugging code\n * that should not be included in a production js_binary can be easily stripped\n * by specifying --define goog.DEBUG=false to the JSCompiler. For example, most\n * toString() methods should be declared inside an \"if (goog.DEBUG)\" conditional\n * because they are generally used for debugging purposes and it is difficult\n * for the JSCompiler to statically determine whether they are used.\n */\ngoog.DEBUG = true;\n\n\n/**\n * @define {string} LOCALE defines the locale being used for compilation. It is\n * used to select locale specific data to be compiled in js binary. BUILD rule\n * can specify this value by \"--define goog.LOCALE=<locale_name>\" as JSCompiler\n * option.\n *\n * Take into account that the locale code format is important. You should use\n * the canonical Unicode format with hyphen as a delimiter. Language must be\n * lowercase, Language Script - Capitalized, Region - UPPERCASE.\n * There are few examples: pt-BR, en, en-US, sr-Latin-BO, zh-Hans-CN.\n *\n * See more info about locale codes here:\n * http://www.unicode.org/reports/tr35/#Unicode_Language_and_Locale_Identifiers\n *\n * For language codes you should use values defined by ISO 693-1. See it here\n * http://www.w3.org/WAI/ER/IG/ert/iso639.htm. There is only one exception from\n * this rule: the Hebrew language. For legacy reasons the old code (iw) should\n * be used instead of the new code (he), see http://wiki/Main/IIISynonyms.\n */\ngoog.define('goog.LOCALE', 'en');  // default to en\n\n\n/**\n * @define {boolean} Whether this code is running on trusted sites.\n *\n * On untrusted sites, several native functions can be defined or overridden by\n * external libraries like Prototype, Datejs, and JQuery and setting this flag\n * to false forces closure to use its own implementations when possible.\n *\n * If your JavaScript can be loaded by a third party site and you are wary about\n * relying on non-standard implementations, specify\n * \"--define goog.TRUSTED_SITE=false\" to the JSCompiler.\n */\ngoog.define('goog.TRUSTED_SITE', true);\n\n\n/**\n * @define {boolean} Whether a project is expected to be running in strict mode.\n *\n * This define can be used to trigger alternate implementations compatible with\n * running in EcmaScript Strict mode or warn about unavailable functionality.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope/Strict_mode\n */\ngoog.define('goog.STRICT_MODE_COMPATIBLE', false);\n\n\n/**\n * Creates object stubs for a namespace.  The presence of one or more\n * goog.provide() calls indicate that the file defines the given\n * objects/namespaces.  Provided objects must not be null or undefined.\n * Build tools also scan for provide/require statements\n * to discern dependencies, build dependency files (see deps.js), etc.\n * @see goog.require\n * @param {string} name Namespace provided by this file in the form\n *     \"goog.package.part\".\n */\ngoog.provide = function(name) {\n  if (!COMPILED) {\n    // Ensure that the same namespace isn't provided twice.\n    // A goog.module/goog.provide maps a goog.require to a specific file\n    if (goog.isProvided_(name)) {\n      throw Error('Namespace \"' + name + '\" already declared.');\n    }\n    delete goog.implicitNamespaces_[name];\n\n    var namespace = name;\n    while ((namespace = namespace.substring(0, namespace.lastIndexOf('.')))) {\n      if (goog.getObjectByName(namespace)) {\n        break;\n      }\n      goog.implicitNamespaces_[namespace] = true;\n    }\n  }\n\n  goog.exportPath_(name);\n};\n\n\n/**\n * Forward declares a symbol. This is an indication to the compiler that the\n * symbol may be used in the source yet is not required and may not be provided\n * in compilation.\n *\n * The most common usage of forward declaration is code that takes a type as a\n * function parameter but does not need to require it. By forward declaring\n * instead of requiring, no hard dependency is made, and (if not required\n * elsewhere) the namespace may never be required and thus, not be pulled\n * into the JavaScript binary. If it is required elsewhere, it will be type\n * checked as normal.\n *\n *\n * @param {string} name The namespace to forward declare in the form of\n *     \"goog.package.part\".\n */\ngoog.forwardDeclare = function(name) {};\n\n\nif (!COMPILED) {\n\n  /**\n   * Check if the given name has been goog.provided. This will return false for\n   * names that are available only as implicit namespaces.\n   * @param {string} name name of the object to look for.\n   * @return {boolean} Whether the name has been provided.\n   * @private\n   */\n  goog.isProvided_ = function(name) {\n    return (!goog.implicitNamespaces_[name] &&\n        goog.isDefAndNotNull(goog.getObjectByName(name)));\n  };\n\n  /**\n   * Namespaces implicitly defined by goog.provide. For example,\n   * goog.provide('goog.events.Event') implicitly declares that 'goog' and\n   * 'goog.events' must be namespaces.\n   *\n   * @type {Object.<string, (boolean|undefined)>}\n   * @private\n   */\n  goog.implicitNamespaces_ = {};\n}\n\n\n/**\n * Returns an object based on its fully qualified external name.  The object\n * is not found if null or undefined.  If you are using a compilation pass that\n * renames property names beware that using this function will not find renamed\n * properties.\n *\n * @param {string} name The fully qualified name.\n * @param {Object=} obj The object within which to look; default is\n *     |goog.global|.\n * @return {?} The value (object or primitive) or, if not found, null.\n */\ngoog.getObjectByName = function(name, obj) {\n  var parts = name.split('.');\n  var cur = obj || goog.global;\n  for (var part; part = parts.shift(); ) {\n    if (goog.isDefAndNotNull(cur[part])) {\n      cur = cur[part];\n    } else {\n      return null;\n    }\n  }\n  return cur;\n};\n\n\n/**\n * Globalizes a whole namespace, such as goog or goog.lang.\n *\n * @param {Object} obj The namespace to globalize.\n * @param {Object=} global The object to add the properties to.\n * @deprecated Properties may be explicitly exported to the global scope, but\n *     this should no longer be done in bulk.\n */\ngoog.globalize = function(obj, global) {\n  global = global || goog.global;\n  for (var x in obj) {\n    global[x] = obj[x];\n  }\n};\n\n\n/**\n * Adds a dependency from a file to the files it requires.\n * @param {string} relPath The path to the js file.\n * @param {Array} provides An array of strings with the names of the objects\n *                         this file provides.\n * @param {Array} requires An array of strings with the names of the objects\n *                         this file requires.\n */\ngoog.addDependency = function(relPath, provides, requires) {\n  if (goog.DEPENDENCIES_ENABLED) {\n    var provide, require;\n    var path = relPath.replace(/\\\\/g, '/');\n    var deps = goog.dependencies_;\n    for (var i = 0; provide = provides[i]; i++) {\n      deps.nameToPath[provide] = path;\n    }\n    for (var j = 0; require = requires[j]; j++) {\n      if (!(path in deps.requires)) {\n        deps.requires[path] = {};\n      }\n      deps.requires[path][require] = true;\n    }\n  }\n};\n\n\n\n\n// NOTE(nnaze): The debug DOM loader was included in base.js as an original way\n// to do \"debug-mode\" development.  The dependency system can sometimes be\n// confusing, as can the debug DOM loader's asynchronous nature.\n//\n// With the DOM loader, a call to goog.require() is not blocking -- the script\n// will not load until some point after the current script.  If a namespace is\n// needed at runtime, it needs to be defined in a previous script, or loaded via\n// require() with its registered dependencies.\n// User-defined namespaces may need their own deps file.  See http://go/js_deps,\n// http://go/genjsdeps, or, externally, DepsWriter.\n// https://developers.google.com/closure/library/docs/depswriter\n//\n// Because of legacy clients, the DOM loader can't be easily removed from\n// base.js.  Work is being done to make it disableable or replaceable for\n// different environments (DOM-less JavaScript interpreters like Rhino or V8,\n// for example). See bootstrap/ for more information.\n\n\n/**\n * @define {boolean} Whether to enable the debug loader.\n *\n * If enabled, a call to goog.require() will attempt to load the namespace by\n * appending a script tag to the DOM (if the namespace has been registered).\n *\n * If disabled, goog.require() will simply assert that the namespace has been\n * provided (and depend on the fact that some outside tool correctly ordered\n * the script).\n */\ngoog.define('goog.ENABLE_DEBUG_LOADER', true);\n\n\n/**\n * @param {string} msg\n * @private\n */\ngoog.logToConsole_ = function(msg) {\n  if (goog.global.console) {\n    goog.global.console['error'](msg);\n  }\n};\n\n\n/**\n * Implements a system for the dynamic resolution of dependencies that works in\n * parallel with the BUILD system. Note that all calls to goog.require will be\n * stripped by the JSCompiler when the --closure_pass option is used.\n * @see goog.provide\n * @param {string} name Namespace to include (as was given in goog.provide()) in\n *     the form \"goog.package.part\".\n * @return {?} If called within a goog.module file, the associated namespace or\n *     module otherwise null.\n */\ngoog.require = function(name) {\n\n  // If the object already exists we do not need do do anything.\n  if (!COMPILED) {\n    if (goog.isProvided_(name)) {\n      return null;\n    }\n\n    if (goog.ENABLE_DEBUG_LOADER) {\n      var path = goog.getPathFromDeps_(name);\n      if (path) {\n        goog.included_[path] = true;\n        goog.writeScripts_();\n        return null;\n      }\n    }\n\n    var errorMessage = 'goog.require could not find: ' + name;\n    goog.logToConsole_(errorMessage);\n\n    throw Error(errorMessage);\n  }\n};\n\n\n/**\n * Path for included scripts.\n * @type {string}\n */\ngoog.basePath = '';\n\n\n/**\n * A hook for overriding the base path.\n * @type {string|undefined}\n */\ngoog.global.CLOSURE_BASE_PATH;\n\n\n/**\n * Whether to load Closure's deps file automatically.\n * Shaka sets this to true since we are placing deps.js in a non-standard\n * location.  Running Shaka in uncompiled mode will require loading deps.js\n * explicitly.\n * @type {boolean|undefined}\n */\ngoog.global.CLOSURE_NO_DEPS = true;\n\n\n/**\n * A function to import a single script. This is meant to be overridden when\n * Closure is being run in non-HTML contexts, such as web workers. It's defined\n * in the global scope so that it can be set before base.js is loaded, which\n * allows deps.js to be imported properly.\n *\n * The function is passed the script source, which is a relative URI. It should\n * return true if the script was imported, false otherwise.\n * @type {(function(string): boolean)|undefined}\n */\ngoog.global.CLOSURE_IMPORT_SCRIPT;\n\n\n/**\n * True if goog.dependencies_ is available.\n * @const {boolean}\n */\ngoog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;\n\n\nif (goog.DEPENDENCIES_ENABLED) {\n  /**\n   * Object used to keep track of urls that have already been added. This record\n   * allows the prevention of circular dependencies.\n   * @type {Object}\n   * @private\n   */\n  goog.included_ = {};\n\n\n  /**\n   * This object is used to keep track of dependencies and other data that is\n   * used for loading scripts.\n   * @private\n   * @type {Object}\n   */\n  goog.dependencies_ = {\n    nameToPath: {}, // many to 1\n    requires: {}, // 1 to many\n    // Used when resolving dependencies to prevent us from visiting file twice.\n    visited: {},\n    written: {} // Used to keep track of script files we have written.\n  };\n\n\n  /**\n   * Tries to detect whether is in the context of an HTML document.\n   * @return {boolean} True if it looks like HTML document.\n   * @private\n   */\n  goog.inHtmlDocument_ = function() {\n    var doc = goog.global.document;\n    return typeof doc != 'undefined' &&\n           'write' in doc;  // XULDocument misses write.\n  };\n\n\n  /**\n   * Tries to detect the base path of base.js script that bootstraps Closure.\n   * @private\n   */\n  goog.findBasePath_ = function() {\n    if (goog.global.CLOSURE_BASE_PATH) {\n      goog.basePath = goog.global.CLOSURE_BASE_PATH;\n      return;\n    } else if (!goog.inHtmlDocument_()) {\n      return;\n    }\n    var doc = goog.global.document;\n    var scripts = doc.getElementsByTagName('script');\n    // Search backwards since the current script is in almost all cases the one\n    // that has base.js.\n    for (var i = scripts.length - 1; i >= 0; --i) {\n      var src = (/** @type {!HTMLScriptElement} */ (scripts[i])).src;\n      var qmark = src.lastIndexOf('?');\n      var l = qmark == -1 ? src.length : qmark;\n      if (src.substr(l - 7, 7) == 'base.js') {\n        goog.basePath = src.substr(0, l - 7);\n        return;\n      }\n    }\n  };\n\n\n  /**\n   * Imports a script if, and only if, that script hasn't already been imported.\n   * (Must be called at execution time)\n   * @param {string} src Script source.\n   * @param {string=} sourceText The optionally source text to evaluate\n   * @private\n   */\n  goog.importScript_ = function(src, sourceText) {\n    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT ||\n        goog.writeScriptTag_;\n    if (importScript(src, sourceText)) {\n      goog.dependencies_.written[src] = true;\n    }\n  };\n\n\n  /**\n   * The default implementation of the import function. Writes a script tag to\n   * import the script.\n   *\n   * @param {string} src The script url.\n   * @param {string=} sourceText The optionally source text to evaluate\n   * @return {boolean} True if the script was imported, false otherwise.\n   * @private\n   */\n  goog.writeScriptTag_ = function(src, sourceText) {\n    if (goog.inHtmlDocument_()) {\n      var doc = goog.global.document;\n\n      // If the user tries to require a new symbol after document load,\n      // something has gone terribly wrong. Doing a document.write would\n      // wipe out the page.\n      if (doc.readyState == 'complete') {\n        // Certain test frameworks load base.js multiple times, which tries\n        // to write deps.js each time. If that happens, just fail silently.\n        // These frameworks wipe the page between each load of base.js, so this\n        // is OK.\n        var isDeps = /\\bdeps.js$/.test(src);\n        if (isDeps) {\n          return false;\n        } else {\n          throw Error('Cannot write \"' + src + '\" after document load');\n        }\n      }\n\n      if (sourceText === undefined) {\n        doc.write(\n            '<script type=\"text/javascript\" src=\"' +\n                src + '\"></' + 'script>');\n      } else {\n        doc.write(\n            '<script type=\"text/javascript\">' +\n              sourceText + '</' + 'script>');\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n\n  /**\n   * Resolves dependencies based on the dependencies added using addDependency\n   * and calls importScript_ in the correct order.\n   * @private\n   */\n  goog.writeScripts_ = function() {\n    // The scripts we need to write this time.\n    var scripts = [];\n    var seenScript = {};\n    var deps = goog.dependencies_;\n\n    function visitNode(path) {\n      if (path in deps.written) {\n        return;\n      }\n\n      // We have already visited this one. We can get here if we have cyclic\n      // dependencies.\n      if (path in deps.visited) {\n        if (!(path in seenScript)) {\n          seenScript[path] = true;\n          scripts.push(path);\n        }\n        return;\n      }\n\n      deps.visited[path] = true;\n\n      if (path in deps.requires) {\n        for (var requireName in deps.requires[path]) {\n          // If the required name is defined, we assume that it was already\n          // bootstrapped by other means.\n          if (!goog.isProvided_(requireName)) {\n            if (requireName in deps.nameToPath) {\n              visitNode(deps.nameToPath[requireName]);\n            } else {\n              throw Error('Undefined nameToPath for ' + requireName);\n            }\n          }\n        }\n      }\n\n      if (!(path in seenScript)) {\n        seenScript[path] = true;\n        scripts.push(path);\n      }\n    }\n\n    for (var path in goog.included_) {\n      if (!deps.written[path]) {\n        visitNode(path);\n      }\n    }\n\n    // record that we are going to load all these scripts.\n    for (var i = 0; i < scripts.length; i++) {\n      var path = scripts[i];\n      goog.dependencies_.written[path] = true;\n    }\n\n    for (var i = 0; i < scripts.length; i++) {\n      var path = scripts[i];\n      if (path) {\n        goog.importScript_(goog.basePath + path);\n      }\n    }\n  };\n\n\n  /**\n   * Looks at the dependency rules and tries to determine the script file that\n   * fulfills a particular rule.\n   * @param {string} rule In the form goog.namespace.Class or project.script.\n   * @return {?string} Url corresponding to the rule, or null.\n   * @private\n   */\n  goog.getPathFromDeps_ = function(rule) {\n    if (rule in goog.dependencies_.nameToPath) {\n      return goog.dependencies_.nameToPath[rule];\n    } else {\n      return null;\n    }\n  };\n\n  goog.findBasePath_();\n\n  // Allow projects to manage the deps files themselves.\n  if (!goog.global.CLOSURE_NO_DEPS) {\n    goog.importScript_(goog.basePath + 'deps.js');\n  }\n}\n\n\n\n//==============================================================================\n// Language Enhancements\n//==============================================================================\n\n\n/**\n * Returns true if the specified value is defined and not null.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is defined and not null.\n */\ngoog.isDefAndNotNull = function(val) {\n  // Note that undefined == null.\n  return val != null;\n};\n\n\n/**\n * Returns true if the specified value is a string.\n * @param {?} val Variable to test.\n * @return {boolean} Whether variable is a string.\n */\ngoog.isString = function(val) {\n  return typeof val == 'string';\n};\n\n\n/**\n * Exposes an unobfuscated global namespace path for the given object.\n * Note that fields of the exported object *will* be obfuscated, unless they are\n * exported in turn via this function or goog.exportProperty.\n *\n * Also handy for making public items that are defined in anonymous closures.\n *\n * ex. goog.exportSymbol('public.path.Foo', Foo);\n *\n * ex. goog.exportSymbol('public.path.Foo.staticFunction', Foo.staticFunction);\n *     public.path.Foo.staticFunction();\n *\n * ex. goog.exportSymbol('public.path.Foo.prototype.myMethod',\n *                       Foo.prototype.myMethod);\n *     new public.path.Foo().myMethod();\n *\n * @param {string} publicPath Unobfuscated name to export.\n * @param {*} object Object the name should point to.\n * @param {Object=} objectToExportTo The object to add the path to; default\n *     is goog.global.\n */\ngoog.exportSymbol = function(publicPath, object, objectToExportTo) {\n  goog.exportPath_(publicPath, object, objectToExportTo);\n};\n\n\n/**\n * Exports a property unobfuscated into the object's namespace.\n * ex. goog.exportProperty(Foo, 'staticFunction', Foo.staticFunction);\n * ex. goog.exportProperty(Foo.prototype, 'myMethod', Foo.prototype.myMethod);\n * @param {Object} object Object whose static property is being exported.\n * @param {string} publicName Unobfuscated name to export.\n * @param {*} symbol Object the name should point to.\n */\ngoog.exportProperty = function(object, publicName, symbol) {\n  object[publicName] = symbol;\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n * <pre>\n * function ParentClass(a, b) { }\n * ParentClass.prototype.foo = function(a) { };\n *\n * function ChildClass(a, b, c) {\n *   ChildClass.base(this, 'constructor', a, b);\n * }\n * goog.inherits(ChildClass, ParentClass);\n *\n * var child = new ChildClass('a', 'b', 'see');\n * child.foo(); // This works.\n * </pre>\n *\n * @param {Function} childCtor Child class.\n * @param {Function} parentCtor Parent class.\n */\ngoog.inherits = function(childCtor, parentCtor) {\n  /** @constructor */\n  function tempCtor() {}\n  tempCtor.prototype = parentCtor.prototype;\n  childCtor.superClass_ = parentCtor.prototype;\n  childCtor.prototype = new tempCtor();\n  /** @override */\n  childCtor.prototype.constructor = childCtor;\n\n  /**\n   * Calls superclass constructor/method.\n   *\n   * This function is only available if you use goog.inherits to\n   * express inheritance relationships between classes.\n   *\n   * NOTE: This is a replacement for goog.base and for superClass_\n   * property defined in childCtor.\n   *\n   * @param {!Object} me Should always be \"this\".\n   * @param {string} methodName The method name to call. Calling\n   *     superclass constructor can be done with the special string\n   *     'constructor'.\n   * @param {...*} var_args The arguments to pass to superclass\n   *     method/constructor.\n   * @return {*} The return value of the superclass method/constructor.\n   */\n  childCtor.base = function(me, methodName, var_args) {\n    var args = Array.prototype.slice.call(arguments, 2);\n    return parentCtor.prototype[methodName].apply(me, args);\n  };\n};\n\n\n/*\n * To support uncompiled, strict mode bundles that use eval to divide source\n * like so:\n *    eval('someSource;//# sourceUrl sourcefile.js');\n * We need to export the globally defined symbols \"goog\" and \"COMPILED\".\n * Exporting \"goog\" breaks the compiler optimizations, so we required that\n * be defined externally.\n * NOTE: We don't use goog.exportSymbol here because we don't want to trigger\n * extern generation when that compiler option is enabled.\n */\nif (!COMPILED) {\n  goog.global['COMPILED'] = COMPILED;\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('goog.asserts');\n\n\n/**\n * @namespace goog.asserts\n * @summary An assertion framework which is compiled out for deployment.\n *   NOTE: this is not the closure library version.  This uses the same name so\n *   the closure compiler will be able to use the conditions to assist type\n *   checking.\n */\n\n\n/**\n * @define {boolean} true to enable asserts, false otherwise.\n */\ngoog.define('goog.asserts.ENABLE_ASSERTS', goog.DEBUG);\n\n\n/** @type {function(*, string)} */\ngoog.asserts.assert = function() {};\n\n\n/** @private */\ngoog.asserts.patchAssert_ = function() {\n  let assert = console.assert;\n\n  if (!assert) {\n    console.assert = function() {};\n  } else if (!assert.bind) {\n    // IE 9 does not provide a .bind for the built-in console functions.\n    console.assert = function() {\n      assert.apply(console, arguments);\n    };\n  }\n};\n\n\n// Install assert functions.\nif (goog.asserts.ENABLE_ASSERTS) {\n  goog.asserts.patchAssert_();\n\n  goog.asserts.assert = console.assert.bind(console);\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.abr.Ewma');\n\ngoog.require('goog.asserts');\n\n\n/**\n * Computes an exponentionally-weighted moving average.\n *\n * @param {number} halfLife The quantity of prior samples (by weight) used\n *   when creating a new estimate.  Those prior samples make up half of the new\n *   estimate.\n * @struct\n * @constructor\n */\nshaka.abr.Ewma = function(halfLife) {\n  goog.asserts.assert(halfLife > 0, 'expected halfLife to be positive');\n\n  /**\n   * Larger values of alpha expire historical data more slowly.\n   * @private {number}\n   */\n  this.alpha_ = Math.exp(Math.log(0.5) / halfLife);\n\n  /** @private {number} */\n  this.estimate_ = 0;\n\n  /** @private {number} */\n  this.totalWeight_ = 0;\n};\n\n\n/**\n * Takes a sample.\n *\n * @param {number} weight\n * @param {number} value\n */\nshaka.abr.Ewma.prototype.sample = function(weight, value) {\n  let adjAlpha = Math.pow(this.alpha_, weight);\n  let newEstimate = value * (1 - adjAlpha) + adjAlpha * this.estimate_;\n\n  if (!isNaN(newEstimate)) {\n    this.estimate_ = newEstimate;\n    this.totalWeight_ += weight;\n  }\n};\n\n\n/**\n * @return {number}\n */\nshaka.abr.Ewma.prototype.getEstimate = function() {\n  let zeroFactor = 1 - Math.pow(this.alpha_, this.totalWeight_);\n  return this.estimate_ / zeroFactor;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.abr.EwmaBandwidthEstimator');\n\ngoog.require('shaka.abr.Ewma');\n\n\n/**\n * Tracks bandwidth samples and estimates available bandwidth.\n * Based on the minimum of two exponentially-weighted moving averages with\n * different half-lives.\n *\n * @constructor\n * @struct\n */\nshaka.abr.EwmaBandwidthEstimator = function() {\n  /**\n   * A fast-moving average.\n   * Half of the estimate is based on the last 2 seconds of sample history.\n   * @private {!shaka.abr.Ewma}\n   */\n  this.fast_ = new shaka.abr.Ewma(2);\n\n  /**\n   * A slow-moving average.\n   * Half of the estimate is based on the last 5 seconds of sample history.\n   * @private {!shaka.abr.Ewma}\n   */\n  this.slow_ = new shaka.abr.Ewma(5);\n\n  /**\n   * Number of bytes sampled.\n   * @private {number}\n   */\n  this.bytesSampled_ = 0;\n\n\n  /**\n   * Minimum number of bytes sampled before we trust the estimate.  If we have\n   * not sampled much data, our estimate may not be accurate enough to trust.\n   * If bytesSampled_ is less than minTotalBytes_, we use defaultEstimate_.\n   * This specific value is based on experimentation.\n   *\n   * @private {number}\n   * @const\n   */\n  this.minTotalBytes_ = 128e3;  // 128kB\n\n  /**\n   * Minimum number of bytes, under which samples are discarded.  Our models do\n   * not include latency information, so connection startup time (time to first\n   * byte) is considered part of the download time.  Because of this, we should\n   * ignore very small downloads which would cause our estimate to be too low.\n   * This specific value is based on experimentation.\n   *\n   * @private {number}\n   * @const\n   */\n  this.minBytes_ = 16e3;  // 16kB\n};\n\n\n/**\n * Takes a bandwidth sample.\n *\n * @param {number} durationMs The amount of time, in milliseconds, for a\n *   particular request.\n * @param {number} numBytes The total number of bytes transferred in that\n *   request.\n */\nshaka.abr.EwmaBandwidthEstimator.prototype.sample = function(\n    durationMs, numBytes) {\n  if (numBytes < this.minBytes_) {\n    return;\n  }\n\n  let bandwidth = 8000 * numBytes / durationMs;\n  let weight = durationMs / 1000;\n\n  this.bytesSampled_ += numBytes;\n  this.fast_.sample(weight, bandwidth);\n  this.slow_.sample(weight, bandwidth);\n};\n\n\n/**\n * Gets the current bandwidth estimate.\n *\n * @param {number} defaultEstimate\n * @return {number} The bandwidth estimate in bits per second.\n */\nshaka.abr.EwmaBandwidthEstimator.prototype.getBandwidthEstimate =\n    function(defaultEstimate) {\n  if (this.bytesSampled_ < this.minTotalBytes_) {\n    return defaultEstimate;\n  }\n\n  // Take the minimum of these two estimates.  This should have the effect of\n  // adapting down quickly, but up more slowly.\n  return Math.min(this.fast_.getEstimate(), this.slow_.getEstimate());\n};\n\n\n/**\n * @return {boolean} True if there is enough data to produce a meaningful\n *   estimate.\n */\nshaka.abr.EwmaBandwidthEstimator.prototype.hasGoodEstimate = function() {\n  return this.bytesSampled_ >= this.minTotalBytes_;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.log');\n\n\n/**\n * @namespace shaka.log\n * @summary\n * A console logging framework which is compiled out for deployment.  This is\n * only available when using the uncompiled version.\n * @exportDoc\n */\n\n\n/**\n * Log levels.\n * @enum {number}\n * @exportDoc\n */\nshaka.log.Level = {\n  NONE: 0,\n  ERROR: 1,\n  WARNING: 2,\n  INFO: 3,\n  DEBUG: 4,\n  V1: 5,\n  V2: 6,\n};\n\n\n/**\n * @define {number} the maximum log level.\n */\ngoog.define('shaka.log.MAX_LOG_LEVEL', 3);\n\n\n/**\n * This always logs to the console, even in Release mode.  This should only be\n * used for deprecation messages and things the app should never ignore.\n *\n * @type {function(*, ...*)}\n */\nshaka.log.alwaysWarn = function() {};\n\n\n/**\n * This log is for when an error occurs.  This should always be accompanied with\n * an error event, thrown exception, or rejected Promise.  Logs are disabled in\n * Release mode, so there should be other methods of detecting the error.\n *\n * @type {function(*, ...*)}\n */\nshaka.log.error = function() {};\n\n\n/**\n * This log is for possible errors or things that may be surprising to a user.\n * For example, if we work around unusual or bad content, we should warn that\n * they should fix their content.  Deprecation messages and messages the app\n * shouldn't ignore should use alwaysWarn instead.\n *\n * @type {function(*, ...*)}\n */\nshaka.log.warning = function() {};\n\n\n/**\n * This log is for messages to the user about what is happening.  For example,\n * when we update a manifest or install a polyfill.\n *\n * @type {function(*, ...*)}\n */\nshaka.log.info = function() {};\n\n\n/**\n * This log is to aid *users* in debugging their content.  This should be for\n * logs about the content and what we do with it.  For example, when we change\n * streams or what we are choosing.\n *\n * @type {function(*, ...*)}\n */\nshaka.log.debug = function() {};\n\n\n/**\n * This log is for debugging Shaka Player itself.  This may be logs about\n * internal states or events.  This may also be for more verbose logs about\n * content, such as for segment appends.\n *\n * @type {function(*, ...*)}\n */\nshaka.log.v1 = function() {};\n\n\n/**\n * This log is for tracing and debugging Shaka Player.  These logs will happen\n * a lot, for example, logging every segment append or every update check.\n * These are mostly used for tracking which calls happen through the code.\n *\n * @type {function(*, ...*)}\n */\nshaka.log.v2 = function() {};\n\n\n// IE8 has no console unless it is opened in advance.\n// IE9 console methods are not Functions and have no bind.\nif (window.console && window.console.log.bind) {\n  shaka.log.alwaysWarn = console.warn.bind(console);\n\n  if (goog.DEBUG) {\n    /** @type {number} */\n    shaka.log.currentLevel;\n\n    /**\n     * Change the log level.  Useful for debugging in uncompiled mode.\n     *\n     * @param {number} level\n     * @exportDoc\n     */\n    shaka.log.setLevel = function(level) {\n      let nop = function() {};\n      let log = shaka.log;\n      const Level = shaka.log.Level;\n\n      shaka.log.currentLevel = level;\n\n      log.error = (level >= Level.ERROR) ? console.error.bind(console) : nop;\n      log.warning = (level >= Level.WARNING) ? console.warn.bind(console) : nop;\n      log.info = (level >= Level.INFO) ? console.info.bind(console) : nop;\n      log.debug = (level >= Level.DEBUG) ? console.log.bind(console) : nop;\n      log.v1 = (level >= Level.V1) ? console.debug.bind(console) : nop;\n      log.v2 = (level >= Level.V2) ? console.debug.bind(console) : nop;\n    };\n\n    shaka.log.setLevel(shaka.log.MAX_LOG_LEVEL);\n  } else {\n    if (shaka.log.MAX_LOG_LEVEL >= shaka.log.Level.ERROR) {\n      shaka.log.error = console.error.bind(console);\n    }\n    if (shaka.log.MAX_LOG_LEVEL >= shaka.log.Level.WARNING) {\n      shaka.log.warning = console.warn.bind(console);\n    }\n    if (shaka.log.MAX_LOG_LEVEL >= shaka.log.Level.INFO) {\n      shaka.log.info = console.info.bind(console);\n    }\n    if (shaka.log.MAX_LOG_LEVEL >= shaka.log.Level.DEBUG) {\n      shaka.log.debug = console.log.bind(console);\n    }\n    if (shaka.log.MAX_LOG_LEVEL >= shaka.log.Level.V1) {\n      shaka.log.v1 = console.debug.bind(console);\n    }\n    if (shaka.log.MAX_LOG_LEVEL >= shaka.log.Level.V2) {\n      shaka.log.v2 = console.debug.bind(console);\n    }\n  }\n}\n","// Copyright 2008 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Simple utilities for splitting URI strings.\n *\n * Uses features of RFC 3986 for parsing/formatting URIs:\n *   http://www.ietf.org/rfc/rfc3986.txt\n *\n * @author gboyer@google.com (Garrett Boyer) - The \"lightened\" design.\n * @author msamuel@google.com (Mike Samuel) - Domain knowledge and regexes.\n */\n\ngoog.provide('goog.uri.utils');\ngoog.provide('goog.uri.utils.ComponentIndex');\n\n\n/**\n * A regular expression for breaking a URI into its component parts.\n *\n * {@link http://www.ietf.org/rfc/rfc3986.txt} says in Appendix B\n * As the \"first-match-wins\" algorithm is identical to the \"greedy\"\n * disambiguation method used by POSIX regular expressions, it is natural and\n * commonplace to use a regular expression for parsing the potential five\n * components of a URI reference.\n *\n * The following line is the regular expression for breaking-down a\n * well-formed URI reference into its components.\n *\n * <pre>\n * ^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?\n *  12            3  4          5       6  7        8 9\n * </pre>\n *\n * The numbers in the second line above are only to assist readability; they\n * indicate the reference points for each subexpression (i.e., each paired\n * parenthesis). We refer to the value matched for subexpression <n> as $<n>.\n * For example, matching the above expression to\n * <pre>\n *     http://www.ics.uci.edu/pub/ietf/uri/#Related\n * </pre>\n * results in the following subexpression matches:\n * <pre>\n *    $1 = http:\n *    $2 = http\n *    $3 = //www.ics.uci.edu\n *    $4 = www.ics.uci.edu\n *    $5 = /pub/ietf/uri/\n *    $6 = <undefined>\n *    $7 = <undefined>\n *    $8 = #Related\n *    $9 = Related\n * </pre>\n * where <undefined> indicates that the component is not present, as is the\n * case for the query component in the above example. Therefore, we can\n * determine the value of the five components as\n * <pre>\n *    scheme    = $2\n *    authority = $4\n *    path      = $5\n *    query     = $7\n *    fragment  = $9\n * </pre>\n *\n * The regular expression has been modified slightly to expose the\n * userInfo, domain, and port separately from the authority.\n * The modified version yields\n * <pre>\n *    $1 = http              scheme\n *    $2 = <undefined>       userInfo -\\\n *    $3 = www.ics.uci.edu   domain     | authority\n *    $4 = <undefined>       port     -/\n *    $5 = /pub/ietf/uri/    path\n *    $6 = <undefined>       query without ?\n *    $7 = Related           fragment without #\n * </pre>\n * @type {!RegExp}\n * @private\n */\ngoog.uri.utils.splitRe_ = new RegExp(\n    '^' +\n    '(?:' +\n        '([^:/?#.]+)' +                  // scheme - ignore special characters\n                                         // used by other URL parts such as :,\n                                         // ?, /, #, and .\n    ':)?' +\n    '(?://' +\n        '(?:([^/?#]*)@)?' +              // userInfo\n        '([^/#?]*?)' +                   // domain\n        '(?::([0-9]+))?' +               // port\n        '(?=[/#?]|$)' +                  // authority-terminating character\n    ')?' +\n    '([^?#]+)?' +                        // path\n    '(?:\\\\?([^#]*))?' +                  // query\n    '(?:#(.*))?' +                       // fragment\n    '$');\n\n\n/**\n * The index of each URI component in the return value of goog.uri.utils.split.\n * @enum {number}\n */\ngoog.uri.utils.ComponentIndex = {\n  SCHEME: 1,\n  USER_INFO: 2,\n  DOMAIN: 3,\n  PORT: 4,\n  PATH: 5,\n  QUERY_DATA: 6,\n  FRAGMENT: 7\n};\n\n\n/**\n * Splits a URI into its component parts.\n *\n * Each component can be accessed via the component indices; for example:\n * <pre>\n * goog.uri.utils.split(someStr)[goog.uri.utils.CompontentIndex.QUERY_DATA];\n * </pre>\n *\n * @param {string} uri The URI string to examine.\n * @return {!Array.<string|undefined>} Each component still URI-encoded.\n *     Each component that is present will contain the encoded value, whereas\n *     components that are not present will be undefined or empty, depending\n *     on the browser's regular expression implementation.  Never null, since\n *     arbitrary strings may still look like path names.\n */\ngoog.uri.utils.split = function(uri) {\n  // See @return comment -- never null.\n  return /** @type {!Array.<string|undefined>} */ (\n      uri.match(goog.uri.utils.splitRe_));\n};\n","// Copyright 2006 The Closure Library Authors. All Rights Reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//      http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS-IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\n/**\n * @fileoverview Class for parsing and formatting URIs.\n *\n * Use new goog.Uri(string) to parse a URI string.\n *\n * e.g: <code>var myUri = new goog.Uri(window.location);</code>\n *\n * Implements RFC 3986 for parsing/formatting URIs.\n * http://www.ietf.org/rfc/rfc3986.txt\n *\n * Some changes have been made to the interface (more like .NETs), though the\n * internal representation is now of un-encoded parts, this will change the\n * behavior slightly.\n *\n */\n\ngoog.provide('goog.Uri');\ngoog.provide('goog.Uri.QueryData');\n\ngoog.require('goog.uri.utils');\ngoog.require('goog.uri.utils.ComponentIndex');\n\n\n\n/**\n * This class contains setters and getters for the parts of the URI.\n * The <code>getXyz</code>/<code>setXyz</code> methods return the decoded part\n * -- so<code>new goog.Uri('/foo%20bar').getPath()</code> will return the\n * decoded path, <code>/foo bar</code>.\n *\n * Reserved characters (see RFC 3986 section 2.2) can be present in\n * their percent-encoded form in scheme, domain, and path URI components and\n * will not be auto-decoded. For example:\n * <code>new goog.Uri('rel%61tive/path%2fto/resource').getPath()</code> will\n * return <code>relative/path%2fto/resource</code>.\n *\n * The constructor accepts an optional unparsed, raw URI string.  The parser\n * is relaxed, so special characters that aren't escaped but don't cause\n * ambiguities will not cause parse failures.\n *\n * All setters return <code>this</code> and so may be chained, a la\n * <code>new goog.Uri('/foo').setFragment('part').toString()</code>.\n *\n * @param {*=} uri Optional string URI to parse, or if a goog.Uri is\n *        passed, a clone is created.\n *\n * @constructor\n */\ngoog.Uri = function(uri) {\n  // Parse in the uri string\n  var m;\n  if (uri instanceof goog.Uri) {\n    this.setScheme(uri.getScheme());\n    this.setUserInfo(uri.getUserInfo());\n    this.setDomain(uri.getDomain());\n    this.setPort(uri.getPort());\n    this.setPath(uri.getPath());\n    this.setQueryData(uri.getQueryData().clone());\n    this.setFragment(uri.getFragment());\n  } else if (uri && (m = goog.uri.utils.split(String(uri)))) {\n    // Set the parts -- decoding as we do so.\n    // COMPATABILITY NOTE - In IE, unmatched fields may be empty strings,\n    // whereas in other browsers they will be undefined.\n    this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || '', true);\n    this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || '', true);\n    this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || '', true);\n    this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);\n    this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || '', true);\n    this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || '', true);\n    this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || '', true);\n  } else {\n    this.queryData_ = new goog.Uri.QueryData(null, null);\n  }\n};\n\n\n/**\n * Scheme such as \"http\".\n * @type {string}\n * @private\n */\ngoog.Uri.prototype.scheme_ = '';\n\n\n/**\n * User credentials in the form \"username:password\".\n * @type {string}\n * @private\n */\ngoog.Uri.prototype.userInfo_ = '';\n\n\n/**\n * Domain part, e.g. \"www.google.com\".\n * @type {string}\n * @private\n */\ngoog.Uri.prototype.domain_ = '';\n\n\n/**\n * Port, e.g. 8080.\n * @type {?number}\n * @private\n */\ngoog.Uri.prototype.port_ = null;\n\n\n/**\n * Path, e.g. \"/tests/img.png\".\n * @type {string}\n * @private\n */\ngoog.Uri.prototype.path_ = '';\n\n\n/**\n * Object representing query data.\n * @type {!goog.Uri.QueryData}\n * @private\n */\ngoog.Uri.prototype.queryData_;\n\n\n/**\n * The fragment without the #.\n * @type {string}\n * @private\n */\ngoog.Uri.prototype.fragment_ = '';\n\n\n/**\n * @return {string} The string form of the url.\n * @override\n */\ngoog.Uri.prototype.toString = function() {\n  var out = [];\n\n  var scheme = this.getScheme();\n  if (scheme) {\n    out.push(goog.Uri.encodeSpecialChars_(\n        scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), ':');\n  }\n\n  var domain = this.getDomain();\n  if (domain) {\n    out.push('//');\n\n    var userInfo = this.getUserInfo();\n    if (userInfo) {\n      out.push(goog.Uri.encodeSpecialChars_(\n          userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), '@');\n    }\n\n    out.push(goog.Uri.removeDoubleEncoding_(encodeURIComponent(domain)));\n\n    var port = this.getPort();\n    if (port != null) {\n      out.push(':', String(port));\n    }\n  }\n\n  var path = this.getPath();\n  if (path) {\n    if (this.hasDomain() && path.charAt(0) != '/') {\n      out.push('/');\n    }\n    out.push(goog.Uri.encodeSpecialChars_(\n        path,\n        path.charAt(0) == '/' ?\n            goog.Uri.reDisallowedInAbsolutePath_ :\n            goog.Uri.reDisallowedInRelativePath_,\n        true));\n  }\n\n  var query = this.getEncodedQuery();\n  if (query) {\n    out.push('?', query);\n  }\n\n  var fragment = this.getFragment();\n  if (fragment) {\n    out.push('#', goog.Uri.encodeSpecialChars_(\n        fragment, goog.Uri.reDisallowedInFragment_));\n  }\n  return out.join('');\n};\n\n\n/**\n * Resolves the given relative URI (a goog.Uri object), using the URI\n * represented by this instance as the base URI.\n *\n * There are several kinds of relative URIs:<br>\n * 1. foo - replaces the last part of the path, the whole query and fragment<br>\n * 2. /foo - replaces the the path, the query and fragment<br>\n * 3. //foo - replaces everything from the domain on.  foo is a domain name<br>\n * 4. ?foo - replace the query and fragment<br>\n * 5. #foo - replace the fragment only\n *\n * Additionally, if relative URI has a non-empty path, all \"..\" and \".\"\n * segments will be resolved, as described in RFC 3986.\n *\n * @param {goog.Uri} relativeUri The relative URI to resolve.\n * @return {!goog.Uri} The resolved URI.\n */\ngoog.Uri.prototype.resolve = function(relativeUri) {\n\n  var absoluteUri = this.clone();\n  if (absoluteUri.scheme_ === 'data') {\n    // Cannot have a relative URI to a data URI.\n    absoluteUri = new goog.Uri();\n  }\n\n  // we satisfy these conditions by looking for the first part of relativeUri\n  // that is not blank and applying defaults to the rest\n\n  var overridden = relativeUri.hasScheme();\n\n  if (overridden) {\n    absoluteUri.setScheme(relativeUri.getScheme());\n  } else {\n    overridden = relativeUri.hasUserInfo();\n  }\n\n  if (overridden) {\n    absoluteUri.setUserInfo(relativeUri.getUserInfo());\n  } else {\n    overridden = relativeUri.hasDomain();\n  }\n\n  if (overridden) {\n    absoluteUri.setDomain(relativeUri.getDomain());\n  } else {\n    overridden = relativeUri.hasPort();\n  }\n\n  var path = relativeUri.getPath();\n  if (overridden) {\n    absoluteUri.setPort(relativeUri.getPort());\n  } else {\n    overridden = relativeUri.hasPath();\n    if (overridden) {\n      // resolve path properly\n      if (path.charAt(0) != '/') {\n        // path is relative\n        if (this.hasDomain() && !this.hasPath()) {\n          // RFC 3986, section 5.2.3, case 1\n          path = '/' + path;\n        } else {\n          // RFC 3986, section 5.2.3, case 2\n          var lastSlashIndex = absoluteUri.getPath().lastIndexOf('/');\n          if (lastSlashIndex != -1) {\n            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;\n          }\n        }\n      }\n      path = goog.Uri.removeDotSegments(path);\n    }\n  }\n\n  if (overridden) {\n    absoluteUri.setPath(path);\n  } else {\n    overridden = relativeUri.hasQuery();\n  }\n\n  if (overridden) {\n    absoluteUri.setQueryData(relativeUri.getQueryData().clone());\n  } else {\n    overridden = relativeUri.hasFragment();\n  }\n\n  if (overridden) {\n    absoluteUri.setFragment(relativeUri.getFragment());\n  }\n\n  return absoluteUri;\n};\n\n\n/**\n * Clones the URI instance.\n * @return {!goog.Uri} New instance of the URI object.\n */\ngoog.Uri.prototype.clone = function() {\n  return new goog.Uri(this);\n};\n\n\n/**\n * @return {string} The encoded scheme/protocol for the URI.\n */\ngoog.Uri.prototype.getScheme = function() {\n  return this.scheme_;\n};\n\n\n/**\n * Sets the scheme/protocol.\n * @param {string} newScheme New scheme value.\n * @param {boolean=} decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setScheme = function(newScheme, decode) {\n  this.scheme_ = decode ? goog.Uri.decodeOrEmpty_(newScheme, true) :\n      newScheme;\n\n  // remove an : at the end of the scheme so somebody can pass in\n  // window.location.protocol\n  if (this.scheme_) {\n    this.scheme_ = this.scheme_.replace(/:$/, '');\n  }\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the scheme has been set.\n */\ngoog.Uri.prototype.hasScheme = function() {\n  return !!this.scheme_;\n};\n\n\n/**\n * @return {string} The decoded user info.\n */\ngoog.Uri.prototype.getUserInfo = function() {\n  return this.userInfo_;\n};\n\n\n/**\n * Sets the userInfo.\n * @param {string} newUserInfo New userInfo value.\n * @param {boolean=} decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setUserInfo = function(newUserInfo, decode) {\n  this.userInfo_ = decode ? goog.Uri.decodeOrEmpty_(newUserInfo) :\n                   newUserInfo;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the user info has been set.\n */\ngoog.Uri.prototype.hasUserInfo = function() {\n  return !!this.userInfo_;\n};\n\n\n/**\n * @return {string} The decoded domain.\n */\ngoog.Uri.prototype.getDomain = function() {\n  return this.domain_;\n};\n\n\n/**\n * Sets the domain.\n * @param {string} newDomain New domain value.\n * @param {boolean=} decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setDomain = function(newDomain, decode) {\n  this.domain_ = decode ? goog.Uri.decodeOrEmpty_(newDomain, true) :\n      newDomain;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the domain has been set.\n */\ngoog.Uri.prototype.hasDomain = function() {\n  return !!this.domain_;\n};\n\n\n/**\n * @return {?number} The port number.\n */\ngoog.Uri.prototype.getPort = function() {\n  return this.port_;\n};\n\n\n/**\n * Sets the port number.\n * @param {*} newPort Port number. Will be explicitly casted to a number.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setPort = function(newPort) {\n  if (newPort) {\n    newPort = Number(newPort);\n    if (isNaN(newPort) || newPort < 0) {\n      throw Error('Bad port number ' + newPort);\n    }\n    this.port_ = newPort;\n  } else {\n    this.port_ = null;\n  }\n\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the port has been set.\n */\ngoog.Uri.prototype.hasPort = function() {\n  return this.port_ != null;\n};\n\n\n/**\n  * @return {string} The decoded path.\n */\ngoog.Uri.prototype.getPath = function() {\n  return this.path_;\n};\n\n\n/**\n * Sets the path.\n * @param {string} newPath New path value.\n * @param {boolean=} decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setPath = function(newPath, decode) {\n  this.path_ = decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the path has been set.\n */\ngoog.Uri.prototype.hasPath = function() {\n  return !!this.path_;\n};\n\n\n/**\n * @return {boolean} Whether the query string has been set.\n */\ngoog.Uri.prototype.hasQuery = function() {\n  return this.queryData_.toString() !== '';\n};\n\n\n/**\n * Sets the query data.\n * @param {goog.Uri.QueryData|string|undefined} queryData QueryData object.\n * @param {boolean=} decode Optional param for whether to decode new value.\n *     Applies only if queryData is a string.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setQueryData = function(queryData, decode) {\n  if (queryData instanceof goog.Uri.QueryData) {\n    this.queryData_ = queryData;\n  } else {\n    if (!decode) {\n      // QueryData accepts encoded query string, so encode it if\n      // decode flag is not true.\n      queryData = goog.Uri.encodeSpecialChars_(queryData,\n                                               goog.Uri.reDisallowedInQuery_);\n    }\n    this.queryData_ = new goog.Uri.QueryData(queryData, null);\n  }\n\n  return this;\n};\n\n\n/**\n * @return {string} The encoded URI query, not including the ?.\n */\ngoog.Uri.prototype.getEncodedQuery = function() {\n  return this.queryData_.toString();\n};\n\n\n/**\n * @return {string} The decoded URI query, not including the ?.\n */\ngoog.Uri.prototype.getDecodedQuery = function() {\n  return this.queryData_.toDecodedString();\n};\n\n\n/**\n * Returns the query data.\n * @return {!goog.Uri.QueryData} QueryData object.\n */\ngoog.Uri.prototype.getQueryData = function() {\n  return this.queryData_;\n};\n\n\n/**\n * @return {string} The URI fragment, not including the #.\n */\ngoog.Uri.prototype.getFragment = function() {\n  return this.fragment_;\n};\n\n\n/**\n * Sets the URI fragment.\n * @param {string} newFragment New fragment value.\n * @param {boolean=} decode Optional param for whether to decode new value.\n * @return {!goog.Uri} Reference to this URI object.\n */\ngoog.Uri.prototype.setFragment = function(newFragment, decode) {\n  this.fragment_ = decode ? goog.Uri.decodeOrEmpty_(newFragment) :\n                   newFragment;\n  return this;\n};\n\n\n/**\n * @return {boolean} Whether the URI has a fragment set.\n */\ngoog.Uri.prototype.hasFragment = function() {\n  return !!this.fragment_;\n};\n\n\n//==============================================================================\n// Static members\n//==============================================================================\n\n\n/**\n * Removes dot segments in given path component, as described in\n * RFC 3986, section 5.2.4.\n *\n * @param {string} path A non-empty path component.\n * @return {string} Path component with removed dot segments.\n */\ngoog.Uri.removeDotSegments = function(path) {\n  if (path == '..' || path == '.') {\n    return '';\n\n  } else if (path.indexOf('./') == -1 &&\n             path.indexOf('/.') == -1) {\n    // This optimization detects uris which do not contain dot-segments,\n    // and as a consequence do not require any processing.\n    return path;\n\n  } else {\n    var leadingSlash = (path.lastIndexOf('/', 0) == 0);\n    var segments = path.split('/');\n    var out = [];\n\n    for (var pos = 0; pos < segments.length; ) {\n      var segment = segments[pos++];\n\n      if (segment == '.') {\n        if (leadingSlash && pos == segments.length) {\n          out.push('');\n        }\n      } else if (segment == '..') {\n        if (out.length > 1 || out.length == 1 && out[0] != '') {\n          out.pop();\n        }\n        if (leadingSlash && pos == segments.length) {\n          out.push('');\n        }\n      } else {\n        out.push(segment);\n        leadingSlash = true;\n      }\n    }\n\n    return out.join('/');\n  }\n};\n\n\n/**\n * Decodes a value or returns the empty string if it isn't defined or empty.\n * @param {string|undefined} val Value to decode.\n * @param {boolean=} preserveReserved If true, restricted characters will\n *     not be decoded.\n * @return {string} Decoded value.\n * @private\n */\ngoog.Uri.decodeOrEmpty_ = function(val, preserveReserved) {\n  // Don't use UrlDecode() here because val is not a query parameter.\n  if (!val) {\n    return '';\n  }\n\n  return preserveReserved ? decodeURI(val) : decodeURIComponent(val);\n};\n\n\n/**\n * If unescapedPart is non null, then escapes any characters in it that aren't\n * valid characters in a url and also escapes any special characters that\n * appear in extra.\n *\n * @param {*} unescapedPart The string to encode.\n * @param {RegExp} extra A character set of characters in [\\01-\\177].\n * @param {boolean=} removeDoubleEncoding If true, remove double percent\n *     encoding.\n * @return {?string} null iff unescapedPart == null.\n * @private\n */\ngoog.Uri.encodeSpecialChars_ = function(unescapedPart, extra,\n    removeDoubleEncoding) {\n  if (goog.isString(unescapedPart)) {\n    var encoded = encodeURI(unescapedPart).\n        replace(extra, goog.Uri.encodeChar_);\n    if (removeDoubleEncoding) {\n      // encodeURI double-escapes %XX sequences used to represent restricted\n      // characters in some URI components, remove the double escaping here.\n      encoded = goog.Uri.removeDoubleEncoding_(encoded);\n    }\n    return encoded;\n  }\n  return null;\n};\n\n\n/**\n * Converts a character in [\\01-\\177] to its unicode character equivalent.\n * @param {string} ch One character string.\n * @return {string} Encoded string.\n * @private\n */\ngoog.Uri.encodeChar_ = function(ch) {\n  var n = ch.charCodeAt(0);\n  return '%' + ((n >> 4) & 0xf).toString(16) + (n & 0xf).toString(16);\n};\n\n\n/**\n * Removes double percent-encoding from a string.\n * @param  {string} doubleEncodedString String\n * @return {string} String with double encoding removed.\n * @private\n */\ngoog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {\n  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, '%$1');\n};\n\n\n/**\n * Regular expression for characters that are disallowed in the scheme or\n * userInfo part of the URI.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\\/\\?@]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in a relative path.\n * Colon is included due to RFC 3986 3.3.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInRelativePath_ = /[\\#\\?:]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in an absolute path.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInAbsolutePath_ = /[\\#\\?]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in the query.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInQuery_ = /[\\#\\?@]/g;\n\n\n/**\n * Regular expression for characters that are disallowed in the fragment.\n * @type {RegExp}\n * @private\n */\ngoog.Uri.reDisallowedInFragment_ = /#/g;\n\n\n\n/**\n * Class used to represent URI query parameters.  It is essentially a hash of\n * name-value pairs, though a name can be present more than once.\n *\n * Has the same interface as the collections in goog.structs.\n *\n * @param {?string=} query Optional encoded query string to parse into\n *     the object.\n * @param {goog.Uri=} uri Optional uri object that should have its\n *     cache invalidated when this object updates. Deprecated -- this\n *     is no longer required.\n * @constructor\n * @final\n */\ngoog.Uri.QueryData = function(query, uri) {\n  /**\n   * Encoded query string, or null if it requires computing from the key map.\n   * @type {?string}\n   * @private\n   */\n  this.encodedQuery_ = query || null;\n};\n\n\n/**\n * If the underlying key map is not yet initialized, it parses the\n * query string and fills the map with parsed data.\n * @private\n */\ngoog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {\n  if (!this.keyMap_) {\n    this.keyMap_ = {};\n    this.count_ = 0;\n\n    if (this.encodedQuery_) {\n      var pairs = this.encodedQuery_.split('&');\n      for (var i = 0; i < pairs.length; i++) {\n        var indexOfEquals = pairs[i].indexOf('=');\n        var name = null;\n        var value = null;\n        if (indexOfEquals >= 0) {\n          name = pairs[i].substring(0, indexOfEquals);\n          value = pairs[i].substring(indexOfEquals + 1);\n        } else {\n          name = pairs[i];\n        }\n        name = decodeURIComponent(name.replace(/\\+/g, ' '));\n        value = value || '';\n        this.add(name, decodeURIComponent(value.replace(/\\+/g, ' ')));\n      }\n    }\n  }\n};\n\n\n/**\n * The map containing name/value or name/array-of-values pairs.\n * May be null if it requires parsing from the query string.\n *\n * We need to use a Map because we cannot guarantee that the key names will\n * not be problematic for IE.\n *\n * @type {Object.<string, !Array.<string>>}\n * @private\n */\ngoog.Uri.QueryData.prototype.keyMap_ = null;\n\n\n/**\n * The number of params, or null if it requires computing.\n * @type {?number}\n * @private\n */\ngoog.Uri.QueryData.prototype.count_ = null;\n\n\n/**\n * @return {?number} The number of parameters.\n */\ngoog.Uri.QueryData.prototype.getCount = function() {\n  this.ensureKeyMapInitialized_();\n  return this.count_;\n};\n\n\n/**\n * Adds a key value pair.\n * @param {string} key Name.\n * @param {*} value Value.\n * @return {!goog.Uri.QueryData} Instance of this object.\n */\ngoog.Uri.QueryData.prototype.add = function(key, value) {\n  this.ensureKeyMapInitialized_();\n  // Invalidate the cache.\n  this.encodedQuery_ = null;\n\n  var values = this.keyMap_.hasOwnProperty(key) && this.keyMap_[key];\n  if (!values) {\n    this.keyMap_[key] = (values = []);\n  }\n  values.push(value);\n  this.count_++;\n  return this;\n};\n\n\n/**\n * @return {string} Encoded query string.\n * @override\n */\ngoog.Uri.QueryData.prototype.toString = function() {\n  if (this.encodedQuery_) {\n    return this.encodedQuery_;\n  }\n\n  if (!this.keyMap_) {\n    return '';\n  }\n\n  var sb = [];\n\n  for (var key in this.keyMap_) {\n    var encodedKey = encodeURIComponent(key);\n    var val = this.keyMap_[key];\n    for (var j = 0; j < val.length; j++) {\n      var param = encodedKey;\n      // Ensure that null and undefined are encoded into the url as\n      // literal strings.\n      if (val[j] !== '') {\n        param += '=' + encodeURIComponent(val[j]);\n      }\n      sb.push(param);\n    }\n  }\n\n  return this.encodedQuery_ = sb.join('&');\n};\n\n\n/**\n * @return {string} Decoded query string.\n */\ngoog.Uri.QueryData.prototype.toDecodedString = function() {\n  return goog.Uri.decodeOrEmpty_(this.toString());\n};\n\n\n/**\n * Clone the query data instance.\n * @return {!goog.Uri.QueryData} New instance of the QueryData object.\n */\ngoog.Uri.QueryData.prototype.clone = function() {\n  var rv = new goog.Uri.QueryData();\n  rv.encodedQuery_ = this.encodedQuery_;\n  if (this.keyMap_) {\n    var cloneMap = {};\n    for (var key in this.keyMap_) {\n      cloneMap[key] = this.keyMap_[key].concat();\n    }\n    rv.keyMap_ = cloneMap;\n    rv.count_ = this.count_;\n  }\n  return rv;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.PublicPromise');\n\n\n/**\n * A utility to create Promises with convenient public resolve and reject\n * methods.\n *\n * @constructor\n * @struct\n * @extends {Promise.<T>}\n * @return {Promise.<T>}\n * @template T\n */\nshaka.util.PublicPromise = function() {\n  let resolvePromise;\n  let rejectPromise;\n\n  // Promise.call causes an error.  It seems that inheriting from a native\n  // Promise is not permitted by JavaScript interpreters.\n\n  // The work-around is to construct a Promise object, modify it to look like\n  // the compiler's picture of PublicPromise, then return it.  The caller of\n  // new PublicPromise will receive |promise| instead of |this|, and the\n  // compiler will be aware of the additional properties |resolve| and\n  // |reject|.\n\n  let promise = new Promise(function(resolve, reject) {\n    resolvePromise = resolve;\n    rejectPromise = reject;\n  });\n\n  promise.resolve = resolvePromise;\n  promise.reject = rejectPromise;\n\n  return promise;\n};\n\n\n/** @param {T=} value */\nshaka.util.PublicPromise.prototype.resolve = function(value) {};\n\n\n/** @param {*=} reason */\nshaka.util.PublicPromise.prototype.reject = function(reason) {};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.net.Backoff');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.util.PublicPromise');\n\n\n/**\n * Backoff represents delay and backoff state.  This is used by NetworkingEngine\n * for individual requests and by StreamingEngine to retry streaming failures.\n *\n * @param {shaka.extern.RetryParameters} parameters\n * @param {boolean=} autoReset  If true, start at a \"first retry\" state and\n *   and auto-reset that state when we reach maxAttempts.\n *   Default set to false.\n * @param {?function()=} isCanceled  If provided, the backoff will end the\n *   current attempt early when this callback returns true. Default set to null.\n *\n * @struct\n * @constructor\n */\nshaka.net.Backoff = function(parameters, autoReset = false, isCanceled = null) {\n  // Set defaults as we unpack these, so that individual app-level requests in\n  // NetworkingEngine can be missing parameters.\n\n  let defaults = shaka.net.Backoff.defaultRetryParameters();\n\n  /**\n   * @const\n   * @private {number}\n   */\n  this.maxAttempts_ = (parameters.maxAttempts == null) ?\n      defaults.maxAttempts : parameters.maxAttempts;\n\n  goog.asserts.assert(this.maxAttempts_ >= 1, 'maxAttempts should be >= 1');\n\n  /**\n   * @const\n   * @private {number}\n   */\n  this.baseDelay_ = (parameters.baseDelay == null) ?\n      defaults.baseDelay : parameters.baseDelay;\n\n  goog.asserts.assert(this.baseDelay_ >= 0, 'baseDelay should be >= 0');\n\n  /**\n   * @const\n   * @private {number}\n   */\n  this.fuzzFactor_ = (parameters.fuzzFactor == null) ?\n      defaults.fuzzFactor : parameters.fuzzFactor;\n\n  goog.asserts.assert(this.fuzzFactor_ >= 0, 'fuzzFactor should be >= 0');\n\n  /**\n   * @const\n   * @private {number}\n   */\n  this.backoffFactor_ = (parameters.backoffFactor == null) ?\n      defaults.backoffFactor : parameters.backoffFactor;\n\n  goog.asserts.assert(this.backoffFactor_ >= 0, 'backoffFactor should be >= 0');\n\n  /** @private {number} */\n  this.numAttempts_ = 0;\n\n  /** @private {number} */\n  this.nextUnfuzzedDelay_ = this.baseDelay_;\n\n  /** @private {boolean} */\n  this.autoReset_ = autoReset;\n\n  /** @private {?function()} */\n  this.isCanceled_ = isCanceled;\n\n  if (this.autoReset_) {\n    // There is no delay before the first attempt.  In StreamingEngine (the\n    // intended user of auto-reset mode), the first attempt was implied, so we\n    // reset numAttempts to 1.  Therefore maxAttempts (which includes the first\n    // attempt) must be at least 2 for us to see a delay.\n    goog.asserts.assert(this.maxAttempts_ >= 2,\n        'maxAttempts must be >= 2 for autoReset == true');\n    this.numAttempts_ = 1;\n  }\n};\n\n\n/**\n * @return {!Promise} Resolves when the caller may make an attempt, possibly\n *   after a delay.  Rejects if no more attempts are allowed.\n */\nshaka.net.Backoff.prototype.attempt = function() {\n  if (this.numAttempts_ >= this.maxAttempts_) {\n    if (this.autoReset_) {\n      this.reset_();\n    } else {\n      return Promise.reject();\n    }\n  }\n\n  let p = new shaka.util.PublicPromise();\n  if (this.numAttempts_) {\n    // We've already tried before, so delay the Promise.\n\n    // Fuzz the delay to avoid tons of clients hitting the server at once\n    // after it recovers from whatever is causing it to fail.\n    let fuzzedDelay =\n        shaka.net.Backoff.fuzz_(this.nextUnfuzzedDelay_, this.fuzzFactor_);\n    this.cancelableTimeout_(p.resolve, fuzzedDelay);\n\n    // Update delay_ for next time.\n    this.nextUnfuzzedDelay_ *= this.backoffFactor_;\n  } else {\n    goog.asserts.assert(!this.autoReset_, 'Failed to delay with auto-reset!');\n    p.resolve();\n  }\n\n  this.numAttempts_++;\n  return p;\n};\n\n\n/**\n * Gets a copy of the default retry parameters.\n *\n * @return {shaka.extern.RetryParameters}\n */\nshaka.net.Backoff.defaultRetryParameters = function() {\n  // Use a function rather than a constant member so the calling code can\n  // modify the values without affecting other call results.\n  return {\n    maxAttempts: 2,\n    baseDelay: 1000,\n    backoffFactor: 2,\n    fuzzFactor: 0.5,\n    timeout: 0,\n  };\n};\n\n\n/**\n * Fuzz the input value by +/- fuzzFactor.  For example, a fuzzFactor of 0.5\n * will create a random value that is between 50% and 150% of the input value.\n *\n * @param {number} value\n * @param {number} fuzzFactor\n * @return {number} The fuzzed value\n * @private\n */\nshaka.net.Backoff.fuzz_ = function(value, fuzzFactor) {\n  // A random number between -1 and +1.\n  let negToPosOne = (Math.random() * 2.0) - 1.0;\n\n  // A random number between -fuzzFactor and +fuzzFactor.\n  let negToPosFuzzFactor = negToPosOne * fuzzFactor;\n\n  // The original value, fuzzed by +/- fuzzFactor.\n  return value * (1.0 + negToPosFuzzFactor);\n};\n\n\n/**\n * Reset state in autoReset mode.\n * @private\n */\nshaka.net.Backoff.prototype.reset_ = function() {\n  goog.asserts.assert(this.autoReset_, 'Should only be used for auto-reset!');\n  this.numAttempts_ = 1;\n  this.nextUnfuzzedDelay_ = this.baseDelay_;\n};\n\n\n/**\n * Makes a timeout that cancels with isCanceled_ if this has an isCanceled_.\n *\n * @param {Function} fn The callback to invoke when the timeout expires.\n * @param {number} timeoutMs The timeout in milliseconds.\n * @private\n */\nshaka.net.Backoff.prototype.cancelableTimeout_ = function(fn, timeoutMs) {\n  if (this.isCanceled_) {\n    if (this.isCanceled_() || timeoutMs == 0) {\n      fn();\n    } else {\n      // This will break the timeout into 200 ms intervals, so that isCanceled_\n      // will be checked periodically.\n      let timeToUse = Math.min(200, timeoutMs);\n      shaka.net.Backoff.setTimeout_(function() {\n        this.cancelableTimeout_(fn, timeoutMs - timeToUse);\n      }.bind(this), timeToUse);\n    }\n  } else {\n    shaka.net.Backoff.setTimeout_(fn, timeoutMs);\n  }\n};\n\n\n/**\n * This is here only for testability.  Mocking global setTimeout can lead to\n * unintended interactions with other tests.  So instead, we mock this.\n *\n * @param {Function} fn The callback to invoke when the timeout expires.\n * @param {number} timeoutMs The timeout in milliseconds.\n * @return {number} The timeout ID.\n * @private\n */\nshaka.net.Backoff.setTimeout_ = function(fn, timeoutMs) {\n  return window.setTimeout(fn, timeoutMs);\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Error');\n\n\n/**\n * Creates a new Error.\n *\n * @param {shaka.util.Error.Severity} severity\n * @param {shaka.util.Error.Category} category\n * @param {shaka.util.Error.Code} code\n * @param {...*} varArgs\n *\n * @constructor\n * @struct\n * @export\n * @extends {Error}\n * @implements {shaka.extern.Error}\n */\nshaka.util.Error = function(severity, category, code, ...varArgs) {\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.severity = severity;\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.category = category;\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.code = code;\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.data = varArgs;\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.handled = false;\n\n  // This improves the formatting of Errors in failure messages in the tests.\n  if (goog.DEBUG) {\n    let categoryName = 'UNKNOWN';\n    let codeName = 'UNKNOWN';\n\n    for (let k in shaka.util.Error.Category) {\n      if (shaka.util.Error.Category[k] == this.category) {\n        categoryName = k;\n      }\n    }\n    for (let k in shaka.util.Error.Code) {\n      if (shaka.util.Error.Code[k] == this.code) {\n        codeName = k;\n      }\n    }\n\n    /**\n     * A human-readable version of the category and code.\n     * <i>(Only available in uncompiled mode.)</i>\n     *\n     * @const {string}\n     * @exportDoc\n     */\n    this.message = 'Shaka Error ' + categoryName + '.' + codeName +\n                   ' (' + this.data.toString() + ')';\n    try {\n      throw new Error(this.message);\n    } catch (e) {\n      /**\n       * A stack-trace showing where the error occurred.\n       * <i>(Only available in uncompiled mode.)</i>\n       *\n       * @const {string}\n       * @exportDoc\n       */\n      this.stack = e.stack;\n    }\n  }\n};\n\n\n/**\n * @return {string}\n * @override\n */\nshaka.util.Error.prototype.toString = function() {\n  return 'shaka.util.Error ' + JSON.stringify(this, null, '  ');\n};\n\n\n/**\n * @enum {number}\n * @export\n */\nshaka.util.Error.Severity = {\n  /**\n   * An error occurred, but the Player is attempting to recover from the error.\n   *\n   * If the Player cannot ultimately recover, it still may not throw a CRITICAL\n   * error.  For example, retrying for a media segment will never result in\n   * a CRITICAL error (the Player will just retry forever).\n   */\n  'RECOVERABLE': 1,\n\n  /**\n   * A critical error that the library cannot recover from.  These usually cause\n   * the Player to stop loading or updating.  A new manifest must be loaded\n   * to reset the library.\n   */\n  'CRITICAL': 2,\n};\n\n\n/**\n * @enum {number}\n * @export\n */\nshaka.util.Error.Category = {\n  /** Errors from the network stack. */\n  'NETWORK': 1,\n\n  /** Errors parsing text streams. */\n  'TEXT': 2,\n\n  /** Errors parsing or processing audio or video streams. */\n  'MEDIA': 3,\n\n  /** Errors parsing the Manifest. */\n  'MANIFEST': 4,\n\n  /** Errors related to streaming. */\n  'STREAMING': 5,\n\n  /** Errors related to DRM. */\n  'DRM': 6,\n\n  /** Miscellaneous errors from the player. */\n  'PLAYER': 7,\n\n  /** Errors related to cast. */\n  'CAST': 8,\n\n  /** Errors in the database storage (offline). */\n  'STORAGE': 9,\n};\n\n\n/**\n * @enum {number}\n * @export\n */\nshaka.util.Error.Code = {\n  /**\n   * A network request was made using an unsupported URI scheme.\n   * <br> error.data[0] is the URI.\n   */\n  'UNSUPPORTED_SCHEME': 1000,\n\n  /**\n   * An HTTP network request returned an HTTP status that indicated a failure.\n   * <br> error.data[0] is the URI.\n   * <br> error.data[1] is the status code.\n   * <br> error.data[2] is the response text, or null if the response could not\n   *   be interpretted as text.\n   * <br> error.data[3] is the map of response headers.\n   * <br> error.data[4] is the NetworkingEngine.RequestType of the request,\n   *   if one was provided.\n   */\n  'BAD_HTTP_STATUS': 1001,\n\n  /**\n   * An HTTP network request failed with an error, but not from the server.\n   * <br> error.data[0] is the URI.\n   * <br> error.data[1] is the original error.\n   * <br> error.data[2] is the NetworkingEngine.RequestType of the request.\n   */\n  'HTTP_ERROR': 1002,\n\n  /**\n   * A network request timed out.\n   * <br> error.data[0] is the URI.\n   * <br> error.data[1] is the NetworkingEngine.RequestType of the request,\n   *   if one was provided.\n   */\n  'TIMEOUT': 1003,\n\n  /**\n   * A network request was made with a malformed data URI.\n   * <br> error.data[0] is the URI.\n   */\n  'MALFORMED_DATA_URI': 1004,\n\n  /**\n   * A network request was made with a data URI using an unknown encoding.\n   * <br> error.data[0] is the URI.\n   */\n  'UNKNOWN_DATA_URI_ENCODING': 1005,\n\n  /**\n   * A request filter threw an error.\n   * <br> error.data[0] is the original error.\n   */\n  'REQUEST_FILTER_ERROR': 1006,\n\n  /**\n   * A response filter threw an error.\n   * <br> error.data[0] is the original error.\n   */\n  'RESPONSE_FILTER_ERROR': 1007,\n\n  /**\n   * A testing network request was made with a malformed URI.\n   * This error is only used by unit and integration tests.\n   */\n  'MALFORMED_TEST_URI': 1008,\n\n  /**\n   * An unexpected network request was made to the FakeNetworkingEngine.\n   * This error is only used by unit and integration tests.\n   */\n  'UNEXPECTED_TEST_REQUEST': 1009,\n\n\n  /** The text parser failed to parse a text stream due to an invalid header. */\n  'INVALID_TEXT_HEADER': 2000,\n\n  /** The text parser failed to parse a text stream due to an invalid cue. */\n  'INVALID_TEXT_CUE': 2001,\n\n  // RETIRED: 'INVALID_TEXT_SETTINGS': 2002,\n\n  /**\n   * Was unable to detect the encoding of the response text.  Suggest adding\n   * byte-order-markings to the response data.\n   */\n  'UNABLE_TO_DETECT_ENCODING': 2003,\n\n  /** The response data contains invalid Unicode character encoding. */\n  'BAD_ENCODING': 2004,\n\n  /**\n   * The XML parser failed to parse an xml stream, or the XML lacks mandatory\n   * elements for TTML.\n   * <br> error.data[0] is the URI associated with the XML.\n   */\n  'INVALID_XML': 2005,\n\n  // RETIRED: 'INVALID_TTML': 2006,\n\n  /**\n   * MP4 segment does not contain TTML.\n   */\n  'INVALID_MP4_TTML': 2007,\n\n  /**\n   * MP4 segment does not contain VTT.\n   */\n  'INVALID_MP4_VTT': 2008,\n\n  /**\n   * When examining media in advance, we were unable to extract the cue time.\n   * This should only be possible with HLS, where we do not have explicit\n   * segment start times.\n   * <br> error.data[0] is the underlying exception or Error object.\n   */\n  'UNABLE_TO_EXTRACT_CUE_START_TIME': 2009,\n\n\n  /**\n   * Some component tried to read past the end of a buffer.  The segment index,\n   * init segment, or PSSH may be malformed.\n   */\n  'BUFFER_READ_OUT_OF_BOUNDS': 3000,\n\n  /**\n   * Some component tried to parse an integer that was too large to fit in a\n   * JavaScript number without rounding error.  JavaScript can only natively\n   * represent integers up to 53 bits.\n   */\n  'JS_INTEGER_OVERFLOW': 3001,\n\n  /**\n   * The EBML parser used to parse the WebM container encountered an integer,\n   * ID, or other field larger than the maximum supported by the parser.\n   */\n  'EBML_OVERFLOW': 3002,\n\n  /**\n   * The EBML parser used to parse the WebM container encountered a floating-\n   * point field of a size not supported by the parser.\n   */\n  'EBML_BAD_FLOATING_POINT_SIZE': 3003,\n\n  /**\n   * The MP4 SIDX parser found the wrong box type.\n   * Either the segment index range is incorrect or the data is corrupt.\n   */\n  'MP4_SIDX_WRONG_BOX_TYPE': 3004,\n\n  /**\n   * The MP4 SIDX parser encountered an invalid timescale.\n   * The segment index data may be corrupt.\n   */\n  'MP4_SIDX_INVALID_TIMESCALE': 3005,\n\n  /** The MP4 SIDX parser encountered a type of SIDX that is not supported. */\n  'MP4_SIDX_TYPE_NOT_SUPPORTED': 3006,\n\n  /**\n   * The WebM Cues parser was unable to locate the Cues element.\n   * The segment index data may be corrupt.\n   */\n  'WEBM_CUES_ELEMENT_MISSING': 3007,\n\n  /**\n   * The WebM header parser was unable to locate the Ebml element.\n   * The init segment data may be corrupt.\n   */\n  'WEBM_EBML_HEADER_ELEMENT_MISSING': 3008,\n\n  /**\n   * The WebM header parser was unable to locate the Segment element.\n   * The init segment data may be corrupt.\n   */\n  'WEBM_SEGMENT_ELEMENT_MISSING': 3009,\n\n  /**\n   * The WebM header parser was unable to locate the Info element.\n   * The init segment data may be corrupt.\n   */\n  'WEBM_INFO_ELEMENT_MISSING': 3010,\n\n  /**\n   * The WebM header parser was unable to locate the Duration element.\n   * The init segment data may be corrupt or may have been incorrectly encoded.\n   * Shaka requires a duration in WebM DASH content.\n   */\n  'WEBM_DURATION_ELEMENT_MISSING': 3011,\n\n  /**\n   * The WebM Cues parser was unable to locate the Cue Track Positions element.\n   * The segment index data may be corrupt.\n   */\n  'WEBM_CUE_TRACK_POSITIONS_ELEMENT_MISSING': 3012,\n\n  /**\n   * The WebM Cues parser was unable to locate the Cue Time element.\n   * The segment index data may be corrupt.\n   */\n  'WEBM_CUE_TIME_ELEMENT_MISSING': 3013,\n\n  /**\n   * A MediaSource operation failed.\n   * <br> error.data[0] is a MediaError code from the video element.\n   */\n  'MEDIA_SOURCE_OPERATION_FAILED': 3014,\n\n  /**\n   * A MediaSource operation threw an exception.\n   * <br> error.data[0] is the exception that was thrown.\n   */\n  'MEDIA_SOURCE_OPERATION_THREW': 3015,\n\n  /**\n   * The video element reported an error.\n   * <br> error.data[0] is a MediaError code from the video element.\n   * <br> On Edge & IE, error.data[1] is a Microsoft extended error code in hex.\n   * <br> On Chrome, error.data[2] is a string with details on the error.\n   */\n  'VIDEO_ERROR': 3016,\n\n  /**\n   * A MediaSource operation threw QuotaExceededError and recovery failed. The\n   * content cannot be played correctly because the segments are too large for\n   * the browser/platform. This may occur when attempting to play very high\n   * quality, very high bitrate content on low-end devices.\n   * <br> error.data[0] is the type of content which caused the error.\n   */\n  'QUOTA_EXCEEDED_ERROR': 3017,\n\n  /**\n   * Mux.js did not invoke the callback signifying successful transmuxing.\n   */\n  'TRANSMUXING_FAILED': 3018,\n\n\n  /**\n   * The Player was unable to guess the manifest type based on file extension\n   * or MIME type.  To fix, try one of the following:\n   * <br><ul>\n   *   <li>Rename the manifest so that the URI ends in a well-known extension.\n   *   <li>Configure the server to send a recognizable Content-Type header.\n   *   <li>Configure the server to accept a HEAD request for the manifest.\n   * </ul>\n   * <br> error.data[0] is the manifest URI.\n   */\n  'UNABLE_TO_GUESS_MANIFEST_TYPE': 4000,\n\n  /** The DASH Manifest contained invalid XML markup. */\n  'DASH_INVALID_XML': 4001,\n\n  /**\n   * The DASH Manifest contained a Representation with insufficient segment\n   * information.\n   */\n  'DASH_NO_SEGMENT_INFO': 4002,\n\n  /** The DASH Manifest contained an AdaptationSet with no Representations. */\n  'DASH_EMPTY_ADAPTATION_SET': 4003,\n\n  /** The DASH Manifest contained an Period with no AdaptationSets. */\n  'DASH_EMPTY_PERIOD': 4004,\n\n  /**\n   * The DASH Manifest does not specify an init segment with a WebM container.\n   */\n  'DASH_WEBM_MISSING_INIT': 4005,\n\n  /** The DASH Manifest contained an unsupported container format. */\n  'DASH_UNSUPPORTED_CONTAINER': 4006,\n\n  /** The embedded PSSH data has invalid encoding. */\n  'DASH_PSSH_BAD_ENCODING': 4007,\n\n  /**\n   * There is an AdaptationSet whose Representations do not have any common\n   * key-systems.\n   */\n  'DASH_NO_COMMON_KEY_SYSTEM': 4008,\n\n  /** Having multiple key IDs per Representation is not supported. */\n  'DASH_MULTIPLE_KEY_IDS_NOT_SUPPORTED': 4009,\n\n  /** The DASH Manifest specifies conflicting key IDs. */\n  'DASH_CONFLICTING_KEY_IDS': 4010,\n\n  /**\n   * The manifest contains a period with no playable streams.\n   * Either the period was originally empty, or the streams within cannot be\n   * played on this browser or platform.\n   */\n  'UNPLAYABLE_PERIOD': 4011,\n\n  /**\n   * There exist some streams that could be decoded, but restrictions imposed\n   * by the application or the key system prevent us from playing.  This may\n   * happen under the following conditions:\n   * <ul>\n   *   <li>The application has given restrictions to the Player that restrict\n   *       at least one content type completely (e.g. no playable audio).\n   *   <li>The manifest specifies different keys than were given to us from the\n   *       license server.\n   *   <li>The key system has imposed output restrictions that cannot be met\n   *       (such as HDCP) and there are no unrestricted alternatives.\n   * </ul>\n   * <br> error.data[0] is a {@link shaka.extern.RestrictionInfo} object\n   * describing the kinds of restrictions that caused this error.\n   */\n  'RESTRICTIONS_CANNOT_BE_MET': 4012,\n\n  // RETIRED: 'INTERNAL_ERROR_KEY_STATUS': 4013,\n\n  /**\n   * No valid periods were found in the manifest.  Please check that your\n   * manifest is correct and free of typos.\n   */\n  'NO_PERIODS': 4014,\n\n  /**\n   * HLS playlist doesn't start with a mandory #EXTM3U tag.\n   */\n  'HLS_PLAYLIST_HEADER_MISSING': 4015,\n\n  /**\n   * HLS tag has an invalid name that doesn't start with '#EXT'\n   * <br> error.data[0] is the invalid tag.\n   */\n  'INVALID_HLS_TAG': 4016,\n\n  /**\n   * HLS playlist has both Master and Media/Segment tags.\n   */\n  'HLS_INVALID_PLAYLIST_HIERARCHY': 4017,\n\n  /**\n   * A Representation has an id that is the same as another Representation in\n   * the same Period.  This makes manifest updates impossible since we cannot\n   * map the updated Representation to the old one.\n   */\n  'DASH_DUPLICATE_REPRESENTATION_ID': 4018,\n\n  // RETIRED: 'HLS_MEDIA_INIT_SECTION_INFO_MISSING': 4019,\n\n  /**\n   * HLS manifest has several #EXT-X-MAP tags. We can only\n   * support one at the moment.\n   */\n  'HLS_MULTIPLE_MEDIA_INIT_SECTIONS_FOUND': 4020,\n\n  /**\n   * HLS parser was unable to guess mime type of a stream.\n   * <br> error.data[0] is the stream file's extension.\n   */\n  'HLS_COULD_NOT_GUESS_MIME_TYPE': 4021,\n\n  /**\n   * No Master Playlist has been provided. Master playlist provides\n   * vital information about the streams (like codecs) that is\n   * required for MediaSource. We don't support directly providing\n   * a Media Playlist.\n   */\n  'HLS_MASTER_PLAYLIST_NOT_PROVIDED': 4022,\n\n  /**\n   * One of the required attributes was not provided, so the\n   * HLS manifest is invalid.\n   * <br> error.data[0] is the missing attribute's name.\n   */\n  'HLS_REQUIRED_ATTRIBUTE_MISSING': 4023,\n\n  /**\n   * One of the required tags was not provided, so the\n   * HLS manifest is invalid.\n   * <br> error.data[0] is the missing tag's name.\n   */\n  'HLS_REQUIRED_TAG_MISSING': 4024,\n\n  /**\n   * The HLS parser was unable to guess codecs of a stream.\n   * <br> error.data[0] is the list of all codecs for the variant.\n   */\n  'HLS_COULD_NOT_GUESS_CODECS': 4025,\n\n  /**\n   * The HLS parser has encountered encrypted content with unsupported\n   * KEYFORMAT attributes.\n   */\n  'HLS_KEYFORMATS_NOT_SUPPORTED': 4026,\n\n  /**\n   * The manifest parser only supports xlink links with xlink:actuate=\"onLoad\".\n   */\n  'DASH_UNSUPPORTED_XLINK_ACTUATE': 4027,\n\n  /**\n   * The manifest parser has hit its depth limit on xlink link chains.\n   */\n  'DASH_XLINK_DEPTH_LIMIT': 4028,\n\n  // RETIRED: 'HLS_LIVE_CONTENT_NOT_SUPPORTED': 4029,\n\n  /**\n   * The HLS parser was unable to parse segment start time from the media.\n   */\n  'HLS_COULD_NOT_PARSE_SEGMENT_START_TIME': 4030,\n\n  // RETIRED: 'HLS_MEDIA_SEQUENCE_REQUIRED_IN_LIVE_STREAMS': 4031,\n\n  /**\n   * The content container or codecs are not supported by this browser. For\n   * example, this could happen if the content is WebM, but your browser does\n   * not support the WebM container, or if the content uses HEVC, but your\n   * browser does not support the HEVC codec.  This can also occur for\n   * multicodec or multicontainer manifests if none of the codecs or containers\n   * are supported by the browser.\n   *\n   * To see what your browser supports, you can check the JSON data dumped by\n   * http://support.shaka-player-demo.appspot.com/\n   */\n  'CONTENT_UNSUPPORTED_BY_BROWSER': 4032,\n\n  /**\n   * External text tracks cannot be added to live streams.\n   */\n  'CANNOT_ADD_EXTERNAL_TEXT_TO_LIVE_STREAM': 4033,\n\n  // RETIRED: 'INCONSISTENT_BUFFER_STATE': 5000,\n  // RETIRED: 'INVALID_SEGMENT_INDEX': 5001,\n  // RETIRED: 'SEGMENT_DOES_NOT_EXIST': 5002,\n  // RETIRED: 'CANNOT_SATISFY_BYTE_LIMIT': 5003,\n  // RETIRED: 'BAD_SEGMENT': 5004,\n\n  /**\n   * The StreamingEngine called onChooseStreams() but the callback receiver\n   * did not return the correct number or type of Streams.\n   *\n   * This can happen when there is multi-Period content where one Period is\n   * video+audio and another is video-only or audio-only.  We don't support this\n   * case because it is incompatible with MSE.  When the browser reaches the\n   * transition, it will pause, waiting for the audio stream.\n   */\n  'INVALID_STREAMS_CHOSEN': 5005,\n\n\n  /**\n   * The manifest indicated protected content, but the manifest parser was\n   * unable to determine what key systems should be used.\n   */\n  'NO_RECOGNIZED_KEY_SYSTEMS': 6000,\n\n  /**\n   * None of the requested key system configurations are available.  This may\n   * happen under the following conditions:\n   * <ul>\n   *   <li> The key system is not supported.\n   *   <li> The key system does not support the features requested (e.g.\n   *        persistent state).\n   *   <li> A user prompt was shown and the user denied access.\n   *   <li> The key system is not available from unsecure contexts. (i.e.\n            requires HTTPS) See https://bit.ly/2K9X1nY\n   * </ul>\n   */\n  'REQUESTED_KEY_SYSTEM_CONFIG_UNAVAILABLE': 6001,\n\n  /**\n   * The browser found one of the requested key systems, but it failed to\n   * create an instance of the CDM for some unknown reason.\n   * <br> error.data[0] is an error message string from the browser.\n   */\n  'FAILED_TO_CREATE_CDM': 6002,\n\n  /**\n   * The browser found one of the requested key systems and created an instance\n   * of the CDM, but it failed to attach the CDM to the video for some unknown\n   * reason.\n   * <br> error.data[0] is an error message string from the browser.\n   */\n  'FAILED_TO_ATTACH_TO_VIDEO': 6003,\n\n  /**\n   * The CDM rejected the server certificate supplied by the application.\n   * The certificate may be malformed or in an unsupported format.\n   * <br> error.data[0] is an error message string from the browser.\n   */\n  'INVALID_SERVER_CERTIFICATE': 6004,\n\n  /**\n   * The CDM refused to create a session for some unknown reason.\n   * <br> error.data[0] is an error message string from the browser.\n   */\n  'FAILED_TO_CREATE_SESSION': 6005,\n\n  /**\n   * The CDM was unable to generate a license request for the init data it was\n   * given.  The init data may be malformed or in an unsupported format.\n   * <br> error.data[0] is an error message string from the browser.\n   */\n  'FAILED_TO_GENERATE_LICENSE_REQUEST': 6006,\n\n  /**\n   * The license request failed.  This could be a timeout, a network failure, or\n   * a rejection by the server.\n   * <br> error.data[0] is a shaka.util.Error from the networking engine.\n   */\n  'LICENSE_REQUEST_FAILED': 6007,\n\n  /**\n   * The license response was rejected by the CDM.  The server's response may be\n   * invalid or malformed for this CDM.\n   * <br> error.data[0] is an error message string from the browser.\n   */\n  'LICENSE_RESPONSE_REJECTED': 6008,\n\n  // RETIRED: 'NO_LICENSE_SERVER_SPECIFIED': 6009,\n\n  /**\n   * The manifest does not specify any DRM info, but the content is encrypted.\n   * Either the manifest or the manifest parser are broken.\n   */\n  'ENCRYPTED_CONTENT_WITHOUT_DRM_INFO': 6010,\n\n  // RETIRED: 'WRONG_KEYS': 6011,\n\n  /**\n   * No license server was given for the key system signaled by the manifest.\n   * A license server URI is required for every key system.\n   */\n  'NO_LICENSE_SERVER_GIVEN': 6012,\n\n  /**\n   * A required offline session was removed.  The content is not playable.\n   */\n  'OFFLINE_SESSION_REMOVED': 6013,\n\n  /**\n   * The license has expired.  This is triggered when all keys in the key\n   * status map have a status of 'expired'.\n   */\n  'EXPIRED': 6014,\n\n\n  /**\n   * The call to Player.load() was interrupted by a call to Player.unload()\n   * or another call to Player.load().\n   */\n  'LOAD_INTERRUPTED': 7000,\n\n  /**\n   * An internal error which indicates that an operation was aborted.  This\n   * should not be seen by applications.\n   */\n  'OPERATION_ABORTED': 7001,\n\n  /**\n   * The call to Player.load() failed because the Player does not have a video\n   * element.  The video element must either be provided to the constructor or\n   * to Player.attach() before Player.load() is called.\n   */\n  'NO_VIDEO_ELEMENT': 7002,\n\n\n  /**\n   * The Cast API is unavailable.  This may be because of one of the following:\n   *  1. The browser may not have Cast support\n   *  2. The browser may be missing a necessary Cast extension\n   *  3. The Cast sender library may not be loaded in your app\n   */\n  'CAST_API_UNAVAILABLE': 8000,\n\n  /**\n   * No cast receivers are available at this time.\n   */\n  'NO_CAST_RECEIVERS': 8001,\n\n  /**\n   * The library is already casting.\n   */\n  'ALREADY_CASTING': 8002,\n\n  /**\n   * A Cast SDK error that we did not explicitly plan for has occurred.\n   * Check data[0] and refer to the Cast SDK documentation for details.\n   * <br> error.data[0] is an error object from the Cast SDK.\n   */\n  'UNEXPECTED_CAST_ERROR': 8003,\n\n  /**\n   * The cast operation was canceled by the user.\n   * <br> error.data[0] is an error object from the Cast SDK.\n   */\n  'CAST_CANCELED_BY_USER': 8004,\n\n  /**\n   * The cast connection timed out.\n   * <br> error.data[0] is an error object from the Cast SDK.\n   */\n  'CAST_CONNECTION_TIMED_OUT': 8005,\n\n  /**\n   * The requested receiver app ID does not exist or is unavailable.\n   * Check the requested app ID for typos.\n   * <br> error.data[0] is an error object from the Cast SDK.\n   */\n  'CAST_RECEIVER_APP_UNAVAILABLE': 8006,\n\n\n  /**\n   * Offline storage is not supported on this browser; it is required for\n   * offline support.\n   */\n  'STORAGE_NOT_SUPPORTED': 9000,\n\n  /**\n   * An unknown error occurred in the IndexedDB.\n   * <br> On Firefox, one common source for UnknownError calls is reverting\n   * Firefox to an old version. This makes the IndexedDB storage inaccessible\n   * for older versions. The only way to fix this is to delete the storage\n   * data in your profile. See https://mzl.la/2yCGWCm\n   * <br> error.data[0] is the error object.\n   */\n  'INDEXED_DB_ERROR': 9001,\n\n  /**\n   * The storage operation was aborted.  Deprecated in favor of more general\n   * OPERATION_ABORTED.\n   */\n  'DEPRECATED_OPERATION_ABORTED': 9002,\n\n  /**\n   * The specified item was not found in the IndexedDB.\n   * <br> error.data[0] is the offline URI.\n   */\n  'REQUESTED_ITEM_NOT_FOUND': 9003,\n\n  /**\n   * A network request was made with a malformed offline URI.\n   * <br> error.data[0] is the URI.\n   */\n  'MALFORMED_OFFLINE_URI': 9004,\n\n  /**\n   * The specified content is live or in-progress.\n   * Live and in-progress streams cannot be stored offline.\n   * <br> error.data[0] is the URI.\n   */\n  'CANNOT_STORE_LIVE_OFFLINE': 9005,\n\n  /**\n   * There is already a store operation in-progress. Wait until it completes\n   * before starting another.\n   */\n  'STORE_ALREADY_IN_PROGRESS': 9006,\n\n  /**\n   * The specified manifest is encrypted but does not specify any init data.\n   * Without init data specified in the manifest, the content will not be\n   * playable offline.\n   * <br> error.data[0] is the URI.\n   */\n  'NO_INIT_DATA_FOR_OFFLINE': 9007,\n\n  /**\n   * shaka.offline.Storage was constructed with a Player proxy instead of a\n   * local player instance.  To fix this, use Player directly with Storage\n   * instead of the results of CastProxy.prototype.getPlayer().\n   */\n  'LOCAL_PLAYER_INSTANCE_REQUIRED': 9008,\n\n  // RETIRED/MOVED TO 4000's: 'CONTENT_UNSUPPORTED_BY_BROWSER': 9009,\n\n  // RETIRED: 'UNSUPPORTED_UPGRADE_REQUEST': 9010,\n\n  /**\n   * The storage cell does not allow new operations that require new keys.\n   */\n  'NEW_KEY_OPERATION_NOT_SUPPORTED': 9011,\n\n  /**\n   * A key was not found in a storage cell.\n   */\n  'KEY_NOT_FOUND': 9012,\n\n  /**\n   * A storage cell was not found.\n   */\n  'MISSING_STORAGE_CELL': 9013,\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.AbortableOperation');\n\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.PublicPromise');\n\n/**\n * A utility to wrap abortable operations.  Note that these are not cancelable.\n * Cancelation implies undoing what has been done so far, whereas aborting only\n * means that futher work is stopped.\n *\n * @implements {shaka.extern.IAbortableOperation.<T>}\n * @template T\n * @export\n */\nshaka.util.AbortableOperation = class {\n  /**\n   * @param {!Promise.<T>} promise\n   *   A Promise which represents the underlying operation.  It is resolved when\n   *   the operation is complete, and rejected if the operation fails or is\n   *   aborted.  Aborted operations should be rejected with a shaka.util.Error\n   *   object using the error code OPERATION_ABORTED.\n   * @param {function():!Promise} onAbort\n   *   Will be called by this object to abort the underlying operation.\n   *   This is not cancelation, and will not necessarily result in any work\n   *   being undone.  abort() should return a Promise which is resolved when the\n   *   underlying operation has been aborted.  The returned Promise should never\n   *   be rejected.\n   */\n  constructor(promise, onAbort) {\n    /** @const {!Promise.<T>} */\n    this.promise = promise;\n\n    /** @private {function():!Promise} */\n    this.onAbort_ = onAbort;\n\n    /** @private {boolean} */\n    this.aborted_ = false;\n  }\n\n  /**\n   * @param {!shaka.util.Error} error\n   * @return {!shaka.util.AbortableOperation} An operation which has already\n   *   failed with the error given by the caller.\n   * @export\n   */\n  static failed(error) {\n    return new shaka.util.AbortableOperation(\n        Promise.reject(error),\n        () => Promise.resolve());\n  }\n\n  /**\n   * @return {!shaka.util.AbortableOperation} An operation which has already\n   *   failed with the error OPERATION_ABORTED.\n   * @export\n   */\n  static aborted() {\n    const p = Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.PLAYER,\n        shaka.util.Error.Code.OPERATION_ABORTED));\n    // Silence uncaught rejection errors, which may otherwise occur any place\n    // we don't explicitly handle aborted operations.\n    p.catch(() => {});\n    return new shaka.util.AbortableOperation(p, () => Promise.resolve());\n  }\n\n  /**\n   * @param {U} value\n   * @return {!shaka.util.AbortableOperation.<U>} An operation which has already\n   *   completed with the given value.\n   * @template U\n   * @export\n   */\n  static completed(value) {\n    return new shaka.util.AbortableOperation(\n        Promise.resolve(value),\n        () => Promise.resolve());\n  }\n\n  /**\n   * @param {!Promise.<U>} promise\n   * @return {!shaka.util.AbortableOperation.<U>} An operation which cannot be\n   *   aborted.  It will be completed when the given Promise is resolved, or\n   *   will be failed when the given Promise is rejected.\n   * @template U\n   * @export\n   */\n  static notAbortable(promise) {\n    return new shaka.util.AbortableOperation(\n        promise,\n        // abort() here will return a Promise which is resolved when the input\n        // promise either resolves or fails.\n        () => promise.catch(() => {}));\n  }\n\n  /**\n   * @override\n   * @export\n   */\n  abort() {\n    this.aborted_ = true;\n    return this.onAbort_();\n  }\n\n  /**\n   * @param {!Array.<!shaka.util.AbortableOperation>} operations\n   * @return {!shaka.util.AbortableOperation} An operation which is resolved\n   *   when all operations are successful and fails when any operation fails.\n   *   For this operation, abort() aborts all given operations.\n   * @export\n   */\n  static all(operations) {\n    return new shaka.util.AbortableOperation(\n        Promise.all(operations.map((op) => op.promise)),\n        () => Promise.all(operations.map((op) => op.abort())));\n  }\n\n  /**\n   * @override\n   * @export\n   */\n  finally(onFinal) {\n    this.promise.then((value) => onFinal(true), (e) => onFinal(false));\n    return this;\n  }\n\n  /**\n   * @param {(undefined|\n   *          function(T):U|\n   *          function(T):!Promise.<U>|\n   *          function(T):!shaka.util.AbortableOperation.<U>)} onSuccess\n   *   A callback to be invoked after this operation is complete, to chain to\n   *   another operation.  The callback can return a plain value, a Promise to\n   *   an asynchronous value, or another AbortableOperation.\n   * @param {function(*)=} onError\n   *   An optional callback to be invoked if this operation fails, to perform\n   *   some cleanup or error handling.  Analogous to the second parameter of\n   *   Promise.prototype.then.\n   * @return {!shaka.util.AbortableOperation.<U>} An operation which is resolved\n   *   when this operation and the operation started by the callback are both\n   *   complete.\n   * @template U\n   * @export\n   */\n  chain(onSuccess, onError) {\n    let newPromise = new shaka.util.PublicPromise();\n\n    // If called before \"this\" completes, just abort \"this\".\n    let abort = () => {\n      newPromise.reject(new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.PLAYER,\n          shaka.util.Error.Code.OPERATION_ABORTED));\n      return this.abort();\n    };\n\n    this.promise.then((value) => {\n      if (this.aborted_) {\n        // If \"this\" is not abortable(), or if abort() is called after \"this\"\n        // is complete but before the next stage in the chain begins, we should\n        // stop right away.\n        newPromise.reject(new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.PLAYER,\n            shaka.util.Error.Code.OPERATION_ABORTED));\n        return;\n      }\n\n      if (!onSuccess) {\n        // No callback?  Pass the success along.\n        newPromise.resolve(value);\n        return;\n      }\n\n      // Call the success callback, interpret the return value,\n      // set the Promise state, and get the next abort function.\n      abort = shaka.util.AbortableOperation.wrapChainCallback_(\n          onSuccess, value, newPromise);\n    }, (e) => {\n      // \"This\" failed or was aborted.\n\n      if (!onError) {\n        // No callback?  Pass the failure along.\n        newPromise.reject(e);\n        return;\n      }\n\n      // Call the error callback, interpret the return value,\n      // set the Promise state, and get the next abort function.\n      abort = shaka.util.AbortableOperation.wrapChainCallback_(\n          onError, e, newPromise);\n    });\n\n    return new shaka.util.AbortableOperation(\n        newPromise,\n        // By creating a closure around abort(), we can update the value of\n        // abort() at various stages.\n        () => abort());\n  }\n\n  /**\n   * @param {(function(T):U|\n   *          function(T):!Promise.<U>|\n   *          function(T):!shaka.util.AbortableOperation.<U>|\n   *          function(*))} callback\n   *   A callback to be invoked with the given value.\n   * @param {T} value\n   * @param {!shaka.util.PublicPromise} newPromise The promise for the next\n   *   stage in the chain.\n   * @return {function():!Promise} The next abort() function for the chain.\n   * @private\n   * @template T, U\n   */\n  static wrapChainCallback_(callback, value, newPromise) {\n    try {\n      let ret = callback(value);\n\n      if (ret && ret.promise && ret.abort) {\n        // This is an abortable operation, with its own abort() method.\n        // After this point, abort() should abort the operation from the\n        // callback, and the new promise should be tied to the promise\n        // from the callback's operation.\n        newPromise.resolve(ret.promise);\n        // This used to say \"return ret.abort;\", but it caused subtle issues by\n        // unbinding part of the abort chain.  There is now a test to ensure\n        // that we don't call abort with the wrong \"this\".\n        return () => ret.abort();\n      } else {\n        // This is a Promise or a plain value, and this step cannot be aborted.\n        newPromise.resolve(ret);\n        // Abort is complete when the returned value/Promise is resolved or\n        // fails, but never fails itself nor returns a value.\n        return () => Promise.resolve(ret).then(() => {}).catch(() => {});\n      }\n    } catch (exception) {\n      // The callback threw an exception or error.  Reject the new Promise and\n      // resolve any future abort call right away.\n      newPromise.reject(exception);\n      return () => Promise.resolve();\n    }\n  }\n};\n\n/**\n * @const {!Promise.<T>}\n * @exportInterface\n */\nshaka.util.AbortableOperation.prototype.promise;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.FakeEvent');\n\n\n/**\n * Create an Event work-alike object based on the provided dictionary.\n * The event should contain all of the same properties from the dict.\n *\n * @param {string} type\n * @param {Object=} dict\n * @constructor\n * @extends {Event}\n */\nshaka.util.FakeEvent = function(type, dict = {}) {\n  // Take properties from dict if present.\n  for (let key in dict) {\n    this[key] = dict[key];\n  }\n\n\n  // The properties below cannot be set by the dict.  They are all provided for\n  // compatibility with native events.\n\n  /** @const {boolean} */\n  this.bubbles = false;\n\n  /** @type {boolean} */\n  this.cancelable = false;\n\n  /** @type {boolean} */\n  this.defaultPrevented = false;\n\n  /**\n   * According to MDN, Chrome uses high-res timers instead of epoch time.\n   * Follow suit so that timeStamps on FakeEvents use the same base as\n   * on native Events.\n   * @const {number}\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/Event/timeStamp\n   */\n  this.timeStamp = window.performance && window.performance.now ?\n      window.performance.now() : Date.now();\n\n  /** @const {string} */\n  this.type = type;\n\n  /** @const {boolean} */\n  this.isTrusted = false;\n\n  /** @type {EventTarget} */\n  this.currentTarget = null;\n\n  /** @type {EventTarget} */\n  this.target = null;\n\n\n  /**\n   * Non-standard property read by FakeEventTarget to stop processing listeners.\n   * @type {boolean}\n   */\n  this.stopped = false;\n};\n\n\n/**\n * Prevents the default action of the event.  Has no effect if the event isn't\n * cancellable.\n * @override\n */\nshaka.util.FakeEvent.prototype.preventDefault = function() {\n  if (this.cancelable) {\n    this.defaultPrevented = true;\n  }\n};\n\n\n/**\n * Stops processing event listeners for this event.  Provided for compatibility\n * with native Events.\n * @override\n */\nshaka.util.FakeEvent.prototype.stopImmediatePropagation = function() {\n  this.stopped = true;\n};\n\n\n/**\n * Does nothing, since FakeEvents do not bubble.  Provided for compatibility\n * with native Events.\n * @override\n */\nshaka.util.FakeEvent.prototype.stopPropagation = function() {};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.MultiMap');\n\n\n/**\n * A simple multimap template.\n * @constructor\n * @struct\n * @template T\n */\nshaka.util.MultiMap = function() {\n  /** @private {!Object.<string, !Array.<T>>} */\n  this.map_ = {};\n};\n\n\n/**\n * Add a key, value pair to the map.\n * @param {string} key\n * @param {T} value\n */\nshaka.util.MultiMap.prototype.push = function(key, value) {\n  if (this.map_.hasOwnProperty(key)) {\n    this.map_[key].push(value);\n  } else {\n    this.map_[key] = [value];\n  }\n};\n\n\n/**\n * Get a list of values by key.\n * @param {string} key\n * @return {Array.<T>} or null if no such key exists.\n */\nshaka.util.MultiMap.prototype.get = function(key) {\n  let list = this.map_[key];\n  // slice() clones the list so that it and the map can each be modified\n  // without affecting the other.\n  return list ? list.slice() : null;\n};\n\n\n/**\n * Get a list of all values.\n * @return {!Array.<T>}\n */\nshaka.util.MultiMap.prototype.getAll = function() {\n  let list = [];\n  for (let key in this.map_) {\n    list.push.apply(list, this.map_[key]);\n  }\n  return list;\n};\n\n\n/**\n * Remove a specific value, if it exists.\n * @param {string} key\n * @param {T} value\n */\nshaka.util.MultiMap.prototype.remove = function(key, value) {\n  let list = this.map_[key];\n  if (!list) return;\n  for (let i = 0; i < list.length; ++i) {\n    if (list[i] == value) {\n      list.splice(i, 1);\n      --i;\n    }\n  }\n};\n\n\n/**\n * Clear all keys and values from the multimap.\n */\nshaka.util.MultiMap.prototype.clear = function() {\n  this.map_ = {};\n};\n\n\n/**\n * @param {function(string, !Array.<T>)} callback\n */\nshaka.util.MultiMap.prototype.forEach = function(callback) {\n  for (let key in this.map_) {\n    callback(key, this.map_[key]);\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.FakeEventTarget');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.MultiMap');\n\n\n/**\n * A work-alike for EventTarget.  Only DOM elements may be true EventTargets,\n * but this can be used as a base class to provide event dispatch to non-DOM\n * classes.  Only FakeEvents should be dispatched.\n *\n * @struct\n * @constructor\n * @implements {EventTarget}\n * @exportInterface\n */\nshaka.util.FakeEventTarget = function() {\n  /**\n   * @private {!shaka.util.MultiMap.<shaka.util.FakeEventTarget.ListenerType>}\n   */\n  this.listeners_ = new shaka.util.MultiMap();\n\n  /**\n   * The target of all dispatched events.  Defaults to |this|.\n   * @type {EventTarget}\n   */\n  this.dispatchTarget = this;\n};\n\n\n/**\n * These are the listener types defined in the closure extern for EventTarget.\n * @typedef {EventListener|function(!Event):*}\n * @exportInterface\n */\nshaka.util.FakeEventTarget.ListenerType;\n\n\n/**\n * Add an event listener to this object.\n *\n * @param {string} type The event type to listen for.\n * @param {shaka.util.FakeEventTarget.ListenerType} listener The callback or\n *   listener object to invoke.\n * @param {(!AddEventListenerOptions|boolean)=} options Ignored.\n * @override\n * @exportInterface\n */\nshaka.util.FakeEventTarget.prototype.addEventListener =\n    function(type, listener, options) {\n  this.listeners_.push(type, listener);\n};\n\n\n/**\n * Remove an event listener from this object.\n *\n * @param {string} type The event type for which you wish to remove a listener.\n * @param {shaka.util.FakeEventTarget.ListenerType} listener The callback or\n *   listener object to remove.\n * @param {(EventListenerOptions|boolean)=} options Ignored.\n * @override\n * @exportInterface\n */\nshaka.util.FakeEventTarget.prototype.removeEventListener =\n    function(type, listener, options) {\n  this.listeners_.remove(type, listener);\n};\n\n\n/**\n * Dispatch an event from this object.\n *\n * @param {!Event} event The event to be dispatched from this object.\n * @return {boolean} True if the default action was prevented.\n * @override\n * @exportInterface\n */\nshaka.util.FakeEventTarget.prototype.dispatchEvent = function(event) {\n  // In many browsers, it is complex to overwrite properties of actual Events.\n  // Here we expect only to dispatch FakeEvents, which are simpler.\n  goog.asserts.assert(event instanceof shaka.util.FakeEvent,\n                      'FakeEventTarget can only dispatch FakeEvents!');\n\n  const listeners = this.listeners_.get(event.type) || [];\n\n  // Execute this event on listeners until the event has been stopped or we\n  // run out of listeners.\n  for (let i = 0; i < listeners.length; ++i) {\n    // Do this every time, since events can be re-dispatched from handlers.\n    event.target = this.dispatchTarget;\n    event.currentTarget = this.dispatchTarget;\n\n    let listener = listeners[i];\n    try {\n      // Check for the |handleEvent| member to test if this is a\n      // |EventListener| instance or a basic function.\n      if (listener.handleEvent) {\n        listener.handleEvent(event);\n      } else {\n        listener.call(this, event);\n      }\n    } catch (exception) {\n      // Exceptions during event handlers should not affect the caller,\n      // but should appear on the console as uncaught, according to MDN:\n      // https://mzl.la/2JXgwRo\n      shaka.log.error('Uncaught exception in event handler', exception,\n          exception ? exception.message : null,\n          exception ? exception.stack : null);\n    }\n\n    if (event.stopped) {\n      break;\n    }\n  }\n\n  return event.defaultPrevented;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.IDestroyable');\n\n\n/**\n * An interface to standardize how objects are destroyed.\n *\n * @interface\n * @exportInterface\n */\nshaka.util.IDestroyable = class {\n  /**\n   * Request that this object be destroyed, releasing all resources and shutting\n   * down all operations. Returns a Promise which is resolved when destruction\n   * is complete. This Promise should never be rejected.\n   *\n   * @return {!Promise}\n   * @exportInterface\n   */\n  destroy() {}\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.ObjectUtils');\n\n\nshaka.util.ObjectUtils = class {\n /**\n  * Performs a deep clone of the given simple object.  This does not copy\n  * prototypes, custom properties (e.g. read-only), or multiple references to\n  * the same object.  If the caller needs these fields, it will need to set them\n  * after this returns.\n  *\n  * @template T\n  * @param {T} arg\n  * @return {T}\n  */\n  static cloneObject(arg) {\n    let seenObjects = new Set();\n    // This recursively clones the value |val|, using the captured variable\n    // |seenObjects| to track the objects we have already cloned.\n    let clone = function(val) {\n      switch (typeof val) {\n        case 'undefined':\n        case 'boolean':\n        case 'number':\n        case 'string':\n        case 'symbol':\n        case 'function':\n          return val;\n        case 'object':\n        default: {\n          // typeof null === 'object'\n          if (!val) return val;\n\n          // This covers Uint8Array and friends, even without a TypedArray\n          // base-class constructor.\n          const isTypedArray =\n              val.buffer && val.buffer.constructor == ArrayBuffer;\n          if (isTypedArray) {\n            return val;\n          }\n\n          if (seenObjects.has(val)) {\n            return null;\n          }\n\n          const isArray = val.constructor == Array;\n          if (val.constructor != Object && !isArray) {\n            return null;\n          }\n\n          seenObjects.add(val);\n          let ret = isArray ? [] : {};\n          // Note |name| will equal a number for arrays.\n          for (let name in val) {\n            ret[name] = clone(val[name]);\n          }\n\n          // Length is a non-enumerable property, but we should copy it over in\n          // case it is not the default.\n          if (isArray) {\n            ret.length = val.length;\n          }\n          return ret;\n        }\n      }\n    };\n    return clone(arg);\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.ArrayUtils');\n\n\n/**\n * @namespace shaka.util.ArrayUtils\n * @summary Array utility functions.\n */\n\n\n/**\n * Returns whether the two values contain the same value.  This correctly\n * handles comparisons involving NaN.\n * @param {T} a\n * @param {T} b\n * @return {boolean}\n * @template T\n */\nshaka.util.ArrayUtils.defaultEquals = function(a, b) {\n  // NaN !== NaN, so we need to special case it.\n  if (typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b)) {\n    return true;\n  }\n  return a === b;\n};\n\n\n/**\n * Remove given element from array (assumes no duplicates).\n * @param {!Array.<T>} array\n * @param {T} element\n * @template T\n */\nshaka.util.ArrayUtils.remove = function(array, element) {\n  let index = array.indexOf(element);\n  if (index > -1) {\n    array.splice(index, 1);\n  }\n};\n\n\n/**\n * Count the number of items in the list that pass the check function.\n * @param {!Array.<T>} array\n * @param {function(T):boolean} check\n * @return {number}\n * @template T\n */\nshaka.util.ArrayUtils.count = function(array, check) {\n  let count = 0;\n\n  array.forEach(function(element) {\n    count += check(element) ? 1 : 0;\n  });\n\n  return count;\n};\n\n\n/**\n * Determines if the given arrays contain the same elements.\n *\n * @param {!Array.<T>} a\n * @param {!Array.<T>} b\n * @param {function(T, T):boolean=} compareFn\n * @return {boolean}\n * @template T\n */\nshaka.util.ArrayUtils.hasSameElements = function(a, b, compareFn) {\n  if (!compareFn) {\n    compareFn = shaka.util.ArrayUtils.defaultEquals;\n  }\n  if (a.length != b.length) {\n    return false;\n  }\n\n  let copy = b.slice();\n  for (const item of a) {\n    const idx = copy.findIndex((other) => compareFn(item, other));\n    if (idx == -1) {\n      return false;\n    }\n    // Since order doesn't matter, just swap the last element with this one and\n    // then drop the last element.\n    copy[idx] = copy[copy.length - 1];\n    copy.pop();\n  }\n\n  return copy.length == 0;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.OperationManager');\n\ngoog.require('shaka.util.ArrayUtils');\ngoog.require('shaka.util.IDestroyable');\n\n/**\n * A utility for cleaning up AbortableOperations, to help simplify common\n * patterns and reduce code duplication.\n *\n * @implements {shaka.util.IDestroyable}\n */\nshaka.util.OperationManager = class {\n  constructor() {\n    /** @private {!Array.<!shaka.extern.IAbortableOperation>} */\n    this.operations_ = [];\n  }\n\n  /**\n   * Manage an operation.  This means aborting it on destroy() and removing it\n   * from the management set when it complete.\n   *\n   * @param {!shaka.extern.IAbortableOperation} operation\n   */\n  manage(operation) {\n    this.operations_.push(operation.finally(() => {\n      shaka.util.ArrayUtils.remove(this.operations_, operation);\n    }));\n  }\n\n  /** @override */\n  destroy() {\n    let cleanup = [];\n    this.operations_.forEach((op) => {\n      // Catch and ignore any failures.  This silences error logs in the\n      // JavaScript console about uncaught Promise failures.\n      op.promise.catch(() => {});\n\n      // Now abort the operation.\n      cleanup.push(op.abort());\n    });\n\n    this.operations_ = [];\n    return Promise.all(cleanup);\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.net.NetworkingEngine');\n\ngoog.require('goog.Uri');\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.net.Backoff');\ngoog.require('shaka.util.AbortableOperation');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.FakeEventTarget');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.ObjectUtils');\ngoog.require('shaka.util.OperationManager');\n\n\n/**\n * @event shaka.net.NetworkingEngine.RetryEvent\n * @description Fired when the networking engine receives a recoverable error\n *   and retries.\n * @property {string} type\n *   'retry'\n * @property {?shaka.util.Error} error\n *   The error that caused the retry. If it was a non-Shaka error, this is set\n *   to null.\n * @exportDoc\n */\n\n\n/**\n * NetworkingEngine wraps all networking operations.  This accepts plugins that\n * handle the actual request.  A plugin is registered using registerScheme.\n * Each scheme has at most one plugin to handle the request.\n *\n * @param {function(number, number)=} onProgressUpdated Called when a progress\n *   event is triggered. Passed the duration, in milliseconds, that the request\n *   took, and the number of bytes transferred.\n *\n * @struct\n * @constructor\n * @implements {shaka.util.IDestroyable}\n * @extends {shaka.util.FakeEventTarget}\n * @export\n */\nshaka.net.NetworkingEngine = function(onProgressUpdated) {\n  shaka.util.FakeEventTarget.call(this);\n\n  /** @private {boolean} */\n  this.destroyed_ = false;\n\n  /** @private {!shaka.util.OperationManager} */\n  this.operationManager_ = new shaka.util.OperationManager();\n\n  /** @private {!Set.<shaka.extern.RequestFilter>} */\n  this.requestFilters_ = new Set();\n\n  /** @private {!Set.<shaka.extern.ResponseFilter>} */\n  this.responseFilters_ = new Set();\n\n  /** @private {?function(number, number)} */\n  this.onProgressUpdated_ = onProgressUpdated || null;\n};\n\ngoog.inherits(shaka.net.NetworkingEngine, shaka.util.FakeEventTarget);\n\n\n/**\n * Request types.  Allows a filter to decide which requests to read/alter.\n *\n * @enum {number}\n * @export\n */\nshaka.net.NetworkingEngine.RequestType = {\n  'MANIFEST': 0,\n  'SEGMENT': 1,\n  'LICENSE': 2,\n  'APP': 3,\n  'TIMING': 4,\n};\n\n\n/**\n * Priority level for network scheme plugins.\n * If multiple plugins are provided for the same scheme, only the\n * highest-priority one is used.\n *\n * @enum {number}\n * @export\n */\nshaka.net.NetworkingEngine.PluginPriority = {\n  'FALLBACK': 1,\n  'PREFERRED': 2,\n  'APPLICATION': 3,\n};\n\n\n/**\n * @typedef {{\n *   plugin: shaka.extern.SchemePlugin,\n *   priority: number\n * }}\n * @property {shaka.extern.SchemePlugin} plugin\n *   The associated plugin.\n * @property {number} priority\n *   The plugin's priority.\n */\nshaka.net.NetworkingEngine.SchemeObject;\n\n\n/**\n * Contains the scheme plugins.\n *\n * @private {!Object.<string, shaka.net.NetworkingEngine.SchemeObject>}\n */\nshaka.net.NetworkingEngine.schemes_ = {};\n\n/**\n * @typedef {{\n *   response: shaka.extern.Response,\n *   gotProgress: boolean\n * }}\n *\n * @description\n * Defines a response wrapper object, including the response object and whether\n * progress event is fired by the scheme plugin.\n *\n * @property {shaka.extern.Response} response\n * @property {boolean} gotProgress\n * @private\n */\nshaka.net.NetworkingEngine.ResponseAndGotProgress;\n\n\n/**\n * Registers a scheme plugin.  This plugin will handle all requests with the\n * given scheme.  If a plugin with the same scheme already exists, it is\n * replaced, unless the existing plugin is of higher priority.\n * If no priority is provided, this defaults to the highest priority of\n * APPLICATION.\n *\n * @param {string} scheme\n * @param {shaka.extern.SchemePlugin} plugin\n * @param {number=} priority\n * @export\n */\nshaka.net.NetworkingEngine.registerScheme =\n    function(scheme, plugin, priority) {\n  goog.asserts.assert(priority == undefined || priority > 0,\n      'explicit priority must be > 0');\n  priority =\n      priority || shaka.net.NetworkingEngine.PluginPriority.APPLICATION;\n  let existing = shaka.net.NetworkingEngine.schemes_[scheme];\n  if (!existing || priority >= existing.priority) {\n    shaka.net.NetworkingEngine.schemes_[scheme] = {\n      priority: priority,\n      plugin: plugin,\n    };\n  }\n};\n\n\n/**\n * Removes a scheme plugin.\n *\n * @param {string} scheme\n * @export\n */\nshaka.net.NetworkingEngine.unregisterScheme = function(scheme) {\n  delete shaka.net.NetworkingEngine.schemes_[scheme];\n};\n\n\n/**\n * Registers a new request filter.  All filters are applied in the order they\n * are registered.\n *\n * @param {shaka.extern.RequestFilter} filter\n * @export\n */\nshaka.net.NetworkingEngine.prototype.registerRequestFilter = function(filter) {\n  this.requestFilters_.add(filter);\n};\n\n\n/**\n * Removes a request filter.\n *\n * @param {shaka.extern.RequestFilter} filter\n * @export\n */\nshaka.net.NetworkingEngine.prototype.unregisterRequestFilter =\n    function(filter) {\n  this.requestFilters_.delete(filter);\n};\n\n\n/**\n * Clears all request filters.\n *\n * @export\n */\nshaka.net.NetworkingEngine.prototype.clearAllRequestFilters = function() {\n  this.requestFilters_.clear();\n};\n\n\n/**\n * Registers a new response filter.  All filters are applied in the order they\n * are registered.\n *\n * @param {shaka.extern.ResponseFilter} filter\n * @export\n */\nshaka.net.NetworkingEngine.prototype.registerResponseFilter = function(filter) {\n  this.responseFilters_.add(filter);\n};\n\n\n/**\n * Removes a response filter.\n *\n * @param {shaka.extern.ResponseFilter} filter\n * @export\n */\nshaka.net.NetworkingEngine.prototype.unregisterResponseFilter =\n    function(filter) {\n  this.responseFilters_.delete(filter);\n};\n\n\n/**\n * Clears all response filters.\n *\n * @export\n */\nshaka.net.NetworkingEngine.prototype.clearAllResponseFilters = function() {\n  this.responseFilters_.clear();\n};\n\n\n/**\n * Gets a copy of the default retry parameters.\n *\n * @return {shaka.extern.RetryParameters}\n *\n * NOTE: The implementation moved to shaka.net.Backoff to avoid a circular\n * dependency between the two classes.\n */\nshaka.net.NetworkingEngine.defaultRetryParameters =\n    shaka.net.Backoff.defaultRetryParameters;\n\n\n/**\n * Makes a simple network request for the given URIs.\n *\n * @param {!Array.<string>} uris\n * @param {shaka.extern.RetryParameters} retryParams\n * @return {shaka.extern.Request}\n */\nshaka.net.NetworkingEngine.makeRequest = function(uris, retryParams) {\n  return {\n    uris: uris,\n    method: 'GET',\n    body: null,\n    headers: {},\n    allowCrossSiteCredentials: false,\n    retryParameters: retryParams,\n    licenseRequestType: null,\n  };\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.net.NetworkingEngine.prototype.destroy = function() {\n  this.destroyed_ = true;\n  this.requestFilters_.clear();\n  this.responseFilters_.clear();\n  return this.operationManager_.destroy();\n};\n\n\n/**\n * Shims return values from requests to look like Promises, so that callers have\n * time to update to the new operation-based API.\n *\n * @param {!shaka.extern.IAbortableOperation.<shaka.extern.Response>} operation\n * @return {!shaka.extern.IAbortableOperation.<shaka.extern.Response>}\n * @private\n */\nshaka.net.NetworkingEngine.shimRequests_ = function(operation) {\n  // TODO: remove in v2.5\n  operation.then = (onSuccess, onError) => {\n    shaka.log.alwaysWarn('The network request interface has changed!  Please ' +\n                         'update your application to the new interface, ' +\n                         'which allows operations to be aborted.  Support ' +\n                         'for the old API will be removed in v2.5.');\n    return operation.promise.then(onSuccess, onError);\n  };\n  operation.catch = (onError) => {\n    shaka.log.alwaysWarn('The network request interface has changed!  Please ' +\n                         'update your application to the new interface, ' +\n                         'which allows operations to be aborted.  Support ' +\n                         'for the old API will be removed in v2.5.');\n    return operation.promise.catch(onError);\n  };\n  return operation;\n};\n\n\n/**\n * Makes a network request and returns the resulting data.\n *\n * @param {shaka.net.NetworkingEngine.RequestType} type\n * @param {shaka.extern.Request} request\n * @return {!shaka.extern.IAbortableOperation.<shaka.extern.Response>}\n * @export\n */\nshaka.net.NetworkingEngine.prototype.request = function(type, request) {\n  let cloneObject = shaka.util.ObjectUtils.cloneObject;\n\n  // Reject all requests made after destroy is called.\n  if (this.destroyed_) {\n    return shaka.net.NetworkingEngine.shimRequests_(\n        shaka.util.AbortableOperation.aborted());\n  }\n\n  goog.asserts.assert(request.uris && request.uris.length,\n                      'Request without URIs!');\n\n  // If a request comes from outside the library, some parameters may be left\n  // undefined.  To make it easier for application developers, we will fill them\n  // in with defaults if necessary.\n  //\n  // We clone retryParameters and uris so that if a filter modifies the request,\n  // it doesn't contaminate future requests.\n  request.method = request.method || 'GET';\n  request.headers = request.headers || {};\n  request.retryParameters = request.retryParameters ?\n      cloneObject(request.retryParameters) :\n      shaka.net.NetworkingEngine.defaultRetryParameters();\n  request.uris = cloneObject(request.uris);\n\n  let requestFilterOperation = this.filterRequest_(type, request);\n  let requestOperation = requestFilterOperation.chain(\n      () => this.makeRequestWithRetry_(type, request));\n  let responseFilterOperation = requestOperation.chain(\n      (responseAndGotProgress) =>\n          this.filterResponse_(type, responseAndGotProgress));\n\n  // Keep track of time spent in filters.\n  let requestFilterStartTime = Date.now();\n  let requestFilterMs = 0;\n  requestFilterOperation.promise.then(() => {\n    requestFilterMs = Date.now() - requestFilterStartTime;\n  }, () => {});  // Silence errors in this fork of the Promise chain.\n\n  let responseFilterStartTime = 0;\n  requestOperation.promise.then(() => {\n    responseFilterStartTime = Date.now();\n  }, () => {});  // Silence errors in this fork of the Promise chain.\n\n  let operation = responseFilterOperation.chain(\n    (responseAndGotProgress) => {\n      let responseFilterMs = Date.now() - responseFilterStartTime;\n      let response = responseAndGotProgress.response;\n\n      response.timeMs += requestFilterMs;\n      response.timeMs += responseFilterMs;\n\n      if (!responseAndGotProgress.gotProgress && this.onProgressUpdated_ &&\n          !response.fromCache &&\n          type == shaka.net.NetworkingEngine.RequestType.SEGMENT) {\n        this.onProgressUpdated_(response.timeMs, response.data.byteLength);\n      }\n    return response;\n  }, (e) => {\n    // Any error thrown from elsewhere should be recategorized as CRITICAL here.\n    // This is because by the time it gets here, we've exhausted retries.\n    if (e) {\n      goog.asserts.assert(e instanceof shaka.util.Error, 'Wrong error type');\n      e.severity = shaka.util.Error.Severity.CRITICAL;\n    }\n\n    throw e;\n  });\n\n  // Add the operation to the manager for later cleanup.\n  this.operationManager_.manage(operation);\n  return shaka.net.NetworkingEngine.shimRequests_(operation);\n};\n\n\n/**\n * @param {shaka.net.NetworkingEngine.RequestType} type\n * @param {shaka.extern.Request} request\n * @return {!shaka.extern.IAbortableOperation.<undefined>}\n * @private\n */\nshaka.net.NetworkingEngine.prototype.filterRequest_ = function(type, request) {\n  let filterOperation = shaka.util.AbortableOperation.completed(undefined);\n\n  for (const requestFilter of this.requestFilters_) {\n    // Request filters are run sequentially.\n    filterOperation =\n        filterOperation.chain(() => requestFilter(type, request));\n  }\n\n  // Catch any errors thrown by request filters, and substitute\n  // them with a Shaka-native error.\n  return filterOperation.chain(undefined, (e) => {\n    if (e && e.code == shaka.util.Error.Code.OPERATION_ABORTED) {\n      // Don't change anything if the operation was aborted.\n      throw e;\n    }\n\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.NETWORK,\n        shaka.util.Error.Code.REQUEST_FILTER_ERROR, e);\n  });\n};\n\n\n/**\n * @param {shaka.net.NetworkingEngine.RequestType} type\n * @param {shaka.extern.Request} request\n * @return {!shaka.extern.IAbortableOperation.<\n *               shaka.net.NetworkingEngine.ResponseAndGotProgress>}\n * @private\n */\nshaka.net.NetworkingEngine.prototype.makeRequestWithRetry_ =\n    function(type, request) {\n  let backoff = new shaka.net.Backoff(\n      request.retryParameters, /* autoReset */ false);\n  let index = 0;\n  return this.send_(type, request, backoff, index, /* lastError */ null);\n};\n\n\n/**\n * Sends the given request to the correct plugin and retry using Backoff.\n *\n * @param {shaka.net.NetworkingEngine.RequestType} type\n * @param {shaka.extern.Request} request\n * @param {!shaka.net.Backoff} backoff\n * @param {number} index\n * @param {?shaka.util.Error} lastError\n * @return {!shaka.extern.IAbortableOperation.<\n *               shaka.net.NetworkingEngine.ResponseAndGotProgress>}\n * @private\n */\nshaka.net.NetworkingEngine.prototype.send_ = function(\n    type, request, backoff, index, lastError) {\n  let uri = new goog.Uri(request.uris[index]);\n  let scheme = uri.getScheme();\n  // Whether it got a progress event.\n  let gotProgress = false;\n\n  if (!scheme) {\n    // If there is no scheme, infer one from the location.\n    scheme = shaka.net.NetworkingEngine.getLocationProtocol_();\n    goog.asserts.assert(scheme[scheme.length - 1] == ':',\n                        'location.protocol expected to end with a colon!');\n    // Drop the colon.\n    scheme = scheme.slice(0, -1);\n\n    // Override the original URI to make the scheme explicit.\n    uri.setScheme(scheme);\n    request.uris[index] = uri.toString();\n  }\n\n  let object = shaka.net.NetworkingEngine.schemes_[scheme];\n  let plugin = object ? object.plugin : null;\n  if (!plugin) {\n    return shaka.util.AbortableOperation.failed(\n        new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.NETWORK,\n            shaka.util.Error.Code.UNSUPPORTED_SCHEME,\n            uri));\n  }\n\n\n  // Every attempt must have an associated backoff.attempt() call so that the\n  // accounting is correct.\n  let backoffOperation =\n      shaka.util.AbortableOperation.notAbortable(backoff.attempt());\n\n  let startTimeMs;\n  let sendOperation = backoffOperation.chain(() => {\n    if (this.destroyed_) {\n      return shaka.util.AbortableOperation.aborted();\n    }\n\n    startTimeMs = Date.now();\n    const segment = shaka.net.NetworkingEngine.RequestType.SEGMENT;\n    let operation = plugin(request.uris[index], request, type,\n                           (time, bytes) => {\n                             if (this.onProgressUpdated_ && type == segment) {\n                               this.onProgressUpdated_(time, bytes);\n                               gotProgress = true;\n                             }\n                          });\n    // Backward compatibility with older scheme plugins.\n    // TODO: remove in v2.5\n    if (operation.promise == undefined) {\n      shaka.log.alwaysWarn('The scheme plugin interface has changed!  Please ' +\n                           'update your scheme plugins to the new interface ' +\n                           'to add support for abort().  Support for the old ' +\n                           'plugin interface will be removed in v2.5.');\n\n      // The return was just a promise, so wrap it into an operation.\n      let schemePromise = /** @type {!Promise} */(operation);\n      operation = shaka.util.AbortableOperation.notAbortable(schemePromise);\n    }\n    return operation;\n  }).chain((response) => {\n    if (response.timeMs == undefined) {\n      response.timeMs = Date.now() - startTimeMs;\n    }\n\n    let responseAndGotProgress = {\n      response: response,\n      gotProgress: gotProgress,\n    };\n\n    return responseAndGotProgress;\n  }, (error) => {\n    if (error && error.code == shaka.util.Error.Code.OPERATION_ABORTED) {\n      // Don't change anything if the operation was aborted.\n      throw error;\n    }\n\n    if (this.destroyed_) {\n      return shaka.util.AbortableOperation.aborted();\n    }\n\n    if (error && error.severity == shaka.util.Error.Severity.RECOVERABLE) {\n      // Don't pass in a non-shaka error, even if one is somehow thrown;\n      // instead, call the listener with a null error.\n      const errorOrNull = error instanceof shaka.util.Error ? error : null;\n      let event = new shaka.util.FakeEvent('retry', {'error': errorOrNull});\n      this.dispatchEvent(event);\n\n      // Move to the next URI.\n      index = (index + 1) % request.uris.length;\n      let shakaError = /** @type {shaka.util.Error} */(error);\n      return this.send_(type, request, backoff, index, shakaError);\n    }\n\n    // The error was not recoverable, so do not try again.\n    // Rethrow the error so the Promise chain stays rejected.\n    throw error || lastError;\n  });\n\n  return sendOperation;\n};\n\n\n/**\n * @param {shaka.net.NetworkingEngine.RequestType} type\n * @param {shaka.net.NetworkingEngine.ResponseAndGotProgress}\n *        responseAndGotProgress\n * @return {!shaka.extern.IAbortableOperation.<\n *               shaka.net.NetworkingEngine.ResponseAndGotProgress>}\n * @private\n */\nshaka.net.NetworkingEngine.prototype.filterResponse_ =\n    function(type, responseAndGotProgress) {\n  let filterOperation = shaka.util.AbortableOperation.completed(undefined);\n  for (const responseFilter of this.responseFilters_) {\n    // Response filters are run sequentially.\n    filterOperation = filterOperation.chain(\n      responseFilter.bind(null, type, responseAndGotProgress.response));\n  }\n  // If successful, return the filtered response with whether it got progress.\n  return filterOperation.chain(() => {\n    return responseAndGotProgress;\n  }, (e) => {\n    // Catch any errors thrown by request filters, and substitute\n    // them with a Shaka-native error.\n\n    if (e && e.code == shaka.util.Error.Code.OPERATION_ABORTED) {\n      // Don't change anything if the operation was aborted.\n      throw e;\n    }\n\n    // The error is assumed to be critical if the original wasn't a Shaka error.\n    let severity = shaka.util.Error.Severity.CRITICAL;\n    if (e instanceof shaka.util.Error) {\n      severity = e.severity;\n    }\n\n    throw new shaka.util.Error(\n        severity,\n        shaka.util.Error.Category.NETWORK,\n        shaka.util.Error.Code.RESPONSE_FILTER_ERROR, e);\n  });\n};\n\n\n/**\n * This is here only for testability.  We can't mock location in our tests on\n * all browsers, so instead we mock this.\n *\n * @return {string} The value of location.protocol.\n * @private\n */\nshaka.net.NetworkingEngine.getLocationProtocol_ = function() {\n  return location.protocol;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.EventManager');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.MultiMap');\n\n\n/**\n * Creates a new EventManager. An EventManager maintains a collection of \"event\n * bindings\" between event targets and event listeners.\n *\n * @struct\n * @constructor\n * @implements {shaka.util.IDestroyable}\n */\nshaka.util.EventManager = function() {\n  /**\n   * Maps an event type to an array of event bindings.\n   * @private {shaka.util.MultiMap.<!shaka.util.EventManager.Binding_>}\n   */\n  this.bindingMap_ = new shaka.util.MultiMap();\n};\n\n\n/**\n * @typedef {function(!Event)}\n */\nshaka.util.EventManager.ListenerType;\n\n\n/**\n * Detaches all event listeners.\n * @override\n */\nshaka.util.EventManager.prototype.destroy = function() {\n  this.removeAll();\n  this.bindingMap_ = null;\n  return Promise.resolve();\n};\n\n\n/**\n * Attaches an event listener to an event target.\n * @param {EventTarget} target The event target.\n * @param {string} type The event type.\n * @param {shaka.util.EventManager.ListenerType} listener The event listener.\n */\nshaka.util.EventManager.prototype.listen = function(target, type, listener) {\n  if (!this.bindingMap_) return;\n\n  let binding = new shaka.util.EventManager.Binding_(target, type, listener);\n  this.bindingMap_.push(type, binding);\n};\n\n\n/**\n * Attaches an event listener to an event target.  The listener will be removed\n * when the first instance of the event is fired.\n * @param {EventTarget} target The event target.\n * @param {string} type The event type.\n * @param {shaka.util.EventManager.ListenerType} listener The event listener.\n */\nshaka.util.EventManager.prototype.listenOnce =\n    function(target, type, listener) {\n  // Install a shim listener that will stop listening after the first event.\n  this.listen(target, type, function(event) {\n    // Stop listening to this event.\n    this.unlisten(target, type);\n    // Call the original listener.\n    listener(event);\n  }.bind(this));\n};\n\n\n/**\n * Detaches an event listener from an event target.\n * @param {EventTarget} target The event target.\n * @param {string} type The event type.\n */\nshaka.util.EventManager.prototype.unlisten = function(target, type) {\n  if (!this.bindingMap_) return;\n\n  let list = this.bindingMap_.get(type) || [];\n\n  for (let i = 0; i < list.length; ++i) {\n    let binding = list[i];\n\n    if (binding.target == target) {\n      binding.unlisten();\n      this.bindingMap_.remove(type, binding);\n    }\n  }\n};\n\n\n/**\n * Detaches all event listeners from all targets.\n */\nshaka.util.EventManager.prototype.removeAll = function() {\n  if (!this.bindingMap_) return;\n\n  let list = this.bindingMap_.getAll();\n\n  for (let i = 0; i < list.length; ++i) {\n    list[i].unlisten();\n  }\n\n  this.bindingMap_.clear();\n};\n\n\n/**\n * Creates a new Binding_ and attaches the event listener to the event target.\n * @param {EventTarget} target The event target.\n * @param {string} type The event type.\n * @param {shaka.util.EventManager.ListenerType} listener The event listener.\n * @constructor\n * @private\n */\nshaka.util.EventManager.Binding_ = function(target, type, listener) {\n  /** @type {EventTarget} */\n  this.target = target;\n\n  /** @type {string} */\n  this.type = type;\n\n  /** @type {?shaka.util.EventManager.ListenerType} */\n  this.listener = listener;\n\n  this.target.addEventListener(type, listener, false);\n};\n\n\n/**\n * Detaches the event listener from the event target. This does nothing if the\n * event listener is already detached.\n */\nshaka.util.EventManager.Binding_.prototype.unlisten = function() {\n  goog.asserts.assert(this.target, 'Missing target');\n  this.target.removeEventListener(this.type, this.listener, false);\n\n  this.target = null;\n  this.listener = null;\n};\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Functional');\n\n\n/**\n * @namespace shaka.util.Functional\n * @summary A set of functional utility functions.\n */\n\n\n/**\n * Creates a promise chain that calls the given callback for each element in\n * the array in a catch of a promise.\n *\n * e.g.:\n * Promise.reject().catch(callback(array[0])).catch(callback(array[1]));\n *\n * @param {!Array.<ELEM>} array\n * @param {function(ELEM):!Promise.<RESULT>} callback\n * @return {!Promise.<RESULT>}\n * @template ELEM,RESULT\n */\nshaka.util.Functional.createFallbackPromiseChain = function(array, callback) {\n  return array.reduce(function(callback, promise, elem) {\n    return promise.catch(callback.bind(null, elem));\n  }.bind(null, callback), Promise.reject());\n};\n\n\n/**\n * Returns the first array concatenated to the second; used to collapse an\n * array of arrays into a single array.\n *\n * @param {!Array.<T>} all\n * @param {!Array.<T>} part\n * @return {!Array.<T>}\n * @template T\n */\nshaka.util.Functional.collapseArrays = function(all, part) {\n  return all.concat(part);\n};\n\n\n/**\n * A no-op function.  Useful in promise chains.\n */\nshaka.util.Functional.noop = function() {};\n\n\n/**\n * Returns if the given value is not null; useful for filtering out null values.\n *\n * @param {T} value\n * @return {boolean}\n * @template T\n */\nshaka.util.Functional.isNotNull = function(value) {\n  return value != null;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Iterables');\n\n\n/**\n * Recreations of Array-like functions so that they work on any iterable\n * type.\n * @final\n */\nshaka.util.Iterables = class {\n  /**\n   * @param {!Iterable.<FROM>} iterable\n   * @param {function(FROM):TO} mapping\n   * @return {!Iterable.<TO>}\n   * @template FROM,TO\n   */\n  static map(iterable, mapping) {\n    const array = [];\n    for (const x of iterable) { array.push(mapping(x)); }\n    return array;\n  }\n\n  /**\n   * @param {!Iterable.<T>} iterable\n   * @param {function(T):boolean} test\n   * @return {boolean}\n   * @template T\n   */\n  static every(iterable, test) {\n    for (const x of iterable) {\n      if (!test(x)) { return false; }\n    }\n    return true;\n  }\n\n  /**\n   * @param {!Iterable.<T>} iterable\n   * @param {function(T):boolean} test\n   * @return {boolean}\n   * @template T\n   */\n  static some(iterable, test) {\n    for (const x of iterable) {\n      if (test(x)) { return true; }\n    }\n    return false;\n  }\n\n  /**\n   * Iterate over an iterable object and return only the items that |filter|\n   * returns true for.\n   *\n   * @param {!Iterable.<T>} iterable\n   * @param {function(T):boolean} filter\n   * @return {!Array.<T>}\n   * @template T\n   */\n  static filter(iterable, filter) {\n    const out = [];\n    for (const x of iterable) {\n      if (filter(x)) { out.push(x); }\n    }\n    return out;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.MapUtils');\n\n\n/**\n * @namespace shaka.util.MapUtils\n * @summary A set of map/object utility functions.\n */\n\n\n/**\n * Gets the map's values.\n *\n * @param {!Object.<KEY, VALUE>} object\n * @return {!Array.<VALUE>}\n * @template KEY,VALUE\n */\nshaka.util.MapUtils.values = function(object) {\n  return Object.keys(object).map(function(key) { return object[key]; });\n};\n\n\n/**\n * @param {!Object.<KEY, VALUE>} object\n * @return {!Map.<KEY, VALUE>}\n * @template KEY,VALUE\n */\nshaka.util.MapUtils.asMap = function(object) {\n  const map = new Map();\n  Object.keys(object).forEach((key) => {\n    map.set(key, object[key]);\n  });\n\n  return map;\n};\n\n\n/**\n * @param {!Map.<KEY, VALUE>} map\n * @return {!Object.<KEY, VALUE>}\n * @template KEY,VALUE\n */\nshaka.util.MapUtils.asObject = function(map) {\n  const obj = {};\n  map.forEach((value, key) => {\n    obj[key] = value;\n  });\n\n  return obj;\n};\n\n\n/**\n * @param {!Object.<KEY, VALUE>} object\n * @return {!Map.<KEY, VALUE>}\n * @template KEY,VALUE\n * @private\n */\nshaka.util.MapUtils.asMap_ = function(object) {\n  const map = new Map();\n  Object.keys(object).forEach((key) => {\n    map.set(key, object[key]);\n  });\n\n  return map;\n};\n\n\n/**\n * @param {!Map.<KEY, VALUE>} map\n * @return {!Object.<KEY, VALUE>}\n * @template KEY,VALUE\n * @private\n */\nshaka.util.MapUtils.asObject_ = function(map) {\n  const obj = {};\n  map.forEach((value, key) => {\n    obj[key] = value;\n  });\n\n  return obj;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.MimeUtils');\n\n\n/**\n * @summary A set of utility functions for dealing with MIME types.\n */\nshaka.util.MimeUtils = class {\n  /**\n   * Takes a MIME type and optional codecs string and produces the full MIME\n   * type.\n   *\n   * @param {string} mimeType\n   * @param {string=} codecs\n   * @return {string}\n   */\n  static getFullType(mimeType, codecs) {\n    let fullMimeType = mimeType;\n    if (codecs) {\n      fullMimeType += '; codecs=\"' + codecs + '\"';\n    }\n    return fullMimeType;\n  }\n\n  /**\n   * Takes a Stream object and produces an extended MIME type with information\n   * beyond the container and codec type, when available.\n   *\n   * @param {shaka.extern.Stream} stream\n   * @return {string}\n   */\n  static getExtendedType(stream) {\n    const components = [stream.mimeType];\n\n    const extendedMimeParams = shaka.util.MimeUtils.EXTENDED_MIME_PARAMETERS_;\n    extendedMimeParams.forEach((mimeKey, streamKey) => {\n      const value = stream[streamKey];\n      if (value) {\n        components.push(mimeKey + '=\"' + value + '\"');\n      }\n    });\n\n    return components.join(';');\n  }\n\n  /**\n   * Split a list of codecs encoded in a string into a list of codecs.\n   * @param {string} codecs\n   * @return {!Array.<string>}\n   */\n  static splitCodecs(codecs) {\n    return codecs.split(',');\n  }\n\n  /**\n   * Get the base codec from a codec string.\n   *\n   * @param {string} codecString\n   * @return {string}\n   */\n  static getCodecBase(codecString) {\n    const parts = shaka.util.MimeUtils.getCodecParts_(codecString);\n    return parts[0];\n  }\n\n  /**\n   * Get the base and profile of a codec string. Where [0] will be the codec\n   * base and [1] will be the profile.\n   * @param {string} codecString\n   * @return {!Array.<string>}\n   * @private\n   */\n  static getCodecParts_(codecString) {\n    const parts = codecString.split('.');\n\n    const base = parts[0];\n\n    parts.pop();\n    const profile = parts.join('.');\n\n    // Make sure that we always return a \"base\" and \"profile\".\n    return [base, profile];\n  }\n};\n\n\n/**\n * A map from Stream object keys to MIME type parameters.  These should be\n * ignored by platforms that do not recognize them.\n *\n * This initial set of parameters are all recognized by Chromecast.\n *\n * @const {!Map.<string, string>}\n * @private\n */\nshaka.util.MimeUtils.EXTENDED_MIME_PARAMETERS_ = new Map()\n  .set('codecs', 'codecs')\n  .set('frameRate', 'framerate')  // Ours is camelCase, theirs is lowercase.\n  .set('bandwidth', 'bitrate')  // They are in the same units: bits/sec.\n  .set('width', 'width')\n  .set('height', 'height')\n  .set('channelsCount', 'channels');\n\n\n/**\n * A mimetype created for CEA closed captions.\n * @const {string}\n */\nshaka.util.MimeUtils.CLOSED_CAPTION_MIMETYPE = 'application/cea-608';\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.StringUtils');\n\ngoog.require('shaka.log');\ngoog.require('shaka.util.Error');\n\n\n/**\n * @namespace shaka.util.StringUtils\n * @summary A set of string utility functions.\n * @exportDoc\n */\n\n\n/**\n * Creates a string from the given buffer as UTF-8 encoding.\n *\n * @param {?BufferSource} data\n * @return {string}\n * @throws {shaka.util.Error}\n * @export\n */\nshaka.util.StringUtils.fromUTF8 = function(data) {\n  if (!data) return '';\n\n  let uint8 = new Uint8Array(data);\n  // If present, strip off the UTF-8 BOM.\n  if (uint8[0] == 0xef && uint8[1] == 0xbb && uint8[2] == 0xbf) {\n    uint8 = uint8.subarray(3);\n  }\n\n  // http://stackoverflow.com/a/13691499\n  let utf8 = shaka.util.StringUtils.fromCharCode(uint8);\n  // This converts each character in the string to an escape sequence.  If the\n  // character is in the ASCII range, it is not converted; otherwise it is\n  // converted to a URI escape sequence.\n  // Example: '\\x67\\x35\\xe3\\x82\\xac' -> 'g#%E3%82%AC'\n  let escaped = escape(utf8);\n  // Decode the escaped sequence.  This will interpret UTF-8 sequences into the\n  // correct character.\n  // Example: 'g#%E3%82%AC' -> 'g#\u20ac'\n  try {\n    return decodeURIComponent(escaped);\n  } catch (e) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL, shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.BAD_ENCODING);\n  }\n};\n\n\n/**\n * Creates a string from the given buffer as UTF-16 encoding.\n *\n * @param {?BufferSource} data\n * @param {boolean} littleEndian true to read little endian, false to read big.\n * @param {boolean=} noThrow true to avoid throwing in cases where we may\n *     expect invalid input.  If noThrow is true and the data has an odd length,\n *     it will be truncated.\n * @return {string}\n * @throws {shaka.util.Error}\n * @export\n */\nshaka.util.StringUtils.fromUTF16 = function(data, littleEndian, noThrow) {\n  if (!data) return '';\n\n  if (!noThrow && data.byteLength % 2 != 0) {\n    shaka.log.error('Data has an incorrect length, must be even.');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL, shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.BAD_ENCODING);\n  }\n\n  /** @type {ArrayBuffer} */\n  let buffer;\n  if (data instanceof ArrayBuffer) {\n    buffer = data;\n  } else {\n    // Have to create a new buffer because the argument may be a smaller\n    // view on a larger ArrayBuffer.  We cannot use an ArrayBufferView in\n    // a DataView.\n    let temp = new Uint8Array(data.byteLength);\n    temp.set(new Uint8Array(data));\n    buffer = temp.buffer;\n  }\n\n  // Use a DataView to ensure correct endianness.\n  let length = Math.floor(data.byteLength / 2);\n  let arr = new Uint16Array(length);\n  let dataView = new DataView(buffer);\n  for (let i = 0; i < length; i++) {\n    arr[i] = dataView.getUint16(i * 2, littleEndian);\n  }\n  return shaka.util.StringUtils.fromCharCode(arr);\n};\n\n\n/**\n * Creates a string from the given buffer, auto-detecting the encoding that is\n * being used.  If it cannot detect the encoding, it will throw an exception.\n *\n * @param {?BufferSource} data\n * @return {string}\n * @throws {shaka.util.Error}\n * @export\n */\nshaka.util.StringUtils.fromBytesAutoDetect = function(data) {\n  const StringUtils = shaka.util.StringUtils;\n\n  let uint8 = new Uint8Array(data);\n  if (uint8[0] == 0xef && uint8[1] == 0xbb && uint8[2] == 0xbf) {\n    return StringUtils.fromUTF8(uint8);\n  } else if (uint8[0] == 0xfe && uint8[1] == 0xff) {\n    return StringUtils.fromUTF16(uint8.subarray(2), false /* littleEndian */);\n  } else if (uint8[0] == 0xff && uint8[1] == 0xfe) {\n    return StringUtils.fromUTF16(uint8.subarray(2), true /* littleEndian */);\n  }\n\n  let isAscii = (function(arr, i) {\n    // arr[i] >= ' ' && arr[i] <= '~';\n    return arr.byteLength <= i || (arr[i] >= 0x20 && arr[i] <= 0x7e);\n  }.bind(null, uint8));\n\n  shaka.log.debug('Unable to find byte-order-mark, making an educated guess.');\n  if (uint8[0] == 0 && uint8[2] == 0) {\n    return StringUtils.fromUTF16(data, false /* littleEndian */);\n  } else if (uint8[1] == 0 && uint8[3] == 0) {\n    return StringUtils.fromUTF16(data, true /* littleEndian */);\n  } else if (isAscii(0) && isAscii(1) && isAscii(2) && isAscii(3)) {\n    return StringUtils.fromUTF8(data);\n  }\n\n  throw new shaka.util.Error(\n      shaka.util.Error.Severity.CRITICAL,\n      shaka.util.Error.Category.TEXT,\n      shaka.util.Error.Code.UNABLE_TO_DETECT_ENCODING);\n};\n\n\n/**\n * Creates a ArrayBuffer from the given string, converting to UTF-8 encoding.\n *\n * @param {string} str\n * @return {!ArrayBuffer}\n * @export\n */\nshaka.util.StringUtils.toUTF8 = function(str) {\n  // http://stackoverflow.com/a/13691499\n  // Converts the given string to a URI encoded string.  If a character falls\n  // in the ASCII range, it is not converted; otherwise it will be converted to\n  // a series of URI escape sequences according to UTF-8.\n  // Example: 'g#\u20ac' -> 'g#%E3%82%AC'\n  let encoded = encodeURIComponent(str);\n  // Convert each escape sequence individually into a character.  Each escape\n  // sequence is interpreted as a code-point, so if an escape sequence happens\n  // to be part of a multi-byte sequence, each byte will be converted to a\n  // single character.\n  // Example: 'g#%E3%82%AC' -> '\\x67\\x35\\xe3\\x82\\xac'\n  let utf8 = unescape(encoded);\n\n  let result = new Uint8Array(utf8.length);\n  for (let i = 0; i < utf8.length; ++i) {\n    result[i] = utf8.charCodeAt(i);\n  }\n  return result.buffer;\n};\n\n\n/**\n * Creates a new string from the given array of char codes.\n *\n * Using String.fromCharCode.apply is risky because you can trigger stack errors\n * on very large arrays.  This breaks up the array into several pieces to avoid\n * this.\n *\n * @param {!TypedArray} array\n * @return {string}\n */\nshaka.util.StringUtils.fromCharCode = function(array) {\n  let max = 16000;\n  let ret = '';\n  for (let i = 0; i < array.length; i += max) {\n    let subArray = array.subarray(i, i + max);\n    ret += String.fromCharCode.apply(null, subArray);\n  }\n\n  return ret;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Timer');\n\n\n/**\n * A simple cancelable timer.\n * @param {Function} callback\n * @constructor\n * @struct\n * @export\n */\nshaka.util.Timer = function(callback) {\n  /** @private {?number} */\n  this.id_ = null;\n\n  /** @private {Function} */\n  this.callback_ = (function() {\n    this.id_ = null;\n    callback();\n  }.bind(this));\n};\n\n\n/**\n * Cancel the timer, if it's running.\n * @export\n */\nshaka.util.Timer.prototype.cancel = function() {\n  if (this.id_ != null) {\n    clearTimeout(this.id_);\n    this.id_ = null;\n  }\n};\n\n\n/**\n * Schedule the timer, canceling any previous scheduling.\n * @param {number} seconds\n * @export\n */\nshaka.util.Timer.prototype.schedule = function(seconds) {\n  this.cancel();\n  this.id_ = setTimeout(this.callback_, seconds * 1000);\n};\n\n\n/**\n * Schedule the timer, canceling any previous scheduling. The timer will\n * automatically reschedule after the callback fires.\n * @param {number} seconds\n * @export\n */\nshaka.util.Timer.prototype.scheduleRepeated = function(seconds) {\n  this.cancel();\n  let repeat = (function() {\n    this.callback_();\n    this.id_ = setTimeout(repeat, seconds * 1000);\n  }.bind(this));\n  this.id_ = setTimeout(repeat, seconds * 1000);\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Uint8ArrayUtils');\n\ngoog.require('shaka.util.StringUtils');\n\n\n/**\n * @namespace shaka.util.Uint8ArrayUtils\n * @summary A set of Uint8Array utility functions.\n * @exportDoc\n */\n\n\n/**\n * Convert a Uint8Array to a base64 string.  The output will always use the\n * alternate encoding/alphabet also known as \"base64url\".\n * @param {!Uint8Array} arr\n * @param {boolean=} padding If true, pad the output with equals signs.\n *   Defaults to true.\n * @return {string}\n * @export\n */\nshaka.util.Uint8ArrayUtils.toBase64 = function(arr, padding) {\n  // btoa expects a \"raw string\" where each character is interpreted as a byte.\n  let bytes = shaka.util.StringUtils.fromCharCode(arr);\n  padding = (padding == undefined) ? true : padding;\n  let base64 = window.btoa(bytes).replace(/\\+/g, '-').replace(/\\//g, '_');\n  return padding ? base64 : base64.replace(/=*$/, '');\n};\n\n\n/**\n * Convert a base64 string to a Uint8Array.  Accepts either the standard\n * alphabet or the alternate \"base64url\" alphabet.\n * @param {string} str\n * @return {!Uint8Array}\n * @export\n */\nshaka.util.Uint8ArrayUtils.fromBase64 = function(str) {\n  // atob creates a \"raw string\" where each character is interpreted as a byte.\n  let bytes = window.atob(str.replace(/-/g, '+').replace(/_/g, '/'));\n  let result = new Uint8Array(bytes.length);\n  for (let i = 0; i < bytes.length; ++i) {\n    result[i] = bytes.charCodeAt(i);\n  }\n  return result;\n};\n\n\n/**\n * Convert a hex string to a Uint8Array.\n * @param {string} str\n * @return {!Uint8Array}\n * @export\n */\nshaka.util.Uint8ArrayUtils.fromHex = function(str) {\n  let arr = new Uint8Array(str.length / 2);\n  for (let i = 0; i < str.length; i += 2) {\n    arr[i / 2] = window.parseInt(str.substr(i, 2), 16);\n  }\n  return arr;\n};\n\n\n/**\n * Convert a Uint8Array to a hex string.\n * @param {!Uint8Array} arr\n * @return {string}\n * @export\n */\nshaka.util.Uint8ArrayUtils.toHex = function(arr) {\n  let hex = '';\n  for (let i = 0; i < arr.length; ++i) {\n    let value = arr[i].toString(16);\n    if (value.length == 1) value = '0' + value;\n    hex += value;\n  }\n  return hex;\n};\n\n\n/**\n * Compare two Uint8Arrays for equality.\n * @param {Uint8Array} arr1\n * @param {Uint8Array} arr2\n * @return {boolean}\n * @export\n */\nshaka.util.Uint8ArrayUtils.equal = function(arr1, arr2) {\n  if (!arr1 && !arr2) return true;\n  if (!arr1 || !arr2) return false;\n  if (arr1.length != arr2.length) return false;\n  for (let i = 0; i < arr1.length; ++i) {\n    if (arr1[i] != arr2[i]) return false;\n  }\n  return true;\n};\n\n\n/**\n * Concatenate Uint8Arrays.\n * @param {...!Uint8Array} varArgs\n * @return {!Uint8Array}\n * @export\n */\nshaka.util.Uint8ArrayUtils.concat = function(...varArgs) {\n  let totalLength = 0;\n  for (let i = 0; i < varArgs.length; ++i) {\n    totalLength += varArgs[i].length;\n  }\n\n  let result = new Uint8Array(totalLength);\n  let offset = 0;\n  for (let i = 0; i < varArgs.length; ++i) {\n    result.set(varArgs[i], offset);\n    offset += varArgs[i].length;\n  }\n  return result;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.DrmEngine');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.Functional');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.Iterables');\ngoog.require('shaka.util.MapUtils');\ngoog.require('shaka.util.MimeUtils');\ngoog.require('shaka.util.PublicPromise');\ngoog.require('shaka.util.StringUtils');\ngoog.require('shaka.util.Timer');\ngoog.require('shaka.util.Uint8ArrayUtils');\n\n\n/**\n * @param {shaka.media.DrmEngine.PlayerInterface} playerInterface\n *\n * @constructor\n * @struct\n * @implements {shaka.util.IDestroyable}\n */\nshaka.media.DrmEngine = function(playerInterface) {\n  /** @private {?shaka.media.DrmEngine.PlayerInterface} */\n  this.playerInterface_ = playerInterface;\n\n  /** @private {Set.<string>} */\n  this.supportedTypes_ = null;\n\n  /** @private {MediaKeys} */\n  this.mediaKeys_ = null;\n\n  /** @private {HTMLMediaElement} */\n  this.video_ = null;\n\n  /** @private {boolean} */\n  this.initialized_ = false;\n\n  /** @private {?shaka.extern.DrmInfo} */\n  this.currentDrmInfo_ = null;\n\n  /** @private {shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  /**\n   * @private {!Map.<MediaKeySession,\n   *           shaka.media.DrmEngine.SessionMetaData>}\n   */\n  this.activeSessions_ = new Map();\n\n  /** @private {!Array.<string>} */\n  this.offlineSessionIds_ = [];\n\n  /** @private {!shaka.util.PublicPromise} */\n  this.allSessionsLoaded_ = new shaka.util.PublicPromise();\n\n  /** @private {?shaka.extern.DrmConfiguration} */\n  this.config_ = null;\n\n  /** @private {?function(!shaka.util.Error)} */\n  this.onError_ = (err) => {\n    this.allSessionsLoaded_.reject(err);\n    playerInterface.onError(err);\n  };\n\n  /**\n   * The most recent key status information we have.\n   * We may not have announced this information to the outside world yet,\n   * which we delay to batch up changes and avoid spurious \"missing key\" errors.\n   * @private {!Map.<string, string>}\n   */\n  this.keyStatusByKeyId_ = new Map();\n\n  /**\n   * The key statuses most recently announced to other classes.\n   * We may have more up-to-date information being collected in\n   * this.keyStatusByKeyId_, which has not been batched up and released yet.\n   * @private {!Map.<string, string>}\n   */\n  this.announcedKeyStatusByKeyId_ = new Map();\n\n  /** @private {shaka.util.Timer} */\n  this.keyStatusTimer_ =\n      new shaka.util.Timer(() => this.processKeyStatusChanges_());\n\n  /** @private {boolean} */\n  this.destroyed_ = false;\n\n  /** @private {boolean} */\n  this.usePersistentLicenses_ = false;\n\n  /** @private {!Array.<!MediaKeyMessageEvent>} */\n  this.mediaKeyMessageEvents_ = [];\n\n  /** @private {boolean} */\n  this.initialRequestsSent_ = false;\n\n  /** @private {?shaka.util.Timer} */\n  this.expirationTimer_\n      = new shaka.util.Timer(() => this.pollExpiration_());\n  this.expirationTimer_.scheduleRepeated(1);\n\n  // Add a catch to the Promise to avoid console logs about uncaught errors.\n  const noop = () => {};\n  this.allSessionsLoaded_.catch(noop);\n};\n\n\n/**\n * @typedef {{\n *   loaded: boolean,\n *   initData: Uint8Array,\n *   oldExpiration: number,\n *   updatePromise: shaka.util.PublicPromise\n * }}\n *\n * @description A record to track sessions and suppress duplicate init data.\n * @property {boolean} loaded\n *   True once the key status has been updated (to a non-pending state).  This\n *   does not mean the session is 'usable'.\n * @property {Uint8Array} initData\n *   The init data used to create the session.\n * @property {!MediaKeySession} session\n *   The session object.\n * @property {number} oldExpiration\n *   The expiration of the session on the last check.  This is used to fire\n *   an event when it changes.\n * @property {shaka.util.PublicPromise} updatePromise\n *   An optional Promise that will be resolved/rejected on the next update()\n *   call.  This is used to track the 'license-release' message when calling\n *   remove().\n */\nshaka.media.DrmEngine.SessionMetaData;\n\n\n/**\n * @typedef {{\n *   netEngine: !shaka.net.NetworkingEngine,\n *   onError: function(!shaka.util.Error),\n *   onKeyStatus: function(!Object.<string,string>),\n *   onExpirationUpdated: function(string,number),\n *   onEvent: function(!Event)\n * }}\n *\n * @property {shaka.net.NetworkingEngine} netEngine\n *   The NetworkingEngine instance to use.  The caller retains ownership.\n * @property {function(!shaka.util.Error)} onError\n *   Called when an error occurs.  If the error is recoverable (see\n *   {@link shaka.util.Error}) then the caller may invoke either\n *   StreamingEngine.switch*() or StreamingEngine.seeked() to attempt recovery.\n * @property {function(!Object.<string,string>)} onKeyStatus\n *   Called when key status changes.  The argument is a map of hex key IDs to\n *   statuses.\n * @property {function(string,number)} onExpirationUpdated\n *   Called when the session expiration value changes.\n * @property {function(!Event)} onEvent\n *   Called when an event occurs that should be sent to the app.\n */\nshaka.media.DrmEngine.PlayerInterface;\n\n\n/** @override */\nshaka.media.DrmEngine.prototype.destroy = function() {\n  const Functional = shaka.util.Functional;\n  this.destroyed_ = true;\n\n  let async = [];\n\n  // Wait for sessions to close when destroying.\n  const sessions = this.activeSessions_.keys();\n  for (const session of sessions) {\n    shaka.log.v1('Closing session', session.sessionId);\n    // Ignore any errors when closing the sessions.  One such error would be\n    // an invalid state error triggered by closing a session which has not\n    // generated any key requests.\n    let isClosed = false;\n    let close =\n        session.close().then(() => { isClosed = true; }, Functional.noop);\n    // Due to a bug in Chrome, sometimes the Promise returned by close()\n    // never resolves.  See issue #1093 and https://crbug.com/690583.\n    let closeTimeout =\n        shaka.media.DrmEngine.timeout_(shaka.media.DrmEngine.CLOSE_TIMEOUT_)\n            .then(() => {\n              if (!isClosed) {\n                shaka.log.warning('Timeout waiting for session close');\n              }\n            });\n    async.push(Promise.race([close, closeTimeout]));\n  }\n  this.allSessionsLoaded_.reject();\n\n  if (this.eventManager_) {\n    async.push(this.eventManager_.destroy());\n  }\n\n  if (this.video_) {\n    goog.asserts.assert(!this.video_.src, 'video src must be removed first!');\n    async.push(this.video_.setMediaKeys(null).catch(Functional.noop));\n  }\n\n  if (this.expirationTimer_) {\n    this.expirationTimer_.cancel();\n    this.expirationTimer_ = null;\n  }\n\n  if (this.keyStatusTimer_) {\n    this.keyStatusTimer_.cancel();\n    this.keyStatusTimer_ = null;\n  }\n\n  this.currentDrmInfo_ = null;\n  this.supportedTypes_ = null;\n  this.mediaKeys_ = null;\n  this.video_ = null;\n  this.eventManager_ = null;\n  this.activeSessions_.clear();\n  this.offlineSessionIds_ = [];\n  this.config_ = null;\n  this.onError_ = null;\n  this.playerInterface_ = null;\n\n  return Promise.all(async);\n};\n\n\n/**\n * Called by the Player to provide an updated configuration any time it changes.\n * Must be called at least once before init().\n *\n * @param {shaka.extern.DrmConfiguration} config\n */\nshaka.media.DrmEngine.prototype.configure = function(config) {\n  this.config_ = config;\n};\n\n\n/**\n * Initialize the drm engine for storing and deleting stored content.\n *\n * @param {!Array.<shaka.extern.Variant>} variants\n *    The variants that are going to be stored.\n * @param {boolean} usePersistentLicenses\n *    Whether or not persistent licenses should be requested and stored for\n *    |manifest|.\n * @return {!Promise}\n */\nshaka.media.DrmEngine.prototype.initForStorage = function(\n    variants, usePersistentLicenses) {\n  // There are two cases for this call:\n  //  1. We are about to store a manifest - in that case, there are no offline\n  //     sessions and therefore no offline session ids.\n  //  2. We are about to remove the offline sessions for this manifest - in\n  //     that case, we don't need to know about them right now either as\n  //     we will be told which ones to remove later.\n  this.offlineSessionIds_ = [];\n\n  // What we really need to know is whether or not they are expecting to use\n  // persistent licenses.\n  this.usePersistentLicenses_ = usePersistentLicenses;\n\n  return this.init_(variants);\n};\n\n\n/**\n * Initialize the drm engine for playback operations.\n *\n * @param {!Array.<shaka.extern.Variant>} variants\n *    The variants that we want to support playing.\n * @param {!Array.<string>} offlineSessionIds\n * @return {!Promise}\n */\nshaka.media.DrmEngine.prototype.initForPlayback = function(\n    variants, offlineSessionIds) {\n  this.offlineSessionIds_ = offlineSessionIds;\n  this.usePersistentLicenses_ = offlineSessionIds.length > 0;\n\n  return this.init_(variants);\n};\n\n\n/**\n * Initializes the drm engine for removing persistent sessions.  Only the\n * removeSession(s) methods will work correctly, creating new sessions may not\n * work as desired.\n *\n * @param {string} keySystem\n * @param {string} licenseServerUri\n * @param {Uint8Array} serverCertificate\n * @param {!Array.<MediaKeySystemMediaCapability>} audioCapabilities\n * @param {!Array.<MediaKeySystemMediaCapability>} videoCapabilities\n * @return {!Promise}\n */\nshaka.media.DrmEngine.prototype.initForRemoval = function(\n    keySystem, licenseServerUri, serverCertificate,\n    audioCapabilities, videoCapabilities) {\n  /** @type {!Map.<string, MediaKeySystemConfiguration>} */\n  const configsByKeySystem = new Map();\n  configsByKeySystem.set(keySystem, {\n    audioCapabilities: audioCapabilities,\n    videoCapabilities: videoCapabilities,\n    distinctiveIdentifier: 'optional',\n    persistentState: 'required',\n    sessionTypes: ['persistent-license'],\n    label: keySystem,\n    drmInfos: [{\n      keySystem: keySystem,\n      licenseServerUri: licenseServerUri,\n      distinctiveIdentifierRequired: false,\n      persistentStateRequired: true,\n      audioRobustness: '',  // Not required by queryMediaKeys_\n      videoRobustness: '',  // Same\n      serverCertificate: serverCertificate,\n      initData: null,\n      keyIds: null,\n    }],  // Tracked by us, ignored by EME.\n  });\n\n  return this.queryMediaKeys_(configsByKeySystem);\n};\n\n\n/**\n * Negotiate for a key system and set up MediaKeys.\n * This will assume that both |usePersistentLicences_| and |offlineSessionIds_|\n * have been properly set.\n *\n * @param {!Array.<shaka.extern.Variant>} variants\n *    The variants that we expect to operate with during the drm engine's\n *    lifespan of the drm engine.\n * @return {!Promise} Resolved if/when a key system has been chosen.\n * @private\n */\nshaka.media.DrmEngine.prototype.init_ = function(variants) {\n  goog.asserts.assert(this.config_,\n      'DrmEngine configure() must be called before init()!');\n\n  const hadDrmInfo = variants.some((v) => v.drmInfos.length > 0);\n\n  // When preparing to play live streams, it is possible that we won't know\n  // about some upcoming encrypted content. If we initialize the drm engine\n  // with no key systems, we won't be able to play when the encrypted content\n  // comes.\n  //\n  // To avoid this, we will set the drm engine up to work with as many key\n  // systems as possible so that we will be ready.\n  if (!hadDrmInfo) {\n    const servers = shaka.util.MapUtils.asMap(this.config_.servers);\n    shaka.media.DrmEngine.replaceDrmInfo_(variants, servers);\n  }\n\n  // ClearKey config overrides the manifest DrmInfo if present. The variants\n  // are modified so that filtering in Player still works.\n  /** @type {?shaka.extern.DrmInfo} */\n  const clearKeyDrmInfo = this.configureClearKey_();\n  if (clearKeyDrmInfo) {\n    for (const variant of variants) {\n      variant.drmInfos = [clearKeyDrmInfo];\n    }\n  }\n\n  // Make sure all the drm infos are valid and filled in correctly.\n  for (const variant of variants) {\n    for (const info of variant.drmInfos) {\n      shaka.media.DrmEngine.fillInDrmInfoDefaults_(\n          info,\n          shaka.util.MapUtils.asMap(this.config_.servers),\n          shaka.util.MapUtils.asMap(this.config_.advanced || {}));\n    }\n  }\n\n  /** @type {!Map.<string, MediaKeySystemConfiguration>} */\n  const configsByKeySystem = this.prepareMediaKeyConfigsForVariants_(variants);\n\n  // TODO(vaage): Find an explanation for the difference between this\n  //  \"unencrypted\" form and the \"no drm info unencrypted form\" and express\n  //  that difference here.\n  if (!configsByKeySystem.size) {\n    // Unencrypted.\n    this.initialized_ = true;\n    return Promise.resolve();\n  }\n\n  const p = this.queryMediaKeys_(configsByKeySystem);\n\n  // TODO(vaage): Look into the assertion below. If we do not have any drm info,\n  //  we create drm info so that content can play if it has drm info later.\n  //  However it is okay if we fail to initialize? If we fail to initialize, it\n  //  means we won't be able to play the later-encrypted content, which is no\n  //  okay.\n\n  // If the content did not originally have any drm info, then it doesn't matter\n  // if we fail to initialize the drm engine, because we won't need it anyway.\n  return hadDrmInfo ?\n         p :\n         p.catch(() => {});\n};\n\n\n/**\n * Attach MediaKeys to the video element and start processing events.\n * @param {HTMLMediaElement} video\n * @return {!Promise}\n */\nshaka.media.DrmEngine.prototype.attach = function(video) {\n  if (!this.mediaKeys_) {\n    // Unencrypted, or so we think.  We listen for encrypted events in order to\n    // warn when the stream is encrypted, even though the manifest does not know\n    // it.\n    // Don't complain about this twice, so just listenOnce().\n    this.eventManager_.listenOnce(video, 'encrypted', (event) => {\n      this.onError_(new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.DRM,\n          shaka.util.Error.Code.ENCRYPTED_CONTENT_WITHOUT_DRM_INFO));\n    });\n    return Promise.resolve();\n  }\n\n  this.video_ = video;\n\n  this.eventManager_.listenOnce(this.video_, 'play', () => this.onPlay_());\n\n  let setMediaKeys = this.video_.setMediaKeys(this.mediaKeys_);\n  setMediaKeys = setMediaKeys.catch(function(exception) {\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.FAILED_TO_ATTACH_TO_VIDEO,\n        exception.message));\n  });\n\n  let setServerCertificate = this.setServerCertificate();\n\n  return Promise.all([setMediaKeys, setServerCertificate]).then(() => {\n    if (this.destroyed_) return Promise.reject();\n\n    this.createOrLoad();\n    if (!this.currentDrmInfo_.initData.length &&\n        !this.offlineSessionIds_.length) {\n      // Explicit init data for any one stream or an offline session is\n      // sufficient to suppress 'encrypted' events for all streams.\n      const cb = (e) =>\n          this.newInitData(e.initDataType, new Uint8Array(e.initData));\n      this.eventManager_.listen(this.video_, 'encrypted', cb);\n    }\n  }).catch((error) => {\n    if (this.destroyed_) return Promise.resolve();  // Ignore destruction errors\n    return Promise.reject(error);\n  });\n};\n\n\n/**\n * Sets the server certificate based on the current DrmInfo.\n *\n * @return {!Promise}\n */\nshaka.media.DrmEngine.prototype.setServerCertificate = async function() {\n  goog.asserts.assert(this.initialized_,\n    'Must call init() before setServerCertificate');\n\n  if (this.mediaKeys_ &&\n      this.currentDrmInfo_ &&\n      this.currentDrmInfo_.serverCertificate &&\n      this.currentDrmInfo_.serverCertificate.length) {\n    try {\n      const supported = await this.mediaKeys_.setServerCertificate(\n          this.currentDrmInfo_.serverCertificate);\n      if (!supported) {\n        shaka.log.warning('Server certificates are not supported by the key' +\n                          ' system.  The server certificate has been ignored.');\n      }\n    } catch (exception) {\n      return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.INVALID_SERVER_CERTIFICATE,\n        exception.message));\n    }\n  }\n};\n\n\n/**\n * Remove an offline session and delete it's data. This can only be called\n * after a successful call to |init|. This will wait until the 'license-release'\n * message is handled. The returned Promise will be rejected if there is an\n * error releasing the license.\n *\n * @param {string} sessionId\n * @return {!Promise}\n */\nshaka.media.DrmEngine.prototype.removeSession = async function(sessionId) {\n  goog.asserts.assert(this.mediaKeys_, 'Must call init() before removeSession');\n\n  const session = await this.loadOfflineSession_(sessionId);\n\n  // This will be null on error, such as session not found.\n  if (!session) {\n    shaka.log.v2('Ignoring attempt to remove missing session', sessionId);\n    return;\n  }\n\n  // TODO: Consider adding a timeout to get the 'message' event.\n  // Note that the 'message' event will get raised after the remove()\n  // promise resolves.\n  const tasks = [];\n\n  const found = this.activeSessions_.get(session);\n  if (found) {\n    // This will force us to wait until the 'license-release' message has been\n    // handled.\n    found.updatePromise = new shaka.util.PublicPromise();\n    tasks.push(found.updatePromise);\n  }\n\n  shaka.log.v2('Attempting to remove session', sessionId);\n  tasks.push(session.remove());\n\n  await Promise.all(tasks);\n};\n\n/**\n * Creates the sessions for the init data and waits for them to become ready.\n *\n * @return {!Promise}\n */\nshaka.media.DrmEngine.prototype.createOrLoad = function() {\n  // Create temp sessions.\n  let initDatas = this.currentDrmInfo_ ? this.currentDrmInfo_.initData : [];\n  initDatas.forEach((initDataOverride) => {\n    return this.createTemporarySession_(initDataOverride.initDataType,\n                                        initDataOverride.initData);\n  });\n\n  // Load each session.\n  this.offlineSessionIds_.forEach((sessionId) => {\n    return this.loadOfflineSession_(sessionId);\n  });\n\n  // If we have no sessions, we need to resolve the promise right now or else\n  // it will never get resolved.\n  if (!initDatas.length && !this.offlineSessionIds_.length) {\n    this.allSessionsLoaded_.resolve();\n  }\n\n  return this.allSessionsLoaded_;\n};\n\n\n/**\n * Called when new initialization data is encountered.  If this data hasn't\n * been seen yet, this will create a new session for it.\n *\n * @param {string} initDataType\n * @param {!Uint8Array} initData\n */\nshaka.media.DrmEngine.prototype.newInitData = function(initDataType, initData) {\n  // Aliases:\n  const Uint8ArrayUtils = shaka.util.Uint8ArrayUtils;\n\n  // Suppress duplicate init data.\n  // Note that some init data are extremely large and can't portably be used as\n  // keys in a dictionary.\n  const metadatas = this.activeSessions_.values();\n  for (const metadata of metadatas) {\n    if (Uint8ArrayUtils.equal(initData, metadata.initData)) {\n      shaka.log.debug('Ignoring duplicate init data.');\n      return;\n    }\n  }\n\n  this.createTemporarySession_(initDataType, initData);\n};\n\n\n/** @return {boolean} */\nshaka.media.DrmEngine.prototype.initialized = function() {\n  return this.initialized_;\n};\n\n\n/** @return {string} */\nshaka.media.DrmEngine.prototype.keySystem = function() {\n  return this.currentDrmInfo_ ? this.currentDrmInfo_.keySystem : '';\n};\n\n\n/**\n * Returns an array of the media types supported by the current key system.\n * These will be full mime types (e.g. 'video/webm; codecs=\"vp8\"').\n *\n * @return {Array.<string>}\n */\nshaka.media.DrmEngine.prototype.getSupportedTypes = function() {\n  return this.supportedTypes_ ? Array.from(this.supportedTypes_) : null;\n};\n\n\n/**\n * Returns the ID of the sessions currently active.\n *\n * @return {!Array.<string>}\n */\nshaka.media.DrmEngine.prototype.getSessionIds = function() {\n  const sessions = this.activeSessions_.keys();\n  const ids = shaka.util.Iterables.map(sessions, (s) => s.sessionId);\n\n  // TODO: Make |getSessionIds| return |Iterable| instead of |Array|.\n  return Array.from(ids);\n};\n\n\n/**\n * Returns the next expiration time, or Infinity.\n * @return {number}\n */\nshaka.media.DrmEngine.prototype.getExpiration = function() {\n  // This will equal Infinity if there are no entries.\n  let min = Infinity;\n\n  const sessions = this.activeSessions_.keys();\n  for (const session of sessions) {\n    if (!isNaN(session.expiration)) {\n      min = Math.min(min, session.expiration);\n    }\n  }\n\n  return min;\n};\n\n\n/**\n * Returns the DrmInfo that was used to initialize the current key system.\n *\n * @return {?shaka.extern.DrmInfo}\n */\nshaka.media.DrmEngine.prototype.getDrmInfo = function() {\n  return this.currentDrmInfo_;\n};\n\n\n/**\n * Returns the current key statuses.\n *\n * @return {!Object.<string, string>}\n */\nshaka.media.DrmEngine.prototype.getKeyStatuses = function() {\n  return shaka.util.MapUtils.asObject(this.announcedKeyStatusByKeyId_);\n};\n\n\n/**\n * @param {!Array.<shaka.extern.Variant>} variants\n * @see https://bit.ly/EmeConfig for MediaKeySystemConfiguration spec\n * @return {!Map.<string, MediaKeySystemConfiguration>}\n * @private\n */\nshaka.media.DrmEngine.prototype.prepareMediaKeyConfigsForVariants_ = function(\n    variants) {\n  // Get all the drm info so that we can avoid using nested loops when we just\n  // need the drm info.\n  const allDrmInfo = new Set();\n  for (const variant of variants) {\n    for (const info of variant.drmInfos) {\n      allDrmInfo.add(info);\n    }\n  }\n\n  // Make sure all the drm infos are valid and filled in correctly.\n  for (const info of allDrmInfo) {\n    shaka.media.DrmEngine.fillInDrmInfoDefaults_(\n        info,\n        shaka.util.MapUtils.asMap(this.config_.servers),\n        shaka.util.MapUtils.asMap(this.config_.advanced || {}));\n  }\n\n  const persistentState =\n      this.usePersistentLicenses_ ? 'required' : 'optional';\n  const sessionTypes =\n      this.usePersistentLicenses_ ? ['persistent-license'] : ['temporary'];\n\n  const configs = new Map();\n\n  // Create a config entry for each key system.\n  for (const info of allDrmInfo) {\n    const config = {\n      // Ignore initDataTypes.\n      audioCapabilities: [],\n      videoCapabilities: [],\n      distinctiveIdentifier: 'optional',\n      persistentState: persistentState,\n      sessionTypes: sessionTypes,\n      label: info.keySystem,\n      drmInfos: [],  // Tracked by us, ignored by EME.\n    };\n\n    // Multiple calls to |set| will still respect the insertion order of the\n    // first call to |set| for a given key.\n    configs.set(info.keySystem, config);\n  }\n\n  // Connect each key system with each stream using it.\n  for (const variant of variants) {\n    /** @type {?shaka.extern.Stream} */\n    const audio = variant.audio;\n    /** @type {?shaka.extern.Stream} */\n    const video = variant.video;\n\n    /** @type {string} */\n    const audioMimeType =\n        audio ?\n        shaka.util.MimeUtils.getFullType(audio.mimeType, audio.codecs) :\n        '';\n    /** @type {string} */\n    const videoMimeType =\n        video ?\n        shaka.util.MimeUtils.getFullType(video.mimeType, video.codecs) :\n        '';\n\n    // Add the last bit of information to each config;\n    for (const info of variant.drmInfos) {\n      const config = configs.get(info.keySystem);\n      goog.asserts.assert(\n          config,\n          'Any missing configs should have be filled in before.');\n\n      config.drmInfos.push(info);\n\n      if (info.distinctiveIdentifierRequired) {\n        config.distinctiveIdentifier = 'required';\n      }\n\n      if (info.persistentStateRequired) {\n        config.persistentState = 'required';\n      }\n\n      if (audio) {\n        /** @type {MediaKeySystemMediaCapability} */\n        const capability = {\n          robustness: info.audioRobustness || '',\n          contentType: audioMimeType,\n        };\n\n        config.audioCapabilities.push(capability);\n      }\n\n      if (video) {\n        /** @type {MediaKeySystemMediaCapability} */\n        const capability = {\n          robustness: info.videoRobustness || '',\n          contentType: videoMimeType,\n        };\n\n        config.videoCapabilities.push(capability);\n      }\n    }\n  }\n\n  return configs;\n};\n\n\n/**\n * @param {!Map.<string, MediaKeySystemConfiguration>} configsByKeySystem\n *   A dictionary of configs, indexed by key system, with an iteration order\n *   (insertion order) that reflects the preference for the application.\n * @return {!Promise} Resolved if/when a key system has been chosen.\n * @private\n */\nshaka.media.DrmEngine.prototype.queryMediaKeys_ = function(configsByKeySystem) {\n  if (configsByKeySystem.size == 1 && configsByKeySystem.has('')) {\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.NO_RECOGNIZED_KEY_SYSTEMS));\n  }\n\n  // If there are no tracks of a type, these should be not present.\n  // Otherwise the query will fail.\n  for (const config of configsByKeySystem.values()) {\n    if (config.audioCapabilities.length == 0) {\n      delete config.audioCapabilities;\n    }\n    if (config.videoCapabilities.length == 0) {\n      delete config.videoCapabilities;\n    }\n  }\n\n  // Wait to reject this initial Promise until we have built the entire chain.\n  let instigator = new shaka.util.PublicPromise();\n  let p = instigator;\n\n  // Try key systems with configured license servers first.  We only have to try\n  // key systems without configured license servers for diagnostic reasons, so\n  // that we can differentiate between \"none of these key systems are available\"\n  // and \"some are available, but you did not configure them properly.\"  The\n  // former takes precedence.\n  [true, false].forEach(function(shouldHaveLicenseServer) {\n    configsByKeySystem.forEach((config, keySystem) => {\n      let hasLicenseServer = config.drmInfos.some(function(info) {\n        return !!info.licenseServerUri;\n      });\n      if (hasLicenseServer != shouldHaveLicenseServer) return;\n\n      p = p.catch(function() {\n        if (this.destroyed_) return Promise.reject();\n        return navigator.requestMediaKeySystemAccess(keySystem, [config]);\n      }.bind(this));\n    });\n  }.bind(this));\n\n  p = p.catch(() => {\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.REQUESTED_KEY_SYSTEM_CONFIG_UNAVAILABLE));\n  });\n\n  p = p.then(function(mediaKeySystemAccess) {\n    if (this.destroyed_) return Promise.reject();\n\n    // TODO: Remove once Edge has released a fix for https://bit.ly/2IcEgv0\n    let isEdge = navigator.userAgent.includes('Edge/');\n\n    // Store the capabilities of the key system.\n    let realConfig = mediaKeySystemAccess.getConfiguration();\n    let audioCaps = realConfig.audioCapabilities || [];\n    let videoCaps = realConfig.videoCapabilities || [];\n\n    // Get the set of supported content types from the audio and video\n    // capabilities. Avoid duplicates so that it is easier to read what is\n    // supported.\n    this.supportedTypes_ = new Set();\n    for (const cap of audioCaps) { this.supportedTypes_.add(cap.contentType); }\n    for (const cap of videoCaps) { this.supportedTypes_.add(cap.contentType); }\n\n    if (isEdge) {\n      // Edge 14 does not report correct capabilities.  It will only report the\n      // first MIME type even if the others are supported.  To work around this,\n      // set the supported types to null, which Player will use as a signal that\n      // the information is not available.\n      // See: https://bit.ly/2IcEgv0\n      this.supportedTypes_ = null;\n    }\n    goog.asserts.assert(!this.supportedTypes_ || this.supportedTypes_.size,\n                        'We should get at least one supported MIME type');\n\n    this.currentDrmInfo_ = shaka.media.DrmEngine.createDrmInfoFor_(\n        mediaKeySystemAccess.keySystem,\n        configsByKeySystem.get(mediaKeySystemAccess.keySystem));\n\n    if (!this.currentDrmInfo_.licenseServerUri) {\n      return Promise.reject(new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.DRM,\n          shaka.util.Error.Code.NO_LICENSE_SERVER_GIVEN));\n    }\n\n    return mediaKeySystemAccess.createMediaKeys();\n  }.bind(this)).then(function(mediaKeys) {\n    if (this.destroyed_) return Promise.reject();\n    shaka.log.info('Created MediaKeys object for key system',\n                   this.currentDrmInfo_.keySystem);\n\n    this.mediaKeys_ = mediaKeys;\n    this.initialized_ = true;\n  }.bind(this)).catch(function(exception) {\n    if (this.destroyed_) return Promise.resolve();  // Ignore destruction errors\n\n    // Don't rewrap a shaka.util.Error from earlier in the chain:\n    this.currentDrmInfo_ = null;\n    this.supportedTypes_ = null;\n    if (exception instanceof shaka.util.Error) {\n      return Promise.reject(exception);\n    }\n\n    // We failed to create MediaKeys.  This generally shouldn't happen.\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.FAILED_TO_CREATE_CDM,\n        exception.message));\n  }.bind(this));\n\n  instigator.reject();\n  return p;\n};\n\n\n/**\n * Create a DrmInfo using configured clear keys.\n * The server URI will be a data URI which decodes to a clearkey license.\n * @return {?shaka.extern.DrmInfo} or null if clear keys are not configured.\n * @private\n * @see https://bit.ly/2K8gOnv for the spec on the clearkey license format.\n */\nshaka.media.DrmEngine.prototype.configureClearKey_ = function() {\n  const clearKeys = shaka.util.MapUtils.asMap(this.config_.clearKeys);\n  if (clearKeys.size == 0) { return null; }\n\n  const StringUtils = shaka.util.StringUtils;\n  const Uint8ArrayUtils = shaka.util.Uint8ArrayUtils;\n  let keys = [];\n  let keyIds = [];\n\n  clearKeys.forEach((keyHex, keyIdHex) => {\n    let keyId = Uint8ArrayUtils.fromHex(keyIdHex);\n    let key = Uint8ArrayUtils.fromHex(keyHex);\n    let keyObj = {\n      kty: 'oct',\n      kid: Uint8ArrayUtils.toBase64(keyId, false),\n      k: Uint8ArrayUtils.toBase64(key, false),\n    };\n\n    keys.push(keyObj);\n    keyIds.push(keyObj.kid);\n  });\n\n  let jwkSet = {keys: keys};\n  let license = JSON.stringify(jwkSet);\n\n  // Use the keyids init data since is suggested by EME.\n  // Suggestion: https://bit.ly/2JYcNTu\n  // Format: https://www.w3.org/TR/eme-initdata-keyids/\n  let initDataStr = JSON.stringify({'kids': keyIds});\n  let initData = new Uint8Array(StringUtils.toUTF8(initDataStr));\n  let initDatas = [{initData: initData, initDataType: 'keyids'}];\n\n  return {\n    keySystem: 'org.w3.clearkey',\n    licenseServerUri: 'data:application/json;base64,' + window.btoa(license),\n    distinctiveIdentifierRequired: false,\n    persistentStateRequired: false,\n    audioRobustness: '',\n    videoRobustness: '',\n    serverCertificate: null,\n    initData: initDatas,\n    keyIds: [],\n  };\n};\n\n\n/**\n * @param {string} sessionId\n * @return {!Promise.<MediaKeySession>}\n * @private\n */\nshaka.media.DrmEngine.prototype.loadOfflineSession_ = function(sessionId) {\n  let session;\n  try {\n    shaka.log.v1('Attempting to load an offline session', sessionId);\n    session = this.mediaKeys_.createSession('persistent-license');\n  } catch (exception) {\n    let error = new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.FAILED_TO_CREATE_SESSION,\n        exception.message);\n    this.onError_(error);\n    return Promise.reject(error);\n  }\n\n  this.eventManager_.listen(session, 'message',\n      /** @type {shaka.util.EventManager.ListenerType} */(\n          this.onSessionMessage_.bind(this)));\n  this.eventManager_.listen(session, 'keystatuseschange',\n      this.onKeyStatusesChange_.bind(this));\n\n  const metadata = {\n    initData: null,\n    loaded: false,\n    oldExpiration: Infinity,\n    updatePromise: null,\n  };\n  this.activeSessions_.set(session, metadata);\n\n  return session.load(sessionId).then(function(present) {\n    if (this.destroyed_) return;\n    shaka.log.v2('Loaded offline session', sessionId, present);\n\n    if (!present) {\n      this.activeSessions_.delete(session);\n\n      this.onError_(new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.DRM,\n          shaka.util.Error.Code.OFFLINE_SESSION_REMOVED));\n      return;\n    }\n\n    // TODO: We should get a key status change event.  Remove once Chrome CDM\n    // is fixed.\n    metadata.loaded = true;\n    if (this.areAllSessionsLoaded_()) {\n      this.allSessionsLoaded_.resolve();\n    }\n\n    return session;\n  }.bind(this), function(error) {\n    if (this.destroyed_) return;\n\n    this.activeSessions_.delete(session);\n\n    this.onError_(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.FAILED_TO_CREATE_SESSION,\n        error.message));\n  }.bind(this));\n};\n\n\n/**\n * @param {string} initDataType\n * @param {!Uint8Array} initData\n * @private\n */\nshaka.media.DrmEngine.prototype.createTemporarySession_ =\n    function(initDataType, initData) {\n  let session;\n  try {\n    if (this.usePersistentLicenses_) {\n      shaka.log.v1('Creating new persistent session');\n      session = this.mediaKeys_.createSession('persistent-license');\n    } else {\n      shaka.log.v1('Creating new temporary session');\n      session = this.mediaKeys_.createSession();\n    }\n  } catch (exception) {\n    this.onError_(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.FAILED_TO_CREATE_SESSION,\n        exception.message));\n    return;\n  }\n\n  this.eventManager_.listen(session, 'message',\n      /** @type {shaka.util.EventManager.ListenerType} */(\n          this.onSessionMessage_.bind(this)));\n  this.eventManager_.listen(session, 'keystatuseschange',\n      this.onKeyStatusesChange_.bind(this));\n\n  const metadata = {\n    initData: initData,\n    loaded: false,\n    oldExpiration: Infinity,\n    updatePromise: null,\n  };\n  this.activeSessions_.set(session, metadata);\n\n  session.generateRequest(initDataType, initData.buffer).catch((error) => {\n    if (this.destroyed_) return;\n\n    this.activeSessions_.delete(session);\n\n    this.onError_(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.FAILED_TO_GENERATE_LICENSE_REQUEST,\n        error.message));\n  });\n};\n\n\n/**\n * @param {!MediaKeyMessageEvent} event\n * @private\n */\nshaka.media.DrmEngine.prototype.onSessionMessage_ = function(event) {\n  if (this.delayLicenseRequest_()) {\n    this.mediaKeyMessageEvents_.push(event);\n  } else {\n    this.sendLicenseRequest_(event);\n  }\n};\n\n\n/**\n * @return {boolean}\n * @private\n */\nshaka.media.DrmEngine.prototype.delayLicenseRequest_ = function() {\n  return (this.config_.delayLicenseRequestUntilPlayed &&\n          this.video_.paused && !this.initialRequestsSent_);\n};\n\n\n/**\n * Sends a license request.\n * @param {!MediaKeyMessageEvent} event\n * @private\n */\nshaka.media.DrmEngine.prototype.sendLicenseRequest_ = function(event) {\n  /** @type {!MediaKeySession} */\n  let session = event.target;\n  shaka.log.v2('Sending license request for session', session.sessionId);\n\n  const metadata = this.activeSessions_.get(session);\n\n  let url = this.currentDrmInfo_.licenseServerUri;\n  const advancedConfig = this.config_.advanced[this.currentDrmInfo_.keySystem];\n  if (event.messageType == 'individualization-request' && advancedConfig &&\n      advancedConfig.individualizationServer) {\n    url = advancedConfig.individualizationServer;\n  }\n\n  const requestType = shaka.net.NetworkingEngine.RequestType.LICENSE;\n  let request = shaka.net.NetworkingEngine.makeRequest(\n      [url], this.config_.retryParameters);\n  request.body = event.message;\n  request.method = 'POST';\n  request.licenseRequestType = event.messageType;\n  // NOTE: allowCrossSiteCredentials can be set in a request filter.\n\n  if (this.currentDrmInfo_.keySystem == 'com.microsoft.playready' ||\n      this.currentDrmInfo_.keySystem == 'com.chromecast.playready') {\n    this.unpackPlayReadyRequest_(request);\n  }\n\n  this.playerInterface_.netEngine.request(requestType, request).promise\n      .then(function(response) {\n        if (this.destroyed_) return Promise.reject();\n\n        // Request succeeded, now pass the response to the CDM.\n        return session.update(response.data).then(function() {\n          let event = new shaka.util.FakeEvent('drmsessionupdate');\n          this.playerInterface_.onEvent(event);\n\n          if (metadata) {\n            if (metadata.updatePromise) {\n              metadata.updatePromise.resolve();\n            }\n            // In case there are no key statuses, consider this session loaded\n            // after a reasonable timeout.  It should definitely not take 5\n            // seconds to process a license.\n            const loadTimeout = shaka.media.DrmEngine.timeout_(\n                shaka.media.DrmEngine.SESSION_LOAD_TIMEOUT_);\n            loadTimeout.then(() => {\n              metadata.loaded = true;\n              if (this.areAllSessionsLoaded_()) {\n                this.allSessionsLoaded_.resolve();\n              }\n            });\n          }\n        }.bind(this));\n      }.bind(this), function(error) {\n        // Ignore destruction errors\n        if (this.destroyed_) return Promise.resolve();\n\n        // Request failed!\n        goog.asserts.assert(error instanceof shaka.util.Error,\n                            'Wrong NetworkingEngine error type!');\n        let shakaErr = new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.DRM,\n            shaka.util.Error.Code.LICENSE_REQUEST_FAILED,\n            error);\n        this.onError_(shakaErr);\n        if (metadata && metadata.updatePromise) {\n          metadata.updatePromise.reject(shakaErr);\n        }\n      }.bind(this)).catch(function(error) {\n        // Ignore destruction errors\n        if (this.destroyed_) return Promise.resolve();\n\n        // Session update failed!\n        let shakaErr = new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.DRM,\n            shaka.util.Error.Code.LICENSE_RESPONSE_REJECTED,\n            error.message);\n        this.onError_(shakaErr);\n        if (metadata && metadata.updatePromise) {\n          metadata.updatePromise.reject(shakaErr);\n        }\n      }.bind(this));\n};\n\n\n/**\n * Unpacks PlayReady license requests.  Modifies the request object.\n * @param {shaka.extern.Request} request\n * @private\n */\nshaka.media.DrmEngine.prototype.unpackPlayReadyRequest_ = function(request) {\n  // On IE and Edge, the raw license message is UTF-16-encoded XML.  We need to\n  // unpack the Challenge element (base64-encoded string containing the actual\n  // license request) and any HttpHeader elements (sent as request headers).\n\n  // Example XML:\n\n  // <PlayReadyKeyMessage type=\"LicenseAcquisition\">\n  //   <LicenseAcquisition Version=\"1\">\n  //     <Challenge encoding=\"base64encoded\">{Base64Data}</Challenge>\n  //     <HttpHeaders>\n  //       <HttpHeader>\n  //         <name>Content-Type</name>\n  //         <value>text/xml; charset=utf-8</value>\n  //       </HttpHeader>\n  //       <HttpHeader>\n  //         <name>SOAPAction</name>\n  //         <value>http://schemas.microsoft.com/DRM/etc/etc</value>\n  //       </HttpHeader>\n  //     </HttpHeaders>\n  //   </LicenseAcquisition>\n  // </PlayReadyKeyMessage>\n\n  let xml = shaka.util.StringUtils.fromUTF16(\n      request.body, true /* littleEndian */, true /* noThrow */);\n  if (!xml.includes('PlayReadyKeyMessage')) {\n    // This does not appear to be a wrapped message as on IE and Edge.  Some\n    // clients do not need this unwrapping, so we will assume this is one of\n    // them.  Note that \"xml\" at this point probably looks like random garbage,\n    // since we interpreted UTF-8 as UTF-16.\n    shaka.log.debug('PlayReady request is already unwrapped.');\n    request.headers['Content-Type'] = 'text/xml; charset=utf-8';\n    return;\n  }\n  shaka.log.debug('Unwrapping PlayReady request.');\n  let dom = new DOMParser().parseFromString(xml, 'application/xml');\n\n  // Set request headers.\n  let headers = dom.getElementsByTagName('HttpHeader');\n  for (let i = 0; i < headers.length; ++i) {\n    let name = headers[i].querySelector('name');\n    let value = headers[i].querySelector('value');\n    goog.asserts.assert(name && value, 'Malformed PlayReady headers!');\n    request.headers[name.textContent] = value.textContent;\n  }\n\n  // Unpack the base64-encoded challenge.\n  let challenge = dom.querySelector('Challenge');\n  goog.asserts.assert(challenge, 'Malformed PlayReady challenge!');\n  goog.asserts.assert(challenge.getAttribute('encoding') == 'base64encoded',\n                      'Unexpected PlayReady challenge encoding!');\n  request.body =\n      shaka.util.Uint8ArrayUtils.fromBase64(challenge.textContent).buffer;\n};\n\n\n/**\n * @param {!Event} event\n * @private\n * @suppress {invalidCasts} to swap keyId and status\n */\nshaka.media.DrmEngine.prototype.onKeyStatusesChange_ = function(event) {\n  const session = /** @type {!MediaKeySession} */(event.target);\n  shaka.log.v2('Key status changed for session', session.sessionId);\n\n  // Locate the session in the active sessions list.\n  const found = this.activeSessions_.get(session);\n  goog.asserts.assert(found, 'Key status change for inactive session!');\n  if (!found) { return; }\n\n  let keyStatusMap = session.keyStatuses;\n  let hasExpiredKeys = false;\n\n  keyStatusMap.forEach(function(status, keyId) {\n    // The spec has changed a few times on the exact order of arguments here.\n    // As of 2016-06-30, Edge has the order reversed compared to the current\n    // EME spec.  Given the back and forth in the spec, it may not be the only\n    // one.  Try to detect this and compensate:\n    if (typeof keyId == 'string') {\n      let tmp = keyId;\n      keyId = /** @type {ArrayBuffer} */(status);\n      status = /** @type {string} */(tmp);\n    }\n\n    // Microsoft's implementation in Edge seems to present key IDs as\n    // little-endian UUIDs, rather than big-endian or just plain array of bytes.\n    // standard: 6e 5a 1d 26 - 27 57 - 47 d7 - 80 46 ea a5 d1 d3 4b 5a\n    // on Edge:  26 1d 5a 6e - 57 27 - d7 47 - 80 46 ea a5 d1 d3 4b 5a\n    // Bug filed: https://bit.ly/2thuzXu\n\n    // NOTE that we skip this if byteLength != 16.  This is used for the IE11\n    // and Edge 12 EME polyfill, which uses single-byte dummy key IDs.\n    if (this.currentDrmInfo_.keySystem == 'com.microsoft.playready' &&\n        keyId.byteLength == 16) {\n      // Read out some fields in little-endian:\n      let dataView = new DataView(keyId);\n      let part0 = dataView.getUint32(0, true /* LE */);\n      let part1 = dataView.getUint16(4, true /* LE */);\n      let part2 = dataView.getUint16(6, true /* LE */);\n      // Write it back in big-endian:\n      dataView.setUint32(0, part0, false /* BE */);\n      dataView.setUint16(4, part1, false /* BE */);\n      dataView.setUint16(6, part2, false /* BE */);\n    }\n\n    // Microsoft's implementation in IE11 seems to never set key status to\n    // 'usable'.  It is stuck forever at 'status-pending'.  In spite of this,\n    // the keys do seem to be usable and content plays correctly.\n    // Bug filed: https://bit.ly/2tpIU3n\n    // Microsoft has fixed the issue on Edge, but it remains in IE.\n    if (this.currentDrmInfo_.keySystem == 'com.microsoft.playready' &&\n        status == 'status-pending') {\n      status = 'usable';\n    }\n\n    if (status != 'status-pending') {\n      found.loaded = true;\n    }\n\n    if (status == 'expired') {\n      hasExpiredKeys = true;\n    }\n\n    let keyIdHex = shaka.util.Uint8ArrayUtils.toHex(new Uint8Array(keyId));\n\n    this.keyStatusByKeyId_.set(keyIdHex, status);\n  }.bind(this));\n\n  // If the session has expired, close it.\n  // Some CDMs do not have sub-second time resolution, so the key status may\n  // fire with hundreds of milliseconds left until the stated expiration time.\n  let msUntilExpiration = session.expiration - Date.now();\n  if (msUntilExpiration < 0 || (hasExpiredKeys && msUntilExpiration < 1000)) {\n    // If this is part of a remove(), we don't want to close the session until\n    // the update is complete.  Otherwise, we will orphan the session.\n    if (!found.updatePromise) {\n      shaka.log.debug('Session has expired', session.sessionId);\n      this.activeSessions_.delete(session);\n      session.close().catch(() => {});  // Silence uncaught rejection errors\n    }\n  }\n\n  if (!this.areAllSessionsLoaded_()) {\n    // Don't announce key statuses or resolve the \"all loaded\" promise until\n    // everything is loaded.\n    return;\n  }\n\n  this.allSessionsLoaded_.resolve();\n\n  // Batch up key status changes before checking them or notifying Player.\n  // This handles cases where the statuses of multiple sessions are set\n  // simultaneously by the browser before dispatching key status changes for\n  // each of them.  By batching these up, we only send one status change event\n  // and at most one EXPIRED error on expiration.\n  this.keyStatusTimer_.schedule(shaka.media.DrmEngine.KEY_STATUS_BATCH_TIME_);\n};\n\n\n/**\n * @private\n */\nshaka.media.DrmEngine.prototype.processKeyStatusChanges_ = function() {\n  const privateMap = this.keyStatusByKeyId_;\n  const publicMap = this.announcedKeyStatusByKeyId_;\n\n  // Copy the latest key statuses into the publicly-accessible map.\n  publicMap.clear();\n  privateMap.forEach((status, keyId) => publicMap.set(keyId, status));\n\n  // If all keys are expired, fire an error. |every| is always true for an empty\n  // array but we shouldn't fire an error for a lack of key status info.\n  const statuses = Array.from(publicMap.values());\n  const allExpired = statuses.length &&\n                     statuses.every((status) => status == 'expired');\n\n  if (allExpired) {\n    this.onError_(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.DRM,\n        shaka.util.Error.Code.EXPIRED));\n  }\n\n  this.playerInterface_.onKeyStatus(shaka.util.MapUtils.asObject(publicMap));\n};\n\n\n/**\n * Returns true if the browser has recent EME APIs.\n *\n * @return {boolean}\n */\nshaka.media.DrmEngine.isBrowserSupported = function() {\n  let basic =\n      !!window.MediaKeys &&\n      !!window.navigator &&\n      !!window.navigator.requestMediaKeySystemAccess &&\n      !!window.MediaKeySystemAccess &&\n      !!window.MediaKeySystemAccess.prototype.getConfiguration;\n\n  return basic;\n};\n\n\n/**\n * Returns a Promise to a map of EME support for well-known key systems.\n *\n * @return {!Promise.<!Object.<string, ?shaka.extern.DrmSupportType>>}\n */\nshaka.media.DrmEngine.probeSupport = function() {\n  goog.asserts.assert(shaka.media.DrmEngine.isBrowserSupported(),\n                      'Must have basic EME support');\n\n  let testKeySystems = [\n    'org.w3.clearkey',\n    'com.widevine.alpha',\n    'com.microsoft.playready',\n    'com.apple.fps.2_0',\n    'com.apple.fps.1_0',\n    'com.apple.fps',\n    'com.adobe.primetime',\n  ];\n\n  let basicVideoCapabilities = [\n    {contentType: 'video/mp4; codecs=\"avc1.42E01E\"'},\n    {contentType: 'video/webm; codecs=\"vp8\"'},\n  ];\n\n  let basicConfig = {\n    videoCapabilities: basicVideoCapabilities,\n  };\n  let offlineConfig = {\n    videoCapabilities: basicVideoCapabilities,\n    persistentState: 'required',\n    sessionTypes: ['persistent-license'],\n  };\n\n  // Try the offline config first, then fall back to the basic config.\n  const configs = [offlineConfig, basicConfig];\n\n  /** @type {!Map.<string, ?shaka.extern.DrmSupportType>} */\n  const support = new Map();\n\n  const testSystem = async (keySystem) => {\n    try {\n      const access = await navigator.requestMediaKeySystemAccess(\n          keySystem, configs);\n\n      // Edge doesn't return supported session types, but current versions\n      // do not support persistent-license.  If sessionTypes is missing,\n      // assume no support for persistent-license.\n      // TODO: Polyfill Edge to return known supported session types.\n      // Edge bug: https://bit.ly/2IeKzho\n      let sessionTypes = access.getConfiguration().sessionTypes;\n      let persistentState = sessionTypes ?\n          sessionTypes.includes('persistent-license') : false;\n\n      // Tizen 3.0 doesn't support persistent licenses, but reports that it\n      // does.  It doesn't fail until you call update() with a license\n      // response, which is way too late.\n      // This is a work-around for #894.\n      if (navigator.userAgent.includes('Tizen 3')) {\n        persistentState = false;\n      }\n\n      support.set(keySystem, {persistentState: persistentState});\n      await access.createMediaKeys();\n    } catch (e) {\n      // Either the request failed or createMediaKeys failed.\n      // Either way, write null to the support object.\n      support.set(keySystem, null);\n    }\n  };\n\n  // Test each key system.\n  const tests = testKeySystems.map((keySystem) => testSystem(keySystem));\n  return Promise.all(tests).then(() => shaka.util.MapUtils.asObject(support));\n};\n\n\n/**\n * @private\n */\nshaka.media.DrmEngine.prototype.onPlay_ = function() {\n  for (let i = 0; i < this.mediaKeyMessageEvents_.length; i++) {\n    this.sendLicenseRequest_(this.mediaKeyMessageEvents_[i]);\n  }\n\n  this.initialRequestsSent_ = true;\n  this.mediaKeyMessageEvents_ = [];\n};\n\n\n/**\n * Checks if a variant is compatible with the key system.\n * @param {!shaka.extern.Variant} variant\n * @return {boolean}\n**/\nshaka.media.DrmEngine.prototype.supportsVariant = function(variant) {\n  if (variant.audio && variant.audio.encrypted) {\n    if (!this.supportsStream(variant.audio)) { return false; }\n  }\n\n  if (variant.video && variant.video.encrypted) {\n    if (!this.supportsStream(variant.video)) { return false; }\n  }\n\n  const keySystem = this.keySystem();\n  return variant.drmInfos.length == 0 ||\n      variant.drmInfos.some((drmInfo) => drmInfo.keySystem == keySystem);\n};\n\n\n/**\n * @param{shaka.extern.Stream} stream\n * @return {boolean}\n */\nshaka.media.DrmEngine.prototype.supportsStream = function(stream) {\n  goog.asserts.assert(\n      stream.encrypted,\n      'Why are you checking for drm support on a clear stream?');\n\n  // When null it means it supports everything - because we don't actually\n  // know what is supported.\n  if (this.supportedTypes_ == null) {\n    return true;\n  }\n\n  const streamType = shaka.util.MimeUtils.getFullType(\n      stream.mimeType, stream.codecs);\n\n  return this.supportedTypes_.has(streamType);\n};\n\n/**\n * Checks if two DrmInfos can be decrypted using the same key system.\n * Clear content is considered compatible with every key system.\n *\n * @param {!Array.<!shaka.extern.DrmInfo>} drms1\n * @param {!Array.<!shaka.extern.DrmInfo>} drms2\n * @return {boolean}\n */\nshaka.media.DrmEngine.areDrmCompatible = function(drms1, drms2) {\n  if (!drms1.length || !drms2.length) return true;\n\n  return shaka.media.DrmEngine.getCommonDrmInfos(\n      drms1, drms2).length > 0;\n};\n\n\n/**\n * Returns an array of drm infos that are present in both input arrays.\n * If one of the arrays is empty, returns the other one since clear\n * content is considered compatible with every drm info.\n *\n * @param {!Array.<!shaka.extern.DrmInfo>} drms1\n * @param {!Array.<!shaka.extern.DrmInfo>} drms2\n * @return {!Array.<!shaka.extern.DrmInfo>}\n */\nshaka.media.DrmEngine.getCommonDrmInfos = function(drms1, drms2) {\n  if (!drms1.length) return drms2;\n  if (!drms2.length) return drms1;\n\n  let commonDrms = [];\n\n  for (let i = 0; i < drms1.length; i++) {\n    for (let j = 0; j < drms2.length; j++) {\n      // This method is only called to compare drmInfos of a video and an audio\n      // adaptations, so we shouldn't have to worry about checking robustness.\n      if (drms1[i].keySystem == drms2[j].keySystem) {\n        let drm1 = drms1[i];\n        let drm2 = drms2[j];\n        let initData = [];\n        initData = initData.concat(drm1.initData || []);\n        initData = initData.concat(drm2.initData || []);\n        let keyIds = [];\n        keyIds = keyIds.concat(drm1.keyIds);\n        keyIds = keyIds.concat(drm2.keyIds);\n        let mergedDrm = {\n          keySystem: drm1.keySystem,\n          licenseServerUri: drm1.licenseServerUri || drm2.licenseServerUri,\n          distinctiveIdentifierRequired: drm1.distinctiveIdentifierRequired ||\n              drm2.distinctiveIdentifierRequired,\n          persistentStateRequired: drm1.persistentStateRequired ||\n              drm2.persistentStateRequired,\n          videoRobustness: drm1.videoRobustness || drm2.videoRobustness,\n          audioRobustness: drm1.audioRobustness || drm2.audioRobustness,\n          serverCertificate: drm1.serverCertificate || drm2.serverCertificate,\n          initData: initData,\n          keyIds: keyIds,\n        };\n        commonDrms.push(mergedDrm);\n        break;\n      }\n    }\n  }\n\n  return commonDrms;\n};\n\n\n/**\n * Called in an interval timer to poll the expiration times of the sessions.  We\n * don't get an event from EME when the expiration updates, so we poll it so we\n * can fire an event when it happens.\n * @private\n */\nshaka.media.DrmEngine.prototype.pollExpiration_ = function() {\n  this.activeSessions_.forEach((metadata, session) => {\n    let oldTime = metadata.oldExpiration;\n    let newTime = session.expiration;\n    if (isNaN(newTime)) {\n      newTime = Infinity;\n    }\n\n    if (newTime != oldTime) {\n      this.playerInterface_.onExpirationUpdated(session.sessionId, newTime);\n      metadata.oldExpiration = newTime;\n    }\n  });\n};\n\n\n/**\n * @return {boolean}\n * @private\n */\nshaka.media.DrmEngine.prototype.areAllSessionsLoaded_ = function() {\n  const metadatas = this.activeSessions_.values();\n  return shaka.util.Iterables.every(metadatas, (data) => data.loaded);\n};\n\n\n/**\n * Create a promise that will be resolved after the given amount of time as\n * elapsed.\n *\n * @param {number} seconds\n * @return {!Promise}\n * @private\n */\nshaka.media.DrmEngine.timeout_ = function(seconds) {\n  return new Promise((resolve) => setTimeout(resolve, seconds * 1000));\n};\n\n\n/**\n * Replace the drm info used in each variant in |variants| to reflect each\n * key service in |keySystems|.\n *\n * @param {!Array.<shaka.extern.Variant>} variants\n * @param {!Map.<string, string>} keySystems\n * @private\n */\nshaka.media.DrmEngine.replaceDrmInfo_ = function(variants, keySystems) {\n  const drmInfos = [];\n\n  keySystems.forEach((uri, keySystem) => {\n    drmInfos.push({\n      keySystem: keySystem,\n      licenseServerUri: uri,\n      distinctiveIdentifierRequired: false,\n      persistentStateRequired: false,\n      audioRobustness: '',\n      videoRobustness: '',\n      serverCertificate: null,\n      initData: [],\n      keyIds: [],\n    });\n  });\n\n  for (const variant of variants) {\n    variant.drmInfos = drmInfos;\n  }\n};\n\n\n/**\n * Creates a DrmInfo object describing the settings used to initialize the\n * engine.\n *\n * @param {string} keySystem\n * @param {MediaKeySystemConfiguration} config\n * @return {shaka.extern.DrmInfo}\n *\n * @private\n */\nshaka.media.DrmEngine.createDrmInfoFor_ = function(keySystem, config) {\n  /** @type {!Array.<string>} */\n  let licenseServers = [];\n\n  /** @type {!Array.<!Uint8Array>} */\n  let serverCerts = [];\n\n  /** @type {!Array.<!shaka.extern.InitDataOverride>} */\n  let initDatas = [];\n\n  /** @type {!Array.<string>} */\n  let keyIds = [];\n\n  shaka.media.DrmEngine.processDrmInfos_(\n      config.drmInfos, licenseServers, serverCerts, initDatas, keyIds);\n\n  if (serverCerts.length > 1) {\n    shaka.log.warning('Multiple unique server certificates found! ' +\n                      'Only the first will be used.');\n  }\n\n  if (licenseServers.length > 1) {\n    shaka.log.warning('Multiple unique license server URIs found! ' +\n                      'Only the first will be used.');\n  }\n\n  // TODO: This only works when all DrmInfo have the same robustness.\n  let audioRobustness =\n      config.audioCapabilities ? config.audioCapabilities[0].robustness : '';\n  let videoRobustness =\n      config.videoCapabilities ? config.videoCapabilities[0].robustness : '';\n\n  return {\n    keySystem: keySystem,\n    licenseServerUri: licenseServers[0],\n    distinctiveIdentifierRequired: (config.distinctiveIdentifier == 'required'),\n    persistentStateRequired: (config.persistentState == 'required'),\n    audioRobustness: audioRobustness,\n    videoRobustness: videoRobustness,\n    serverCertificate: serverCerts[0],\n    initData: initDatas,\n    keyIds: keyIds,\n  };\n};\n\n\n/**\n * Extract license server, server cert, and init data from |drmInfos|, taking\n * care to eliminate duplicates.\n *\n * @param {!Array.<shaka.extern.DrmInfo>} drmInfos\n * @param {!Array.<string>} licenseServers\n * @param {!Array.<!Uint8Array>} serverCerts\n * @param {!Array.<!shaka.extern.InitDataOverride>} initDatas\n * @param {!Array.<string>} keyIds\n * @private\n */\nshaka.media.DrmEngine.processDrmInfos_ =\n    function(drmInfos, licenseServers, serverCerts, initDatas, keyIds) {\n  /** @type {function(shaka.extern.InitDataOverride,\n   *                  shaka.extern.InitDataOverride):boolean} */\n  let initDataOverrideEqual = (a, b) => {\n    if (a.keyId && a.keyId == b.keyId) {\n      // Two initDatas with the same keyId are considered to be the same,\n      // unless that \"same keyId\" is null.\n      return true;\n    }\n    return a.initDataType == b.initDataType &&\n           shaka.util.Uint8ArrayUtils.equal(a.initData, b.initData);\n  };\n\n  drmInfos.forEach((drmInfo) => {\n    // Aliases:\n    const Uint8ArrayUtils = shaka.util.Uint8ArrayUtils;\n\n    // Build an array of unique license servers.\n    if (!licenseServers.includes(drmInfo.licenseServerUri)) {\n      licenseServers.push(drmInfo.licenseServerUri);\n    }\n\n    // Build an array of unique server certs.\n    if (drmInfo.serverCertificate) {\n      const found = serverCerts.some(\n          (cert) => Uint8ArrayUtils.equal(cert, drmInfo.serverCertificate));\n      if (!found) {\n        serverCerts.push(drmInfo.serverCertificate);\n      }\n    }\n\n    // Build an array of unique init datas.\n    if (drmInfo.initData) {\n      drmInfo.initData.forEach((initDataOverride) => {\n        const found = initDatas.some(\n            (initData) => initDataOverrideEqual(initData, initDataOverride));\n        if (!found) {\n          initDatas.push(initDataOverride);\n        }\n      });\n    }\n\n    if (drmInfo.keyIds) {\n      for (let i = 0; i < drmInfo.keyIds.length; ++i) {\n        if (!keyIds.includes(drmInfo.keyIds[i])) {\n          keyIds.push(drmInfo.keyIds[i]);\n        }\n      }\n    }\n  });\n};\n\n\n/**\n * Use |servers| and |advancedConfigs| to fill in missing values in drmInfo that\n * the parser left blank. Before working with any drmInfo, it should be passed\n * through here as it is uncommon for drmInfo to be complete when fetched\n * from a manifest because most manifest formats do not have the required\n * information.\n *\n * @param {shaka.extern.DrmInfo} drmInfo\n * @param {!Map.<string, string>} servers\n * @param {!Map.<string, shaka.extern.AdvancedDrmConfiguration>} advancedConfigs\n * @private\n */\nshaka.media.DrmEngine.fillInDrmInfoDefaults_ = function(\n    drmInfo, servers, advancedConfigs) {\n  const keySystem = drmInfo.keySystem;\n\n  if (!keySystem) {\n    // This is a placeholder from the manifest parser for an unrecognized key\n    // system.  Skip this entry, to avoid logging nonsensical errors.\n    return;\n  }\n\n  if (!drmInfo.licenseServerUri) {\n    const server = servers.get(keySystem);\n    if (server) {\n      drmInfo.licenseServerUri = server;\n    }\n  }\n\n  if (!drmInfo.keyIds) {\n    drmInfo.keyIds = [];\n  }\n\n  const advancedConfig = advancedConfigs.get(keySystem);\n  if (advancedConfig) {\n    if (!drmInfo.distinctiveIdentifierRequired) {\n      drmInfo.distinctiveIdentifierRequired =\n          advancedConfig.distinctiveIdentifierRequired;\n    }\n\n    if (!drmInfo.persistentStateRequired) {\n      drmInfo.persistentStateRequired = advancedConfig.persistentStateRequired;\n    }\n\n    if (!drmInfo.videoRobustness) {\n      drmInfo.videoRobustness = advancedConfig.videoRobustness;\n    }\n\n    if (!drmInfo.audioRobustness) {\n      drmInfo.audioRobustness = advancedConfig.audioRobustness;\n    }\n\n    if (!drmInfo.serverCertificate) {\n      drmInfo.serverCertificate = advancedConfig.serverCertificate;\n    }\n  }\n\n  // Chromecast has a variant of PlayReady that uses a different key\n  // system ID.  Since manifest parsers convert the standard PlayReady\n  // UUID to the standard PlayReady key system ID, here we will switch\n  // to the Chromecast version if we are running on that platform.\n  // Note that this must come after fillInDrmInfoDefaults_, since the\n  // player config uses the standard PlayReady ID for license server\n  // configuration.\n  if (window.cast && window.cast.__platform__) {\n    if (drmInfo.keySystem == 'com.microsoft.playready') {\n      drmInfo.keySystem = 'com.chromecast.playready';\n    }\n  }\n};\n\n\n/**\n * The amount of time, in seconds, we wait to consider a session closed.\n * This allows us to work around Chrome bug https://crbug.com/690583.\n * @private {number}\n */\nshaka.media.DrmEngine.CLOSE_TIMEOUT_ = 1;\n\n/**\n * The amount of time, in seconds, we wait to consider session loaded even if no\n * key status information is available.  This allows us to support browsers/CDMs\n * without key statuses.\n * @private {number}\n */\nshaka.media.DrmEngine.SESSION_LOAD_TIMEOUT_ = 5;\n\n/**\n * The amount of time, in seconds, we wait to batch up rapid key status changes.\n * This allows us to avoid multiple expiration events in most cases.\n * @private {number}\n */\nshaka.media.DrmEngine.KEY_STATUS_BATCH_TIME_ = 0.5;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.TimeRangesUtils');\n\n\n/**\n * @namespace shaka.media.TimeRangesUtils\n * @summary A set of utility functions for dealing with TimeRanges objects.\n */\n\n\n/**\n * Gets the first timestamp in the buffer.\n *\n * @param {TimeRanges} b\n * @return {?number} The first buffered timestamp, in seconds, if |buffered|\n *   is non-empty; otherwise, return null.\n */\nshaka.media.TimeRangesUtils.bufferStart = function(b) {\n  if (!b) return null;\n  // Workaround Safari bug: https://bit.ly/2trx6O8\n  if (b.length == 1 && b.end(0) - b.start(0) < 1e-6) return null;\n  // Workaround Edge bug: https://bit.ly/2JYLPeB\n  if (b.length == 1 && b.start(0) < 0) return 0;\n  return b.length ? b.start(0) : null;\n};\n\n\n/**\n * Gets the last timestamp in the buffer.\n *\n * @param {TimeRanges} b\n * @return {?number} The last buffered timestamp, in seconds, if |buffered|\n *   is non-empty; otherwise, return null.\n */\nshaka.media.TimeRangesUtils.bufferEnd = function(b) {\n  if (!b) return null;\n  // Workaround Safari bug: https://bit.ly/2trx6O8\n  if (b.length == 1 && b.end(0) - b.start(0) < 1e-6) return null;\n  return b.length ? b.end(b.length - 1) : null;\n};\n\n\n/**\n * Determines if the given time is inside a buffered range.  This includes gaps,\n * meaning that if the playhead is in a gap, it is considered buffered. If there\n * is a small gap between the playhead and buffer start, consider it as\n * buffered.\n *\n * @param {TimeRanges} b\n * @param {number} time Playhead time\n * @param {number=} smallGapLimit Set in configuration\n * @return {boolean}\n */\nshaka.media.TimeRangesUtils.isBuffered = function(b, time, smallGapLimit = 0) {\n  if (!b || !b.length) return false;\n  // Workaround Safari bug: https://bit.ly/2trx6O8\n  if (b.length == 1 && b.end(0) - b.start(0) < 1e-6) return false;\n\n  if (time > b.end(b.length - 1)) {\n    return false;\n  }\n  // Push the time forward by the gap limit so that it is more likely to be in\n  // the range.\n  return (time + smallGapLimit >= b.start(0));\n};\n\n\n/**\n * Computes how far ahead of the given timestamp is buffered.  To provide smooth\n * playback while jumping gaps, we don't include the gaps when calculating this.\n * This only includes the amount of content that is buffered.\n *\n * @param {TimeRanges} b\n * @param {number} time\n * @return {number} The number of seconds buffered, in seconds, ahead of the\n *   given time.\n */\nshaka.media.TimeRangesUtils.bufferedAheadOf = function(b, time) {\n  if (!b || !b.length) return 0;\n  // Workaround Safari bug: https://bit.ly/2trx6O8\n  if (b.length == 1 && b.end(0) - b.start(0) < 1e-6) return 0;\n\n  // NOTE: On IE11, buffered ranges may show appended data before the associated\n  // append operation is complete.\n\n  // We calculate the buffered amount by ONLY accounting for the content\n  // buffered (i.e. we ignore the times of the gaps).  We also buffer through\n  // all gaps.\n  // Therefore, we start at the end and add up all buffers until |time|.\n  let result = 0;\n  for (let i = b.length - 1; i >= 0 && b.end(i) > time; --i) {\n    result += b.end(i) - Math.max(b.start(i), time);\n  }\n\n  return result;\n};\n\n\n/**\n * Determines if the given time is inside a gap between buffered ranges.  If it\n * is, this returns the index of the buffer that is *ahead* of the gap.\n *\n * @param {TimeRanges} b\n * @param {number} time\n * @return {?number} The index of the buffer after the gap, or null if not in a\n *   gap.\n */\nshaka.media.TimeRangesUtils.getGapIndex = function(b, time) {\n  if (!b || !b.length) return null;\n  // Workaround Safari bug: https://bit.ly/2trx6O8\n  if (b.length == 1 && b.end(0) - b.start(0) < 1e-6) return null;\n\n  // IE/Edge stops 0.5 seconds before a gap, so it needs a much larger\n  // threshold, but we don't want to punish other browsers that stop closer.\n  // See: https://bit.ly/2K5xmJO\n  let threshold = 0.1;\n  if (/(Edge\\/|Trident\\/|Tizen)/.test(navigator.userAgent)) {\n    threshold = 0.5;\n  }\n\n  for (let i = 0; i < b.length; i++) {\n    if (b.start(i) > time && (i == 0 || b.end(i - 1) - time <= threshold)) {\n      return i;\n    }\n  }\n\n  return null;\n};\n\n\n/**\n * @param {TimeRanges} b\n * @return {!Array.<shaka.extern.BufferedRange>}\n */\nshaka.media.TimeRangesUtils.getBufferedInfo = function(b) {\n  if (!b) return [];\n  let ret = [];\n  for (let i = 0; i < b.length; i++) {\n    ret.push({start: b.start(i), end: b.end(i)});\n  }\n  return ret;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.text.Cue');\ngoog.provide('shaka.text.CueRegion');\n\n/**\n * Creates a Cue object.\n *\n * @param {number} startTime\n * @param {number} endTime\n * @param {string} payload\n *\n * @implements {shaka.extern.Cue}\n * @constructor\n * @struct\n * @export\n */\nshaka.text.Cue = function(startTime, endTime, payload) {\n  const Cue = shaka.text.Cue;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.startTime = startTime;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.endTime = endTime;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.payload = payload;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.region = new shaka.text.CueRegion();\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.position = null;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.positionAlign = Cue.positionAlign.AUTO;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.size = 100;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.textAlign = Cue.textAlign.CENTER;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.writingDirection = Cue.writingDirection.HORIZONTAL_LEFT_TO_RIGHT;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.lineInterpretation = Cue.lineInterpretation.LINE_NUMBER;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.line = null;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.lineHeight = '';\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.lineAlign = Cue.lineAlign.CENTER;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.displayAlign = Cue.displayAlign.BEFORE;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.color = '';\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.backgroundColor = '';\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.fontSize = '';\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.fontWeight = Cue.fontWeight.NORMAL;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.fontStyle = Cue.fontStyle.NORMAL;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.fontFamily = '';\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.textDecoration = [];\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.wrapLine = true;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.id = '';\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nshaka.text.Cue.positionAlign = {\n  'LEFT': 'line-left',\n  'RIGHT': 'line-right',\n  'CENTER': 'center',\n  'AUTO': 'auto',\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nshaka.text.Cue.textAlign = {\n  'LEFT': 'left',\n  'RIGHT': 'right',\n  'CENTER': 'center',\n  'START': 'start',\n  'END': 'end',\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nshaka.text.Cue.displayAlign = {\n  'BEFORE': 'before',\n  'CENTER': 'center',\n  'AFTER': 'after',\n};\n\n\n/**\n * @enum {number}\n * @export\n */\nshaka.text.Cue.writingDirection = {\n  'HORIZONTAL_LEFT_TO_RIGHT': 0,\n  'HORIZONTAL_RIGHT_TO_LEFT': 1,\n  'VERTICAL_LEFT_TO_RIGHT': 2,\n  'VERTICAL_RIGHT_TO_LEFT': 3,\n};\n\n\n/**\n * @enum {number}\n * @export\n */\nshaka.text.Cue.lineInterpretation = {\n  'LINE_NUMBER': 0,\n  'PERCENTAGE': 1,\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nshaka.text.Cue.lineAlign = {\n  'CENTER': 'center',\n  'START': 'start',\n  'END': 'end',\n};\n\n\n/**\n * In CSS font weight can be a number, where 400 is normal and 700 is bold.\n * Use these values for the enum for consistency.\n * @enum {number}\n * @export\n */\nshaka.text.Cue.fontWeight = {\n  'NORMAL': 400,\n  'BOLD': 700,\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nshaka.text.Cue.fontStyle = {\n  'NORMAL': 'normal',\n  'ITALIC': 'italic',\n  'OBLIQUE': 'oblique',\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nshaka.text.Cue.textDecoration = {\n  'UNDERLINE': 'underline',\n  'LINE_THROUGH': 'lineThrough',\n  'OVERLINE': 'overline',\n};\n\n\n/**\n * Creates a CueRegion object.\n *\n * @implements {shaka.extern.CueRegion}\n * @constructor\n * @struct\n * @export\n */\nshaka.text.CueRegion = function() {\n  const CueRegion = shaka.text.CueRegion;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.id = '';\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.viewportAnchorX = 0;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.viewportAnchorY = 0;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.regionAnchorX = 0;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.regionAnchorY = 0;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.width = 100;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.height = 100;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.heightUnits = CueRegion.units.PERCENTAGE;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.widthUnits = CueRegion.units.PERCENTAGE;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.viewportAnchorUnits = CueRegion.units.PERCENTAGE;\n\n  /**\n   * @override\n   * @exportInterface\n   */\n  this.scroll = CueRegion.scrollMode.NONE;\n};\n\n\n/**\n * @enum {number}\n * @export\n */\nshaka.text.CueRegion.units = {\n  'PX': 0,\n  'PERCENTAGE': 1,\n  'LINES': 2,\n};\n\n\n/**\n * @enum {string}\n * @export\n */\nshaka.text.CueRegion.scrollMode = {\n  'NONE': '',\n  'UP': 'up',\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.ManifestParserUtils');\n\ngoog.require('goog.Uri');\ngoog.require('shaka.util.Functional');\n\n\n/**\n * @namespace shaka.util.ManifestParserUtils\n * @summary Utility functions for manifest parsing.\n */\n\n\n/**\n * Resolves an array of relative URIs to the given base URIs. This will result\n * in M*N number of URIs.\n *\n * @param {!Array.<string>} baseUris\n * @param {!Array.<string>} relativeUris\n * @return {!Array.<string>}\n */\nshaka.util.ManifestParserUtils.resolveUris = function(baseUris, relativeUris) {\n  const Functional = shaka.util.Functional;\n  if (relativeUris.length == 0) {\n    return baseUris;\n  }\n\n  let relativeAsGoog =\n      relativeUris.map(function(uri) { return new goog.Uri(uri); });\n  // Resolve each URI relative to each base URI, creating an Array of Arrays.\n  // Then flatten the Arrays into a single Array.\n  return baseUris.map(function(uri) { return new goog.Uri(uri); })\n    .map(function(base) { return relativeAsGoog.map(base.resolve.bind(base)); })\n    .reduce(Functional.collapseArrays, [])\n    .map(function(uri) { return uri.toString(); });\n};\n\n\n/**\n * Creates a DrmInfo object from the given info.\n *\n * @param {string} keySystem\n * @param {Array.<shaka.extern.InitDataOverride>} initData\n * @return {shaka.extern.DrmInfo}\n */\nshaka.util.ManifestParserUtils.createDrmInfo = function(keySystem, initData) {\n  return {\n    keySystem: keySystem,\n    licenseServerUri: '',\n    distinctiveIdentifierRequired: false,\n    persistentStateRequired: false,\n    audioRobustness: '',\n    videoRobustness: '',\n    serverCertificate: null,\n    initData: initData || [],\n    keyIds: [],\n  };\n};\n\n\n/**\n * @enum {string}\n */\nshaka.util.ManifestParserUtils.ContentType = {\n  VIDEO: 'video',\n  AUDIO: 'audio',\n  TEXT: 'text',\n  APPLICATION: 'application',\n};\n\n\n/**\n * @enum {string}\n */\nshaka.util.ManifestParserUtils.TextStreamKind = {\n  SUBTITLE: 'subtitle',\n  CLOSED_CAPTION: 'caption',\n};\n\n\n/**\n * Specifies how tolerant the player is of inaccurate segment start times and\n * end times within a manifest. For example, gaps or overlaps between segments\n * in a SegmentTimeline which are greater than or equal to this value will\n * result in a warning message.\n *\n * @const {number}\n */\nshaka.util.ManifestParserUtils.GAP_OVERLAP_TOLERANCE_SECONDS = 1 / 15;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.Transmuxer');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.text.Cue');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.PublicPromise');\ngoog.require('shaka.util.Uint8ArrayUtils');\n\n\n/**\n * Transmuxer provides all operations for transmuxing from Transport\n * Stream to MP4.\n *\n * @struct\n * @constructor\n * @implements {shaka.util.IDestroyable}\n */\nshaka.media.Transmuxer = function() {\n  /** @private {muxjs.mp4.Transmuxer} */\n  this.muxTransmuxer_ = new muxjs.mp4.Transmuxer({\n    'keepOriginalTimestamps': true,\n  });\n\n  /** @private {shaka.util.PublicPromise} */\n  this.transmuxPromise_ = null;\n\n  /** @private {!Array.<!Uint8Array>} */\n  this.transmuxedData_ = [];\n\n  /** @private {!Array.<shaka.text.Cue>} */\n  this.cues_ = [];\n\n  /** @private {boolean} */\n  this.isTransmuxing_ = false;\n\n  this.muxTransmuxer_.on('data', this.onTransmuxed_.bind(this));\n\n  this.muxTransmuxer_.on('done', this.onTransmuxDone_.bind(this));\n};\n\n\n/**\n * @override\n */\nshaka.media.Transmuxer.prototype.destroy = function() {\n  this.muxTransmuxer_.dispose();\n  this.muxTransmuxer_ = null;\n  return Promise.resolve();\n};\n\n\n/**\n * Check if the content type is Transport Stream, and if muxjs is loaded.\n * @param {string} mimeType\n * @param {string=} contentType\n * @return {boolean}\n */\nshaka.media.Transmuxer.isSupported = function(mimeType, contentType) {\n  if (!window.muxjs || !shaka.media.Transmuxer.isTsContainer(mimeType)) {\n    return false;\n  }\n  let convertTsCodecs = shaka.media.Transmuxer.convertTsCodecs;\n  if (contentType) {\n    return MediaSource.isTypeSupported(convertTsCodecs(contentType, mimeType));\n  }\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  return MediaSource.isTypeSupported(\n             convertTsCodecs(ContentType.AUDIO, mimeType)) ||\n      MediaSource.isTypeSupported(convertTsCodecs(ContentType.VIDEO, mimeType));\n};\n\n\n/**\n * Check if the mimetype contains 'mp2t'.\n * @param {string} mimeType\n * @return {boolean}\n */\nshaka.media.Transmuxer.isTsContainer = function(mimeType) {\n  return mimeType.split(';')[0].split('/')[1] == 'mp2t';\n};\n\n\n/**\n * For transport stream, convert its codecs to MP4 codecs.\n * @param {string} contentType\n * @param {string} tsMimeType\n * @return {string}\n */\nshaka.media.Transmuxer.convertTsCodecs = function(contentType, tsMimeType) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  let mp4MimeType = tsMimeType.replace('mp2t', 'mp4');\n  if (contentType == ContentType.AUDIO) {\n    mp4MimeType = mp4MimeType.replace('video', 'audio');\n  }\n\n  // Handle legacy AVC1 codec strings (pre-RFC 6381).\n  // Look for \"avc1.<profile>.<level>\", where profile is:\n  //   66 (baseline => 0x42)\n  //   77 (main => 0x4d)\n  //   100 (high => 0x64)\n  // Reference: https://bit.ly/2K9JI3x\n  let match = /avc1\\.(66|77|100)\\.(\\d+)/.exec(mp4MimeType);\n  if (match) {\n    let newCodecString = 'avc1.';\n\n    let profile = match[1];\n    if (profile == '66') {\n      newCodecString += '4200';\n    } else if (profile == '77') {\n      newCodecString += '4d00';\n    } else {\n      goog.asserts.assert(profile == '100',\n                          'Legacy avc1 parsing code out of sync with regex!');\n      newCodecString += '6400';\n    }\n\n    // Convert the level to hex and append to the codec string.\n    let level = Number(match[2]);\n    goog.asserts.assert(level < 256,\n                        'Invalid legacy avc1 level number!');\n    newCodecString += (level >> 4).toString(16);\n    newCodecString += (level & 0xf).toString(16);\n\n    mp4MimeType = mp4MimeType.replace(match[0], newCodecString);\n  }\n\n  return mp4MimeType;\n};\n\n\n/**\n * Transmux from Transport stream to MP4, using the mux.js library.\n * @param {!ArrayBuffer} data\n * @return {!Promise.<{data: !Uint8Array, cues: !Array.<!shaka.text.Cue>}>}\n */\nshaka.media.Transmuxer.prototype.transmux = function(data) {\n  goog.asserts.assert(!this.isTransmuxing_,\n      'No transmuxing should be in progress.');\n  this.isTransmuxing_ = true;\n  this.transmuxPromise_ = new shaka.util.PublicPromise();\n  this.transmuxedData_ = [];\n  this.cues_ = [];\n\n  let dataArray = new Uint8Array(data);\n  this.muxTransmuxer_.push(dataArray);\n  this.muxTransmuxer_.flush();\n\n  // Workaround for https://bit.ly/Shaka1449 mux.js not\n  // emitting 'data' and 'done' events.\n  // mux.js code is synchronous, so if onTransmuxDone_ has\n  // not been called by now, it's not going to be.\n  // Treat it as a transmuxing failure and reject the promise.\n  if (this.isTransmuxing_) {\n    this.transmuxPromise_.reject(new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.MEDIA,\n            shaka.util.Error.Code.TRANSMUXING_FAILED));\n  }\n  return this.transmuxPromise_;\n};\n\n\n/**\n * Handles the 'data' event of the transmuxer.\n * Extracts the cues from the transmuxed segment, and adds them to an array.\n * Stores the transmuxed data in another array, to pass it back to\n * MediaSourceEngine, and append to the source buffer.\n *\n * @param {muxjs.mp4.Transmuxer.Segment} segment\n * @private\n */\nshaka.media.Transmuxer.prototype.onTransmuxed_ = function(segment) {\n  for (let i = 0; i < segment.captions.length; i++) {\n    let cue = segment.captions[i];\n    this.cues_.push(\n        new shaka.text.Cue(cue.startTime, cue.endTime, cue.text));\n  }\n\n  let segmentWithInit = new Uint8Array(segment.data.byteLength +\n      segment.initSegment.byteLength);\n  segmentWithInit.set(segment.initSegment, 0);\n  segmentWithInit.set(segment.data, segment.initSegment.byteLength);\n  this.transmuxedData_.push(segmentWithInit);\n};\n\n\n/**\n * Handles the 'done' event of the transmuxer.\n * Resolves the transmux Promise, and returns the transmuxed data.\n * @private\n */\nshaka.media.Transmuxer.prototype.onTransmuxDone_ = function() {\n  let output = {\n    data: shaka.util.Uint8ArrayUtils.concat.apply(null, this.transmuxedData_),\n    cues: this.cues_,\n  };\n\n  this.transmuxPromise_.resolve(output);\n  this.isTransmuxing_ = false;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.text.TextEngine');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.MimeUtils');\n\n\n/**\n * Manages text parsers and cues.\n *\n * @param {shaka.extern.TextDisplayer} displayer\n * @struct\n * @constructor\n * @implements {shaka.util.IDestroyable}\n */\nshaka.text.TextEngine = function(displayer) {\n  /** @private {shaka.extern.TextParser} */\n  this.parser_ = null;\n\n  /** @private {shaka.extern.TextDisplayer} */\n  this.displayer_ = displayer;\n\n  /** @private {number} */\n  this.timestampOffset_ = 0;\n\n  /** @private {number} */\n  this.appendWindowStart_ = 0;\n\n  /** @private {number} */\n  this.appendWindowEnd_ = Infinity;\n\n  /** @private {?number} */\n  this.bufferStart_ = null;\n\n  /** @private {?number} */\n  this.bufferEnd_ = null;\n\n  /** @private {string} */\n  this.selectedClosedCaptionId_ = '';\n\n  /**\n   * The closed captions map stores the CEA closed captions by closed captions\n   * id and start and end time.\n   * It's used as the buffer of closed caption text streams, to show captions\n   * when we start displaying captions or switch caption tracks, we need to be\n   * able to get the cues for the other language and display them without\n   * re-fetching the video segments they were embedded in.\n   * Structure of closed caption map:\n   * closed caption id -> {start and end time -> cues}\n   * @private {Map.<string, Map.<string, Array.<Object>>>} */\n  this.closedCaptionsMap_ = new Map();\n};\n\n\n/** @private {!Object.<string, !shaka.extern.TextParserPlugin>} */\nshaka.text.TextEngine.parserMap_ = {};\n\n\n/**\n * @param {string} mimeType\n * @param {!shaka.extern.TextParserPlugin} plugin\n * @export\n */\nshaka.text.TextEngine.registerParser = function(mimeType, plugin) {\n  shaka.text.TextEngine.parserMap_[mimeType] = plugin;\n};\n\n\n/**\n * @param {string} mimeType\n * @export\n */\nshaka.text.TextEngine.unregisterParser = function(mimeType) {\n  delete shaka.text.TextEngine.parserMap_[mimeType];\n};\n\n\n/**\n * @param {string} mimeType\n * @return {boolean}\n */\nshaka.text.TextEngine.isTypeSupported = function(mimeType) {\n  if (shaka.text.TextEngine.parserMap_[mimeType]) {\n    // An actual parser is available.\n    return true;\n  }\n  if (window.muxjs &&\n      mimeType == shaka.util.MimeUtils.CLOSED_CAPTION_MIMETYPE) {\n    // Will be handled by mux.js.\n    return true;\n  }\n  return false;\n};\n\n\n/** @override */\nshaka.text.TextEngine.prototype.destroy = function() {\n  this.parser_ = null;\n  this.displayer_ = null;\n\n  return Promise.resolve();\n};\n\n\n/**\n * @param {shaka.extern.TextDisplayer} displayer\n * @export\n */\nshaka.text.TextEngine.prototype.setDisplayer = function(displayer) {\n  this.displayer_ = displayer;\n};\n\n\n/**\n * Initialize the parser.  This can be called multiple times, but must be called\n * at least once before appendBuffer.\n *\n * @param {string} mimeType\n */\nshaka.text.TextEngine.prototype.initParser = function(mimeType) {\n  // No parser for CEA, which is extracted from video and side-loaded\n  // into TextEngine and TextDisplayer.\n  if (mimeType == shaka.util.MimeUtils.CLOSED_CAPTION_MIMETYPE) {\n    return;\n  }\n\n  let Factory = shaka.text.TextEngine.parserMap_[mimeType];\n  goog.asserts.assert(\n      Factory,\n      'Text type negotiation should have happened already');\n  this.parser_ = new Factory();\n};\n\n\n/**\n * Parse the start time from the text media segment, if possible.\n *\n * @param {!ArrayBuffer} buffer\n * @return {number}\n * @throws {shaka.util.Error} on failure\n */\nshaka.text.TextEngine.prototype.getStartTime = function(buffer) {\n  goog.asserts.assert(this.parser_, 'The parser should already be initialized');\n\n  /** @type {shaka.extern.TextParser.TimeContext} **/\n  let time = {\n    periodStart: 0,\n    segmentStart: null,\n    segmentEnd: 0,\n  };\n\n  // Parse the buffer and extract the first cue start time.\n  try {\n    let allCues = this.parser_.parseMedia(new Uint8Array(buffer), time);\n    return allCues[0].startTime;\n  } catch (exception) {\n    // This could be a failure from the parser itself (init segment required)\n    // or an exception from allCues.length being zero.\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.UNABLE_TO_EXTRACT_CUE_START_TIME,\n        exception);\n  }\n};\n\n\n/**\n * @param {!ArrayBuffer} buffer\n * @param {?number} startTime relative to the start of the presentation\n * @param {?number} endTime relative to the start of the presentation\n * @return {!Promise}\n */\nshaka.text.TextEngine.prototype.appendBuffer =\n    function(buffer, startTime, endTime) {\n  goog.asserts.assert(this.parser_, 'The parser should already be initialized');\n\n  // Start the operation asynchronously to avoid blocking the caller.\n  return Promise.resolve().then(function() {\n    // Check that TextEngine hasn't been destroyed.\n    if (!this.parser_ || !this.displayer_) return;\n\n    if (startTime == null || endTime == null) {\n      this.parser_.parseInit(new Uint8Array(buffer));\n      return;\n    }\n\n    /** @type {shaka.extern.TextParser.TimeContext} **/\n    let time = {\n      periodStart: this.timestampOffset_,\n      segmentStart: startTime,\n      segmentEnd: endTime,\n    };\n\n    // Parse the buffer and add the new cues.\n    let allCues = this.parser_.parseMedia(new Uint8Array(buffer), time);\n    let cuesToAppend = allCues.filter(function(cue) {\n      return cue.startTime >= this.appendWindowStart_ &&\n             cue.startTime < this.appendWindowEnd_;\n    }.bind(this));\n\n    this.displayer_.append(cuesToAppend);\n\n    // NOTE: We update the buffered range from the start and end times passed\n    // down from the segment reference, not with the start and end times of the\n    // parsed cues.  This is important because some segments may contain no\n    // cues, but we must still consider those ranges buffered.\n    if (this.bufferStart_ == null) {\n      this.bufferStart_ = Math.max(startTime, this.appendWindowStart_);\n    } else {\n      // We already had something in buffer, and we assume we are extending the\n      // range from the end.\n      goog.asserts.assert((startTime - this.bufferEnd_) <= 1,\n                          'There should not be a gap in text references >1s');\n    }\n    this.bufferEnd_ = Math.min(endTime, this.appendWindowEnd_);\n  }.bind(this));\n};\n\n\n/**\n * @param {number} startTime relative to the start of the presentation\n * @param {number} endTime relative to the start of the presentation\n * @return {!Promise}\n */\nshaka.text.TextEngine.prototype.remove = function(startTime, endTime) {\n  // Start the operation asynchronously to avoid blocking the caller.\n  return Promise.resolve().then(function() {\n    if (this.displayer_ && this.displayer_.remove(startTime, endTime)) {\n      if (this.bufferStart_ == null) {\n        goog.asserts.assert(this.bufferEnd_ == null,\n                            'end must be null if startTime is null');\n      } else {\n        goog.asserts.assert(this.bufferEnd_ != null,\n                            'end must be non-null if startTime is non-null');\n\n        // Update buffered range.\n        if (endTime <= this.bufferStart_ || startTime >= this.bufferEnd_) {\n          // No intersection.  Nothing was removed.\n        } else if (startTime <= this.bufferStart_ &&\n                   endTime >= this.bufferEnd_) {\n          // We wiped out everything.\n          this.bufferStart_ = this.bufferEnd_ = null;\n        } else if (startTime <= this.bufferStart_ &&\n                   endTime < this.bufferEnd_) {\n          // We removed from the beginning of the range.\n          this.bufferStart_ = endTime;\n        } else if (startTime > this.bufferStart_ &&\n                   endTime >= this.bufferEnd_) {\n          // We removed from the end of the range.\n          this.bufferEnd_ = startTime;\n        } else {\n          // We removed from the middle?  StreamingEngine isn't supposed to.\n          goog.asserts.assert(\n              false, 'removal from the middle is not supported by TextEngine');\n        }\n      }\n    }\n  }.bind(this));\n};\n\n\n/** @param {number} timestampOffset */\nshaka.text.TextEngine.prototype.setTimestampOffset =\n    function(timestampOffset) {\n  this.timestampOffset_ = timestampOffset;\n};\n\n\n/**\n * @param {number} appendWindowStart\n * @param {number} appendWindowEnd\n */\nshaka.text.TextEngine.prototype.setAppendWindow =\n    function(appendWindowStart, appendWindowEnd) {\n  this.appendWindowStart_ = appendWindowStart;\n  this.appendWindowEnd_ = appendWindowEnd;\n};\n\n\n/**\n * @return {?number} Time in seconds of the beginning of the buffered range,\n *   or null if nothing is buffered.\n */\nshaka.text.TextEngine.prototype.bufferStart = function() {\n  return this.bufferStart_;\n};\n\n\n/**\n * @return {?number} Time in seconds of the end of the buffered range,\n *   or null if nothing is buffered.\n */\nshaka.text.TextEngine.prototype.bufferEnd = function() {\n  return this.bufferEnd_;\n};\n\n\n/**\n * @param {number} t A timestamp\n * @return {boolean}\n */\nshaka.text.TextEngine.prototype.isBuffered = function(t) {\n  return t >= this.bufferStart_ && t < this.bufferEnd_;\n};\n\n\n/**\n * @param {number} t A timestamp\n * @return {number} Number of seconds ahead of 't' we have buffered\n */\nshaka.text.TextEngine.prototype.bufferedAheadOf = function(t) {\n  if (this.bufferEnd_ == null || this.bufferEnd_ < t) return 0;\n\n  goog.asserts.assert(\n      this.bufferStart_ != null, 'start should not be null if end is not null');\n\n  return this.bufferEnd_ - Math.max(t, this.bufferStart_);\n};\n\n\n/**\n * Append cues to text displayer.\n *\n * @param {!Array.<!shaka.text.Cue>} cues\n * @export\n */\nshaka.text.TextEngine.prototype.appendCues = function(cues) {\n  this.displayer_.append(cues);\n};\n\n\n/**\n * Set the selected closed captions id.\n * Append the cues stored in the closed captions map until buffer end time.\n * This is to fill the gap between buffered and unbuffered captions, and to\n * avoid duplicates that would be caused by any future video segments parsed for\n * captions.\n *\n * @param {string} id\n * @param {number} bufferEndTime Load any stored cues up to this time.\n * @export\n */\nshaka.text.TextEngine.prototype.setSelectedClosedCaptionId =\n    function(id, bufferEndTime) {\n  this.selectedClosedCaptionId_ = id;\n\n  const captionsMap = this.closedCaptionsMap_.get(id);\n  if (captionsMap) {\n    for (const startAndEndTime of captionsMap.keys()) {\n      let cues = captionsMap.get(startAndEndTime);\n      if (cues) {\n        cues = cues.filter((c) => c.endTime <= bufferEndTime);\n        this.displayer_.append(cues);\n      }\n    }\n  }\n};\n\n\n/**\n * Store the closed captions in the text engine, and append the cues to\n * the text displayer.\n * @param {!Array.<muxjs.mp4.ClosedCaption>} closedCaptions\n * @param {?number} startTime relative to the start of the presentation\n * @param {?number} endTime relative to the start of the presentation\n */\nshaka.text.TextEngine.prototype.storeAndAppendClosedCaptions = function(\n    closedCaptions, startTime, endTime) {\n  const startAndEndTime = startTime + ' ' + endTime;\n  const captionsMap = new Map();\n\n  for (const caption of closedCaptions) {\n    const id = caption.stream;\n    if (!captionsMap.has(id)) {\n      captionsMap.set(id, new Map());\n    }\n    if (!captionsMap.get(id).has(startAndEndTime)) {\n      captionsMap.get(id).set(startAndEndTime, []);\n    }\n\n    const cue = new shaka.text.Cue(\n        caption.startTime, caption.endTime, caption.text);\n    const keepThisCue =\n        cue.startTime >= this.appendWindowStart_ &&\n        cue.startTime < this.appendWindowEnd_;\n    if (!keepThisCue) {\n      continue;\n    }\n    captionsMap.get(id).get(startAndEndTime).push(cue);\n    if (id == this.selectedClosedCaptionId_) {\n      this.displayer_.append([cue]);\n    }\n  }\n\n  for (const id of captionsMap.keys()) {\n    if (!this.closedCaptionsMap_.has(id)) {\n      this.closedCaptionsMap_.set(id, new Map());\n    }\n    for (const startAndEndTime of captionsMap.get(id).keys()) {\n      const cues = captionsMap.get(id).get(startAndEndTime);\n      this.closedCaptionsMap_.get(id).set(startAndEndTime, cues);\n    }\n  }\n\n  if (this.bufferStart_ == null) {\n    this.bufferStart_ = Math.max(startTime, this.appendWindowStart_);\n  } else {\n    this.bufferStart_ = Math.min(\n        this.bufferStart_, Math.max(startTime, this.appendWindowStart_));\n  }\n\n  this.bufferEnd_ = Math.max(\n      this.bufferEnd_, Math.min(endTime, this.appendWindowEnd_));\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.MediaSourceEngine');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.media.TimeRangesUtils');\ngoog.require('shaka.media.Transmuxer');\ngoog.require('shaka.text.TextEngine');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.Functional');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.MimeUtils');\ngoog.require('shaka.util.PublicPromise');\n\n\n/**\n * MediaSourceEngine wraps all operations on MediaSource and SourceBuffers.\n * All asynchronous operations return a Promise, and all operations are\n * internally synchronized and serialized as needed.  Operations that can\n * be done in parallel will be done in parallel.\n *\n * @param {HTMLMediaElement} video The video element, whose source is tied to\n *   MediaSource during the lifetime of the MediaSourceEngine.\n *\n * @struct\n * @constructor\n * @implements {shaka.util.IDestroyable}\n */\nshaka.media.MediaSourceEngine = function(video) {\n  /** @private {HTMLMediaElement} */\n  this.video_ = video;\n\n  /** @private {shaka.extern.TextDisplayer} */\n  this.textDisplayer_ = null;\n\n  /** @private {!Object.<shaka.util.ManifestParserUtils.ContentType,\n                         SourceBuffer>} */\n  this.sourceBuffers_ = {};\n\n  /** @private {shaka.text.TextEngine} */\n  this.textEngine_ = null;\n\n  /**\n   * @private {!Object.<string,\n   *                    !Array.<shaka.media.MediaSourceEngine.Operation>>}\n   */\n  this.queues_ = {};\n\n  /** @private {shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  /** @private {boolean} */\n  this.destroyed_ = false;\n\n  /** @private {!Object.<string, !shaka.media.Transmuxer>} */\n  this.transmuxers_ = {};\n\n  /** @private {boolean} */\n  this.useEmbeddedText_ = false;\n\n  /** @private {muxjs.mp4.CaptionParser} */\n  this.captionParser_ = null;\n\n  /** @private {!Array.<number>} */\n  this.videoTrackIds_ = [];\n\n  /**\n   * Timescales from the init segments, used for mux.js CaptionParser.\n   * @private {!Object.<number, number>}\n   */\n  this.timescales_ = {};\n\n  /** @private {!shaka.util.PublicPromise} */\n  this.mediaSourceOpen_ = new shaka.util.PublicPromise();\n\n  /** @private {MediaSource} */\n  this.mediaSource_ = this.createMediaSource(this.mediaSourceOpen_);\n};\n\n\n/**\n * Create a MediaSource object, attach it to the video element, and return it.\n * Resolves the given promise when the MediaSource is ready.\n *\n * Replaced by unit tests.\n *\n * @param {!shaka.util.PublicPromise} p\n * @return {!MediaSource}\n */\nshaka.media.MediaSourceEngine.prototype.createMediaSource = function(p) {\n  let mediaSource = new MediaSource();\n\n  // Set up MediaSource on the video element.\n  this.eventManager_.listenOnce(mediaSource, 'sourceopen', p.resolve);\n  this.video_.src = window.URL.createObjectURL(mediaSource);\n\n  return mediaSource;\n};\n\n\n/**\n * @typedef {{\n *   start: function(),\n *   p: !shaka.util.PublicPromise\n * }}\n *\n * @summary An operation in queue.\n * @property {function()} start\n *   The function which starts the operation.\n * @property {!shaka.util.PublicPromise} p\n *   The PublicPromise which is associated with this operation.\n */\nshaka.media.MediaSourceEngine.Operation;\n\n\n/**\n * Checks if a certain type is supported.\n *\n * @param {shaka.extern.Stream} stream\n * @return {boolean}\n */\nshaka.media.MediaSourceEngine.isStreamSupported = function(stream) {\n  let fullMimeType = shaka.util.MimeUtils.getFullType(\n      stream.mimeType, stream.codecs);\n  let extendedMimeType = shaka.util.MimeUtils.getExtendedType(stream);\n  return shaka.text.TextEngine.isTypeSupported(fullMimeType) ||\n      MediaSource.isTypeSupported(extendedMimeType) ||\n      shaka.media.Transmuxer.isSupported(fullMimeType, stream.type);\n};\n\n\n/**\n * Returns true if the browser has the basic APIs we need.\n *\n * @return {boolean}\n */\nshaka.media.MediaSourceEngine.isBrowserSupported = function() {\n  return !!window.MediaSource && !!MediaSource.isTypeSupported;\n};\n\n\n/**\n * Returns a map of MediaSource support for well-known types.\n *\n * @return {!Object.<string, boolean>}\n */\nshaka.media.MediaSourceEngine.probeSupport = function() {\n  goog.asserts.assert(shaka.media.MediaSourceEngine.isBrowserSupported(),\n                      'Requires basic support');\n  let support = {};\n  let testMimeTypes = [\n    // MP4 types\n    'video/mp4; codecs=\"avc1.42E01E\"',\n    'video/mp4; codecs=\"avc3.42E01E\"',\n    'video/mp4; codecs=\"hev1.1.6.L93.90\"',\n    'video/mp4; codecs=\"hvc1.1.6.L93.90\"',\n    'video/mp4; codecs=\"hev1.2.4.L153.B0\"; eotf=\"smpte2084\"',  // HDR HEVC\n    'video/mp4; codecs=\"hvc1.2.4.L153.B0\"; eotf=\"smpte2084\"',  // HDR HEVC\n    'video/mp4; codecs=\"vp9\"',\n    'video/mp4; codecs=\"vp09.00.10.08\"',\n    'audio/mp4; codecs=\"mp4a.40.2\"',\n    'audio/mp4; codecs=\"ac-3\"',\n    'audio/mp4; codecs=\"ec-3\"',\n    'audio/mp4; codecs=\"opus\"',\n    'audio/mp4; codecs=\"flac\"',\n    // WebM types\n    'video/webm; codecs=\"vp8\"',\n    'video/webm; codecs=\"vp9\"',\n    'video/webm; codecs=\"vp09.00.10.08\"',\n    'audio/webm; codecs=\"vorbis\"',\n    'audio/webm; codecs=\"opus\"',\n    // MPEG2 TS types (video/ is also used for audio: https://bit.ly/TsMse)\n    'video/mp2t; codecs=\"avc1.42E01E\"',\n    'video/mp2t; codecs=\"avc3.42E01E\"',\n    'video/mp2t; codecs=\"hvc1.1.6.L93.90\"',\n    'video/mp2t; codecs=\"mp4a.40.2\"',\n    'video/mp2t; codecs=\"ac-3\"',\n    'video/mp2t; codecs=\"ec-3\"',\n    // WebVTT types\n    'text/vtt',\n    'application/mp4; codecs=\"wvtt\"',\n    // TTML types\n    'application/ttml+xml',\n    'application/mp4; codecs=\"stpp\"',\n  ];\n\n  testMimeTypes.forEach(function(type) {\n    support[type] = shaka.text.TextEngine.isTypeSupported(type) ||\n        MediaSource.isTypeSupported(type) ||\n        shaka.media.Transmuxer.isSupported(type);\n    let basicType = type.split(';')[0];\n    support[basicType] = support[basicType] || support[type];\n  });\n\n  return support;\n};\n\n\n/** @override */\nshaka.media.MediaSourceEngine.prototype.destroy = function() {\n  const Functional = shaka.util.Functional;\n  this.destroyed_ = true;\n\n  let cleanup = [];\n\n  for (let contentType in this.queues_) {\n    // Make a local copy of the queue and the first item.\n    let q = this.queues_[contentType];\n    let inProgress = q[0];\n\n    // Drop everything else out of the original queue.\n    this.queues_[contentType] = q.slice(0, 1);\n\n    // We will wait for this item to complete/fail.\n    if (inProgress) {\n      cleanup.push(inProgress.p.catch(Functional.noop));\n    }\n\n    // The rest will be rejected silently if possible.\n    for (let i = 1; i < q.length; ++i) {\n      q[i].p.catch(Functional.noop);\n      q[i].p.reject();\n    }\n  }\n\n  if (this.textEngine_) {\n    cleanup.push(this.textEngine_.destroy());\n  }\n  for (let contentType in this.transmuxers_) {\n    cleanup.push(this.transmuxers_[contentType].destroy());\n  }\n\n  return Promise.all(cleanup).then(function() {\n    let p = this.eventManager_ ? this.eventManager_.destroy() : null;\n\n    if (this.video_) {\n      this.video_.removeAttribute('src');\n      this.video_.load();\n    }\n\n    this.eventManager_ = null;\n    this.video_ = null;\n    this.mediaSource_ = null;\n    this.textEngine_ = null;\n    this.textDisplayer_ = null;\n    this.sourceBuffers_ = {};\n    this.transmuxers_ = {};\n    this.captionParser_ = null;\n    this.videoTrackIds_ = [];\n    this.timescales_ = {};\n    if (goog.DEBUG) {\n      for (let contentType in this.queues_) {\n        goog.asserts.assert(\n            this.queues_[contentType].length == 0,\n            contentType + ' queue should be empty after destroy!');\n      }\n    }\n    this.queues_ = {};\n\n    return p;\n  }.bind(this));\n};\n\n\n/**\n * @return {!Promise} Resolved when MediaSource is open and attached to the\n *   media element.  This process is actually initiated by the constructor.\n */\nshaka.media.MediaSourceEngine.prototype.open = function() {\n  return this.mediaSourceOpen_;\n};\n\n\n/**\n * Initialize MediaSourceEngine.\n *\n * Note that it is not valid to call this multiple times, except to add or\n * reinitialize text streams.\n *\n * @param {!Map.<shaka.util.ManifestParserUtils.ContentType,\n *               shaka.extern.Stream>} streamsByType\n *   A map of content types to streams.  All streams must be supported according\n *   to MediaSourceEngine.isStreamSupported.\n * @param {boolean} forceTransmuxTS\n *   If true, this will transmux TS content even if it is natively supported.\n *\n * @return {!Promise}\n *\n * @throws InvalidAccessError if blank MIME types are given\n * @throws NotSupportedError if unsupported MIME types are given\n * @throws QuotaExceededError if the browser can't support that many buffers\n */\nshaka.media.MediaSourceEngine.prototype.init = async function(\n    streamsByType, forceTransmuxTS) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  await this.mediaSourceOpen_;\n\n  streamsByType.forEach((stream, contentType) => {\n    goog.asserts.assert(\n        shaka.media.MediaSourceEngine.isStreamSupported(stream),\n        'Type negotiation should happen before MediaSourceEngine.init!');\n\n    let mimeType = shaka.util.MimeUtils.getFullType(\n        stream.mimeType, stream.codecs);\n    if (contentType == ContentType.TEXT) {\n      this.reinitText(mimeType);\n    } else {\n      if ((forceTransmuxTS || !MediaSource.isTypeSupported(mimeType)) &&\n          shaka.media.Transmuxer.isSupported(mimeType, contentType)) {\n        this.transmuxers_[contentType] = new shaka.media.Transmuxer();\n        mimeType =\n            shaka.media.Transmuxer.convertTsCodecs(contentType, mimeType);\n      }\n      let sourceBuffer = this.mediaSource_.addSourceBuffer(mimeType);\n      this.eventManager_.listen(\n          sourceBuffer, 'error',\n          this.onError_.bind(this, contentType));\n      this.eventManager_.listen(\n          sourceBuffer, 'updateend',\n          this.onUpdateEnd_.bind(this, contentType));\n      this.sourceBuffers_[contentType] = sourceBuffer;\n      this.queues_[contentType] = [];\n    }\n  });\n};\n\n\n/**\n * @param {shaka.extern.TextDisplayer} textDisplayer\n */\nshaka.media.MediaSourceEngine.prototype.setTextDisplayer =\n    function(textDisplayer) {\n  this.textDisplayer_ = textDisplayer;\n};\n\n\n/**\n * Reinitialize the TextEngine for a new text type.\n * @param {string} mimeType\n */\nshaka.media.MediaSourceEngine.prototype.reinitText = function(mimeType) {\n  if (!this.textEngine_) {\n    this.textEngine_ = new shaka.text.TextEngine(this.textDisplayer_);\n  }\n  this.textEngine_.initParser(mimeType);\n};\n\n\n/**\n * @return {boolean} True if the MediaSource is in an \"ended\" state, or if the\n *   object has been destroyed.\n */\nshaka.media.MediaSourceEngine.prototype.ended = function() {\n  return this.mediaSource_ ? this.mediaSource_.readyState == 'ended' : true;\n};\n\n\n/**\n * Gets the first timestamp in buffer for the given content type.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @return {?number} The timestamp in seconds, or null if nothing is buffered.\n */\nshaka.media.MediaSourceEngine.prototype.bufferStart = function(contentType) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (contentType == ContentType.TEXT) {\n    return this.textEngine_.bufferStart();\n  }\n  return shaka.media.TimeRangesUtils.bufferStart(\n      this.getBuffered_(contentType));\n};\n\n\n/**\n * Gets the last timestamp in buffer for the given content type.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @return {?number} The timestamp in seconds, or null if nothing is buffered.\n */\nshaka.media.MediaSourceEngine.prototype.bufferEnd = function(contentType) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (contentType == ContentType.TEXT) {\n    return this.textEngine_.bufferEnd();\n  }\n  return shaka.media.TimeRangesUtils.bufferEnd(this.getBuffered_(contentType));\n};\n\n\n/**\n * Determines if the given time is inside the buffered range of the given\n * content type.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {number} time Playhead time\n * @param {number=} smallGapLimit\n * @return {boolean}\n */\nshaka.media.MediaSourceEngine.prototype.isBuffered = function(\n    contentType, time, smallGapLimit) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (contentType == ContentType.TEXT) {\n    return this.textEngine_.isBuffered(time);\n  } else {\n    let buffered = this.getBuffered_(contentType);\n    return shaka.media.TimeRangesUtils.isBuffered(\n               buffered, time, smallGapLimit);\n  }\n};\n\n\n/**\n * Computes how far ahead of the given timestamp is buffered for the given\n * content type.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {number} time\n * @return {number} The amount of time buffered ahead in seconds.\n */\nshaka.media.MediaSourceEngine.prototype.bufferedAheadOf =\n    function(contentType, time) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (contentType == ContentType.TEXT) {\n    return this.textEngine_.bufferedAheadOf(time);\n  } else {\n    let buffered = this.getBuffered_(contentType);\n    return shaka.media.TimeRangesUtils.bufferedAheadOf(buffered, time);\n  }\n};\n\n\n/**\n * Gets the current buffered ranges.\n * @return {shaka.extern.BufferedInfo}\n */\nshaka.media.MediaSourceEngine.prototype.getBufferedInfo = function() {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  let getBufferedInfo = shaka.media.TimeRangesUtils.getBufferedInfo;\n\n  let textRanges;\n  if (this.textEngine_ && this.textEngine_.bufferStart() != null) {\n    textRanges = [{\n      start: this.textEngine_.bufferStart(),\n      end: this.textEngine_.bufferEnd(),\n    }];\n  } else {\n    textRanges = [];\n  }\n\n  return {\n    total: getBufferedInfo(this.video_.buffered),\n    audio: getBufferedInfo(this.getBuffered_(ContentType.AUDIO)),\n    video: getBufferedInfo(this.getBuffered_(ContentType.VIDEO)),\n    text: textRanges,\n  };\n};\n\n\n/**\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @return {TimeRanges} The buffered ranges for the given content type, or\n *   null if the buffered ranges could not be obtained.\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.getBuffered_ = function(contentType) {\n  try {\n    return this.sourceBuffers_[contentType].buffered;\n  } catch (exception) {\n    if (contentType in this.sourceBuffers_) {\n      // Note: previous MediaSource errors may cause access to |buffered| to\n      // throw.\n      shaka.log.error('failed to get buffered range for ' + contentType,\n                      exception);\n    }\n    return null;\n  }\n};\n\n\n/**\n * Enqueue an operation to append data to the SourceBuffer.\n * Start and end times are needed for TextEngine, but not for MediaSource.\n * Start and end times may be null for initialization segments; if present they\n * are relative to the presentation timeline.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {!ArrayBuffer} data\n * @param {?number} startTime relative to the start of the presentation\n * @param {?number} endTime relative to the start of the presentation\n * @param {?boolean} hasClosedCaptions True if the buffer contains CEA closed\n * captions\n * @return {!Promise}\n */\nshaka.media.MediaSourceEngine.prototype.appendBuffer =\n    function(contentType, data, startTime, endTime, hasClosedCaptions) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  if (contentType == ContentType.TEXT) {\n    return this.textEngine_.appendBuffer(data, startTime, endTime);\n  } else if (this.transmuxers_[contentType]) {\n    return this.transmuxers_[contentType].transmux(data).then(\n        function(transmuxedData) {\n          // TODO: refactor appending transmuxed cues.\n          // For HLS CEA-608/708 CLOSED-CAPTIONS, text data is embedded in the\n          // video stream, so textEngine may not have been initialized.\n          if (!this.textEngine_) {\n            this.reinitText('text/vtt');\n          }\n          // This doesn't work for native TS support (ex. Edge/Chromecast),\n          // since no transmuxing is needed for native TS.\n          if (this.useEmbeddedText_) {\n            this.textEngine_.appendCues(transmuxedData.cues);\n          }\n          return this.enqueueOperation_(contentType,\n              this.append_.bind(this, contentType, transmuxedData.data.buffer));\n        }.bind(this));\n  } else if (hasClosedCaptions && window.muxjs) {\n    if (!this.textEngine_) {\n      this.reinitText('text/vtt');\n    }\n    // If it is the init segment for closed captions, initialize the closed\n    // caption parser.\n    if (startTime == null && endTime == null) {\n      this.captionParser_ = new muxjs.mp4.CaptionParser();\n      const probe = muxjs.mp4.probe;\n      // Caption parser for Dash\n      const initBytes = new Uint8Array(data);\n      this.videoTrackIds_ = probe.videoTrackIds(initBytes);\n      this.timescales_ = probe.timescale(initBytes);\n      this.captionParser_.init();\n    } else {\n      const segmentBytes = new Uint8Array(data);\n      const dashParsed = this.captionParser_.parse(\n          segmentBytes, this.videoTrackIds_, this.timescales_);\n      if (dashParsed) {\n        /** @type {Array.<muxjs.mp4.ClosedCaption>} */\n        const captions = dashParsed.captions;\n        if (captions && captions.length > 0) {\n          this.textEngine_.storeAndAppendClosedCaptions(\n              captions, startTime, endTime);\n        }\n      } // dashParsed\n      this.captionParser_.clearParsedCaptions();\n    }\n    return this.enqueueOperation_(\n        contentType,\n        this.append_.bind(this, contentType, data));\n  } else {\n    return this.enqueueOperation_(\n        contentType,\n        this.append_.bind(this, contentType, data));\n  }\n};\n\n\n/**\n * Set whether to use embedded text cues.\n * Used for CEA 608/708 captions data, which is embedded inside the video\n * stream.\n *\n * @param {boolean} useEmbeddedText\n */\nshaka.media.MediaSourceEngine.prototype.setUseEmbeddedText =\n    function(useEmbeddedText) {\n  this.useEmbeddedText_ = useEmbeddedText;\n};\n\n\n/**\n * Set the selected closed captions Id and language.\n *\n * @param {string} id\n */\nshaka.media.MediaSourceEngine.prototype.setSelectedClosedCaptionId =\n    function(id) {\n  const VIDEO = shaka.util.ManifestParserUtils.ContentType.VIDEO;\n  const videoBufferEndTime = this.bufferEnd(VIDEO) || 0;\n  this.textEngine_.setSelectedClosedCaptionId(id, videoBufferEndTime);\n};\n\n\n/**\n * Get whether we're using the embedded text cues.\n *\n * @return {boolean}\n */\nshaka.media.MediaSourceEngine.prototype.getUseEmbeddedText = function() {\n  return this.useEmbeddedText_;\n};\n\n\n/**\n * Enqueue an operation to remove data from the SourceBuffer.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {number} startTime relative to the start of the presentation\n * @param {number} endTime relative to the start of the presentation\n * @return {!Promise}\n */\nshaka.media.MediaSourceEngine.prototype.remove =\n    function(contentType, startTime, endTime) {\n  // On IE11, this operation would be permitted, but would have no effect!\n  // See https://github.com/google/shaka-player/issues/251\n  goog.asserts.assert(endTime < Number.MAX_VALUE,\n      'remove() with MAX_VALUE or Infinity is not IE-compatible!');\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (contentType == ContentType.TEXT) {\n    return this.textEngine_.remove(startTime, endTime);\n  }\n  return this.enqueueOperation_(\n      contentType,\n      this.remove_.bind(this, contentType, startTime, endTime));\n};\n\n\n/**\n * Enqueue an operation to clear the SourceBuffer.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @return {!Promise}\n */\nshaka.media.MediaSourceEngine.prototype.clear = function(contentType) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (contentType == ContentType.TEXT) {\n    if (!this.textEngine_) {\n      return Promise.resolve();\n    }\n\n    // CaptionParser tracks the latest timestamp and uses this to filter\n    // for duplicate captions.  We do this ourselves, so we must reset\n    // the CaptionParser when we seek.  The best indicator of an\n    // unbuffered seek in MediaSourceEngine is clear().  This causes a\n    // small glitch when we change languages (which also calls clear()),\n    // where the first caption in the new language may be missing.\n    // TODO: Ask mux.js for a switch to remove this timestamp-tracking\n    // feature so that we can do away with these hacks.\n    if (this.captionParser_) {\n      this.captionParser_.resetCaptionStream();\n    }\n\n    return this.textEngine_.remove(0, Infinity);\n  }\n  // Note that not all platforms allow clearing to Infinity.\n  return this.enqueueOperation_(\n      contentType,\n      this.remove_.bind(this, contentType, 0, this.mediaSource_.duration));\n};\n\n\n/**\n * Enqueue an operation to flush the SourceBuffer.\n * This is a workaround for what we believe is a Chromecast bug.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @return {!Promise}\n */\nshaka.media.MediaSourceEngine.prototype.flush = function(contentType) {\n  // Flush the pipeline.  Necessary on Chromecast, even though we have removed\n  // everything.\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (contentType == ContentType.TEXT) {\n    // Nothing to flush for text.\n    return Promise.resolve();\n  }\n  return this.enqueueOperation_(\n      contentType,\n      this.flush_.bind(this, contentType));\n};\n\n\n/**\n * Sets the timestamp offset and append window end for the given content type.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {number} timestampOffset The timestamp offset.  Segments which start\n *   at time t will be inserted at time t + timestampOffset instead.  This\n *   value does not affect segments which have already been inserted.\n * @param {number} appendWindowStart The timestamp to set the append window\n *   start to.  Media before this value will be truncated.\n * @param {number} appendWindowEnd The timestamp to set the append window end\n *   to.  Media beyond this value will be truncated.\n * @return {!Promise}\n */\nshaka.media.MediaSourceEngine.prototype.setStreamProperties = function(\n    contentType, timestampOffset, appendWindowStart, appendWindowEnd) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (contentType == ContentType.TEXT) {\n    this.textEngine_.setTimestampOffset(timestampOffset);\n    this.textEngine_.setAppendWindow(appendWindowStart, appendWindowEnd);\n    return Promise.resolve();\n  }\n\n  return Promise.all([\n    // Queue an abort() to help MSE splice together overlapping segments.\n    // We set appendWindowEnd when we change periods in DASH content, and the\n    // period transition may result in overlap.\n    //\n    // An abort() also helps with MPEG2-TS.  When we append a TS segment, we\n    // always enter a PARSING_MEDIA_SEGMENT state and we can't change the\n    // timestamp offset.  By calling abort(), we reset the state so we can\n    // set it.\n    this.enqueueOperation_(\n        contentType,\n        this.abort_.bind(this, contentType)),\n    this.enqueueOperation_(\n        contentType,\n        this.setTimestampOffset_.bind(this, contentType, timestampOffset)),\n    this.enqueueOperation_(\n        contentType,\n        this.setAppendWindow_.bind(\n            this, contentType, appendWindowStart, appendWindowEnd)),\n  ]);\n};\n\n\n/**\n * @param {string=} reason Valid reasons are 'network' and 'decode'.\n * @return {!Promise}\n * @see http://w3c.github.io/media-source/#idl-def-EndOfStreamError\n */\nshaka.media.MediaSourceEngine.prototype.endOfStream = function(reason) {\n  return this.enqueueBlockingOperation_(function() {\n    // Chrome won't let us pass undefined, but it will let us omit the\n    // argument.  Firefox does not have this problem.\n    // TODO: File a bug about this.\n    if (reason) {\n      this.mediaSource_.endOfStream(reason);\n    } else {\n      this.mediaSource_.endOfStream();\n    }\n  }.bind(this));\n};\n\n\n/**\n * We only support increasing duration at this time.  Decreasing duration\n * causes the MSE removal algorithm to run, which results in an 'updateend'\n * event.  Supporting this scenario would be complicated, and is not currently\n * needed.\n *\n * @param {number} duration\n * @return {!Promise}\n */\nshaka.media.MediaSourceEngine.prototype.setDuration = function(duration) {\n  goog.asserts.assert(\n      isNaN(this.mediaSource_.duration) ||\n          this.mediaSource_.duration <= duration,\n      'duration cannot decrease: ' + this.mediaSource_.duration + ' -> ' +\n          duration);\n  return this.enqueueBlockingOperation_(function() {\n    this.mediaSource_.duration = duration;\n  }.bind(this));\n};\n\n\n/**\n * Get the current MediaSource duration.\n *\n * @return {number}\n */\nshaka.media.MediaSourceEngine.prototype.getDuration = function() {\n  return this.mediaSource_.duration;\n};\n\n\n/**\n * Append data to the SourceBuffer.\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {!ArrayBuffer} data\n * @throws QuotaExceededError if the browser's buffer is full\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.append_ =\n    function(contentType, data) {\n  // This will trigger an 'updateend' event.\n  this.sourceBuffers_[contentType].appendBuffer(data);\n};\n\n\n/**\n * Remove data from the SourceBuffer.\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {number} startTime relative to the start of the presentation\n * @param {number} endTime relative to the start of the presentation\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.remove_ =\n    function(contentType, startTime, endTime) {\n  if (endTime <= startTime) {\n    // Ignore removal of inverted or empty ranges.\n    // Fake 'updateend' event to resolve the operation.\n    this.onUpdateEnd_(contentType);\n    return;\n  }\n\n  // This will trigger an 'updateend' event.\n  this.sourceBuffers_[contentType].remove(startTime, endTime);\n};\n\n\n/**\n * Call abort() on the SourceBuffer.\n * This resets MSE's last_decode_timestamp on all track buffers, which should\n * trigger the splicing logic for overlapping segments.\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.abort_ = function(contentType) {\n  // Save the append window, which is reset on abort().\n  let appendWindowStart = this.sourceBuffers_[contentType].appendWindowStart;\n  let appendWindowEnd = this.sourceBuffers_[contentType].appendWindowEnd;\n\n  // This will not trigger an 'updateend' event, since nothing is happening.\n  // This is only to reset MSE internals, not to abort an actual operation.\n  this.sourceBuffers_[contentType].abort();\n\n  // Restore the append window.\n  this.sourceBuffers_[contentType].appendWindowStart = appendWindowStart;\n  this.sourceBuffers_[contentType].appendWindowEnd = appendWindowEnd;\n\n  // Fake an 'updateend' event to resolve the operation.\n  this.onUpdateEnd_(contentType);\n};\n\n\n/**\n * Nudge the playhead to force the media pipeline to be flushed.\n * This seems to be necessary on Chromecast to get new content to replace old\n * content.\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.flush_ = function(contentType) {\n  // Never use flush_ if there's data.  It causes a hiccup in playback.\n  goog.asserts.assert(\n      this.video_.buffered.length == 0,\n      'MediaSourceEngine.flush_ should only be used after clearing all data!');\n\n  // Seeking forces the pipeline to be flushed.\n  this.video_.currentTime -= 0.001;\n\n  // Fake an 'updateend' event to resolve the operation.\n  this.onUpdateEnd_(contentType);\n};\n\n\n/**\n * Set the SourceBuffer's timestamp offset.\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {number} timestampOffset\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.setTimestampOffset_ =\n    function(contentType, timestampOffset) {\n  // Work around for https://github.com/google/shaka-player/issues/1281:\n  // TODO(https://bit.ly/2ttKiBU): follow up when this is fixed in Edge\n  if (timestampOffset < 0) {\n    // Try to prevent rounding errors in Edge from removing the first keyframe.\n    timestampOffset += 0.001;\n  }\n\n  this.sourceBuffers_[contentType].timestampOffset = timestampOffset;\n\n  // Fake an 'updateend' event to resolve the operation.\n  this.onUpdateEnd_(contentType);\n};\n\n\n/**\n * Set the SourceBuffer's append window end.\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {number} appendWindowStart\n * @param {number} appendWindowEnd\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.setAppendWindow_ =\n    function(contentType, appendWindowStart, appendWindowEnd) {\n  // You can't set start > end, so first set start to 0, then set the new end,\n  // then set the new start.  That way, there are no intermediate states which\n  // are invalid.\n  this.sourceBuffers_[contentType].appendWindowStart = 0;\n  this.sourceBuffers_[contentType].appendWindowEnd = appendWindowEnd;\n  this.sourceBuffers_[contentType].appendWindowStart = appendWindowStart;\n\n  // Fake an 'updateend' event to resolve the operation.\n  this.onUpdateEnd_(contentType);\n};\n\n\n/**\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {!Event} event\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.onError_ =\n    function(contentType, event) {\n  let operation = this.queues_[contentType][0];\n  goog.asserts.assert(operation, 'Spurious error event!');\n  goog.asserts.assert(!this.sourceBuffers_[contentType].updating,\n                      'SourceBuffer should not be updating on error!');\n  let code = this.video_.error ? this.video_.error.code : 0;\n  operation.p.reject(new shaka.util.Error(\n      shaka.util.Error.Severity.CRITICAL,\n      shaka.util.Error.Category.MEDIA,\n      shaka.util.Error.Code.MEDIA_SOURCE_OPERATION_FAILED,\n      code));\n  // Do not pop from queue.  An 'updateend' event will fire next, and to avoid\n  // synchronizing these two event handlers, we will allow that one to pop from\n  // the queue as normal.  Note that because the operation has already been\n  // rejected, the call to resolve() in the 'updateend' handler will have no\n  // effect.\n};\n\n\n/**\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.onUpdateEnd_ = function(contentType) {\n  let operation = this.queues_[contentType][0];\n  goog.asserts.assert(operation, 'Spurious updateend event!');\n  if (!operation) return;\n  goog.asserts.assert(!this.sourceBuffers_[contentType].updating,\n                      'SourceBuffer should not be updating on updateend!');\n  operation.p.resolve();\n  this.popFromQueue_(contentType);\n};\n\n\n/**\n * Enqueue an operation and start it if appropriate.\n *\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @param {function()} start\n * @return {!Promise}\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.enqueueOperation_ =\n    function(contentType, start) {\n  if (this.destroyed_) return Promise.reject();\n\n  let operation = {\n    start: start,\n    p: new shaka.util.PublicPromise(),\n  };\n  this.queues_[contentType].push(operation);\n\n  if (this.queues_[contentType].length == 1) {\n    try {\n      operation.start();\n    } catch (exception) {\n      if (exception.name == 'QuotaExceededError') {\n        operation.p.reject(new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.MEDIA,\n            shaka.util.Error.Code.QUOTA_EXCEEDED_ERROR,\n            contentType));\n      } else {\n        operation.p.reject(new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.MEDIA,\n            shaka.util.Error.Code.MEDIA_SOURCE_OPERATION_THREW,\n            exception));\n      }\n      this.popFromQueue_(contentType);\n    }\n  }\n  return operation.p;\n};\n\n\n/**\n * Enqueue an operation which must block all other operations on all\n * SourceBuffers.\n *\n * @param {function()} run\n * @return {!Promise}\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.enqueueBlockingOperation_ =\n    function(run) {\n  if (this.destroyed_) return Promise.reject();\n\n  let allWaiters = [];\n\n  // Enqueue a 'wait' operation onto each queue.\n  // This operation signals its readiness when it starts.\n  // When all wait operations are ready, the real operation takes place.\n  for (let contentType in this.sourceBuffers_) {\n    let ready = new shaka.util.PublicPromise();\n    let operation = {\n      start: function(ready) { ready.resolve(); }.bind(null, ready),\n      p: ready,\n    };\n\n    this.queues_[contentType].push(operation);\n    allWaiters.push(ready);\n\n    if (this.queues_[contentType].length == 1) {\n      operation.start();\n    }\n  }\n\n  // Return a Promise to the real operation, which waits to begin until there\n  // are no other in-progress operations on any SourceBuffers.\n  return Promise.all(allWaiters).then(function() {\n    if (goog.DEBUG) {\n      // If we did it correctly, nothing is updating.\n      for (let contentType in this.sourceBuffers_) {\n        goog.asserts.assert(\n            this.sourceBuffers_[contentType].updating == false,\n            'SourceBuffers should not be updating after a blocking op!');\n      }\n    }\n\n    let ret;\n    // Run the real operation, which is synchronous.\n    try {\n      run();\n    } catch (exception) {\n      ret = Promise.reject(new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.MEDIA,\n          shaka.util.Error.Code.MEDIA_SOURCE_OPERATION_THREW,\n          exception));\n    }\n\n    // Unblock the queues.\n    for (let contentType in this.sourceBuffers_) {\n      this.popFromQueue_(contentType);\n    }\n\n    return ret;\n  }.bind(this), function() {\n    // One of the waiters failed, which means we've been destroyed.\n    goog.asserts.assert(this.destroyed_, 'Should be destroyed by now');\n    // We haven't popped from the queue.  Canceled waiters have been removed by\n    // destroy.  What's left now should just be resolved waiters.  In uncompiled\n    // mode, we will maintain good hygiene and make sure the assert at the end\n    // of destroy passes.  In compiled mode, the queues are wiped in destroy.\n    if (goog.DEBUG) {\n      for (let contentType in this.sourceBuffers_) {\n        if (this.queues_[contentType].length) {\n          goog.asserts.assert(\n              this.queues_[contentType].length == 1,\n              'Should be at most one item in queue!');\n          goog.asserts.assert(\n              allWaiters.includes(this.queues_[contentType][0].p),\n              'The item in queue should be one of our waiters!');\n          this.queues_[contentType].shift();\n        }\n      }\n    }\n    return Promise.reject();\n  }.bind(this));\n};\n\n\n/**\n * Pop from the front of the queue and start a new operation.\n * @param {shaka.util.ManifestParserUtils.ContentType} contentType\n * @private\n */\nshaka.media.MediaSourceEngine.prototype.popFromQueue_ = function(contentType) {\n  // Remove the in-progress operation, which is now complete.\n  this.queues_[contentType].shift();\n  // Retrieve the next operation, if any, from the queue and start it.\n  let next = this.queues_[contentType][0];\n  if (next) {\n    try {\n      next.start();\n    } catch (exception) {\n      next.p.reject(new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.MEDIA,\n          shaka.util.Error.Code.MEDIA_SOURCE_OPERATION_THREW,\n          exception));\n      this.popFromQueue_(contentType);\n    }\n  }\n};\n\n\n/**\n * Set the closed caption parser. Used only for unit tests.\n * @param {muxjs.mp4.CaptionParser} captionParser\n */\nshaka.media.MediaSourceEngine.prototype.setCaptionParser = function(\n    captionParser) {\n  this.captionParser_ = captionParser;\n};\n\n\n/**\n * Get the closed caption parser. Used only for unit tests.\n * @return {muxjs.mp4.CaptionParser} captionParser\n */\nshaka.media.MediaSourceEngine.prototype.getCaptionParser = function() {\n  return this.captionParser_;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.LanguageUtils');\n\ngoog.require('goog.asserts');\n\n\n/**\n * @summary A set of language utility functions.\n * @final\n */\nshaka.util.LanguageUtils = class {\n  /**\n   * Check if |locale1| and |locale2| are locale-compatible.\n   *\n   * Locale-compatible is defined as all components in each locale match. Since\n   * we only respect the language and region components, we only check that\n   * the language and region components match.\n   *\n   * Examples:\n   *  Locale A | Locale B | Locale Compatible\n   *  ---------------------------------------\n   *  en-US    | en-US    | true\n   *  en       | en-US    | false\n   *  en-US    | en-CA    | false\n   *\n   * @param {string} locale1\n   * @param {string} locale2\n   * @return {boolean}\n   */\n  static areLocaleCompatible(locale1, locale2) {\n    const normalize = shaka.util.LanguageUtils.normalize;\n\n    // Even through they SHOULD already be normalized, let's just be safe and\n    // do it again.\n    locale1 = normalize(locale1);\n    locale2 = normalize(locale2);\n\n    return locale1 == locale2;\n  }\n\n  /**\n   * Check if |locale1| and |locale2| are language-compatible.\n   *\n   * Language compatible is when the language component of each locale matches.\n   * This means that no matter what region they have (or don't have) as long as\n   * the language components match, they are language-compatible.\n   *\n   * Examples:\n   *  Locale A | Locale B | Language-Compatible\n   *  -----------------------------------------\n   *  en-US    | en-US    | true\n   *  en-US    | en       | true\n   *  en-US    | en-CA    | true\n   *  en-CA    | fr-CA    | false\n   *\n   * @param {string} locale1\n   * @param {string} locale2\n   * @return {boolean}\n   */\n  static areLanguageCompatible(locale1, locale2) {\n    const disassembleLocale = shaka.util.LanguageUtils.disassembleLocale_;\n    const normalize = shaka.util.LanguageUtils.normalize;\n\n    // Even through they SHOULD already be normalized, let's just be safe and\n    // do it again.\n    locale1 = normalize(locale1);\n    locale2 = normalize(locale2);\n\n    // Get all components. This should only be language and region\n    // since we do not support dialect.\n    /** @type {!Array.<string>} */\n    const locale1Components = disassembleLocale(locale1);\n    /** @type {!Array.<string>} */\n    const locale2Components = disassembleLocale(locale2);\n\n    // We are language compatible if we have the same language.\n    return locale1Components[0] == locale2Components[0];\n  }\n\n  /**\n   * Check if |possibleParent| is the parent locale of |possibleChild|. Because\n   * we do not support dialects, the parent-child relationship is a lot simpler.\n   * In a parent child relationship:\n   *    - The parent and child have the same language-component\n   *    - The parent has no region-component\n   *    - The child has a region-component\n   *\n   * Example:\n   *  Locale A | Locale B | Is A The parent of B?\n   *  --------------------------------------------\n   *  en-US    | en-US    | no\n   *  en-US    | en       | no\n   *  en       | en-US    | yes\n   *  en       | en       | no\n   *  en       | fr       | no\n   *\n   * @param {string} possibleParent\n   * @param {string} possibleChild\n   * @return {boolean}\n   */\n  static isParentOf(possibleParent, possibleChild) {\n    const disassembleLocale = shaka.util.LanguageUtils.disassembleLocale_;\n    const normalize = shaka.util.LanguageUtils.normalize;\n\n    // Even through they SHOULD already be normalized, let's just be safe and\n    // do it again.\n    possibleParent = normalize(possibleParent);\n    possibleChild = normalize(possibleChild);\n\n    // Get all components. This should only be language and region\n    // since we do not support dialect.\n    /** @type {!Array.<string>} */\n    const possibleParentComponents = disassembleLocale(possibleParent);\n    /** @type {!Array.<string>} */\n    const possibleChildComponents = disassembleLocale(possibleChild);\n\n    return possibleParentComponents[0] == possibleChildComponents[0] &&\n           possibleParentComponents.length == 1 &&\n           possibleChildComponents.length == 2;\n  }\n\n  /**\n   * Check if |localeA| shares the same parent with |localeB|. Since we don't\n   * support dialect, we will only look at language and region. For two locales\n   * to be siblings:\n   *    - Both must have language-components\n   *    - Both must have region-components\n   *    - Both must have the same language-component\n   *\n   * Example:\n   *  Locale A | Locale B | Siblings?\n   *  --------------------------------------------\n   *  en-US    | en-US    | yes\n   *  en-US    | en-CA    | yes\n   *  en-US    | en       | no\n   *  en       | en-US    | no\n   *  en       | en       | no\n   *  en       | fr       | no\n   *\n   * @param {string} localeA\n   * @param {string} localeB\n   * @return {boolean}\n   */\n  static isSiblingOf(localeA, localeB) {\n    const disassembleLocale = shaka.util.LanguageUtils.disassembleLocale_;\n    const normalize = shaka.util.LanguageUtils.normalize;\n\n    // Even through they SHOULD already be normalized, let's just be safe and\n    // do it again.\n    localeA = normalize(localeA);\n    localeB = normalize(localeB);\n\n    // Get all components. This should only be language and region\n    // since we do not support dialect.\n    /** @type {!Array.<string>} */\n    const localeAComponents = disassembleLocale(localeA);\n    /** @type {!Array.<string>} */\n    const localeBComponents = disassembleLocale(localeB);\n\n    return localeAComponents.length == 2 &&\n           localeBComponents.length == 2 &&\n           localeAComponents[0] == localeBComponents[0];\n  }\n\n  /**\n   * Normalize a locale. This will take a locale and canonicalize it to a state\n   * that we are prepared to work with.\n   *\n   * We only support with:\n   *   - language\n   *   - language-REGION\n   *\n   * If given a dialect, we will discard it. We will convert any 3-character\n   * codes to 2-character codes. We will force language codes to lowercase and\n   * region codes to uppercase.\n   *\n   * @param {string} locale\n   * @return {string}\n   */\n  static normalize(locale) {\n    const components = locale.split('-');\n\n    // We are only going to use the language and the region. If there was\n    // a dialect or anything else, we are throwing it a way.\n    let language = components[0] || '';\n    let region = components[1] || '';\n\n    // Convert the language to lower case. It is standard for the language code\n    // to be in lower case, but it will also make the map look-up easier.\n    language = language.toLowerCase();\n    language = shaka.util.LanguageUtils.isoMap_.get(language) || language;\n\n    // Convert the region to upper case. It is standard for the region to be in\n    // upper case. If there is no upper code, then it will be an empty string\n    // and this will be a no-op.\n    region = region.toUpperCase();\n\n    return region ?\n           language + '-' + region :\n           language;\n  }\n\n  /**\n   * Check if two language codes are siblings. Language codes are siblings if\n   * they share the same base language while neither one is the base language.\n   *\n   * For example, \"en-US\" and \"en-CA\" are siblings but \"en-US\" and \"en\" are not\n   * siblings.\n   *\n   * @param {string} a\n   * @param {string} b\n   * @return {boolean}\n   */\n  static areSiblings(a, b) {\n    const baseA = shaka.util.LanguageUtils.getBase(a);\n    const baseB = shaka.util.LanguageUtils.getBase(b);\n\n    return a != baseA && b != baseB && baseA == baseB;\n  }\n\n  /**\n   * Get the normalized base language for a language code.\n   *\n   * @param {string} lang\n   * @return {string}\n   */\n  static getBase(lang) {\n    const splitAt = lang.indexOf('-');\n    let major;\n\n    if (splitAt >= 0) {\n      major = lang.substring(0, splitAt);\n    } else {\n      major = lang;\n    }\n\n    // Convert the major code to lower case. It is standard for the major code\n    // to be in lower case, but it will also make the map look-up easier.\n    major = major.toLowerCase();\n    major = shaka.util.LanguageUtils.isoMap_.get(major) || major;\n\n    return major;\n  }\n\n  /**\n   * Get the normalized language of the given text stream. Will return 'und' if\n   * a language is not found on the text stream.\n   *\n   * This should always be used to get the language from a text stream.\n   *\n   * @param {shaka.extern.Stream} stream\n   * @return {string}\n   */\n  static getLocaleForText(stream) {\n    const ContentType = shaka.util.ManifestParserUtils.ContentType;\n    goog.asserts.assert(\n        stream.type == ContentType.TEXT,\n        'Can only get language from text streams');\n\n    const language = stream.language || 'und';\n    return shaka.util.LanguageUtils.normalize(language);\n  }\n\n  /**\n   * Get the normalized locale for the given variant. This will look through\n   * the variant to find the locale that represents the content in the variant.\n   * This will return 'und' if no language can be found.\n   *\n   * This should always be used to get the locale from a variant.\n   *\n   * @param {shaka.extern.Variant} variant\n   * @return {string}\n   */\n  static getLocaleForVariant(variant) {\n    // Our preference order is:\n    //  1. Variant\n    //  2. Audio Stream\n    //  3. Video Stream\n    //\n    // We are going to consider all falsy strings to be invalid locales, this\n    // will include empty strings.\n\n    const normalize = shaka.util.LanguageUtils.normalize;\n\n    if (variant.language) {\n      return normalize(variant.language);\n    }\n\n    if (variant.audio && variant.audio.language) {\n      return normalize(variant.audio.language);\n    }\n\n    if (variant.video && variant.video.language) {\n      return normalize(variant.video.language);\n    }\n\n    // No language was found, but we still want to return a valid string.\n    return 'und';\n  }\n\n  /**\n   * Find the locale in |searchSpace| that comes closest to |target|. If no\n   * locale is found to be close to |target|, then |null| will be returned.\n   *\n   * @param {string} target\n   * @param {!Iterable.<string>} searchSpace\n   * @return {?string}\n   */\n  static findClosestLocale(target, searchSpace) {\n    const LanguageUtils = shaka.util.LanguageUtils;\n    const isParentOf = LanguageUtils.isParentOf;\n    const isSiblingOf = LanguageUtils.isSiblingOf;\n    const normalize = LanguageUtils.normalize;\n\n    /** @type {string} */\n    const safeTarget = normalize(target);\n    /** @type {!Set.<string>} */\n    const safeSearchSpace = new Set();\n    for (const option of searchSpace) {\n      safeSearchSpace.add(normalize(option));\n    }\n\n    // Preference 1 - The option is an exact match. For example, \"en-US\" is an\n    //    exact match of \"en-US\". So if there is an option that is an exact\n    //    match, it would be the best match possible.\n    for (const option of safeSearchSpace) {\n      if (option == safeTarget) {\n        return option;\n      }\n    }\n\n    // Preference 2 - The option is the parent of the target. For example,\n    //    \"en\" is the parent of \"en-US\". So if there is an option with\n    //    \"en\", it should be good enough when our preference is \"en-US\".\n    for (const option of safeSearchSpace) {\n      if (isParentOf(option, safeTarget)) {\n        return option;\n      }\n    }\n\n    // Preference 3 - The option is a sibling of the target. For example,\n    //    \"en-US\" is a sibling of \"en-CA\". So if there is an option with\n    //    \"en_CA\", it should be good enough when our preference is \"en-US\".\n    for (const option of safeSearchSpace) {\n      if (isSiblingOf(option, safeTarget)) {\n        return option;\n      }\n    }\n\n    // Preference 4 - The option is a child of the target. For example,\n    //    \"en-US\" is the child of \"en\". SO it there is an option with\n    //    \"en-US\", it should be good enough when our preference is \"en\".\n    for (const option of safeSearchSpace) {\n      if (isParentOf(safeTarget, option)) {\n        return option;\n      }\n    }\n\n    // Failed to find anything.\n    return null;\n  }\n\n  /**\n   * Take a locale string and break it into its component. Check that each\n   * component matches what we would expect internally for locales. This\n   * should ONLY be used to verify locales that have been normalized.\n   *\n   * @param {string} locale\n   * @return {!Array.<string>}\n   * @private\n   */\n  static disassembleLocale_(locale) {\n    const components = locale.split('-');\n\n    goog.asserts.assert(\n        components.length <= 2,\n        [\n          'Locales should not have more than 2 components. ',\n          locale,\n          ' has too many components.',\n        ].join());\n\n    return components;\n  }\n};\n\n\n/**\n * A map from 3-letter language codes (ISO 639-2) to 2-letter language codes\n * (ISO 639-1) for all languages which have both in the registry.\n *\n * @const {!Map.<string, string>}\n * @private\n */\nshaka.util.LanguageUtils.isoMap_ = new Map([\n  ['aar', 'aa'], ['abk', 'ab'], ['afr', 'af'], ['aka', 'ak'], ['alb', 'sq'],\n  ['amh', 'am'], ['ara', 'ar'], ['arg', 'an'], ['arm', 'hy'], ['asm', 'as'],\n  ['ava', 'av'], ['ave', 'ae'], ['aym', 'ay'], ['aze', 'az'], ['bak', 'ba'],\n  ['bam', 'bm'], ['baq', 'eu'], ['bel', 'be'], ['ben', 'bn'], ['bih', 'bh'],\n  ['bis', 'bi'], ['bod', 'bo'], ['bos', 'bs'], ['bre', 'br'], ['bul', 'bg'],\n  ['bur', 'my'], ['cat', 'ca'], ['ces', 'cs'], ['cha', 'ch'], ['che', 'ce'],\n  ['chi', 'zh'], ['chu', 'cu'], ['chv', 'cv'], ['cor', 'kw'], ['cos', 'co'],\n  ['cre', 'cr'], ['cym', 'cy'], ['cze', 'cs'], ['dan', 'da'], ['deu', 'de'],\n  ['div', 'dv'], ['dut', 'nl'], ['dzo', 'dz'], ['ell', 'el'], ['eng', 'en'],\n  ['epo', 'eo'], ['est', 'et'], ['eus', 'eu'], ['ewe', 'ee'], ['fao', 'fo'],\n  ['fas', 'fa'], ['fij', 'fj'], ['fin', 'fi'], ['fra', 'fr'], ['fre', 'fr'],\n  ['fry', 'fy'], ['ful', 'ff'], ['geo', 'ka'], ['ger', 'de'], ['gla', 'gd'],\n  ['gle', 'ga'], ['glg', 'gl'], ['glv', 'gv'], ['gre', 'el'], ['grn', 'gn'],\n  ['guj', 'gu'], ['hat', 'ht'], ['hau', 'ha'], ['heb', 'he'], ['her', 'hz'],\n  ['hin', 'hi'], ['hmo', 'ho'], ['hrv', 'hr'], ['hun', 'hu'], ['hye', 'hy'],\n  ['ibo', 'ig'], ['ice', 'is'], ['ido', 'io'], ['iii', 'ii'], ['iku', 'iu'],\n  ['ile', 'ie'], ['ina', 'ia'], ['ind', 'id'], ['ipk', 'ik'], ['isl', 'is'],\n  ['ita', 'it'], ['jav', 'jv'], ['jpn', 'ja'], ['kal', 'kl'], ['kan', 'kn'],\n  ['kas', 'ks'], ['kat', 'ka'], ['kau', 'kr'], ['kaz', 'kk'], ['khm', 'km'],\n  ['kik', 'ki'], ['kin', 'rw'], ['kir', 'ky'], ['kom', 'kv'], ['kon', 'kg'],\n  ['kor', 'ko'], ['kua', 'kj'], ['kur', 'ku'], ['lao', 'lo'], ['lat', 'la'],\n  ['lav', 'lv'], ['lim', 'li'], ['lin', 'ln'], ['lit', 'lt'], ['ltz', 'lb'],\n  ['lub', 'lu'], ['lug', 'lg'], ['mac', 'mk'], ['mah', 'mh'], ['mal', 'ml'],\n  ['mao', 'mi'], ['mar', 'mr'], ['may', 'ms'], ['mkd', 'mk'], ['mlg', 'mg'],\n  ['mlt', 'mt'], ['mon', 'mn'], ['mri', 'mi'], ['msa', 'ms'], ['mya', 'my'],\n  ['nau', 'na'], ['nav', 'nv'], ['nbl', 'nr'], ['nde', 'nd'], ['ndo', 'ng'],\n  ['nep', 'ne'], ['nld', 'nl'], ['nno', 'nn'], ['nob', 'nb'], ['nor', 'no'],\n  ['nya', 'ny'], ['oci', 'oc'], ['oji', 'oj'], ['ori', 'or'], ['orm', 'om'],\n  ['oss', 'os'], ['pan', 'pa'], ['per', 'fa'], ['pli', 'pi'], ['pol', 'pl'],\n  ['por', 'pt'], ['pus', 'ps'], ['que', 'qu'], ['roh', 'rm'], ['ron', 'ro'],\n  ['rum', 'ro'], ['run', 'rn'], ['rus', 'ru'], ['sag', 'sg'], ['san', 'sa'],\n  ['sin', 'si'], ['slk', 'sk'], ['slo', 'sk'], ['slv', 'sl'], ['sme', 'se'],\n  ['smo', 'sm'], ['sna', 'sn'], ['snd', 'sd'], ['som', 'so'], ['sot', 'st'],\n  ['spa', 'es'], ['sqi', 'sq'], ['srd', 'sc'], ['srp', 'sr'], ['ssw', 'ss'],\n  ['sun', 'su'], ['swa', 'sw'], ['swe', 'sv'], ['tah', 'ty'], ['tam', 'ta'],\n  ['tat', 'tt'], ['tel', 'te'], ['tgk', 'tg'], ['tgl', 'tl'], ['tha', 'th'],\n  ['tib', 'bo'], ['tir', 'ti'], ['ton', 'to'], ['tsn', 'tn'], ['tso', 'ts'],\n  ['tuk', 'tk'], ['tur', 'tr'], ['twi', 'tw'], ['uig', 'ug'], ['ukr', 'uk'],\n  ['urd', 'ur'], ['uzb', 'uz'], ['ven', 've'], ['vie', 'vi'], ['vol', 'vo'],\n  ['wel', 'cy'], ['wln', 'wa'], ['wol', 'wo'], ['xho', 'xh'], ['yid', 'yi'],\n  ['yor', 'yo'], ['zha', 'za'], ['zho', 'zh'], ['zul', 'zu'],\n]);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.StreamUtils');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.media.DrmEngine');\ngoog.require('shaka.media.MediaSourceEngine');\ngoog.require('shaka.text.TextEngine');\ngoog.require('shaka.util.Functional');\ngoog.require('shaka.util.LanguageUtils');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.MimeUtils');\n\n\n/**\n * @namespace shaka.util.StreamUtils\n * @summary A set of utility functions for dealing with Streams and Manifests.\n */\n\n\n/**\n * @param {shaka.extern.Variant} variant\n * @param {shaka.extern.Restrictions} restrictions\n *   Configured restrictions from the user.\n * @param {{width: number, height: number}} maxHwRes\n *   The maximum resolution the hardware can handle.\n *   This is applied separately from user restrictions because the setting\n *   should not be easily replaced by the user's configuration.\n * @return {boolean}\n */\nshaka.util.StreamUtils.meetsRestrictions = function(\n    variant, restrictions, maxHwRes) {\n  /** @type {function(number, number, number):boolean} */\n  const inRange = (x, min, max) => {\n    return x >= min && x <= max;\n  };\n\n  const video = variant.video;\n\n  // |video.width| and |video.height| can be undefined, which breaks\n  // the math, so make sure they are there first.\n  if (video && video.width && video.height) {\n    if (!inRange(video.width,\n                 restrictions.minWidth,\n                 Math.min(restrictions.maxWidth, maxHwRes.width))) {\n      return false;\n    }\n\n    if (!inRange(video.height,\n                 restrictions.minHeight,\n                 Math.min(restrictions.maxHeight, maxHwRes.height))) {\n      return false;\n    }\n\n    if (!inRange(video.width * video.height,\n                 restrictions.minPixels,\n                 restrictions.maxPixels)) {\n      return false;\n    }\n  }\n\n  if (!inRange(variant.bandwidth,\n               restrictions.minBandwidth,\n               restrictions.maxBandwidth)) {\n    return false;\n  }\n\n  return true;\n};\n\n\n/**\n * @param {!Array.<shaka.extern.Variant>} variants\n * @param {shaka.extern.Restrictions} restrictions\n * @param {{width: number, height: number}} maxHwRes\n * @return {boolean} Whether the tracks changed.\n */\nshaka.util.StreamUtils.applyRestrictions =\n    function(variants, restrictions, maxHwRes) {\n  let tracksChanged = false;\n\n  variants.forEach((variant) => {\n    let originalAllowed = variant.allowedByApplication;\n    variant.allowedByApplication = shaka.util.StreamUtils.meetsRestrictions(\n        variant, restrictions, maxHwRes);\n\n    if (originalAllowed != variant.allowedByApplication) {\n      tracksChanged = true;\n    }\n  });\n\n  return tracksChanged;\n};\n\n\n/**\n * Alters the given Period to filter out any unplayable streams.\n *\n * @param {shaka.media.DrmEngine} drmEngine\n * @param {?shaka.extern.Stream} activeAudio\n * @param {?shaka.extern.Stream} activeVideo\n * @param {shaka.extern.Period} period\n */\nshaka.util.StreamUtils.filterNewPeriod = function(\n    drmEngine, activeAudio, activeVideo, period) {\n  const StreamUtils = shaka.util.StreamUtils;\n\n  if (activeAudio) {\n    goog.asserts.assert(StreamUtils.isAudio(activeAudio),\n                        'Audio streams must have the audio type.');\n  }\n\n  if (activeVideo) {\n    goog.asserts.assert(StreamUtils.isVideo(activeVideo),\n                        'Video streams must have the video type.');\n  }\n\n  // Filter variants.\n  period.variants = period.variants.filter((variant) => {\n    if (drmEngine && drmEngine.initialized()) {\n      if (!drmEngine.supportsVariant(variant)) {\n        shaka.log.debug('Dropping variant - not compatible with key system',\n                        variant);\n        return false;\n      }\n    }\n\n    const audio = variant.audio;\n    const video = variant.video;\n\n    if (audio && !shaka.media.MediaSourceEngine.isStreamSupported(audio)) {\n      shaka.log.debug('Dropping variant - audio not compatible with platform',\n                      StreamUtils.getStreamSummaryString_(audio));\n      return false;\n    }\n\n    if (video && !shaka.media.MediaSourceEngine.isStreamSupported(video)) {\n      shaka.log.debug('Dropping variant - video not compatible with platform',\n                      StreamUtils.getStreamSummaryString_(video));\n      return false;\n    }\n\n    if (audio && activeAudio) {\n      if (!StreamUtils.areStreamsCompatible_(audio, activeAudio)) {\n        shaka.log.debug('Droping variant - not compatible with active audio',\n                        'active audio',\n                        StreamUtils.getStreamSummaryString_(activeAudio),\n                        'variant.audio',\n                        StreamUtils.getStreamSummaryString_(audio));\n        return false;\n      }\n    }\n\n    if (video && activeVideo) {\n      if (!StreamUtils.areStreamsCompatible_(video, activeVideo)) {\n        shaka.log.debug('Droping variant - not compatible with active video',\n                        'active video',\n                        StreamUtils.getStreamSummaryString_(activeVideo),\n                        'variant.video',\n                        StreamUtils.getStreamSummaryString_(video));\n        return false;\n      }\n    }\n\n    return true;\n  });\n\n  // Filter text streams.\n  period.textStreams = period.textStreams.filter(function(stream) {\n    let fullMimeType = shaka.util.MimeUtils.getFullType(\n        stream.mimeType, stream.codecs);\n    let keep = shaka.text.TextEngine.isTypeSupported(fullMimeType);\n\n    if (!keep) {\n      shaka.log.debug('Dropping text stream. Is not supported by the ' +\n                      'platform.', stream);\n    }\n\n    return keep;\n  });\n};\n\n\n/**\n * @param {shaka.extern.Stream} s0\n * @param {shaka.extern.Stream} s1\n * @return {boolean}\n * @private\n */\nshaka.util.StreamUtils.areStreamsCompatible_ = function(s0, s1) {\n  // Basic mime types and basic codecs need to match.\n  // For example, we can't adapt between WebM and MP4,\n  // nor can we adapt between mp4a.* to ec-3.\n  // We can switch between text types on the fly,\n  // so don't run this check on text.\n  if (s0.mimeType != s1.mimeType) {\n    return false;\n  }\n\n  if (s0.codecs.split('.')[0] != s1.codecs.split('.')[0]) {\n    return false;\n  }\n\n  return true;\n};\n\n\n/**\n * @param {shaka.extern.Variant} variant\n * @return {shaka.extern.Track}\n */\nshaka.util.StreamUtils.variantToTrack = function(variant) {\n  /** @type {?shaka.extern.Stream} */\n  let audio = variant.audio;\n  /** @type {?shaka.extern.Stream} */\n  let video = variant.video;\n\n  /** @type {?string} */\n  let audioCodec = audio ? audio.codecs : null;\n  /** @type {?string} */\n  let videoCodec = video ? video.codecs : null;\n\n  /** @type {!Array.<string>} */\n  let codecs = [];\n  if (videoCodec) codecs.push(videoCodec);\n  if (audioCodec) codecs.push(audioCodec);\n\n  /** @type {!Array.<string>} */\n  let mimeTypes = [];\n  if (video) mimeTypes.push(video.mimeType);\n  if (audio) mimeTypes.push(audio.mimeType);\n  /** @type {?string} */\n  let mimeType = mimeTypes[0] || null;\n\n  /** @type {!Array.<string>} */\n  let kinds = [];\n  if (audio) kinds.push(audio.kind);\n  if (video) kinds.push(video.kind);\n  /** @type {?string} */\n  let kind = kinds[0] || null;\n\n  /** @type {!Set.<string>} */\n  const roles = new Set();\n  if (audio) audio.roles.forEach((role) => roles.add(role));\n  if (video) video.roles.forEach((role) => roles.add(role));\n\n  /** @type {shaka.extern.Track} */\n  let track = {\n    id: variant.id,\n    active: false,\n    type: 'variant',\n    bandwidth: variant.bandwidth,\n    language: variant.language,\n    label: null,\n    kind: kind,\n    width: null,\n    height: null,\n    frameRate: null,\n    mimeType: mimeType,\n    codecs: codecs.join(', '),\n    audioCodec: audioCodec,\n    videoCodec: videoCodec,\n    primary: variant.primary,\n    roles: Array.from(roles),\n    videoId: null,\n    audioId: null,\n    channelsCount: null,\n    audioBandwidth: null,\n    videoBandwidth: null,\n    originalVideoId: null,\n    originalAudioId: null,\n    originalTextId: null,\n  };\n\n  if (video) {\n    track.videoId = video.id;\n    track.originalVideoId = video.originalId;\n    track.width = video.width || null;\n    track.height = video.height || null;\n    track.frameRate = video.frameRate || null;\n    track.videoBandwidth = video.bandwidth || null;\n  }\n\n  if (audio) {\n    track.audioId = audio.id;\n    track.originalAudioId = audio.originalId;\n    track.channelsCount = audio.channelsCount;\n    track.audioBandwidth = audio.bandwidth || null;\n    track.label = audio.label;\n  }\n\n  return track;\n};\n\n\n/**\n * @param {shaka.extern.Stream} stream\n * @return {shaka.extern.Track}\n */\nshaka.util.StreamUtils.textStreamToTrack = function(stream) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  /** @type {shaka.extern.Track} */\n  let track = {\n    id: stream.id,\n    active: false,\n    type: ContentType.TEXT,\n    bandwidth: 0,\n    language: stream.language,\n    label: stream.label,\n    kind: stream.kind || null,\n    width: null,\n    height: null,\n    frameRate: null,\n    mimeType: stream.mimeType,\n    codecs: stream.codecs || null,\n    audioCodec: null,\n    videoCodec: null,\n    primary: stream.primary,\n    roles: stream.roles,\n    videoId: null,\n    audioId: null,\n    channelsCount: null,\n    audioBandwidth: null,\n    videoBandwidth: null,\n    originalVideoId: null,\n    originalAudioId: null,\n    originalTextId: stream.originalId,\n  };\n\n  return track;\n};\n\n\n/**\n * Gets an array of Track objects for the given Period.\n *\n * @param {shaka.extern.Period} period\n * @param {?number} activeAudioId\n * @param {?number} activeVideoId\n * @return {!Array.<shaka.extern.Track>}\n */\nshaka.util.StreamUtils.getVariantTracks =\n    function(period, activeAudioId, activeVideoId) {\n  const StreamUtils = shaka.util.StreamUtils;\n  let variants = StreamUtils.getPlayableVariants(period.variants);\n\n  return variants.map(function(variant) {\n    let track = StreamUtils.variantToTrack(variant);\n\n    if (variant.video && variant.audio) {\n      track.active = activeVideoId == variant.video.id &&\n                     activeAudioId == variant.audio.id;\n    } else if (variant.video) {\n      track.active = activeVideoId == variant.video.id;\n    } else if (variant.audio) {\n      track.active = activeAudioId == variant.audio.id;\n    }\n\n    return track;\n  });\n};\n\n\n/**\n * Gets an array of text Track objects for the given Period, including text\n * streams in the period, and texts embedded in the video streams in the\n * period.\n *\n * @param {shaka.extern.Period} period\n * @param {?number} activeStreamId\n * @return {!Array.<shaka.extern.Track>}\n */\nshaka.util.StreamUtils.getTextTracks = function(period, activeStreamId) {\n  return period.textStreams.map(function(stream) {\n    let track = shaka.util.StreamUtils.textStreamToTrack(stream);\n    track.active = activeStreamId == stream.id;\n    return track;\n  });\n};\n\n\n/**\n * Finds the Variant for the given track.\n *\n * @param {shaka.extern.Period} period\n * @param {shaka.extern.Track} track\n * @return {?shaka.extern.Variant}\n */\nshaka.util.StreamUtils.findVariantForTrack = function(period, track) {\n  for (let i = 0; i < period.variants.length; i++) {\n    if (period.variants[i].id == track.id) {\n      return period.variants[i];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Finds the text stream for the given track.\n *\n * @param {shaka.extern.Period} period\n * @param {shaka.extern.Track} track\n * @return {?shaka.extern.Stream}\n */\nshaka.util.StreamUtils.findTextStreamForTrack = function(period, track) {\n  for (let i = 0; i < period.textStreams.length; i++) {\n    if (period.textStreams[i].id == track.id) {\n      return period.textStreams[i];\n    }\n  }\n  return null;\n};\n\n\n/**\n * Determines if the given variant is playable.\n * @param {!shaka.extern.Variant} variant\n * @return {boolean}\n */\nshaka.util.StreamUtils.isPlayable = function(variant) {\n  return variant.allowedByApplication && variant.allowedByKeySystem;\n};\n\n\n/**\n * Filters out unplayable variants.\n * @param {!Array.<!shaka.extern.Variant>} variants\n * @return {!Array.<!shaka.extern.Variant>}\n */\nshaka.util.StreamUtils.getPlayableVariants = function(variants) {\n  return variants.filter(function(variant) {\n    return shaka.util.StreamUtils.isPlayable(variant);\n  });\n};\n\n\n/**\n * Filters variants according to the given audio channel count config.\n *\n * @param {!Array.<shaka.extern.Variant>} variants\n * @param {number} preferredAudioChannelCount\n * @return {!Array.<!shaka.extern.Variant>}\n */\nshaka.util.StreamUtils.filterVariantsByAudioChannelCount = function(\n    variants, preferredAudioChannelCount) {\n  // Group variants by their audio channel counts.\n  let variantsByChannelCount = variants\n      .filter((v) => v.audio && v.audio.channelsCount)\n      .reduce((map, variant) => {\n        let count = variant.audio.channelsCount;\n        if (map[count]) {\n          map[count].push(variant);\n        } else {\n          map[count] = [variant];\n        }\n        return map;\n      }, {});\n\n  let channelCounts = Object.keys(variantsByChannelCount);\n\n  // If no variant has audio channel count info, return the original variants.\n  if (channelCounts.length == 0) {\n    return variants;\n  }\n\n  // Choose the variants with the largest number of audio channels less than or\n  // equal to the configured number of audio channels.\n  let countLessThanOrEqualtoConfig =\n      channelCounts.filter((count) => count <= preferredAudioChannelCount);\n  if (countLessThanOrEqualtoConfig.length) {\n    return variantsByChannelCount[Math.max.apply(null,\n        countLessThanOrEqualtoConfig)];\n  }\n  // If all variants have more audio channels than the config, choose the\n  // variants with the fewest audio channels.\n  return variantsByChannelCount[Math.min.apply(null, channelCounts)];\n};\n\n/**\n * Chooses streams according to the given config.\n *\n * @param {!Array.<shaka.extern.Stream>} streams\n * @param {string} preferredLanguage\n * @param {string} preferredRole\n * @return {!Array.<!shaka.extern.Stream>}\n */\nshaka.util.StreamUtils.filterStreamsByLanguageAndRole = function(\n    streams, preferredLanguage, preferredRole) {\n  const LanguageUtils = shaka.util.LanguageUtils;\n\n  /** @type {!Array.<!shaka.extern.Stream>} */\n  let chosen = streams;\n\n  // Start with the set of primary streams.\n  /** @type {!Array.<!shaka.extern.Stream>} */\n  let primary = streams.filter(function(stream) {\n    return stream.primary;\n  });\n\n  if (primary.length) {\n    chosen = primary;\n  }\n\n  // Now reduce the set to one language.  This covers both arbitrary language\n  // choice and the reduction of the \"primary\" stream set to one language.\n  let firstLanguage = chosen.length ? chosen[0].language : '';\n  chosen = chosen.filter(function(stream) {\n    return stream.language == firstLanguage;\n  });\n\n  // Find the streams that best match our language preference. This will\n  // override previous selections.\n  if (preferredLanguage) {\n    const closestLocale = LanguageUtils.findClosestLocale(\n        LanguageUtils.normalize(preferredLanguage),\n        streams.map((stream) => stream.language));\n\n    // Only replace |chosen| if we found a locale that is close to our\n    // preference.\n    if (closestLocale) {\n      chosen = streams.filter((stream) => {\n        const locale = LanguageUtils.normalize(stream.language);\n        return locale == closestLocale;\n      });\n    }\n  }\n\n  // Now refine the choice based on role preference.\n  if (preferredRole) {\n    let roleMatches = shaka.util.StreamUtils.filterTextStreamsByRole_(\n        chosen, preferredRole);\n    if (roleMatches.length) {\n      return roleMatches;\n    } else {\n      shaka.log.warning('No exact match for the text role could be found.');\n    }\n  } else {\n    // Prefer text streams with no roles, if they exist.\n    let noRoleMatches = chosen.filter(function(stream) {\n      return stream.roles.length == 0;\n    });\n    if (noRoleMatches.length) {\n      return noRoleMatches;\n    }\n  }\n\n  // Either there was no role preference, or it could not be satisfied.\n  // Choose an arbitrary role, if there are any, and filter out any other roles.\n  // This ensures we never adapt between roles.\n\n  let allRoles = chosen.map(function(stream) {\n    return stream.roles;\n  }).reduce(shaka.util.Functional.collapseArrays, []);\n\n  if (!allRoles.length) {\n    return chosen;\n  }\n  return shaka.util.StreamUtils.filterTextStreamsByRole_(chosen, allRoles[0]);\n};\n\n\n/**\n * Filter text Streams by role.\n *\n * @param {!Array.<shaka.extern.Stream>} textStreams\n * @param {string} preferredRole\n * @return {!Array.<shaka.extern.Stream>}\n * @private\n */\nshaka.util.StreamUtils.filterTextStreamsByRole_ =\n    function(textStreams, preferredRole) {\n  return textStreams.filter(function(stream) {\n    return stream.roles.includes(preferredRole);\n  });\n};\n\n\n/**\n * Finds a Variant with given audio and video streams.\n * Returns null if no such Variant was found.\n *\n * @param {?shaka.extern.Stream} audio\n * @param {?shaka.extern.Stream} video\n * @param {!Array.<!shaka.extern.Variant>} variants\n * @return {?shaka.extern.Variant}\n */\nshaka.util.StreamUtils.getVariantByStreams = function(audio, video, variants) {\n  if (audio) {\n    goog.asserts.assert(\n        shaka.util.StreamUtils.isAudio(audio),\n        'Audio streams must have the audio type.');\n  }\n\n  if (video) {\n    goog.asserts.assert(\n        shaka.util.StreamUtils.isVideo(video),\n        'Video streams must have the video type.');\n  }\n\n  for (let i = 0; i < variants.length; i++) {\n    if (variants[i].audio == audio && variants[i].video == video) {\n      return variants[i];\n    }\n  }\n\n  return null;\n};\n\n\n/**\n * Finds a Variant with the given video and audio streams, by stream ID.\n * Returns null if no such Variant was found.\n *\n * @param {?number} audioId\n * @param {?number} videoId\n * @param {!Array.<shaka.extern.Variant>} variants\n * @return {?shaka.extern.Variant}\n */\nshaka.util.StreamUtils.getVariantByStreamIds = function(\n    audioId, videoId, variants) {\n  function matchesId(id, stream) {\n    if (id == null) {\n      return stream == null;\n    } else {\n      return stream.id == id;\n    }\n  }\n\n  for (let i = 0; i < variants.length; i++) {\n    if (matchesId(audioId, variants[i].audio) &&\n        matchesId(videoId, variants[i].video)) {\n      return variants[i];\n    }\n  }\n\n  return null;\n};\n\n\n/**\n * Gets the index of the Period that contains the given time.\n * @param {shaka.extern.Manifest} manifest\n * @param {number} time The time in seconds from the start of the presentation.\n * @return {number}\n */\nshaka.util.StreamUtils.findPeriodContainingTime = function(manifest, time) {\n  let threshold = shaka.util.ManifestParserUtils.GAP_OVERLAP_TOLERANCE_SECONDS;\n  for (let i = manifest.periods.length - 1; i > 0; --i) {\n    let period = manifest.periods[i];\n    // The last segment may end right before the end of the Period because of\n    // rounding issues.\n    if (time + threshold >= period.startTime) {\n      return i;\n    }\n  }\n  return 0;\n};\n\n\n/**\n * @param {shaka.extern.Manifest} manifest\n * @param {shaka.extern.Stream} stream\n * @return {number} The index of the Period which contains |stream|, or -1 if\n *   no Period contains |stream|.\n */\nshaka.util.StreamUtils.findPeriodContainingStream = function(manifest, stream) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  for (let periodIdx = 0; periodIdx < manifest.periods.length; ++periodIdx) {\n    let period = manifest.periods[periodIdx];\n    if (stream.type == ContentType.TEXT) {\n      for (let j = 0; j < period.textStreams.length; ++j) {\n        let textStream = period.textStreams[j];\n        if (textStream == stream) {\n          return periodIdx;\n        }\n      }\n    } else {\n      for (let j = 0; j < period.variants.length; ++j) {\n        let variant = period.variants[j];\n        if (variant.audio == stream || variant.video == stream ||\n            (variant.video && variant.video.trickModeVideo == stream)) {\n          return periodIdx;\n        }\n      }\n    }\n  }\n  return -1;\n};\n\n\n/**\n * @param {shaka.extern.Manifest} manifest\n * @param {shaka.extern.Variant} variant\n * @return {number} The index of the Period which contains |stream|, or -1 if\n *   no Period contains |stream|.\n */\nshaka.util.StreamUtils.findPeriodContainingVariant =\n    function(manifest, variant) {\n  for (let periodIdx = 0; periodIdx < manifest.periods.length; ++periodIdx) {\n    let period = manifest.periods[periodIdx];\n    for (let j = 0; j < period.variants.length; ++j) {\n      if (period.variants[j] == variant) {\n        return periodIdx;\n      }\n    }\n  }\n  return -1;\n};\n\n\n/**\n * Checks if the given stream is an audio stream.\n *\n * @param {shaka.extern.Stream} stream\n * @return {boolean}\n */\nshaka.util.StreamUtils.isAudio = function(stream) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  return stream.type == ContentType.AUDIO;\n};\n\n\n/**\n * Checks if the given stream is a video stream.\n *\n * @param {shaka.extern.Stream} stream\n * @return {boolean}\n */\nshaka.util.StreamUtils.isVideo = function(stream) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  return stream.type == ContentType.VIDEO;\n};\n\n\n/**\n * Get all the variants from all the periods in the manifest.\n *\n * @param {shaka.extern.Manifest} manifest\n * @return {!Array.<shaka.extern.Variant>}\n */\nshaka.util.StreamUtils.getAllVariants = function(manifest) {\n  /** @type {!Array.<shaka.extern.Variant>} */\n  const found = [];\n\n  manifest.periods.forEach((period) => {\n    period.variants.forEach((variant) => {\n      found.push(variant);\n    });\n  });\n\n  return found;\n};\n\n\n/**\n * Get all non-null streams in the variant as an array.\n *\n * @param {shaka.extern.Variant} variant\n * @return {!Array.<shaka.extern.Stream>}\n */\nshaka.util.StreamUtils.getVariantStreams = function(variant) {\n  const streams = [];\n\n  if (variant.audio) { streams.push(variant.audio); }\n  if (variant.video) { streams.push(variant.video); }\n\n  return streams;\n};\n\n\n/**\n * @param {shaka.extern.Stream} stream\n * @return {string}\n * @private\n */\nshaka.util.StreamUtils.getStreamSummaryString_ = function(stream) {\n  if (shaka.util.StreamUtils.isAudio(stream)) {\n    return 'type=audio' +\n           ' codecs=' + stream.codecs +\n           ' bandwidth='+ stream.bandwidth +\n           ' channelsCount=' + stream.channelsCount;\n  }\n\n  if (shaka.util.StreamUtils.isVideo(stream)) {\n    return 'type=video' +\n           ' codecs=' + stream.codecs +\n           ' bandwidth=' + stream.bandwidth +\n           ' frameRate=' + stream.frameRate +\n           ' width=' + stream.width +\n           ' height=' + stream.height;\n  }\n\n  return 'unexpected stream type';\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.abr.SimpleAbrManager');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.abr.EwmaBandwidthEstimator');\ngoog.require('shaka.log');\ngoog.require('shaka.util.StreamUtils');\n\n\n/**\n * <p>\n * This defines the default ABR manager for the Player.  An instance of this\n * class is used when no ABR manager is given.\n * </p>\n * <p>\n * The behavior of this class is to take throughput samples using\n * segmentDownloaded to estimate the current network bandwidth.  Then it will\n * use that to choose the streams that best fit the current bandwidth.  It will\n * always pick the highest bandwidth variant it thinks can be played.\n * </p>\n * <p>\n * After initial choices are made, this class will call switchCallback() when\n * there is a better choice.  switchCallback() will not be called more than once\n * per ({@link shaka.abr.SimpleAbrManager.SWITCH_INTERVAL_MS}).\n * </p>\n *\n * @constructor\n * @struct\n * @implements {shaka.extern.AbrManager}\n * @export\n */\nshaka.abr.SimpleAbrManager = function() {\n  /** @private {?shaka.extern.AbrManager.SwitchCallback} */\n  this.switch_ = null;\n\n  /** @private {boolean} */\n  this.enabled_ = false;\n\n  /** @private {shaka.abr.EwmaBandwidthEstimator} */\n  this.bandwidthEstimator_ = new shaka.abr.EwmaBandwidthEstimator();\n  // TODO: Consider using NetworkInformation's change event to throw out an old\n  // estimate based on changing network types, such as wifi => 3g.\n\n  /**\n   * A filtered list of Variants to choose from.\n   * @private {!Array.<!shaka.extern.Variant>}\n   */\n  this.variants_ = [];\n\n  /** @private {boolean} */\n  this.startupComplete_ = false;\n\n  /**\n   * The last wall-clock time, in milliseconds, when streams were chosen.\n   *\n   * @private {?number}\n   */\n  this.lastTimeChosenMs_ = null;\n\n  /** @private {?shaka.extern.AbrConfiguration} */\n  this.config_ = null;\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.abr.SimpleAbrManager.prototype.stop = function() {\n  this.switch_ = null;\n  this.enabled_ = false;\n  this.variants_ = [];\n  this.lastTimeChosenMs_ = null;\n\n  // Don't reset |startupComplete_|: if we've left the startup interval, we can\n  // start using bandwidth estimates right away after init() is called.\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.abr.SimpleAbrManager.prototype.init = function(switchCallback) {\n  this.switch_ = switchCallback;\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.abr.SimpleAbrManager.prototype.chooseVariant = function() {\n  const SimpleAbrManager = shaka.abr.SimpleAbrManager;\n\n  // Get sorted Variants.\n  let sortedVariants = SimpleAbrManager.filterAndSortVariants_(\n      this.config_.restrictions, this.variants_);\n  let currentBandwidth = this.bandwidthEstimator_.getBandwidthEstimate(\n      this.config_.defaultBandwidthEstimate);\n\n  if (this.variants_.length && !sortedVariants.length) {\n    // If we couldn't meet the ABR restrictions, we should still play something.\n    // These restrictions are not \"hard\" restrictions in the way that top-level\n    // or DRM-based restrictions are.  Sort the variants without restrictions\n    // and keep just the first (lowest-bandwidth) one.\n    shaka.log.warning('No variants met the ABR restrictions. ' +\n                      'Choosing a variant by lowest bandwidth.');\n    sortedVariants = SimpleAbrManager.filterAndSortVariants_(\n        /* restrictions */ null, this.variants_);\n    sortedVariants = [sortedVariants[0]];\n  }\n\n  // Start by assuming that we will use the first Stream.\n  let chosen = sortedVariants[0] || null;\n\n  for (let i = 0; i < sortedVariants.length; ++i) {\n    let variant = sortedVariants[i];\n    let nextVariant = sortedVariants[i + 1] || {bandwidth: Infinity};\n\n    let minBandwidth = variant.bandwidth /\n                       this.config_.bandwidthDowngradeTarget;\n    let maxBandwidth = nextVariant.bandwidth /\n                       this.config_.bandwidthUpgradeTarget;\n    shaka.log.v2('Bandwidth ranges:',\n                 (variant.bandwidth / 1e6).toFixed(3),\n                 (minBandwidth / 1e6).toFixed(3),\n                 (maxBandwidth / 1e6).toFixed(3));\n\n    if (currentBandwidth >= minBandwidth && currentBandwidth <= maxBandwidth) {\n      chosen = variant;\n    }\n  }\n\n  this.lastTimeChosenMs_ = Date.now();\n  return chosen;\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.abr.SimpleAbrManager.prototype.enable = function() {\n  this.enabled_ = true;\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.abr.SimpleAbrManager.prototype.disable = function() {\n  this.enabled_ = false;\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.abr.SimpleAbrManager.prototype.segmentDownloaded = function(\n    deltaTimeMs, numBytes) {\n  shaka.log.v2('Segment downloaded:',\n               'deltaTimeMs=' + deltaTimeMs,\n               'numBytes=' + numBytes,\n               'lastTimeChosenMs=' + this.lastTimeChosenMs_,\n               'enabled=' + this.enabled_);\n  goog.asserts.assert(deltaTimeMs >= 0, 'expected a non-negative duration');\n  this.bandwidthEstimator_.sample(deltaTimeMs, numBytes);\n\n  if ((this.lastTimeChosenMs_ != null) && this.enabled_) {\n    this.suggestStreams_();\n  }\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.abr.SimpleAbrManager.prototype.getBandwidthEstimate = function() {\n  return this.bandwidthEstimator_.getBandwidthEstimate(\n      this.config_.defaultBandwidthEstimate);\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.abr.SimpleAbrManager.prototype.setVariants = function(variants) {\n  this.variants_ = variants;\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.abr.SimpleAbrManager.prototype.configure = function(config) {\n  this.config_ = config;\n};\n\n\n/**\n * Calls switch_() with the variant chosen by chooseVariant().\n *\n * @private\n */\nshaka.abr.SimpleAbrManager.prototype.suggestStreams_ = function() {\n  shaka.log.v2('Suggesting Streams...');\n  goog.asserts.assert(this.lastTimeChosenMs_ != null,\n                      'lastTimeChosenMs_ should not be null');\n\n  if (!this.startupComplete_) {\n    // Check if we've got enough data yet.\n    if (!this.bandwidthEstimator_.hasGoodEstimate()) {\n      shaka.log.v2('Still waiting for a good estimate...');\n      return;\n    }\n    this.startupComplete_ = true;\n  } else {\n    // Check if we've left the switch interval.\n    let now = Date.now();\n    let delta = now - this.lastTimeChosenMs_;\n    if (delta < this.config_.switchInterval * 1000) {\n      shaka.log.v2('Still within switch interval...');\n      return;\n    }\n  }\n\n  let chosenVariant = this.chooseVariant();\n  let bandwidthEstimate = this.bandwidthEstimator_.getBandwidthEstimate(\n      this.config_.defaultBandwidthEstimate);\n  let currentBandwidthKbps = Math.round(bandwidthEstimate / 1000.0);\n\n  shaka.log.debug(\n      'Calling switch_(), bandwidth=' + currentBandwidthKbps + ' kbps');\n  // If any of these chosen streams are already chosen, Player will filter them\n  // out before passing the choices on to StreamingEngine.\n  this.switch_(chosenVariant);\n};\n\n\n/**\n * @param {?shaka.extern.Restrictions} restrictions\n * @param {!Array.<shaka.extern.Variant>} variants\n * @return {!Array.<shaka.extern.Variant>} variants filtered according to\n *   |restrictions| and sorted in ascending order of bandwidth.\n * @private\n */\nshaka.abr.SimpleAbrManager.filterAndSortVariants_ = function(\n    restrictions, variants) {\n  if (restrictions) {\n    variants = variants.filter((variant) => {\n      // This was already checked in another scope, but the compiler doesn't\n      // seem to understand that.\n      goog.asserts.assert(restrictions, 'Restrictions should exist!');\n\n      return shaka.util.StreamUtils.meetsRestrictions(\n          variant, restrictions,\n          /* maxHwRes */ {width: Infinity, height: Infinity});\n    });\n  }\n\n  return variants.sort((v1, v2) => {\n    return v1.bandwidth - v2.bandwidth;\n  });\n};\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.cast.CastUtils');\n\ngoog.require('shaka.util.FakeEvent');\n\n\n/**\n * @namespace shaka.cast.CastUtils\n * @summary A set of cast utility functions and variables shared between sender\n *   and receiver.\n */\n\n\n/**\n * HTMLMediaElement events that are proxied while casting.\n * @const {!Array.<string>}\n */\nshaka.cast.CastUtils.VideoEvents = [\n  'ended',\n  'play',\n  'playing',\n  'pause',\n  'pausing',\n  'ratechange',\n  'seeked',\n  'seeking',\n  'timeupdate',\n  'volumechange',\n  'resize',\n];\n\n\n/**\n * HTMLMediaElement attributes that are proxied while casting.\n * @const {!Array.<string>}\n */\nshaka.cast.CastUtils.VideoAttributes = [\n  'buffered',\n  'currentTime',\n  'duration',\n  'ended',\n  'loop',\n  'muted',\n  'paused',\n  'playbackRate',\n  'seeking',\n  'videoHeight',\n  'videoWidth',\n  'volume',\n];\n\n\n/**\n * HTMLMediaElement attributes that are transferred when casting begins.\n * @const {!Array.<string>}\n */\nshaka.cast.CastUtils.VideoInitStateAttributes = [\n  'loop',\n  'playbackRate',\n];\n\n\n/**\n * HTMLMediaElement methods with no return value that are proxied while casting.\n * @const {!Array.<string>}\n */\nshaka.cast.CastUtils.VideoVoidMethods = [\n  'pause',\n  'play',\n];\n\n\n/**\n * Player events that are proxied while casting.\n * @const {!Array.<string>}\n */\nshaka.cast.CastUtils.PlayerEvents = [\n  'adaptation',\n  'buffering',\n  'emsg',\n  'error',\n  'loading',\n  'streaming',\n  'texttrackvisibility',\n  'timelineregionadded',\n  'timelineregionenter',\n  'timelineregionexit',\n  'trackschanged',\n  'unloading',\n  'variantchanged',\n  'textchanged',\n];\n\n\n/**\n * Player getter methods that are proxied while casting.\n * The key is the method, the value is the frequency of updates.\n * Frequency 1 translates to every update; frequency 2 to every 2 updates, etc.\n * @const {!Object.<string, number>}\n */\nshaka.cast.CastUtils.PlayerGetterMethods = {\n  // NOTE: The 'drmInfo' property is not proxied, as it is very large.\n  'getAssetUri': 2,\n  'getAudioLanguages': 2,\n  'getAudioLanguagesAndRoles': 2,\n  'getBufferedInfo': 2,\n  // NOTE: The 'getSharedConfiguration' property is not proxied as it would\n  //       not be possible to share a reference.\n  'getConfiguration': 2,\n  'getExpiration': 2,\n  // NOTE: The 'getManifest' property is not proxied, as it is very large.\n  // TODO(vaage): Remove |getManifestUri| references in v2.6.\n  // NOTE: The 'getManifestUri' property is not proxied, as CastProxy has a\n  // handler for it.\n  'getPlaybackRate': 2,\n  'getTextLanguages': 2,\n  'getTextLanguagesAndRoles': 2,\n  'getTextTracks': 2,\n  'getStats': 5,\n  'usingEmbeddedTextTrack': 2,\n  'getVariantTracks': 2,\n  'isAudioOnly': 10,\n  'isBuffering': 1,\n  'isInProgress': 1,\n  'isLive': 10,\n  'isTextTrackVisible': 1,\n  'keySystem': 10,\n  'seekRange': 1,\n};\n\n\n/**\n * Player getter methods that are proxied while casting, but only when casting\n * a livestream.\n * The key is the method, the value is the frequency of updates.\n * Frequency 1 translates to every update; frequency 2 to every 2 updates, etc.\n * @const {!Object.<string, number>}\n */\nshaka.cast.CastUtils.PlayerGetterMethodsThatRequireLive = {\n  'getPlayheadTimeAsDate': 1,\n  'getPresentationStartTimeAsDate': 20,\n};\n\n\n/**\n * Player getter and setter methods that are used to transfer state when casting\n * begins.\n * @const {!Array.<!Array.<string>>}\n */\nshaka.cast.CastUtils.PlayerInitState = [\n  ['getConfiguration', 'configure'],\n];\n\n\n/**\n * Player getter and setter methods that are used to transfer state after\n * load() is resolved.\n * @const {!Array.<!Array.<string>>}\n */\nshaka.cast.CastUtils.PlayerInitAfterLoadState = [\n  ['isTextTrackVisible', 'setTextTrackVisibility'],\n];\n\n\n/**\n * Player methods with no return value that are proxied while casting.\n * @const {!Array.<string>}\n */\nshaka.cast.CastUtils.PlayerVoidMethods = [\n  'addTextTrack',\n  'cancelTrickPlay',\n  'configure',\n  'resetConfiguration',\n  'retryStreaming',\n  'selectAudioLanguage',\n  'selectEmbeddedTextTrack',\n  'selectTextLanguage',\n  'selectTextTrack',\n  'selectVariantTrack',\n  'setTextTrackVisibility',\n  'trickPlay',\n];\n\n\n/**\n * Player methods returning a Promise that are proxied while casting.\n * @const {!Array.<string>}\n */\nshaka.cast.CastUtils.PlayerPromiseMethods = [\n  'attach',\n  'detach',\n  // The manifestFactory parameter of load is not supported.\n  'load',\n  'unload',\n];\n\n\n/**\n * @typedef {{\n *   video: Object,\n *   player: Object,\n *   manifest: ?string,\n *   startTime: ?number\n * }}\n * @property {Object} video\n *   Dictionary of video properties to be set.\n * @property {Object} player\n *   Dictionary of player setters to be called.\n * @property {?string} manifest\n *   The currently-selected manifest, if present.\n * @property {?number} startTime\n *   The playback start time, if currently playing.\n */\nshaka.cast.CastUtils.InitStateType;\n\n\n/**\n * The namespace for Shaka messages on the cast bus.\n * @const {string}\n */\nshaka.cast.CastUtils.SHAKA_MESSAGE_NAMESPACE = 'urn:x-cast:com.google.shaka.v2';\n\n\n/**\n * The namespace for generic messages on the cast bus.\n * @const {string}\n */\nshaka.cast.CastUtils.GENERIC_MESSAGE_NAMESPACE =\n    'urn:x-cast:com.google.cast.media';\n\n\n/**\n * Serialize as JSON, but specially encode things JSON will not otherwise\n * represent.\n * @param {?} thing\n * @return {string}\n */\nshaka.cast.CastUtils.serialize = function(thing) {\n  return JSON.stringify(thing, function(key, value) {\n    if (typeof value == 'function') {\n      // Functions can't be (safely) serialized.\n      return undefined;\n    }\n\n    if (value instanceof Event || value instanceof shaka.util.FakeEvent) {\n      // Events don't serialize to JSON well because of the DOM objects\n      // and other complex objects they contain, so we strip these out.\n      // Note that using Object.keys or JSON.stringify directly on the event\n      // will not capture its properties.  We must use a for loop.\n      let simpleEvent = {};\n      for (let eventKey in value) {\n        let eventValue = value[eventKey];\n        if (eventValue && typeof eventValue == 'object') {\n          if (eventKey == 'detail') {\n            // Keep the detail value, because it contains important information\n            // for diagnosing errors.\n            simpleEvent[eventKey] = eventValue;\n          }\n          // Strip out non-null object types because they are complex and we\n          // don't need them.\n        } else if (eventKey in Event) {\n          // Strip out keys that are found on Event itself because they are\n          // class-level constants we don't need, like Event.MOUSEMOVE == 16.\n        } else {\n          simpleEvent[eventKey] = eventValue;\n        }\n      }\n      return simpleEvent;\n    }\n\n    if (value instanceof TimeRanges) {\n      // TimeRanges must be unpacked into plain data for serialization.\n      return shaka.cast.CastUtils.unpackTimeRanges_(value);\n    }\n\n    if (typeof value == 'number') {\n      // NaN and infinity cannot be represented directly in JSON.\n      if (isNaN(value)) return 'NaN';\n      if (isFinite(value)) return value;\n      if (value < 0) return '-Infinity';\n      return 'Infinity';\n    }\n\n    return value;\n  });\n};\n\n\n/**\n * Deserialize JSON using our special encodings.\n * @param {string} str\n * @return {?}\n */\nshaka.cast.CastUtils.deserialize = function(str) {\n  return JSON.parse(str, function(key, value) {\n    if (value == 'NaN') {\n      return NaN;\n    } else if (value == '-Infinity') {\n      return -Infinity;\n    } else if (value == 'Infinity') {\n      return Infinity;\n    } else if (value && typeof value == 'object' &&\n               value['__type__'] == 'TimeRanges') {\n      // TimeRanges objects have been unpacked and sent as plain data.\n      // Simulate the original TimeRanges object.\n      return shaka.cast.CastUtils.simulateTimeRanges_(value);\n    }\n    return value;\n  });\n};\n\n\n/**\n * @param {!TimeRanges} ranges\n * @return {Object}\n * @private\n */\nshaka.cast.CastUtils.unpackTimeRanges_ = function(ranges) {\n  let obj = {\n    '__type__': 'TimeRanges',  // a signal to deserialize\n    'length': ranges.length,\n    'start': [],\n    'end': [],\n  };\n\n  for (let i = 0; i < ranges.length; ++i) {\n    obj['start'].push(ranges.start(i));\n    obj['end'].push(ranges.end(i));\n  }\n\n  return obj;\n};\n\n\n/**\n * Creates a simulated TimeRanges object from data sent by the cast receiver.\n * @param {?} obj\n * @return {{\n *   length: number,\n *   start: function(number): number,\n *   end: function(number): number\n * }}\n * @private\n */\nshaka.cast.CastUtils.simulateTimeRanges_ = function(obj) {\n  return {\n    length: obj.length,\n    // NOTE: a more complete simulation would throw when |i| was out of range,\n    // but for simplicity we will assume a well-behaved application that uses\n    // length instead of catch to stop iterating.\n    start: function(i) { return obj.start[i]; },\n    end: function(i) { return obj.end[i]; },\n  };\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.cast.CastSender');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.cast.CastUtils');\ngoog.require('shaka.log');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.PublicPromise');\n\n\n/**\n * @constructor\n * @struct\n * @param {string} receiverAppId The ID of the cast receiver application.\n * @param {function()} onStatusChanged A callback invoked when the cast status\n *   changes.\n * @param {function()} onFirstCastStateUpdate A callback invoked when an\n *   \"update\" event has been received for the first time.\n * @param {function(string, !shaka.util.FakeEvent)} onRemoteEvent A callback\n *   invoked with target name and event when a remote event is received.\n * @param {function()} onResumeLocal A callback invoked when the local player\n *   should resume playback.  Called before the cached remote state is wiped.\n * @param {function()} onInitStateRequired A callback to get local player's.\n *   state.  Invoked when casting is initiated from Chrome's cast button.\n * @implements {shaka.util.IDestroyable}\n */\nshaka.cast.CastSender =\n    function(receiverAppId, onStatusChanged, onFirstCastStateUpdate,\n             onRemoteEvent, onResumeLocal, onInitStateRequired) {\n  /** @private {string} */\n  this.receiverAppId_ = receiverAppId;\n\n  /** @private {?function()} */\n  this.onStatusChanged_ = onStatusChanged;\n\n  /** @private {?function()} */\n  this.onFirstCastStateUpdate_ = onFirstCastStateUpdate;\n\n  /** @private {boolean} */\n  this.hasJoinedExistingSession_ = false;\n\n  /** @private {?function(string, !shaka.util.FakeEvent)} */\n  this.onRemoteEvent_ = onRemoteEvent;\n\n  /** @private {?function()} */\n  this.onResumeLocal_ = onResumeLocal;\n\n  /** @private {?function()} */\n  this.onInitStateRequired_ = onInitStateRequired;\n\n  /** @private {boolean} */\n  this.apiReady_ = false;\n\n  /** @private {boolean} */\n  this.isCasting_ = false;\n\n  /** @private {string} */\n  this.receiverName_ = '';\n\n  /** @private {Object} */\n  this.appData_ = null;\n\n  /** @private {?function()} */\n  this.onConnectionStatusChangedBound_ =\n      this.onConnectionStatusChanged_.bind(this);\n\n  /** @private {?function(string, string)} */\n  this.onMessageReceivedBound_ = this.onMessageReceived_.bind(this);\n\n  /** @private {Object} */\n  this.cachedProperties_ = {\n    'video': {},\n    'player': {},\n  };\n\n  /** @private {number} */\n  this.nextAsyncCallId_ = 0;\n\n  /** @private {Object.<string, !shaka.util.PublicPromise>} */\n  this.asyncCallPromises_ = {};\n\n  /** @private {shaka.util.PublicPromise} */\n  this.castPromise_ = null;\n};\n\n\n/** @private {boolean} */\nshaka.cast.CastSender.hasReceivers_ = false;\n\n\n/** @private {chrome.cast.Session} */\nshaka.cast.CastSender.session_ = null;\n\n\n/** @override */\nshaka.cast.CastSender.prototype.destroy = function() {\n  this.rejectAllPromises_();\n  if (shaka.cast.CastSender.session_) {\n    this.removeListeners_();\n    // Don't leave the session, so that this session can be re-used later if\n    // necessary.\n  }\n\n  this.onStatusChanged_ = null;\n  this.onRemoteEvent_ = null;\n  this.onResumeLocal_ = null;\n  this.apiReady_ = false;\n  this.isCasting_ = false;\n  this.appData_ = null;\n  this.cachedProperties_ = null;\n  this.asyncCallPromises_ = null;\n  this.castPromise_ = null;\n  this.onConnectionStatusChangedBound_ = null;\n  this.onMessageReceivedBound_ = null;\n\n  return Promise.resolve();\n};\n\n\n/**\n * @return {boolean} True if the cast API is available.\n */\nshaka.cast.CastSender.prototype.apiReady = function() {\n  return this.apiReady_;\n};\n\n\n/**\n * @return {boolean} True if there are receivers.\n */\nshaka.cast.CastSender.prototype.hasReceivers = function() {\n  return shaka.cast.CastSender.hasReceivers_;\n};\n\n\n/**\n * @return {boolean} True if we are currently casting.\n */\nshaka.cast.CastSender.prototype.isCasting = function() {\n  return this.isCasting_;\n};\n\n\n/**\n * @return {string} The name of the Cast receiver device, if isCasting().\n */\nshaka.cast.CastSender.prototype.receiverName = function() {\n  return this.receiverName_;\n};\n\n\n/**\n * @return {boolean} True if we have a cache of remote properties from the\n *   receiver.\n */\nshaka.cast.CastSender.prototype.hasRemoteProperties = function() {\n  return Object.keys(this.cachedProperties_['video']).length != 0;\n};\n\n\n/** Initialize the Cast API. */\nshaka.cast.CastSender.prototype.init = function() {\n  // Check for the cast extension.\n  if (!window.chrome || !chrome.cast || !chrome.cast.isAvailable) {\n    // Not available yet, so wait to be notified if/when it is available.\n    window.__onGCastApiAvailable = (function(loaded) {\n      if (loaded) {\n        this.init();\n      }\n    }).bind(this);\n    return;\n  }\n\n  // The API is now available.\n  delete window.__onGCastApiAvailable;\n  this.apiReady_ = true;\n  this.onStatusChanged_();\n\n  let sessionRequest = new chrome.cast.SessionRequest(this.receiverAppId_);\n  let apiConfig = new chrome.cast.ApiConfig(sessionRequest,\n      this.onExistingSessionJoined_.bind(this),\n      this.onReceiverStatusChanged_.bind(this),\n      'origin_scoped');\n\n  // TODO: Have never seen this fail.  When would it and how should we react?\n  chrome.cast.initialize(apiConfig,\n      function() { shaka.log.debug('CastSender: init'); },\n      function(error) { shaka.log.error('CastSender: init error', error); });\n  if (shaka.cast.CastSender.hasReceivers_) {\n    // Fire a fake cast status change, to simulate the update that\n    // would be fired normally.\n    // This is after a brief delay, to give users a chance to add event\n    // listeners.\n    setTimeout(this.onStatusChanged_.bind(this), 20);\n  }\n\n  let oldSession = shaka.cast.CastSender.session_;\n  if (oldSession && oldSession.status != chrome.cast.SessionStatus.STOPPED) {\n    // The old session still exists, so re-use it.\n    shaka.log.debug('CastSender: re-using existing connection');\n    this.onExistingSessionJoined_(oldSession);\n  } else {\n    // The session has been canceled in the meantime, so ignore it.\n    shaka.cast.CastSender.session_ = null;\n  }\n};\n\n\n/**\n * Set application-specific data.\n *\n * @param {Object} appData Application-specific data to relay to the receiver.\n */\nshaka.cast.CastSender.prototype.setAppData = function(appData) {\n  this.appData_ = appData;\n  if (this.isCasting_) {\n    this.sendMessage_({\n      'type': 'appData',\n      'appData': this.appData_,\n    });\n  }\n};\n\n\n/**\n * @param {shaka.cast.CastUtils.InitStateType} initState Video and player state\n *   to be sent to the receiver.\n * @return {!Promise} Resolved when connected to a receiver.  Rejected if the\n *   connection fails or is canceled by the user.\n */\nshaka.cast.CastSender.prototype.cast = function(initState) {\n  if (!this.apiReady_) {\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.RECOVERABLE,\n        shaka.util.Error.Category.CAST,\n        shaka.util.Error.Code.CAST_API_UNAVAILABLE));\n  }\n  if (!shaka.cast.CastSender.hasReceivers_) {\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.RECOVERABLE,\n        shaka.util.Error.Category.CAST,\n        shaka.util.Error.Code.NO_CAST_RECEIVERS));\n  }\n  if (this.isCasting_) {\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.RECOVERABLE,\n        shaka.util.Error.Category.CAST,\n        shaka.util.Error.Code.ALREADY_CASTING));\n  }\n\n  this.castPromise_ = new shaka.util.PublicPromise();\n  chrome.cast.requestSession(\n      this.onSessionInitiated_.bind(this, initState),\n      this.onConnectionError_.bind(this));\n  return this.castPromise_;\n};\n\n\n/**\n * Shows user a cast dialog where they can choose to stop\n * casting.  Relies on Chrome to perform disconnect if they do.\n * Doesn't do anything if not connected.\n */\nshaka.cast.CastSender.prototype.showDisconnectDialog = function() {\n  if (!this.isCasting_) {\n    return;\n  }\n  let initState = this.onInitStateRequired_();\n\n  chrome.cast.requestSession(\n      this.onSessionInitiated_.bind(this, initState),\n      this.onConnectionError_.bind(this));\n};\n\n\n/**\n * Forces the receiver app to shut down by disconnecting.  Does nothing if not\n * connected.\n */\nshaka.cast.CastSender.prototype.forceDisconnect = function() {\n  if (!this.isCasting_) {\n    return;\n  }\n\n  this.rejectAllPromises_();\n  if (shaka.cast.CastSender.session_) {\n    this.removeListeners_();\n    shaka.cast.CastSender.session_.stop(function() {}, function() {});\n    shaka.cast.CastSender.session_ = null;\n  }\n};\n\n\n/**\n * Getter for properties of remote objects.\n * @param {string} targetName\n * @param {string} property\n * @return {?}\n */\nshaka.cast.CastSender.prototype.get = function(targetName, property) {\n  goog.asserts.assert(targetName == 'video' || targetName == 'player',\n                      'Unexpected target name');\n  const CastUtils = shaka.cast.CastUtils;\n  if (targetName == 'video') {\n    if (CastUtils.VideoVoidMethods.includes(property)) {\n      return this.remoteCall_.bind(this, targetName, property);\n    }\n  } else if (targetName == 'player') {\n    if (CastUtils.PlayerGetterMethodsThatRequireLive[property]) {\n      let isLive = this.get('player', 'isLive')();\n      goog.asserts.assert(isLive,\n          property + ' should be called on a live stream!');\n      // If the property shouldn't exist, return a fake function so that the\n      // user doesn't call an undefined function and get a second error.\n      if (!isLive) {\n        return () => undefined;\n      }\n    }\n    if (CastUtils.PlayerVoidMethods.includes(property)) {\n      return this.remoteCall_.bind(this, targetName, property);\n    }\n    if (CastUtils.PlayerPromiseMethods.includes(property)) {\n      return this.remoteAsyncCall_.bind(this, targetName, property);\n    }\n    if (CastUtils.PlayerGetterMethods[property]) {\n      return this.propertyGetter_.bind(this, targetName, property);\n    }\n  }\n\n  return this.propertyGetter_(targetName, property);\n};\n\n\n/**\n * Setter for properties of remote objects.\n * @param {string} targetName\n * @param {string} property\n * @param {?} value\n */\nshaka.cast.CastSender.prototype.set = function(targetName, property, value) {\n  goog.asserts.assert(targetName == 'video' || targetName == 'player',\n                      'Unexpected target name');\n\n  this.cachedProperties_[targetName][property] = value;\n  this.sendMessage_({\n    'type': 'set',\n    'targetName': targetName,\n    'property': property,\n    'value': value,\n  });\n};\n\n\n/**\n * @param {shaka.cast.CastUtils.InitStateType} initState\n * @param {chrome.cast.Session} session\n * @private\n */\nshaka.cast.CastSender.prototype.onSessionInitiated_ =\n    function(initState, session) {\n  shaka.log.debug('CastSender: onSessionInitiated');\n  this.onSessionCreated_(session);\n\n  this.sendMessage_({\n    'type': 'init',\n    'initState': initState,\n    'appData': this.appData_,\n  });\n\n  this.castPromise_.resolve();\n};\n\n\n/**\n * @param {chrome.cast.Error} error\n * @private\n */\nshaka.cast.CastSender.prototype.onConnectionError_ = function(error) {\n  // Default error code:\n  let code = shaka.util.Error.Code.UNEXPECTED_CAST_ERROR;\n\n  switch (error.code) {\n    case 'cancel':\n      code = shaka.util.Error.Code.CAST_CANCELED_BY_USER;\n      break;\n    case 'timeout':\n      code = shaka.util.Error.Code.CAST_CONNECTION_TIMED_OUT;\n      break;\n    case 'receiver_unavailable':\n      code = shaka.util.Error.Code.CAST_RECEIVER_APP_UNAVAILABLE;\n      break;\n  }\n\n  this.castPromise_.reject(new shaka.util.Error(\n      shaka.util.Error.Severity.CRITICAL,\n      shaka.util.Error.Category.CAST,\n      code,\n      error));\n};\n\n\n/**\n * @param {string} targetName\n * @param {string} property\n * @return {?}\n * @private\n */\nshaka.cast.CastSender.prototype.propertyGetter_ =\n    function(targetName, property) {\n  goog.asserts.assert(targetName == 'video' || targetName == 'player',\n                      'Unexpected target name');\n  return this.cachedProperties_[targetName][property];\n};\n\n\n/**\n * @param {string} targetName\n * @param {string} methodName\n * @param {...*} varArgs\n * @private\n */\nshaka.cast.CastSender.prototype.remoteCall_ =\n    function(targetName, methodName, ...varArgs) {\n  goog.asserts.assert(targetName == 'video' || targetName == 'player',\n                      'Unexpected target name');\n  this.sendMessage_({\n    'type': 'call',\n    'targetName': targetName,\n    'methodName': methodName,\n    'args': varArgs,\n  });\n};\n\n\n/**\n * @param {string} targetName\n * @param {string} methodName\n * @param {...*} varArgs\n * @return {!Promise}\n * @private\n */\nshaka.cast.CastSender.prototype.remoteAsyncCall_ =\n    function(targetName, methodName, ...varArgs) {\n  goog.asserts.assert(targetName == 'video' || targetName == 'player',\n                      'Unexpected target name');\n\n  let p = new shaka.util.PublicPromise();\n  let id = this.nextAsyncCallId_.toString();\n  this.nextAsyncCallId_++;\n  this.asyncCallPromises_[id] = p;\n\n  this.sendMessage_({\n    'type': 'asyncCall',\n    'targetName': targetName,\n    'methodName': methodName,\n    'args': varArgs,\n    'id': id,\n  });\n  return p;\n};\n\n\n/**\n * @param {chrome.cast.Session} session\n * @private\n */\nshaka.cast.CastSender.prototype.onExistingSessionJoined_ = function(session) {\n  shaka.log.debug('CastSender: onExistingSessionJoined');\n\n  let initState = this.onInitStateRequired_();\n\n  this.castPromise_ = new shaka.util.PublicPromise();\n  this.hasJoinedExistingSession_ = true;\n\n  this.onSessionInitiated_(initState, session);\n};\n\n\n/**\n * @param {string} availability\n * @private\n */\nshaka.cast.CastSender.prototype.onReceiverStatusChanged_ =\n    function(availability) {\n  // The cast extension is telling us whether there are any cast receiver\n  // devices available.\n  shaka.log.debug('CastSender: receiver status', availability);\n  shaka.cast.CastSender.hasReceivers_ = availability == 'available';\n  this.onStatusChanged_();\n};\n\n\n/**\n * @param {chrome.cast.Session} session\n * @private\n */\nshaka.cast.CastSender.prototype.onSessionCreated_ = function(session) {\n  shaka.cast.CastSender.session_ = session;\n  session.addUpdateListener(this.onConnectionStatusChangedBound_);\n  session.addMessageListener(shaka.cast.CastUtils.SHAKA_MESSAGE_NAMESPACE,\n      this.onMessageReceivedBound_);\n  this.onConnectionStatusChanged_();\n};\n\n\n/**\n * @private\n */\nshaka.cast.CastSender.prototype.removeListeners_ = function() {\n  let session = shaka.cast.CastSender.session_;\n  session.removeUpdateListener(this.onConnectionStatusChangedBound_);\n  session.removeMessageListener(shaka.cast.CastUtils.SHAKA_MESSAGE_NAMESPACE,\n      this.onMessageReceivedBound_);\n};\n\n\n/**\n * @private\n */\nshaka.cast.CastSender.prototype.onConnectionStatusChanged_ = function() {\n  let connected = shaka.cast.CastSender.session_ ?\n      shaka.cast.CastSender.session_.status == 'connected' :\n      false;\n  shaka.log.debug('CastSender: connection status', connected);\n  if (this.isCasting_ && !connected) {\n    // Tell CastProxy to transfer state back to local player.\n    this.onResumeLocal_();\n\n    // Clear whatever we have cached.\n    for (let targetName in this.cachedProperties_) {\n      this.cachedProperties_[targetName] = {};\n    }\n\n    this.rejectAllPromises_();\n  }\n\n  this.isCasting_ = connected;\n  this.receiverName_ = connected ?\n      shaka.cast.CastSender.session_.receiver.friendlyName :\n      '';\n  this.onStatusChanged_();\n};\n\n\n/**\n * Reject any async call promises that are still pending.\n * @private\n */\nshaka.cast.CastSender.prototype.rejectAllPromises_ = function() {\n  for (let id in this.asyncCallPromises_) {\n    let p = this.asyncCallPromises_[id];\n    delete this.asyncCallPromises_[id];\n\n    // Reject pending async operations as if they were interrupted.\n    // At the moment, load() is the only async operation we are worried about.\n    p.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.RECOVERABLE,\n        shaka.util.Error.Category.PLAYER,\n        shaka.util.Error.Code.LOAD_INTERRUPTED));\n  }\n};\n\n\n/**\n * @param {string} namespace\n * @param {string} serialized\n * @private\n */\nshaka.cast.CastSender.prototype.onMessageReceived_ =\n    function(namespace, serialized) {\n  // Since this method is in the compiled library, make sure all messages passed\n  // in here were created with quoted property names.\n\n  let message = shaka.cast.CastUtils.deserialize(serialized);\n  shaka.log.v2('CastSender: message', message);\n\n  switch (message['type']) {\n    case 'event': {\n      let targetName = message['targetName'];\n      let event = message['event'];\n      let fakeEvent = new shaka.util.FakeEvent(event['type'], event);\n      this.onRemoteEvent_(targetName, fakeEvent);\n      break;\n    }\n    case 'update': {\n      let update = message['update'];\n      for (let targetName in update) {\n        let target = this.cachedProperties_[targetName] || {};\n        for (let property in update[targetName]) {\n          target[property] = update[targetName][property];\n        }\n      }\n      if (this.hasJoinedExistingSession_) {\n        this.onFirstCastStateUpdate_();\n        this.hasJoinedExistingSession_ = false;\n      }\n      break;\n    }\n    case 'asyncComplete': {\n      let id = message['id'];\n      let error = message['error'];\n      let p = this.asyncCallPromises_[id];\n      delete this.asyncCallPromises_[id];\n\n      goog.asserts.assert(p, 'Unexpected async id');\n      if (!p) break;\n\n      if (error) {\n        // This is a hacky way to reconstruct the serialized error.\n        let reconstructedError = new shaka.util.Error(\n            error.severity, error.category, error.code);\n        for (let k in error) {\n          (/** @type {Object} */(reconstructedError))[k] = error[k];\n        }\n        p.reject(reconstructedError);\n      } else {\n        p.resolve();\n      }\n      break;\n    }\n  }\n};\n\n\n/**\n * @param {!Object} message\n * @private\n */\nshaka.cast.CastSender.prototype.sendMessage_ = function(message) {\n  // Since this method is in the compiled library, make sure all messages passed\n  // in here were created with quoted property names.\n\n  let serialized = shaka.cast.CastUtils.serialize(message);\n  // TODO: have never seen this fail.  When would it and how should we react?\n  let session = shaka.cast.CastSender.session_;\n  session.sendMessage(shaka.cast.CastUtils.SHAKA_MESSAGE_NAMESPACE,\n                      serialized,\n                      function() {},  // success callback\n                      shaka.log.error);  // error callback\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.cast.CastProxy');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.cast.CastSender');\ngoog.require('shaka.cast.CastUtils');\ngoog.require('shaka.log');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.FakeEventTarget');\ngoog.require('shaka.util.IDestroyable');\n\n\n/**\n * A proxy to switch between local and remote playback for Chromecast in a way\n * that is transparent to the app's controls.\n *\n * @constructor\n * @struct\n * @param {!HTMLMediaElement} video The local video element associated with the\n *   local Player instance.\n * @param {!shaka.Player} player A local Player instance.\n * @param {string} receiverAppId The ID of the cast receiver application.\n *   If blank, casting will not be available, but the proxy will still function\n *   otherwise.\n * @implements {shaka.util.IDestroyable}\n * @extends {shaka.util.FakeEventTarget}\n * @export\n */\nshaka.cast.CastProxy = function(video, player, receiverAppId) {\n  shaka.util.FakeEventTarget.call(this);\n\n  /** @private {HTMLMediaElement} */\n  this.localVideo_ = video;\n\n  /** @private {shaka.Player} */\n  this.localPlayer_ = player;\n\n  /** @private {Object} */\n  this.videoProxy_ = null;\n\n  /** @private {Object} */\n  this.playerProxy_ = null;\n\n  /** @private {shaka.util.FakeEventTarget} */\n  this.videoEventTarget_ = null;\n\n  /** @private {shaka.util.FakeEventTarget} */\n  this.playerEventTarget_ = null;\n\n  /** @private {shaka.util.EventManager} */\n  this.eventManager_ = null;\n\n  /** @private {shaka.cast.CastSender} */\n  this.sender_ = new shaka.cast.CastSender(\n      receiverAppId,\n      this.onCastStatusChanged_.bind(this),\n      this.onFirstCastStateUpdate_.bind(this),\n      this.onRemoteEvent_.bind(this),\n      this.onResumeLocal_.bind(this),\n      this.getInitState_.bind(this));\n\n  this.init_();\n};\ngoog.inherits(shaka.cast.CastProxy, shaka.util.FakeEventTarget);\n\n\n/**\n * Destroys the proxy and the underlying local Player.\n *\n * @param {boolean=} forceDisconnect If true, force the receiver app to shut\n *   down by disconnecting.  Does nothing if not connected.\n * @override\n * @export\n */\nshaka.cast.CastProxy.prototype.destroy = function(forceDisconnect) {\n  if (forceDisconnect && this.sender_) {\n    this.sender_.forceDisconnect();\n  }\n\n  let async = [\n    this.eventManager_ ? this.eventManager_.destroy() : null,\n    this.localPlayer_ ? this.localPlayer_.destroy() : null,\n    this.sender_ ? this.sender_.destroy() : null,\n  ];\n\n  this.localVideo_ = null;\n  this.localPlayer_ = null;\n  this.videoProxy_ = null;\n  this.playerProxy_ = null;\n  this.eventManager_ = null;\n  this.sender_ = null;\n\n  return Promise.all(async);\n};\n\n\n/**\n * @event shaka.cast.CastProxy.CastStatusChangedEvent\n * @description Fired when cast status changes.  The status change will be\n *   reflected in canCast() and isCasting().\n * @property {string} type\n *   'caststatuschanged'\n * @exportDoc\n */\n\n\n/**\n * Get a proxy for the video element that delegates to local and remote video\n * elements as appropriate.\n *\n * @suppress {invalidCasts} to cast proxy Objects to unrelated types\n * @return {!HTMLMediaElement}\n * @export\n */\nshaka.cast.CastProxy.prototype.getVideo = function() {\n  return /** @type {!HTMLMediaElement} */(this.videoProxy_);\n};\n\n\n/**\n * Get a proxy for the Player that delegates to local and remote Player objects\n * as appropriate.\n *\n * @suppress {invalidCasts} to cast proxy Objects to unrelated types\n * @return {!shaka.Player}\n * @export\n */\nshaka.cast.CastProxy.prototype.getPlayer = function() {\n  return /** @type {!shaka.Player} */(this.playerProxy_);\n};\n\n\n/**\n * @return {boolean} True if the cast API is available and there are receivers.\n * @export\n */\nshaka.cast.CastProxy.prototype.canCast = function() {\n  return this.sender_ ?\n      this.sender_.apiReady() && this.sender_.hasReceivers() :\n      false;\n};\n\n\n/**\n * @return {boolean} True if we are currently casting.\n * @export\n */\nshaka.cast.CastProxy.prototype.isCasting = function() {\n  return this.sender_ ? this.sender_.isCasting() : false;\n};\n\n\n/**\n * @return {string} The name of the Cast receiver device, if isCasting().\n * @export\n */\nshaka.cast.CastProxy.prototype.receiverName = function() {\n  return this.sender_ ? this.sender_.receiverName() : '';\n};\n\n\n/**\n * @return {!Promise} Resolved when connected to a receiver.  Rejected if the\n *   connection fails or is canceled by the user.\n * @export\n */\nshaka.cast.CastProxy.prototype.cast = function() {\n  let initState = this.getInitState_();\n\n  // TODO: transfer manually-selected tracks?\n  // TODO: transfer side-loaded text tracks?\n\n  return this.sender_.cast(initState).then(function() {\n    if (!this.localPlayer_) {\n      // We've already been destroyed.\n      return;\n    }\n\n    // Unload the local manifest when casting succeeds.\n    return this.localPlayer_.unload();\n  }.bind(this));\n};\n\n\n/**\n * Set application-specific data.\n *\n * @param {Object} appData Application-specific data to relay to the receiver.\n * @export\n */\nshaka.cast.CastProxy.prototype.setAppData = function(appData) {\n  this.sender_.setAppData(appData);\n};\n\n\n/**\n * Show a dialog where user can choose to disconnect from the cast connection.\n * @export\n */\nshaka.cast.CastProxy.prototype.suggestDisconnect = function() {\n  this.sender_.showDisconnectDialog();\n};\n\n\n/**\n * Force the receiver app to shut down by disconnecting.\n * @export\n */\nshaka.cast.CastProxy.prototype.forceDisconnect = function() {\n  this.sender_.forceDisconnect();\n};\n\n\n/**\n * Initialize the Proxies and the Cast sender.\n * @private\n */\nshaka.cast.CastProxy.prototype.init_ = function() {\n  this.sender_.init();\n\n  this.eventManager_ = new shaka.util.EventManager();\n\n  shaka.cast.CastUtils.VideoEvents.forEach(function(name) {\n    this.eventManager_.listen(this.localVideo_, name,\n        this.videoProxyLocalEvent_.bind(this));\n  }.bind(this));\n\n  shaka.cast.CastUtils.PlayerEvents.forEach(function(name) {\n    this.eventManager_.listen(this.localPlayer_, name,\n        this.playerProxyLocalEvent_.bind(this));\n  }.bind(this));\n\n  // We would like to use Proxy here, but it is not supported on IE11 or Safari.\n  this.videoProxy_ = {};\n  for (let k in this.localVideo_) {\n    Object.defineProperty(this.videoProxy_, k, {\n      configurable: false,\n      enumerable: true,\n      get: this.videoProxyGet_.bind(this, k),\n      set: this.videoProxySet_.bind(this, k),\n    });\n  }\n\n  this.playerProxy_ = {};\n  for (let k in /** @type {Object} */(this.localPlayer_)) {\n    Object.defineProperty(this.playerProxy_, k, {\n      configurable: false,\n      enumerable: true,\n      get: this.playerProxyGet_.bind(this, k),\n    });\n  }\n\n  this.videoEventTarget_ = new shaka.util.FakeEventTarget();\n  this.videoEventTarget_.dispatchTarget =\n      /** @type {EventTarget} */(this.videoProxy_);\n\n  this.playerEventTarget_ = new shaka.util.FakeEventTarget();\n  this.playerEventTarget_.dispatchTarget =\n      /** @type {EventTarget} */(this.playerProxy_);\n};\n\n\n/**\n * @return {shaka.cast.CastUtils.InitStateType} initState Video and player state\n *   to be sent to the receiver.\n * @private\n */\nshaka.cast.CastProxy.prototype.getInitState_ = function() {\n  let initState = {\n    'video': {},\n    'player': {},\n    'playerAfterLoad': {},\n    'manifest': this.localPlayer_.getAssetUri(),\n    'startTime': null,\n  };\n\n  // Pause local playback before capturing state.\n  this.localVideo_.pause();\n\n  shaka.cast.CastUtils.VideoInitStateAttributes.forEach(function(name) {\n    initState['video'][name] = this.localVideo_[name];\n  }.bind(this));\n\n  // If the video is still playing, set the startTime.\n  // Has no effect if nothing is loaded.\n  if (!this.localVideo_.ended) {\n    initState['startTime'] = this.localVideo_.currentTime;\n  }\n\n  shaka.cast.CastUtils.PlayerInitState.forEach(function(pair) {\n    let getter = pair[0];\n    let setter = pair[1];\n    let value = /** @type {Object} */(this.localPlayer_)[getter]();\n\n    initState['player'][setter] = value;\n  }.bind(this));\n\n  shaka.cast.CastUtils.PlayerInitAfterLoadState.forEach(function(pair) {\n    let getter = pair[0];\n    let setter = pair[1];\n    let value = /** @type {Object} */(this.localPlayer_)[getter]();\n\n    initState['playerAfterLoad'][setter] = value;\n  }.bind(this));\n\n  return initState;\n};\n\n\n/**\n * Dispatch an event to notify the app that the status has changed.\n * @private\n */\nshaka.cast.CastProxy.prototype.onCastStatusChanged_ = function() {\n  let event = new shaka.util.FakeEvent('caststatuschanged');\n  this.dispatchEvent(event);\n};\n\n\n/**\n * Dispatch a synthetic play or pause event to ensure that the app correctly\n * knows that the player is playing, if joining an existing receiver.\n * @private\n */\nshaka.cast.CastProxy.prototype.onFirstCastStateUpdate_ = function() {\n  let type = this.videoProxy_.paused ? 'pause' : 'play';\n  let fakeEvent = new shaka.util.FakeEvent(type);\n  this.videoEventTarget_.dispatchEvent(fakeEvent);\n};\n\n\n/**\n * Transfer remote state back and resume local playback.\n * @private\n */\nshaka.cast.CastProxy.prototype.onResumeLocal_ = function() {\n  // Transfer back the player state.\n  shaka.cast.CastUtils.PlayerInitState.forEach(function(pair) {\n    let getter = pair[0];\n    let setter = pair[1];\n    let value = this.sender_.get('player', getter)();\n    /** @type {Object} */(this.localPlayer_)[setter](value);\n  }.bind(this));\n\n  // Get the most recent manifest URI and ended state.\n  let assetUri = this.sender_.get('player', 'getAssetUri')();\n  let ended = this.sender_.get('video', 'ended');\n\n  let manifestReady = Promise.resolve();\n  let autoplay = this.localVideo_.autoplay;\n\n  let startTime = null;\n\n  // If the video is still playing, set the startTime.\n  // Has no effect if nothing is loaded.\n  if (!ended) {\n    startTime = this.sender_.get('video', 'currentTime');\n  }\n\n  // Now load the manifest, if present.\n  if (assetUri) {\n    // Don't autoplay the content until we finish setting up initial state.\n    this.localVideo_.autoplay = false;\n    manifestReady = this.localPlayer_.load(assetUri, startTime);\n  }\n\n  // Get the video state into a temp variable since we will apply it async.\n  let videoState = {};\n  shaka.cast.CastUtils.VideoInitStateAttributes.forEach(function(name) {\n    videoState[name] = this.sender_.get('video', name);\n  }.bind(this));\n\n  // Finally, take on video state and player's \"after load\" state.\n  manifestReady.then(() => {\n    if (!this.localVideo_) {\n      // We've already been destroyed.\n      return;\n    }\n\n    shaka.cast.CastUtils.VideoInitStateAttributes.forEach(function(name) {\n      this.localVideo_[name] = videoState[name];\n    }.bind(this));\n\n    shaka.cast.CastUtils.PlayerInitAfterLoadState.forEach(function(pair) {\n      let getter = pair[0];\n      let setter = pair[1];\n      let value = this.sender_.get('player', getter)();\n      /** @type {Object} */(this.localPlayer_)[setter](value);\n    }.bind(this));\n\n    // Restore the original autoplay setting.\n    this.localVideo_.autoplay = autoplay;\n    if (assetUri) {\n      // Resume playback with transferred state.\n      this.localVideo_.play();\n    }\n  }, (error) => {\n    // Pass any errors through to the app.\n    goog.asserts.assert(error instanceof shaka.util.Error,\n                        'Wrong error type!');\n    let event = new shaka.util.FakeEvent('error', {'detail': error});\n    this.localPlayer_.dispatchEvent(event);\n  });\n};\n\n\n/**\n * @param {string} name\n * @return {?}\n * @private\n */\nshaka.cast.CastProxy.prototype.videoProxyGet_ = function(name) {\n  if (name == 'addEventListener') {\n    return this.videoEventTarget_.addEventListener.bind(\n        this.videoEventTarget_);\n  }\n  if (name == 'removeEventListener') {\n    return this.videoEventTarget_.removeEventListener.bind(\n        this.videoEventTarget_);\n  }\n\n  // If we are casting, but the first update has not come in yet, use local\n  // values, but not local methods.\n  if (this.sender_.isCasting() && !this.sender_.hasRemoteProperties()) {\n    let value = this.localVideo_[name];\n    if (typeof value != 'function') {\n      return value;\n    }\n  }\n\n  // Use local values and methods if we are not casting.\n  if (!this.sender_.isCasting()) {\n    let value = this.localVideo_[name];\n    if (typeof value == 'function') {\n      value = value.bind(this.localVideo_);\n    }\n    return value;\n  }\n\n  return this.sender_.get('video', name);\n};\n\n\n/**\n * @param {string} name\n * @param {?} value\n * @private\n */\nshaka.cast.CastProxy.prototype.videoProxySet_ = function(name, value) {\n  if (!this.sender_.isCasting()) {\n    this.localVideo_[name] = value;\n    return;\n  }\n\n  this.sender_.set('video', name, value);\n};\n\n\n/**\n * @param {!Event} event\n * @private\n */\nshaka.cast.CastProxy.prototype.videoProxyLocalEvent_ = function(event) {\n  if (this.sender_.isCasting()) {\n    // Ignore any unexpected local events while casting.  Events can still be\n    // fired by the local video and Player when we unload() after the Cast\n    // connection is complete.\n    return;\n  }\n\n  // Convert this real Event into a FakeEvent for dispatch from our\n  // FakeEventListener.\n  let fakeEvent = new shaka.util.FakeEvent(event.type, event);\n  this.videoEventTarget_.dispatchEvent(fakeEvent);\n};\n\n\n/**\n * @param {string} name\n * @return {?}\n * @private\n */\nshaka.cast.CastProxy.prototype.playerProxyGet_ = function(name) {\n  if (name == 'addEventListener') {\n    return this.playerEventTarget_.addEventListener.bind(\n        this.playerEventTarget_);\n  }\n  if (name == 'removeEventListener') {\n    return this.playerEventTarget_.removeEventListener.bind(\n        this.playerEventTarget_);\n  }\n\n  if (name == 'getMediaElement') {\n    return function() { return this.videoProxy_; }.bind(this);\n  }\n\n  if (name == 'getSharedConfiguration') {\n    shaka.log.warning(\n        'Can\\'t share configuration across a network. Returning copy.');\n    return this.sender_.get('player', 'getConfiguration');\n  }\n\n  if (name == 'getNetworkingEngine') {\n    // Always returns a local instance, in case you need to make a request.\n    // Issues a warning, in case you think you are making a remote request\n    // or affecting remote filters.\n    if (this.sender_.isCasting()) {\n      shaka.log.warning('NOTE: getNetworkingEngine() is always local!');\n    }\n    return this.localPlayer_.getNetworkingEngine.bind(this.localPlayer_);\n  }\n\n  if (this.sender_.isCasting()) {\n    // These methods are unavailable or otherwise stubbed during casting.\n    if (name == 'getManifest' || name == 'drmInfo') {\n      return function() {\n        shaka.log.alwaysWarn(name + '() does not work while casting!');\n        return null;\n      };\n    }\n\n    // TODO(vaage): Remove when |getManifestUri| is removed in v2.6.\n    if (name == 'getManifestUri') {\n      shaka.log.alwaysWarn(\n          '\"getManifestUri\" is deprecated. Please use \"getAssetUri\".');\n      return this.playerProxyGet_('getAssetUri');\n    }\n\n    if (name == 'attach' || name == 'detach') {\n      return function() {\n        shaka.log.alwaysWarn(name + '() does not work while casting!');\n        return Promise.resolve();\n      };\n    }\n  }  // if (this.sender_.isCasting())\n\n  // If we are casting, but the first update has not come in yet, use local\n  // getters, but not local methods.\n  if (this.sender_.isCasting() && !this.sender_.hasRemoteProperties()) {\n    if (shaka.cast.CastUtils.PlayerGetterMethods[name]) {\n      let value = /** @type {Object} */(this.localPlayer_)[name];\n      goog.asserts.assert(typeof value == 'function', 'only methods on Player');\n      return value.bind(this.localPlayer_);\n    }\n  }\n\n  // Use local getters and methods if we are not casting.\n  if (!this.sender_.isCasting()) {\n    let value = /** @type {Object} */(this.localPlayer_)[name];\n    goog.asserts.assert(typeof value == 'function', 'only methods on Player');\n    return value.bind(this.localPlayer_);\n  }\n\n  return this.sender_.get('player', name);\n};\n\n\n/**\n * @param {!Event} event\n * @private\n */\nshaka.cast.CastProxy.prototype.playerProxyLocalEvent_ = function(event) {\n  if (this.sender_.isCasting()) {\n    // Ignore any unexpected local events while casting.\n    return;\n  }\n\n  this.playerEventTarget_.dispatchEvent(event);\n};\n\n\n/**\n * @param {string} targetName\n * @param {!shaka.util.FakeEvent} event\n * @private\n */\nshaka.cast.CastProxy.prototype.onRemoteEvent_ = function(targetName, event) {\n  goog.asserts.assert(this.sender_.isCasting(),\n                      'Should only receive remote events while casting');\n  if (!this.sender_.isCasting()) {\n    // Ignore any unexpected remote events.\n    return;\n  }\n\n  if (targetName == 'video') {\n    this.videoEventTarget_.dispatchEvent(event);\n  } else if (targetName == 'player') {\n    this.playerEventTarget_.dispatchEvent(event);\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.cast.CastReceiver');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.cast.CastUtils');\ngoog.require('shaka.log');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.FakeEventTarget');\ngoog.require('shaka.util.IDestroyable');\n\n\n/**\n * A receiver to communicate between the Chromecast-hosted player and the\n * sender application.\n *\n * @constructor\n * @struct\n * @param {!HTMLMediaElement} video The local video element associated with the\n *   local Player instance.\n * @param {!shaka.Player} player A local Player instance.\n * @param {function(Object)=} appDataCallback A callback to handle\n *   application-specific data passed from the sender.\n  * @param {function(string):string=} contentIdCallback A callback to\n *   retrieve manifest URI from the provided content id.\n * @implements {shaka.util.IDestroyable}\n * @extends {shaka.util.FakeEventTarget}\n * @export\n */\nshaka.cast.CastReceiver =\n    function(video, player, appDataCallback, contentIdCallback) {\n  shaka.util.FakeEventTarget.call(this);\n\n  /** @private {HTMLMediaElement} */\n  this.video_ = video;\n\n  /** @private {shaka.Player} */\n  this.player_ = player;\n\n  /** @private {shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  /** @private {Object} */\n  this.targets_ = {\n    'video': video,\n    'player': player,\n  };\n\n  /** @private {?function(Object)} */\n  this.appDataCallback_ = appDataCallback || function() {};\n\n  /** @private {?function(string):string} */\n  this.contentIdCallback_ = contentIdCallback ||\n                            /** @param {string} contentId\n                                @return {string} */\n                            function(contentId) { return contentId; };\n\n  /** @private {boolean} */\n  this.isConnected_ = false;\n\n  /** @private {boolean} */\n  this.isIdle_ = true;\n\n  /** @private {number} */\n  this.updateNumber_ = 0;\n\n  /** @private {boolean} */\n  this.startUpdatingUpdateNumber_ = false;\n\n  /** @private {boolean} */\n  this.initialStatusUpdatePending_ = true;\n\n  /** @private {cast.receiver.CastMessageBus} */\n  this.shakaBus_ = null;\n\n  /** @private {cast.receiver.CastMessageBus} */\n  this.genericBus_ = null;\n\n  /** @private {?number} */\n  this.pollTimerId_ = null;\n\n  this.init_();\n};\ngoog.inherits(shaka.cast.CastReceiver, shaka.util.FakeEventTarget);\n\n\n/**\n * @return {boolean} True if the cast API is available and there are receivers.\n * @export\n */\nshaka.cast.CastReceiver.prototype.isConnected = function() {\n  return this.isConnected_;\n};\n\n\n/**\n * @return {boolean} True if the receiver is not currently doing loading or\n *   playing anything.\n * @export\n */\nshaka.cast.CastReceiver.prototype.isIdle = function() {\n  return this.isIdle_;\n};\n\n\n/**\n * Destroys the underlying Player, then terminates the cast receiver app.\n *\n * @override\n * @export\n */\nshaka.cast.CastReceiver.prototype.destroy = function() {\n  const async = [\n    this.eventManager_ ? this.eventManager_.destroy() : null,\n    this.player_ ? this.player_.destroy() : null,\n  ];\n\n  if (this.pollTimerId_ != null) {\n    window.clearTimeout(this.pollTimerId_);\n  }\n\n  this.video_ = null;\n  this.player_ = null;\n  this.eventManager_ = null;\n  this.targets_ = null;\n  this.appDataCallback_ = null;\n  this.isConnected_ = false;\n  this.isIdle_ = true;\n  this.shakaBus_ = null;\n  this.genericBus_ = null;\n  this.pollTimerId_ = null;\n\n  return Promise.all(async).then(function() {\n    let manager = cast.receiver.CastReceiverManager.getInstance();\n    manager.stop();\n  });\n};\n\n\n/** @private */\nshaka.cast.CastReceiver.prototype.init_ = function() {\n  let manager = cast.receiver.CastReceiverManager.getInstance();\n  manager.onSenderConnected = this.onSendersChanged_.bind(this);\n  manager.onSenderDisconnected = this.onSendersChanged_.bind(this);\n  manager.onSystemVolumeChanged = this.fakeVolumeChangeEvent_.bind(this);\n\n  this.genericBus_ = manager.getCastMessageBus(\n      shaka.cast.CastUtils.GENERIC_MESSAGE_NAMESPACE);\n  this.genericBus_.onMessage = this.onGenericMessage_.bind(this);\n\n  this.shakaBus_ = manager.getCastMessageBus(\n      shaka.cast.CastUtils.SHAKA_MESSAGE_NAMESPACE);\n  this.shakaBus_.onMessage = this.onShakaMessage_.bind(this);\n\n  if (goog.DEBUG) {\n    // Sometimes it is useful to load the receiver app in Chrome to work on the\n    // UI.  To avoid log spam caused by the SDK trying to connect to web sockets\n    // that don't exist, in uncompiled mode we check if the hosting browser is a\n    // Chromecast before starting the receiver manager.  We wouldn't do browser\n    // detection except for debugging, so only do this in uncompiled mode.\n    let isChromecast = navigator.userAgent.includes('CrKey');\n    if (isChromecast) {\n      manager.start();\n    }\n  } else {\n    manager.start();\n  }\n\n  shaka.cast.CastUtils.VideoEvents.forEach(function(name) {\n    this.eventManager_.listen(\n        this.video_, name, this.proxyEvent_.bind(this, 'video'));\n  }.bind(this));\n\n  shaka.cast.CastUtils.PlayerEvents.forEach(function(name) {\n    this.eventManager_.listen(\n        this.player_, name, this.proxyEvent_.bind(this, 'player'));\n  }.bind(this));\n\n  // In our tests, the original Chromecast seems to have trouble decoding above\n  // 1080p.  It would be a waste to select a higher res anyway, given that the\n  // device only outputs 1080p to begin with.\n\n  // Chromecast has an extension to query the device/display's resolution.\n  if (cast.__platform__ && cast.__platform__.canDisplayType(\n      'video/mp4; codecs=\"avc1.640028\"; width=3840; height=2160')) {\n    // The device and display can both do 4k.  Assume a 4k limit.\n    this.player_.setMaxHardwareResolution(3840, 2160);\n  } else {\n    // Chromecast has always been able to do 1080p.  Assume a 1080p limit.\n    this.player_.setMaxHardwareResolution(1920, 1080);\n  }\n\n  // Do not start excluding values from update messages until the video is\n  // fully loaded.\n  this.eventManager_.listen(this.video_, 'loadeddata', function() {\n    this.startUpdatingUpdateNumber_ = true;\n  }.bind(this));\n\n  // Maintain idle state.\n  this.eventManager_.listen(this.player_, 'loading', function() {\n    // No longer idle once loading.  This allows us to show the spinner during\n    // the initial buffering phase.\n    this.isIdle_ = false;\n    this.onCastStatusChanged_();\n  }.bind(this));\n  this.eventManager_.listen(this.video_, 'playing', function() {\n    // No longer idle once playing.  This allows us to replay a video without\n    // reloading.\n    this.isIdle_ = false;\n    this.onCastStatusChanged_();\n  }.bind(this));\n  this.eventManager_.listen(this.video_, 'pause', function() {\n    this.onCastStatusChanged_();\n  }.bind(this));\n  this.eventManager_.listen(this.player_, 'unloading', function() {\n    // Go idle when unloading content.\n    this.isIdle_ = true;\n    this.onCastStatusChanged_();\n  }.bind(this));\n  this.eventManager_.listen(this.video_, 'ended', function() {\n    // Go idle 5 seconds after 'ended', assuming we haven't started again or\n    // been destroyed.\n    window.setTimeout(function() {\n      if (this.video_ && this.video_.ended) {\n        this.isIdle_ = true;\n        this.onCastStatusChanged_();\n      }\n    }.bind(this), 5000);\n  }.bind(this));\n\n  // Do not start polling until after the sender's 'init' message is handled.\n};\n\n\n/** @private */\nshaka.cast.CastReceiver.prototype.onSendersChanged_ = function() {\n  // Reset update message frequency values, to make sure whomever joined\n  // will get a full update message.\n  this.updateNumber_ = 0;\n  // Don't reset startUpdatingUpdateNumber_, because this operation does not\n  // result in new data being loaded.\n  this.initialStatusUpdatePending_ = true;\n\n  let manager = cast.receiver.CastReceiverManager.getInstance();\n  this.isConnected_ = manager.getSenders().length != 0;\n  this.onCastStatusChanged_();\n};\n\n\n/**\n * Dispatch an event to notify the receiver app that the status has changed.\n * @private\n */\nshaka.cast.CastReceiver.prototype.onCastStatusChanged_ = function() {\n  // Do this asynchronously so that synchronous changes to idle state (such as\n  // Player calling unload() as part of load()) are coalesced before the event\n  // goes out.\n  Promise.resolve().then(function() {\n    if (!this.player_) {\n      // We've already been destroyed.\n      return;\n    }\n\n    let event = new shaka.util.FakeEvent('caststatuschanged');\n    this.dispatchEvent(event);\n    // Send a media status message, with a media info message if appropriate.\n    if (!this.maybeSendMediaInfoMessage_()) {\n      this.sendMediaStatus_(0);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Take on initial state from the sender.\n * @param {shaka.cast.CastUtils.InitStateType} initState\n * @param {Object} appData\n * @private\n */\nshaka.cast.CastReceiver.prototype.initState_ = function(initState, appData) {\n  // Take on player state first.\n  for (let k in initState['player']) {\n    let v = initState['player'][k];\n    // All player state vars are setters to be called.\n    /** @type {Object} */(this.player_)[k](v);\n  }\n\n  // Now process custom app data, which may add additional player configs:\n  this.appDataCallback_(appData);\n\n  let manifestReady = Promise.resolve();\n  let autoplay = this.video_.autoplay;\n\n  // Now load the manifest, if present.\n  if (initState['manifest']) {\n    // Don't autoplay the content until we finish setting up initial state.\n    this.video_.autoplay = false;\n    manifestReady = this.player_.load(\n        initState['manifest'], initState['startTime']);\n  }\n\n  // Finally, take on video state and player's \"after load\" state.\n  manifestReady.then(() => {\n    if (!this.player_) {\n      // We've already been destroyed.\n      return;\n    }\n\n    for (let k in initState['video']) {\n      let v = initState['video'][k];\n      this.video_[k] = v;\n    }\n\n    for (let k in initState['playerAfterLoad']) {\n      let v = initState['playerAfterLoad'][k];\n      // All player state vars are setters to be called.\n      /** @type {Object} */(this.player_)[k](v);\n    }\n\n    // Restore original autoplay setting.\n    this.video_.autoplay = autoplay;\n    if (initState['manifest']) {\n      // Resume playback with transferred state.\n      this.video_.play();\n      // Notify generic controllers of the state change.\n      this.sendMediaStatus_(0);\n    }\n  }, (error) => {\n    // Pass any errors through to the app.\n    goog.asserts.assert(error instanceof shaka.util.Error,\n                        'Wrong error type!');\n    let event = new shaka.util.FakeEvent('error', {'detail': error});\n    this.player_.dispatchEvent(event);\n  });\n};\n\n\n/**\n * @param {string} targetName\n * @param {!Event} event\n * @private\n */\nshaka.cast.CastReceiver.prototype.proxyEvent_ = function(targetName, event) {\n  if (!this.player_) {\n    // The receiver is destroyed, so it should ignore further events.\n    return;\n  }\n\n  // Poll and send an update right before we send the event.  Some events\n  // indicate an attribute change, so that change should be visible when the\n  // event is handled.\n  this.pollAttributes_();\n\n  this.sendMessage_({\n    'type': 'event',\n    'targetName': targetName,\n    'event': event,\n  }, this.shakaBus_);\n};\n\n\n/** @private */\nshaka.cast.CastReceiver.prototype.pollAttributes_ = function() {\n  // The poll timer may have been pre-empted by an event.\n  // To avoid polling too often, we clear it here.\n  if (this.pollTimerId_ != null) {\n    window.clearTimeout(this.pollTimerId_);\n  }\n  // Since we know the timer has been cleared, start a new one now.\n  // This will be preempted by events, including 'timeupdate'.\n  this.pollTimerId_ = window.setTimeout(this.pollAttributes_.bind(this), 500);\n\n  let update = {\n    'video': {},\n    'player': {},\n  };\n\n  shaka.cast.CastUtils.VideoAttributes.forEach(function(name) {\n    update['video'][name] = this.video_[name];\n  }.bind(this));\n\n  // TODO: Instead of this variable frequency update system, instead cache the\n  // previous player state and only send over changed values, with complete\n  // updates every ~20 updates to account for dropped messages.\n\n  if (this.player_.isLive()) {\n    for (let name in shaka.cast.CastUtils.PlayerGetterMethodsThatRequireLive) {\n      let frequency =\n          shaka.cast.CastUtils.PlayerGetterMethodsThatRequireLive[name];\n      if (this.updateNumber_ % frequency == 0) {\n        update['player'][name] = /** @type {Object} */ (this.player_)[name]();\n      }\n    }\n  }\n  for (let name in shaka.cast.CastUtils.PlayerGetterMethods) {\n    let frequency = shaka.cast.CastUtils.PlayerGetterMethods[name];\n    if (this.updateNumber_ % frequency == 0) {\n      update['player'][name] = /** @type {Object} */ (this.player_)[name]();\n    }\n  }\n\n  // Volume attributes are tied to the system volume.\n  let manager = cast.receiver.CastReceiverManager.getInstance();\n  let systemVolume = manager.getSystemVolume();\n  if (systemVolume) {\n    update['video']['volume'] = systemVolume.level;\n    update['video']['muted'] = systemVolume.muted;\n  }\n\n  // Only start progressing the update number once data is loaded,\n  // just in case any of the \"rarely changing\" properties with less frequent\n  // update messages changes significantly during the loading process.\n  if (this.startUpdatingUpdateNumber_) {\n    this.updateNumber_ += 1;\n  }\n\n  this.sendMessage_({\n    'type': 'update',\n    'update': update,\n  }, this.shakaBus_);\n\n  this.maybeSendMediaInfoMessage_();\n};\n\n\n/**\n * Composes and sends a mediaStatus message if appropriate.\n * @return {boolean}\n * @private\n */\nshaka.cast.CastReceiver.prototype.maybeSendMediaInfoMessage_ = function() {\n  if (this.initialStatusUpdatePending_ &&\n      (this.video_.duration || this.player_.isLive())) {\n    // Send over a media status message to set the duration of the cast\n    // dialogue.\n    this.sendMediaInfoMessage_();\n    this.initialStatusUpdatePending_ = false;\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * Composes and sends a mediaStatus message with a mediaInfo component.\n * @private\n */\nshaka.cast.CastReceiver.prototype.sendMediaInfoMessage_ = function() {\n  let media = {\n    'contentId': this.player_.getAssetUri(),\n    'streamType': this.player_.isLive() ? 'LIVE' : 'BUFFERED',\n    'duration': this.video_.duration,\n    // TODO: Is there a use case when this would be required?\n    // Sending an empty string for now since it's a mandatory\n    // field.\n    'contentType': '',\n  };\n  this.sendMediaStatus_(0, media);\n};\n\n\n/**\n * Dispatch a fake 'volumechange' event to mimic the video element, since volume\n * changes are routed to the system volume on the receiver.\n * @private\n */\nshaka.cast.CastReceiver.prototype.fakeVolumeChangeEvent_ = function() {\n  // Volume attributes are tied to the system volume.\n  let manager = cast.receiver.CastReceiverManager.getInstance();\n  let systemVolume = manager.getSystemVolume();\n  goog.asserts.assert(systemVolume, 'System volume should not be null!');\n\n  if (systemVolume) {\n    // Send an update message with just the latest volume level and muted state.\n    this.sendMessage_({\n      'type': 'update',\n      'update': {\n        'video': {\n          'volume': systemVolume.level,\n          'muted': systemVolume.muted,\n        },\n      },\n    }, this.shakaBus_);\n  }\n\n  // Send another message with a 'volumechange' event to update the sender's UI.\n  this.sendMessage_({\n    'type': 'event',\n    'targetName': 'video',\n    'event': {'type': 'volumechange'},\n  }, this.shakaBus_);\n};\n\n\n/**\n * Since this method is in the compiled library, make sure all messages are\n * read with quoted properties.\n * @param {!cast.receiver.CastMessageBus.Event} event\n * @private\n */\nshaka.cast.CastReceiver.prototype.onShakaMessage_ = function(event) {\n  let message = shaka.cast.CastUtils.deserialize(event.data);\n  shaka.log.debug('CastReceiver: message', message);\n\n  switch (message['type']) {\n    case 'init':\n      // Reset update message frequency values after initialization.\n      this.updateNumber_ = 0;\n      this.startUpdatingUpdateNumber_ = false;\n      this.initialStatusUpdatePending_ = true;\n\n      this.initState_(message['initState'], message['appData']);\n      // The sender is supposed to reflect the cast system volume after\n      // connecting.  Using fakeVolumeChangeEvent_() would create a race on the\n      // sender side, since it would have volume properties, but no others.\n      // This would lead to hasRemoteProperties() being true, even though a\n      // complete set had never been sent.\n      // Now that we have init state, this is a good time for the first update\n      // message anyway.\n      this.pollAttributes_();\n      break;\n    case 'appData':\n      this.appDataCallback_(message['appData']);\n      break;\n    case 'set': {\n      let targetName = message['targetName'];\n      let property = message['property'];\n      let value = message['value'];\n\n      if (targetName == 'video') {\n        // Volume attributes must be rerouted to the system.\n        let manager = cast.receiver.CastReceiverManager.getInstance();\n        if (property == 'volume') {\n          manager.setSystemVolumeLevel(value);\n          break;\n        } else if (property == 'muted') {\n          manager.setSystemVolumeMuted(value);\n          break;\n        }\n      }\n\n      this.targets_[targetName][property] = value;\n      break;\n    }\n    case 'call': {\n      let targetName = message['targetName'];\n      let methodName = message['methodName'];\n      let args = message['args'];\n      let target = this.targets_[targetName];\n      target[methodName].apply(target, args);\n      break;\n    }\n    case 'asyncCall': {\n      let targetName = message['targetName'];\n      let methodName = message['methodName'];\n      if (targetName == 'player' && methodName == 'load') {\n        // Reset update message frequency values after a load.\n        this.updateNumber_ = 0;\n        this.startUpdatingUpdateNumber_ = false;\n      }\n      let args = message['args'];\n      let id = message['id'];\n      let senderId = event.senderId;\n      let target = this.targets_[targetName];\n      let p = target[methodName].apply(target, args);\n      if (targetName == 'player' && methodName == 'load') {\n        // Wait until the manifest has actually loaded to send another media\n        // info message, so on a new load it doesn't send the old info over.\n        p = p.then(function() {\n          this.initialStatusUpdatePending_ = true;\n        }.bind(this));\n      }\n      // Replies must go back to the specific sender who initiated, so that we\n      // don't have to deal with conflicting IDs between senders.\n      p.then(this.sendAsyncComplete_.bind(this, senderId, id, /* error */ null),\n             this.sendAsyncComplete_.bind(this, senderId, id));\n      break;\n    }\n  }\n};\n\n\n/**\n * @param {!cast.receiver.CastMessageBus.Event} event\n * @private\n */\nshaka.cast.CastReceiver.prototype.onGenericMessage_ = function(event) {\n  let message = shaka.cast.CastUtils.deserialize(event.data);\n  shaka.log.debug('CastReceiver: message', message);\n  // TODO(ismena): error message on duplicate request id from the same sender\n  switch (message['type']) {\n    case 'PLAY':\n      this.video_.play();\n      // Notify generic controllers that the player state changed.\n      // requestId=0 (the parameter) means that the message was not\n      // triggered by a GET_STATUS request.\n      this.sendMediaStatus_(0);\n      break;\n    case 'PAUSE':\n      this.video_.pause();\n      this.sendMediaStatus_(0);\n      break;\n    case 'SEEK': {\n      let currentTime = message['currentTime'];\n      let resumeState = message['resumeState'];\n      if (currentTime != null) {\n        this.video_.currentTime = Number(currentTime);\n      }\n      if (resumeState && resumeState == 'PLAYBACK_START') {\n        this.video_.play();\n        this.sendMediaStatus_(0);\n      } else if (resumeState && resumeState == 'PLAYBACK_PAUSE') {\n        this.video_.pause();\n        this.sendMediaStatus_(0);\n      }\n      break;\n    }\n    case 'STOP':\n      this.player_.unload().then(function() {\n        if (!this.player_) {\n          // We've already been destroyed.\n          return;\n        }\n\n        this.sendMediaStatus_(0);\n      }.bind(this));\n      break;\n    case 'GET_STATUS':\n      // TODO(ismena): According to the SDK this is supposed to be a\n      // unicast message to the sender that requested the status,\n      // but it doesn't appear to be working.\n      // Look into what's going on there and change this to be a\n      // unicast.\n      this.sendMediaStatus_(Number(message['requestId']));\n      break;\n    case 'VOLUME': {\n      let volumeObject = message['volume'];\n      let level = volumeObject['level'];\n      let muted = volumeObject['muted'];\n      let oldVolumeLevel = this.video_.volume;\n      let oldVolumeMuted = this.video_.muted;\n      if (level != null) {\n        this.video_.volume = Number(level);\n      }\n      if (muted != null) {\n        this.video_.muted = muted;\n      }\n      // Notify generic controllers if the volume changed.\n      if (oldVolumeLevel != this.video_.volume ||\n          oldVolumeMuted != this.video_.muted) {\n        this.sendMediaStatus_(0);\n      }\n      break;\n    }\n    case 'LOAD': {\n      // Reset update message frequency values after a load.\n      this.updateNumber_ = 0;\n      this.startUpdatingUpdateNumber_ = false;\n      this.initialStatusUpdatePending_ = false; // This already sends an update.\n\n      let mediaInfo = message['media'];\n      let contentId = mediaInfo['contentId'];\n      let currentTime = message['currentTime'];\n      let assetUri = this.contentIdCallback_(contentId);\n      let autoplay = message['autoplay'] || true;\n      if (autoplay) {\n        this.video_.autoplay = true;\n      }\n      this.player_.load(assetUri, currentTime).then(function() {\n        if (!this.player_) {\n          // We've already been destroyed.\n          return;\n        }\n\n        // Notify generic controllers that the media has changed.\n        this.sendMediaInfoMessage_();\n      }.bind(this)).catch(function(error) {\n        // Load failed.  Dispatch the error message to the sender.\n        let type = 'LOAD_FAILED';\n        if (error.category == shaka.util.Error.Category.PLAYER &&\n            error.code == shaka.util.Error.Code.LOAD_INTERRUPTED) {\n          type = 'LOAD_CANCELLED';\n        }\n\n        this.sendMessage_({\n          'requestId': Number(message['requestId']),\n          'type': type,\n        }, this.genericBus_);\n      }.bind(this));\n      break;\n    }\n    default:\n      shaka.log.warning(\n          'Unrecognized message type from the generic Chromecast controller!',\n          message['type']);\n      // Dispatch an error to the sender.\n      this.sendMessage_({\n        'requestId': Number(message['requestId']),\n        'type': 'INVALID_REQUEST',\n        'reason': 'INVALID_COMMAND',\n      }, this.genericBus_);\n      break;\n  }\n};\n\n\n/**\n * Tell the sender that the async operation is complete.\n * @param {string} senderId\n * @param {string} id\n * @param {shaka.util.Error} error\n * @private\n */\nshaka.cast.CastReceiver.prototype.sendAsyncComplete_ =\n    function(senderId, id, error) {\n  if (!this.player_) {\n    // We've already been destroyed.\n    return;\n  }\n\n  this.sendMessage_({\n    'type': 'asyncComplete',\n    'id': id,\n    'error': error,\n  }, this.shakaBus_, senderId);\n};\n\n\n/**\n * Since this method is in the compiled library, make sure all messages passed\n * in here were created with quoted property names.\n * @param {!Object} message\n * @param {cast.receiver.CastMessageBus} bus\n * @param {string=} senderId\n * @private\n */\nshaka.cast.CastReceiver.prototype.sendMessage_ =\n    function(message, bus, senderId) {\n  // Cuts log spam when debugging the receiver UI in Chrome.\n  if (!this.isConnected_) return;\n\n  let serialized = shaka.cast.CastUtils.serialize(message);\n  if (senderId) {\n    bus.getCastChannel(senderId).send(serialized);\n  } else {\n    bus.broadcast(serialized);\n  }\n};\n\n\n/**\n * @return {string}\n * @private\n */\nshaka.cast.CastReceiver.prototype.getPlayState_ = function() {\n  let playState = shaka.cast.CastReceiver.PLAY_STATE;\n  if (this.isIdle_) {\n    return playState.IDLE;\n  } else if (this.player_.isBuffering()) {\n    return playState.BUFFERING;\n  } else if (this.video_.paused) {\n    return playState.PAUSED;\n  } else {\n    return playState.PLAYING;\n  }\n};\n\n\n/**\n * @param {number} requestId\n * @param {Object=} media\n * @private\n */\nshaka.cast.CastReceiver.prototype.sendMediaStatus_ =\n    function(requestId, media) {\n  let mediaStatus = {\n    // mediaSessionId is a unique ID for the playback of this specific session.\n    // It's used to identify a specific instance of a playback.\n    // We don't support multiple playbacks, so just return 0.\n    'mediaSessionId': 0,\n    'playbackRate': this.video_.playbackRate,\n    'playerState': this.getPlayState_(),\n    'currentTime': this.video_.currentTime,\n    // supportedMediaCommands is a sum of all the flags of commands that the\n    // player supports.\n    // The list of comands with respective flags is:\n    // 1 - Pause\n    // 2 - Seek\n    // 4 - Stream volume\n    // 8 - Stream mute\n    // 16 - Skip forward\n    // 32 - Skip backward\n    // We support pause, seek, volume and mute which gives a value of\n    // 1+2+4+8=15\n    'supportedMediaCommands': 15,\n    'volume': {\n      'level': this.video_.volume,\n      'muted': this.video_.muted,\n    },\n  };\n\n  if (media) {\n    mediaStatus['media'] = media;\n  }\n\n  let ret = {\n    'requestId': requestId,\n    'type': 'MEDIA_STATUS',\n    'status': [mediaStatus],\n  };\n\n  this.sendMessage_(ret, this.genericBus_);\n};\n\n\n/**\n * @enum {string}\n */\nshaka.cast.CastReceiver.PLAY_STATE = {\n  IDLE: 'IDLE',\n  PLAYING: 'PLAYING',\n  BUFFERING: 'BUFFERING',\n  PAUSED: 'PAUSED',\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.XmlUtils');\n\ngoog.require('shaka.log');\n\n\n/**\n * @namespace shaka.util.XmlUtils\n * @summary A set of XML utility functions.\n */\n\n\n/**\n * Finds a child XML element.\n * @param {!Node} elem The parent XML element.\n * @param {string} name The child XML element's tag name.\n * @return {Element} The child XML element, or null if a child XML element does\n *   not exist with the given tag name OR if there exists more than one\n *   child XML element with the given tag name.\n */\nshaka.util.XmlUtils.findChild = function(elem, name) {\n  let children = shaka.util.XmlUtils.findChildren(elem, name);\n  if (children.length != 1) {\n    return null;\n  }\n  return children[0];\n};\n\n\n/**\n * Finds child XML elements.\n * @param {!Node} elem The parent XML element.\n * @param {string} name The child XML element's tag name.\n * @return {!Array.<!Element>} The child XML elements.\n */\nshaka.util.XmlUtils.findChildren = function(elem, name) {\n  return Array.prototype.filter.call(elem.childNodes, function(child) {\n    return child instanceof Element && child.tagName == name;\n  });\n};\n\n\n/**\n * Finds namespace-qualified child XML elements.\n * @param {!Node} elem The parent XML element.\n * @param {string} ns The child XML element's namespace URI.\n * @param {string} name The child XML element's local name.\n * @return {!Array.<!Element>} The child XML elements.\n */\nshaka.util.XmlUtils.findChildrenNS = function(elem, ns, name) {\n  return Array.prototype.filter.call(elem.childNodes, function(child) {\n    return child instanceof Element && child.localName == name &&\n        child.namespaceURI == ns;\n  });\n};\n\n\n/**\n * Gets a namespace-qualified attribute.\n * @param {!Element} elem The element to get from.\n * @param {string} ns The namespace URI.\n * @param {string} name The local name of the attribute.\n * @return {?string} The attribute's value, or null if not present.\n */\nshaka.util.XmlUtils.getAttributeNS = function(elem, ns, name) {\n  // Some browsers return the empty string when the attribute is missing,\n  // so check if it exists first.  See: https://mzl.la/2L7F0UK\n  return elem.hasAttributeNS(ns, name) ? elem.getAttributeNS(ns, name) : null;\n};\n\n\n/**\n * Gets the text contents of a node.\n * @param {!Node} elem The XML element.\n * @return {?string} The text contents, or null if there are none.\n */\nshaka.util.XmlUtils.getContents = function(elem) {\n  let isText = (child) => {\n    return child.nodeType == Node.TEXT_NODE ||\n        child.nodeType == Node.CDATA_SECTION_NODE;\n  };\n  if (!Array.prototype.every.call(elem.childNodes, isText)) {\n    return null;\n  }\n\n  // Read merged text content from all text nodes.\n  return elem.textContent.trim();\n};\n\n\n/**\n * Parses an attribute by its name.\n * @param {!Element} elem The XML element.\n * @param {string} name The attribute name.\n * @param {function(string): (T|null)} parseFunction A function that parses\n *   the attribute.\n * @param {(T|null)=} defaultValue The attribute's default value, if not\n *   specified, the attibute's default value is null.\n * @return {(T|null)} The parsed attribute on success, or the attribute's\n *   default value if the attribute does not exist or could not be parsed.\n * @template T\n */\nshaka.util.XmlUtils.parseAttr = function(\n    elem, name, parseFunction, defaultValue = null) {\n  let parsedValue = null;\n\n  let value = elem.getAttribute(name);\n  if (value != null) {\n    parsedValue = parseFunction(value);\n  }\n  return parsedValue == null ? defaultValue : parsedValue;\n};\n\n\n/**\n * Parses an XML date string.\n * @param {string} dateString\n * @return {?number} The parsed date in seconds on success; otherwise, return\n *   null.\n */\nshaka.util.XmlUtils.parseDate = function(dateString) {\n  if (!dateString) {\n    return null;\n  }\n\n  // Times in the manifest should be in UTC.  If they don't specify a timezone,\n  // Date.parse() will use the local timezone instead of UTC.  So manually add\n  // the timezone if missing ('Z' indicates the UTC timezone).\n  // Format: YYYY-MM-DDThh:mm:ss.ssssss\n  if (/^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/.test(dateString)) {\n    dateString += 'Z';\n  }\n\n  let result = Date.parse(dateString);\n  return (!isNaN(result) ? Math.floor(result / 1000.0) : null);\n};\n\n\n/**\n * Parses an XML duration string.\n * Negative values are not supported. Years and months are treated as exactly\n * 365 and 30 days respectively.\n * @param {string} durationString The duration string, e.g., \"PT1H3M43.2S\",\n *   which means 1 hour, 3 minutes, and 43.2 seconds.\n * @return {?number} The parsed duration in seconds on success; otherwise,\n *   return null.\n * @see {@link http://www.datypic.com/sc/xsd/t-xsd_duration.html}\n */\nshaka.util.XmlUtils.parseDuration = function(durationString) {\n  if (!durationString) {\n    return null;\n  }\n\n  let re = '^P(?:([0-9]*)Y)?(?:([0-9]*)M)?(?:([0-9]*)D)?' +\n           '(?:T(?:([0-9]*)H)?(?:([0-9]*)M)?(?:([0-9.]*)S)?)?$';\n  let matches = new RegExp(re).exec(durationString);\n\n  if (!matches) {\n    shaka.log.warning('Invalid duration string:', durationString);\n    return null;\n  }\n\n  // Note: Number(null) == 0 but Number(undefined) == NaN.\n  let years = Number(matches[1] || null);\n  let months = Number(matches[2] || null);\n  let days = Number(matches[3] || null);\n  let hours = Number(matches[4] || null);\n  let minutes = Number(matches[5] || null);\n  let seconds = Number(matches[6] || null);\n\n  // Assume a year always has 365 days and a month always has 30 days.\n  let d = (60 * 60 * 24 * 365) * years +\n          (60 * 60 * 24 * 30) * months +\n          (60 * 60 * 24) * days +\n          (60 * 60) * hours +\n          60 * minutes +\n          seconds;\n  return isFinite(d) ? d : null;\n};\n\n\n/**\n * Parses a range string.\n * @param {string} rangeString The range string, e.g., \"101-9213\".\n * @return {?{start: number, end: number}} The parsed range on success;\n *   otherwise, return null.\n */\nshaka.util.XmlUtils.parseRange = function(rangeString) {\n  let matches = /([0-9]+)-([0-9]+)/.exec(rangeString);\n\n  if (!matches) {\n    return null;\n  }\n\n  let start = Number(matches[1]);\n  if (!isFinite(start)) {\n    return null;\n  }\n\n  let end = Number(matches[2]);\n  if (!isFinite(end)) {\n    return null;\n  }\n\n  return {start: start, end: end};\n};\n\n\n/**\n * Parses an integer.\n * @param {string} intString The integer string.\n * @return {?number} The parsed integer on success; otherwise, return null.\n */\nshaka.util.XmlUtils.parseInt = function(intString) {\n  let n = Number(intString);\n  return (n % 1 === 0) ? n : null;\n};\n\n\n/**\n * Parses a positive integer.\n * @param {string} intString The integer string.\n * @return {?number} The parsed positive integer on success; otherwise,\n *   return null.\n */\nshaka.util.XmlUtils.parsePositiveInt = function(intString) {\n  let n = Number(intString);\n  return (n % 1 === 0) && (n > 0) ? n : null;\n};\n\n\n/**\n * Parses a non-negative integer.\n * @param {string} intString The integer string.\n * @return {?number} The parsed non-negative integer on success; otherwise,\n *   return null.\n */\nshaka.util.XmlUtils.parseNonNegativeInt = function(intString) {\n  let n = Number(intString);\n  return (n % 1 === 0) && (n >= 0) ? n : null;\n};\n\n\n/**\n * Parses a floating point number.\n * @param {string} floatString The floating point number string.\n * @return {?number} The parsed floating point number on success; otherwise,\n *   return null. May return -Infinity or Infinity.\n */\nshaka.util.XmlUtils.parseFloat = function(floatString) {\n  let n = Number(floatString);\n  return !isNaN(n) ? n : null;\n};\n\n\n/**\n * Evaluate a division expressed as a string.\n * @param {string} exprString\n *   The expression to evaluate, e.g. \"200/2\". Can also be a single number.\n * @return {?number} The evaluated expression as floating point number on\n *   success; otherwise return null.\n */\nshaka.util.XmlUtils.evalDivision = function(exprString) {\n  let res;\n  let n;\n  if ((res = exprString.match(/^(\\d+)\\/(\\d+)$/))) {\n    n = Number(res[1] / res[2]);\n  } else {\n    n = Number(exprString);\n  }\n  return !isNaN(n) ? n : null;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.dash.ContentProtection');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.Uint8ArrayUtils');\ngoog.require('shaka.util.XmlUtils');\n\n\n/**\n * @namespace shaka.dash.ContentProtection\n * @summary A set of functions for parsing and interpreting ContentProtection\n *   elements.\n */\n\n\n/**\n * @typedef {{\n *   defaultKeyId: ?string,\n *   defaultInit: Array.<shaka.extern.InitDataOverride>,\n *   drmInfos: !Array.<shaka.extern.DrmInfo>,\n *   firstRepresentation: boolean\n * }}\n *\n * @description\n * Contains information about the ContentProtection elements found at the\n * AdaptationSet level.\n *\n * @property {?string} defaultKeyId\n *   The default key ID to use.  This is used by parseKeyIds as a default.  This\n *   can be null to indicate that there is no default.\n * @property {Array.<shaka.extern.InitDataOverride>} defaultInit\n *   The default init data override.  This can be null to indicate that there\n *   is no default.\n * @property {!Array.<shaka.extern.DrmInfo>} drmInfos\n *   The DrmInfo objects.\n * @property {boolean} firstRepresentation\n *   True when first parsed; changed to false after the first call to\n *   parseKeyIds.  This is used to determine if a dummy key-system should be\n *   overwritten; namely that the first representation can replace the dummy\n *   from the AdaptationSet.\n */\nshaka.dash.ContentProtection.Context;\n\n\n/**\n * @typedef {{\n *   node: !Element,\n *   schemeUri: string,\n *   keyId: ?string,\n *   init: Array.<shaka.extern.InitDataOverride>\n * }}\n *\n * @description\n * The parsed result of a single ContentProtection element.\n *\n * @property {!Element} node\n *   The ContentProtection XML element.\n * @property {string} schemeUri\n *   The scheme URI.\n * @property {?string} keyId\n *   The default key ID, if present.\n * @property {Array.<shaka.extern.InitDataOverride>} init\n *   The init data, if present.  If there is no init data, it will be null.  If\n *   this is non-null, there is at least one element.\n */\nshaka.dash.ContentProtection.Element;\n\n\n/**\n * A map of scheme URI to key system name.\n *\n * @const {!Map.<string, string>}\n * @private\n */\nshaka.dash.ContentProtection.defaultKeySystems_ = new Map()\n    .set('urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b',\n         'org.w3.clearkey')\n    .set('urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed',\n         'com.widevine.alpha')\n    .set('urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95',\n         'com.microsoft.playready')\n    .set('urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb',\n         'com.adobe.primetime');\n\n\n/**\n * @const {string}\n * @private\n */\nshaka.dash.ContentProtection.MP4Protection_ =\n    'urn:mpeg:dash:mp4protection:2011';\n\n\n/**\n * @const {string}\n * @private\n */\nshaka.dash.ContentProtection.CencNamespaceUri_ = 'urn:mpeg:cenc:2013';\n\n\n/**\n * Parses info from the ContentProtection elements at the AdaptationSet level.\n *\n * @param {!Array.<!Element>} elems\n * @param {shaka.extern.DashContentProtectionCallback} callback\n * @param {boolean} ignoreDrmInfo\n * @return {shaka.dash.ContentProtection.Context}\n */\nshaka.dash.ContentProtection.parseFromAdaptationSet = function(\n    elems, callback, ignoreDrmInfo) {\n  const ContentProtection = shaka.dash.ContentProtection;\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n  let parsed = ContentProtection.parseElements_(elems);\n  /** @type {Array.<shaka.extern.InitDataOverride>} */\n  let defaultInit = null;\n  /** @type {!Array.<shaka.extern.DrmInfo>} */\n  let drmInfos = [];\n  let parsedNonCenc = [];\n\n  // Get the default key ID; if there are multiple, they must all match.\n  const keyIds = new Set(parsed.map((element) => element.keyId));\n  // Remove any possible null value (elements may have no key ids).\n  keyIds.delete(null);\n\n  if (keyIds.size > 1) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_CONFLICTING_KEY_IDS);\n  }\n\n  if (!ignoreDrmInfo) {\n    // Find the default key ID and init data.  Create a new array of all the\n    // non-CENC elements.\n    parsedNonCenc = parsed.filter(function(elem) {\n      if (elem.schemeUri == ContentProtection.MP4Protection_) {\n        goog.asserts.assert(!elem.init || elem.init.length,\n                            'Init data must be null or non-empty.');\n        defaultInit = elem.init || defaultInit;\n        return false;\n      } else {\n        return true;\n      }\n    });\n\n    if (parsedNonCenc.length) {\n      drmInfos = ContentProtection.convertElements_(\n          defaultInit, callback, parsedNonCenc);\n\n      // If there are no drmInfos after parsing, then add a dummy entry.\n      // This may be removed in parseKeyIds.\n      if (drmInfos.length == 0) {\n        drmInfos = [ManifestParserUtils.createDrmInfo('', defaultInit)];\n      }\n    }\n  }\n\n  // If there are only CENC element(s) or ignoreDrmInfo flag is set, assume all\n  // key-systems are supported.\n  if (parsed.length && (ignoreDrmInfo || !parsedNonCenc.length)) {\n    drmInfos = [];\n\n    const keySystems = ContentProtection.defaultKeySystems_;\n    for (const keySystem of keySystems.values()) {\n      // If the manifest doesn't specify any key systems, we shouldn't\n      // put clearkey in this list.  Otherwise, it may be triggered when\n      // a real key system should be used instead.\n      if (keySystem != 'org.w3.clearkey') {\n        const info = ManifestParserUtils.createDrmInfo(keySystem, defaultInit);\n        drmInfos.push(info);\n      }\n    }\n  }\n\n  // If we have a default key id, apply it to every initData.\n  const defaultKeyId = Array.from(keyIds)[0] || null;\n\n  if (defaultKeyId) {\n    for (const info of drmInfos) {\n      for (const initData of info.initData) {\n        initData.keyId = defaultKeyId;\n      }\n    }\n  }\n\n  return {\n    defaultKeyId: defaultKeyId,\n    defaultInit: defaultInit,\n    drmInfos: drmInfos,\n    firstRepresentation: true,\n  };\n};\n\n\n/**\n * Parses the given ContentProtection elements found at the Representation\n * level.  This may update the |context|.\n *\n * @param {!Array.<!Element>} elems\n * @param {shaka.extern.DashContentProtectionCallback} callback\n * @param {shaka.dash.ContentProtection.Context} context\n * @param {boolean} ignoreDrmInfo\n * @return {?string} The parsed key ID\n */\nshaka.dash.ContentProtection.parseFromRepresentation = function(\n    elems, callback, context, ignoreDrmInfo) {\n  const ContentProtection = shaka.dash.ContentProtection;\n  let repContext = ContentProtection.parseFromAdaptationSet(\n      elems, callback, ignoreDrmInfo);\n\n  if (context.firstRepresentation) {\n    let asUnknown = context.drmInfos.length == 1 &&\n        !context.drmInfos[0].keySystem;\n    let asUnencrypted = context.drmInfos.length == 0;\n    let repUnencrypted = repContext.drmInfos.length == 0;\n\n    // There are two cases where we need to replace the |drmInfos| in the\n    // context with those in the Representation:\n    //   1. The AdaptationSet does not list any ContentProtection.\n    //   2. The AdaptationSet only lists unknown key-systems.\n    if (asUnencrypted || (asUnknown && !repUnencrypted)) {\n      context.drmInfos = repContext.drmInfos;\n    }\n    context.firstRepresentation = false;\n  } else if (repContext.drmInfos.length > 0) {\n    // If this is not the first Representation, then we need to remove entries\n    // from the context that do not appear in this Representation.\n    context.drmInfos = context.drmInfos.filter(function(asInfo) {\n      return repContext.drmInfos.some(function(repInfo) {\n        return repInfo.keySystem == asInfo.keySystem;\n      });\n    });\n    // If we have filtered out all key-systems, throw an error.\n    if (context.drmInfos.length == 0) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.MANIFEST,\n          shaka.util.Error.Code.DASH_NO_COMMON_KEY_SYSTEM);\n    }\n  }\n\n  return repContext.defaultKeyId || context.defaultKeyId;\n};\n\n\n/**\n * Creates DrmInfo objects from the given element.\n *\n * @param {Array.<shaka.extern.InitDataOverride>} defaultInit\n * @param {shaka.extern.DashContentProtectionCallback} callback\n * @param {!Array.<shaka.dash.ContentProtection.Element>} elements\n * @return {!Array.<shaka.extern.DrmInfo>}\n * @private\n */\nshaka.dash.ContentProtection.convertElements_ = function(\n    defaultInit, callback, elements) {\n  const createDrmInfo = shaka.util.ManifestParserUtils.createDrmInfo;\n  const defaultKeySystems = shaka.dash.ContentProtection.defaultKeySystems_;\n\n  /** @type {!Array.<shaka.extern.DrmInfo>} */\n  const out = [];\n\n  for (const element of elements) {\n    const keySystem = defaultKeySystems.get(element.schemeUri);\n    if (keySystem) {\n      goog.asserts.assert(\n          !element.init || element.init.length,\n          'Init data must be null or non-empty.');\n\n      const initData = element.init || defaultInit;\n      const info = createDrmInfo(keySystem, initData);\n      out.push(info);\n    } else {\n      goog.asserts.assert(callback, 'ContentProtection callback is required');\n      const infos = callback(element.node) || [];\n      for (const info of infos) {\n        out.push(info);\n      }\n    }\n  }\n\n  return out;\n};\n\n\n/**\n * Parses the given ContentProtection elements.  If there is an error, it\n * removes those elements.\n *\n * @param {!Array.<!Element>} elems\n * @return {!Array.<shaka.dash.ContentProtection.Element>}\n * @private\n */\nshaka.dash.ContentProtection.parseElements_ = function(elems) {\n  /** @type {!Array.<shaka.dash.ContentProtection.Element>} */\n  const out = [];\n\n  for (const elem of elems) {\n    const parsed = shaka.dash.ContentProtection.parseElement_(elem);\n    if (parsed) {\n      out.push(parsed);\n    }\n  }\n\n  return out;\n};\n\n\n/**\n * Parses the given ContentProtection element.\n *\n * @param {!Element} elem\n * @return {?shaka.dash.ContentProtection.Element}\n * @private\n */\nshaka.dash.ContentProtection.parseElement_ = function(elem) {\n  const NS = shaka.dash.ContentProtection.CencNamespaceUri_;\n\n  /** @type {?string} */\n  let schemeUri = elem.getAttribute('schemeIdUri');\n  /** @type {?string} */\n  let keyId = shaka.util.XmlUtils.getAttributeNS(elem, NS, 'default_KID');\n  /** @type {!Array.<string>} */\n  const psshs = shaka.util.XmlUtils.findChildrenNS(elem, NS, 'pssh')\n                  .map(shaka.util.XmlUtils.getContents);\n\n  if (!schemeUri) {\n    shaka.log.error('Missing required schemeIdUri attribute on',\n                    'ContentProtection element', elem);\n    return null;\n  }\n\n  schemeUri = schemeUri.toLowerCase();\n  if (keyId) {\n    keyId = keyId.replace(/-/g, '').toLowerCase();\n    if (keyId.includes(' ')) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.MANIFEST,\n          shaka.util.Error.Code.DASH_MULTIPLE_KEY_IDS_NOT_SUPPORTED);\n    }\n  }\n\n  /** @type {!Array.<shaka.extern.InitDataOverride>} */\n  let init = [];\n  try {\n    // Try parsing PSSH data.\n    init = psshs.map((pssh) => {\n      return {\n        initDataType: 'cenc',\n        initData: shaka.util.Uint8ArrayUtils.fromBase64(pssh),\n        keyId: null,\n      };\n    });\n  } catch (e) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_PSSH_BAD_ENCODING);\n  }\n\n  return {\n    node: elem,\n    schemeUri: schemeUri,\n    keyId: keyId,\n    init: (init.length > 0 ? init : null),\n  };\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.dash.MpdUtils');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.util.AbortableOperation');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.Functional');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.StringUtils');\ngoog.require('shaka.util.XmlUtils');\n\n\n/**\n * @namespace shaka.dash.MpdUtils\n * @summary MPD processing utility functions.\n */\n\n\n/**\n * @typedef {{\n *   start: number,\n *   unscaledStart: number,\n *   end: number\n * }}\n *\n * @description\n * Defines a time range of a media segment.  Times are in seconds.\n *\n * @property {number} start\n *   The start time of the range.\n * @property {number} unscaledStart\n *   The start time of the range in representation timescale units.\n * @property {number} end\n *   The end time (exclusive) of the range.\n */\nshaka.dash.MpdUtils.TimeRange;\n\n\n/**\n * @typedef {{\n *   timescale: number,\n *   segmentDuration: ?number,\n *   startNumber: number,\n *   scaledPresentationTimeOffset: number,\n *   unscaledPresentationTimeOffset: number,\n *   timeline: Array.<shaka.dash.MpdUtils.TimeRange>\n * }}\n *\n * @description\n * Contains common information between SegmentList and SegmentTemplate items.\n *\n * @property {number} timescale\n *   The time-scale of the representation.\n * @property {?number} segmentDuration\n *   The duration of the segments in seconds, if given.\n * @property {number} startNumber\n *   The start number of the segments; 1 or greater.\n * @property {number} scaledPresentationTimeOffset\n *   The presentation time offset of the representation, in seconds.\n * @property {number} unscaledPresentationTimeOffset\n *   The presentation time offset of the representation, in timescale units.\n * @property {Array.<shaka.dash.MpdUtils.TimeRange>} timeline\n *   The timeline of the representation, if given.  Times in seconds.\n */\nshaka.dash.MpdUtils.SegmentInfo;\n\n\n/**\n * @const {string}\n * @private\n */\nshaka.dash.MpdUtils.XlinkNamespaceUri_ = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * Fills a SegmentTemplate URI template.  This function does not validate the\n * resulting URI.\n *\n * @param {string} uriTemplate\n * @param {?string} representationId\n * @param {?number} number\n * @param {?number} bandwidth\n * @param {?number} time\n * @return {string} A URI string.\n * @see ISO/IEC 23009-1:2014 section 5.3.9.4.4\n */\nshaka.dash.MpdUtils.fillUriTemplate = function(\n    uriTemplate, representationId, number, bandwidth, time) {\n  /** @type {!Object.<string, ?number|?string>} */\n  let valueTable = {\n    'RepresentationID': representationId,\n    'Number': number,\n    'Bandwidth': bandwidth,\n    'Time': time,\n  };\n\n  const re =\n      /\\$(RepresentationID|Number|Bandwidth|Time)?(?:%0([0-9]+)([diouxX]))?\\$/g;\n  let uri = uriTemplate.replace(re, function(match, name, widthString, format) {\n    if (match == '$$') {\n      return '$';\n    }\n\n    let value = valueTable[name];\n    goog.asserts.assert(value !== undefined, 'Unrecognized identifier');\n\n    // Note that |value| may be 0 or ''.\n    if (value == null) {\n      shaka.log.warning(\n          'URL template does not have an available substitution for identifier',\n          '\"' + name + '\":',\n          uriTemplate);\n      return match;\n    }\n\n    if (name == 'RepresentationID' && widthString) {\n      shaka.log.warning(\n          'URL template should not contain a width specifier for identifier',\n          '\"RepresentationID\":',\n          uriTemplate);\n      widthString = undefined;\n    }\n\n    if (name == 'Time') {\n      goog.asserts.assert(Math.abs(value - Math.round(value)) < 0.2,\n                          'Calculated $Time$ values must be close to integers');\n      value = Math.round(value);\n    }\n\n    /** @type {string} */\n    let valueString;\n    switch (format) {\n      case undefined:  // Happens if there is no format specifier.\n      case 'd':\n      case 'i':\n      case 'u':\n        valueString = value.toString();\n        break;\n      case 'o':\n        valueString = value.toString(8);\n        break;\n      case 'x':\n        valueString = value.toString(16);\n        break;\n      case 'X':\n        valueString = value.toString(16).toUpperCase();\n        break;\n      default:\n        goog.asserts.assert(false, 'Unhandled format specifier');\n        valueString = value.toString();\n        break;\n    }\n\n    // Create a padding string.\n    let width = window.parseInt(widthString, 10) || 1;\n    let paddingSize = Math.max(0, width - valueString.length);\n    let padding = (new Array(paddingSize + 1)).join('0');\n\n    return padding + valueString;\n  });\n\n  return uri;\n};\n\n\n/**\n * Expands a SegmentTimeline into an array-based timeline.  The results are in\n * seconds.\n *\n * @param {!Element} segmentTimeline\n * @param {number} timescale\n * @param {number} unscaledPresentationTimeOffset\n * @param {number} periodDuration The Period's duration in seconds.\n *   Infinity indicates that the Period continues indefinitely.\n * @return {!Array.<shaka.dash.MpdUtils.TimeRange>}\n */\nshaka.dash.MpdUtils.createTimeline =\n    function(segmentTimeline, timescale, unscaledPresentationTimeOffset,\n             periodDuration) {\n  goog.asserts.assert(\n      timescale > 0 && timescale < Infinity,\n      'timescale must be a positive, finite integer');\n  goog.asserts.assert(periodDuration > 0,\n                      'period duration must be a positive integer');\n\n  // Alias.\n  const XmlUtils = shaka.util.XmlUtils;\n\n  let timePoints = XmlUtils.findChildren(segmentTimeline, 'S');\n\n  /** @type {!Array.<shaka.dash.MpdUtils.TimeRange>} */\n  let timeline = [];\n  let lastEndTime = 0;\n\n  for (let i = 0; i < timePoints.length; ++i) {\n    let timePoint = timePoints[i];\n    let t = XmlUtils.parseAttr(timePoint, 't', XmlUtils.parseNonNegativeInt);\n    let d = XmlUtils.parseAttr(timePoint, 'd', XmlUtils.parseNonNegativeInt);\n    let r = XmlUtils.parseAttr(timePoint, 'r', XmlUtils.parseInt);\n\n    // Adjust the start time to account for the presentation time offset.\n    if (t != null) {\n      t -= unscaledPresentationTimeOffset;\n    }\n\n    if (!d) {\n      shaka.log.warning(\n          '\"S\" element must have a duration:',\n          'ignoring the remaining \"S\" elements.',\n          timePoint);\n      return timeline;\n    }\n\n    let startTime = t != null ? t : lastEndTime;\n\n    let repeat = r || 0;\n    if (repeat < 0) {\n      if (i + 1 < timePoints.length) {\n        let nextTimePoint = timePoints[i + 1];\n        let nextStartTime = XmlUtils.parseAttr(\n            nextTimePoint, 't', XmlUtils.parseNonNegativeInt);\n        if (nextStartTime == null) {\n          shaka.log.warning(\n              'An \"S\" element cannot have a negative repeat',\n              'if the next \"S\" element does not have a valid start time:',\n              'ignoring the remaining \"S\" elements.',\n              timePoint);\n          return timeline;\n        } else if (startTime >= nextStartTime) {\n          shaka.log.warning(\n              'An \"S\" element cannot have a negative repeat',\n              'if its start time exceeds the next \"S\" element\\'s start time:',\n              'ignoring the remaining \"S\" elements.',\n              timePoint);\n          return timeline;\n        }\n        repeat = Math.ceil((nextStartTime - startTime) / d) - 1;\n      } else {\n        if (periodDuration == Infinity) {\n          // The DASH spec. actually allows the last \"S\" element to have a\n          // negative repeat value even when the Period has an infinite\n          // duration.  No one uses this feature and no one ever should, ever.\n          shaka.log.warning(\n              'The last \"S\" element cannot have a negative repeat',\n              'if the Period has an infinite duration:',\n              'ignoring the last \"S\" element.',\n              timePoint);\n          return timeline;\n        } else if (startTime / timescale >= periodDuration) {\n          shaka.log.warning(\n              'The last \"S\" element cannot have a negative repeat',\n              'if its start time exceeds the Period\\'s duration:',\n              'igoring the last \"S\" element.',\n              timePoint);\n          return timeline;\n        }\n        repeat = Math.ceil((periodDuration * timescale - startTime) / d) - 1;\n      }\n    }\n\n    // The end of the last segment may be before the start of the current\n    // segment (a gap) or after the start of the current segment (an overlap).\n    // If there is a gap/overlap then stretch/compress the end of the last\n    // segment to the start of the current segment.\n    //\n    // Note: it is possible to move the start of the current segment to the\n    // end of the last segment, but this would complicate the computation of\n    // the $Time$ placeholder later on.\n    if ((timeline.length > 0) && (startTime != lastEndTime)) {\n      let delta = startTime - lastEndTime;\n\n      if (Math.abs(delta / timescale) >=\n          shaka.util.ManifestParserUtils.GAP_OVERLAP_TOLERANCE_SECONDS) {\n        shaka.log.warning(\n            'SegmentTimeline contains a large gap/overlap:',\n            'the content may have errors in it.',\n            timePoint);\n      }\n\n      timeline[timeline.length - 1].end = startTime / timescale;\n    }\n\n    for (let j = 0; j <= repeat; ++j) {\n      let endTime = startTime + d;\n      let item = {\n        start: startTime / timescale,\n        end: endTime / timescale,\n        unscaledStart: startTime,\n      };\n      timeline.push(item);\n\n      startTime = endTime;\n      lastEndTime = endTime;\n    }\n  }\n\n  return timeline;\n};\n\n\n/**\n * Parses common segment info for SegmentList and SegmentTemplate.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {function(?shaka.dash.DashParser.InheritanceFrame):Element} callback\n *   Gets the element that contains the segment info.\n * @return {shaka.dash.MpdUtils.SegmentInfo}\n */\nshaka.dash.MpdUtils.parseSegmentInfo = function(context, callback) {\n  goog.asserts.assert(\n      callback(context.representation),\n      'There must be at least one element of the given type.');\n  const MpdUtils = shaka.dash.MpdUtils;\n  const XmlUtils = shaka.util.XmlUtils;\n\n  let timescaleStr = MpdUtils.inheritAttribute(context, callback, 'timescale');\n  let timescale = 1;\n  if (timescaleStr) {\n    timescale = XmlUtils.parsePositiveInt(timescaleStr) || 1;\n  }\n\n  let durationStr = MpdUtils.inheritAttribute(context, callback, 'duration');\n  let segmentDuration = XmlUtils.parsePositiveInt(durationStr || '');\n  if (segmentDuration) {\n    segmentDuration /= timescale;\n  }\n\n  let startNumberStr =\n      MpdUtils.inheritAttribute(context, callback, 'startNumber');\n  let unscaledPresentationTimeOffset =\n      Number(MpdUtils.inheritAttribute(context, callback,\n                                       'presentationTimeOffset')) || 0;\n  let startNumber = XmlUtils.parseNonNegativeInt(startNumberStr || '');\n  if (startNumberStr == null || startNumber == null) {\n    startNumber = 1;\n  }\n\n  let timelineNode =\n      MpdUtils.inheritChild(context, callback, 'SegmentTimeline');\n  /** @type {Array.<shaka.dash.MpdUtils.TimeRange>} */\n  let timeline = null;\n  if (timelineNode) {\n    timeline = MpdUtils.createTimeline(\n        timelineNode, timescale, unscaledPresentationTimeOffset,\n        context.periodInfo.duration || Infinity);\n  }\n\n  let scaledPresentationTimeOffset =\n      (unscaledPresentationTimeOffset / timescale) || 0;\n  return {\n    timescale: timescale,\n    segmentDuration: segmentDuration,\n    startNumber: startNumber,\n    scaledPresentationTimeOffset: scaledPresentationTimeOffset,\n    unscaledPresentationTimeOffset: unscaledPresentationTimeOffset,\n    timeline: timeline,\n  };\n};\n\n\n/**\n * Searches the inheritance for a Segment* with the given attribute.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {function(?shaka.dash.DashParser.InheritanceFrame):Element} callback\n *   Gets the Element that contains the attribute to inherit.\n * @param {string} attribute\n * @return {?string}\n */\nshaka.dash.MpdUtils.inheritAttribute = function(context, callback, attribute) {\n  const Functional = shaka.util.Functional;\n  goog.asserts.assert(\n      callback(context.representation),\n      'There must be at least one element of the given type');\n\n  /** @type {!Array.<!Element>} */\n  let nodes = [\n    callback(context.representation),\n    callback(context.adaptationSet),\n    callback(context.period),\n  ].filter(Functional.isNotNull);\n\n  return nodes\n      .map(function(s) { return s.getAttribute(attribute); })\n      .reduce(function(all, part) { return all || part; });\n};\n\n\n/**\n * Searches the inheritance for a Segment* with the given child.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {function(?shaka.dash.DashParser.InheritanceFrame):Element} callback\n *   Gets the Element that contains the child to inherit.\n * @param {string} child\n * @return {Element}\n */\nshaka.dash.MpdUtils.inheritChild = function(context, callback, child) {\n  const Functional = shaka.util.Functional;\n  goog.asserts.assert(\n      callback(context.representation),\n      'There must be at least one element of the given type');\n\n  /** @type {!Array.<!Element>} */\n  let nodes = [\n    callback(context.representation),\n    callback(context.adaptationSet),\n    callback(context.period),\n  ].filter(Functional.isNotNull);\n\n  const XmlUtils = shaka.util.XmlUtils;\n  return nodes\n      .map(function(s) { return XmlUtils.findChild(s, child); })\n      .reduce(function(all, part) { return all || part; });\n};\n\n\n/**\n * Parse some UTF8 data and return the resulting root element if\n * it was valid XML.\n * @param {ArrayBuffer} data\n * @param {string} expectedRootElemName\n * @return {Element|undefined}\n */\nshaka.dash.MpdUtils.parseXml = function(data, expectedRootElemName) {\n  let parser = new DOMParser();\n  let rootElem;\n  let xml;\n  try {\n    let string = shaka.util.StringUtils.fromUTF8(data);\n    xml = parser.parseFromString(string, 'text/xml');\n  } catch (exception) {}\n  if (xml) {\n    // The top-level element in the loaded xml should have the\n    // same type as the element linking.\n    if (xml.documentElement.tagName == expectedRootElemName) {\n      rootElem = xml.documentElement;\n    }\n  }\n  if (rootElem && rootElem.getElementsByTagName('parsererror').length > 0) {\n    return null;\n  }  // It had a parser error in it.\n\n  return rootElem;\n};\n\n\n/**\n * Follow the xlink link contained in the given element.\n * It also strips the xlink properties off of the element,\n * even if the process fails.\n *\n * @param {!Element} element\n * @param {!shaka.extern.RetryParameters} retryParameters\n * @param {boolean} failGracefully\n * @param {string} baseUri\n * @param {!shaka.net.NetworkingEngine} networkingEngine\n * @param {number} linkDepth\n * @return {!shaka.util.AbortableOperation.<!Element>}\n * @private\n */\nshaka.dash.MpdUtils.handleXlinkInElement_ =\n    function(element, retryParameters, failGracefully, baseUri,\n             networkingEngine, linkDepth) {\n  const MpdUtils = shaka.dash.MpdUtils;\n  const XmlUtils = shaka.util.XmlUtils;\n  const Error = shaka.util.Error;\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n  const NS = MpdUtils.XlinkNamespaceUri_;\n\n  let xlinkHref = XmlUtils.getAttributeNS(element, NS, 'href');\n  let xlinkActuate =\n      XmlUtils.getAttributeNS(element, NS, 'actuate') || 'onRequest';\n\n  // Remove the xlink properties, so it won't download again\n  // when re-processed.\n  for (let i = 0; i < element.attributes.length; i++) {\n    let attribute = element.attributes[i];\n    if (attribute.namespaceURI == NS) {\n      element.removeAttributeNS(attribute.namespaceURI, attribute.localName);\n      i -= 1;\n    }\n  }\n\n  if (linkDepth >= 5) {\n    return shaka.util.AbortableOperation.failed(new Error(\n        Error.Severity.CRITICAL, Error.Category.MANIFEST,\n        Error.Code.DASH_XLINK_DEPTH_LIMIT));\n  }\n\n  if (xlinkActuate != 'onLoad') {\n    // Only xlink:actuate=\"onLoad\" is supported.\n    // When no value is specified, the assumed value is \"onRequest\".\n    return shaka.util.AbortableOperation.failed(new Error(\n        Error.Severity.CRITICAL, Error.Category.MANIFEST,\n        Error.Code.DASH_UNSUPPORTED_XLINK_ACTUATE));\n  }\n\n  // Resolve the xlink href, in case it's a relative URL.\n  let uris = ManifestParserUtils.resolveUris([baseUri], [xlinkHref]);\n\n  // Load in the linked elements.\n  const requestType = shaka.net.NetworkingEngine.RequestType.MANIFEST;\n  let request = shaka.net.NetworkingEngine.makeRequest(\n      uris, retryParameters);\n\n  let requestOperation = networkingEngine.request(requestType, request);\n  // The interface is abstract, but we know it was implemented with the\n  // more capable internal class.\n  goog.asserts.assert(requestOperation instanceof shaka.util.AbortableOperation,\n                      'Unexpected implementation of IAbortableOperation!');\n  // Satisfy the compiler with a cast.\n  let networkOperation =\n      /** @type {!shaka.util.AbortableOperation.<shaka.extern.Response>} */(\n          requestOperation);\n\n  // Chain onto that operation.\n  return networkOperation.chain((response) => {\n    // This only supports the case where the loaded xml has a single\n    // top-level element.  If there are multiple roots, it will be rejected.\n    let rootElem = MpdUtils.parseXml(response.data, element.tagName);\n    if (!rootElem) {\n      // It was not valid XML.\n      return shaka.util.AbortableOperation.failed(new Error(\n          Error.Severity.CRITICAL, Error.Category.MANIFEST,\n          Error.Code.DASH_INVALID_XML, xlinkHref));\n    }\n\n    // Now that there is no other possibility of the process erroring,\n    // the element can be changed further.\n\n    // Remove the current contents of the node.\n    while (element.childNodes.length) {\n      element.removeChild(element.childNodes[0]);\n    }\n\n    // Move the children of the loaded xml into the current element.\n    while (rootElem.childNodes.length) {\n      let child = rootElem.childNodes[0];\n      rootElem.removeChild(child);\n      element.appendChild(child);\n    }\n\n    // Move the attributes of the loaded xml into the current element.\n    for (let i = 0; i < rootElem.attributes.length; i++) {\n      let attribute = rootElem.attributes[i].nodeName;\n      let attributeValue = rootElem.getAttribute(attribute);\n      element.setAttribute(attribute, attributeValue);\n    }\n\n    return shaka.dash.MpdUtils.processXlinks(\n        element, retryParameters, failGracefully, uris[0], networkingEngine,\n        linkDepth + 1);\n  });\n};\n\n\n/**\n * Filter the contents of a node recursively, replacing xlink links\n * with their associated online data.\n *\n * @param {!Element} element\n * @param {!shaka.extern.RetryParameters} retryParameters\n * @param {boolean} failGracefully\n * @param {string} baseUri\n * @param {!shaka.net.NetworkingEngine} networkingEngine\n * @param {number=} linkDepth, default set to 0\n * @return {!shaka.util.AbortableOperation.<!Element>}\n */\nshaka.dash.MpdUtils.processXlinks =\n    function(element, retryParameters, failGracefully, baseUri,\n             networkingEngine, linkDepth = 0) {\n  const MpdUtils = shaka.dash.MpdUtils;\n  const XmlUtils = shaka.util.XmlUtils;\n  const NS = MpdUtils.XlinkNamespaceUri_;\n\n  if (XmlUtils.getAttributeNS(element, NS, 'href')) {\n    let handled = MpdUtils.handleXlinkInElement_(\n        element, retryParameters, failGracefully, baseUri,\n        networkingEngine, linkDepth);\n    if (failGracefully) {\n      // Catch any error and go on.\n      handled = handled.chain(undefined, (error) => {\n        // handleXlinkInElement_ strips the xlink properties off of the element\n        // even if it fails, so calling processXlinks again will handle whatever\n        // contents the element natively has.\n        return MpdUtils.processXlinks(element, retryParameters, failGracefully,\n                                      baseUri, networkingEngine,\n                                      linkDepth);\n      });\n    }\n    return handled;\n  }\n\n  let childOperations = [];\n  for (let i = 0; i < element.childNodes.length; i++) {\n    let child = element.childNodes[i];\n    if (child instanceof Element) {\n      const resolveToZeroString = 'urn:mpeg:dash:resolve-to-zero:2013';\n      if (XmlUtils.getAttributeNS(child, NS, 'href') == resolveToZeroString) {\n        // This is a 'resolve to zero' code; it means the element should\n        // be removed, as specified by the mpeg-dash rules for xlink.\n        element.removeChild(child);\n        i -= 1;\n      } else if (child.tagName != 'SegmentTimeline') {\n        // Don't recurse into a SegmentTimeline since xlink attributes aren't\n        // valid in there and looking at each segment can take a long time with\n        // larger manifests.\n\n        // Replace the child with its processed form.\n        childOperations.push(shaka.dash.MpdUtils.processXlinks(\n            /** @type {!Element} */ (child), retryParameters, failGracefully,\n            baseUri, networkingEngine, linkDepth));\n      }\n    }\n  }\n\n  return shaka.util.AbortableOperation.all(childOperations).chain(() => {\n    return element;\n  });\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.InitSegmentReference');\ngoog.provide('shaka.media.SegmentReference');\n\ngoog.require('goog.asserts');\n\n\n/**\n * Creates an InitSegmentReference, which provides the location to an\n * initialization segment.\n *\n * @param {function():!Array.<string>} uris A function that creates the URIs of\n *   the resource containing the segment.\n * @param {number} startByte The offset from the start of the resource to the\n *   start of the segment.\n * @param {?number} endByte The offset from the start of the resource to the\n *   end of the segment, inclusive.  A value of null indicates that the segment\n *   extends to the end of the resource.\n *\n * @constructor\n * @struct\n * @export\n */\nshaka.media.InitSegmentReference = function(uris, startByte, endByte) {\n  /** @type {function():!Array.<string>} */\n  this.getUris = uris;\n\n  /** @const {number} */\n  this.startByte = startByte;\n\n  /** @const {?number} */\n  this.endByte = endByte;\n};\n\n\n/**\n * Creates the URIs of the resource containing the segment.\n *\n * @return {!Array.<string>}\n * @export\n */\nshaka.media.InitSegmentReference.prototype.createUris = function() {\n  return this.getUris();\n};\n\n\n/**\n * Returns the offset from the start of the resource to the\n * start of the segment.\n *\n * @return {number}\n * @export\n */\nshaka.media.InitSegmentReference.prototype.getStartByte = function() {\n  return this.startByte;\n};\n\n\n/**\n * Returns the offset from the start of the resource to the end of the segment,\n * inclusive.  A value of null indicates that the segment extends to the end of\n * the resource.\n *\n * @return {?number}\n * @export\n */\nshaka.media.InitSegmentReference.prototype.getEndByte = function() {\n  return this.endByte;\n};\n\n\n/**\n * Creates a SegmentReference, which provides the start time, end time, and\n * location to a media segment.\n *\n * @param {number} position The segment's position within a particular Period.\n *   The following should hold true between any two SegmentReferences from the\n *   same Period, r1 and r2:\n *   IF r2.position > r1.position THEN\n *     [ (r2.startTime > r1.startTime) OR\n *       (r2.startTime == r1.startTime AND r2.endTime >= r1.endTime) ]\n * @param {number} startTime The segment's start time in seconds, relative to\n *   the start of a particular Period.\n * @param {number} endTime The segment's end time in seconds, relative to\n *   the start of a particular Period.  The segment ends the instant before\n *   this time, so |endTime| must be strictly greater than |startTime|.\n * @param {function():!Array.<string>} uris\n *   A function that creates the URIs of the resource containing the segment.\n * @param {number} startByte The offset from the start of the resource to the\n *   start of the segment.\n * @param {?number} endByte The offset from the start of the resource to the\n *   end of the segment, inclusive.  A value of null indicates that the segment\n *   extends to the end of the resource.\n *\n * @constructor\n * @struct\n * @export\n */\nshaka.media.SegmentReference = function(\n    position, startTime, endTime, uris, startByte, endByte) {\n  goog.asserts.assert(startTime < endTime,\n                      'startTime must be less than endTime');\n  goog.asserts.assert((startByte < endByte) || (endByte == null),\n                      'startByte must be < endByte');\n  /** @const {number} */\n  this.position = position;\n\n  /** @type {number} */\n  this.startTime = startTime;\n\n  /** @type {number} */\n  this.endTime = endTime;\n\n  /** @type {function():!Array.<string>} */\n  this.getUris = uris;\n\n  /** @const {number} */\n  this.startByte = startByte;\n\n  /** @const {?number} */\n  this.endByte = endByte;\n};\n\n\n/**\n * Returns the segment's position within a particular Period.\n *\n * @return {number} The segment's position.\n * @export\n */\nshaka.media.SegmentReference.prototype.getPosition = function() {\n  return this.position;\n};\n\n\n/**\n * Returns the segment's start time in seconds, relative to\n * the start of a particular Period.\n *\n * @return {number}\n * @export\n */\nshaka.media.SegmentReference.prototype.getStartTime = function() {\n  return this.startTime;\n};\n\n\n/**\n * Returns the segment's end time in seconds, relative to\n * the start of a particular Period.\n *\n * @return {number}\n * @export\n */\nshaka.media.SegmentReference.prototype.getEndTime = function() {\n  return this.endTime;\n};\n\n\n/**\n * Creates the URIs of the resource containing the segment.\n *\n * @return {!Array.<string>}\n * @export\n */\nshaka.media.SegmentReference.prototype.createUris = function() {\n  return this.getUris();\n};\n\n\n/**\n * Returns the offset from the start of the resource to the\n * start of the segment.\n *\n * @return {number}\n * @export\n */\nshaka.media.SegmentReference.prototype.getStartByte = function() {\n  return this.startByte;\n};\n\n\n/**\n * Returns the offset from the start of the resource to the end of the segment,\n * inclusive.  A value of null indicates that the segment extends to the end of\n * the resource.\n *\n * @return {?number}\n * @export\n */\nshaka.media.SegmentReference.prototype.getEndByte = function() {\n  return this.endByte;\n};\n\n\n/**\n * A convenient typedef for when either type of reference is acceptable.\n *\n * @typedef {shaka.media.InitSegmentReference|shaka.media.SegmentReference}\n */\nshaka.media.AnySegmentReference;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.DataViewReader');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.StringUtils');\n\n\n/**\n * Creates a DataViewReader, which abstracts a DataView object.\n *\n * @param {!DataView} dataView The DataView.\n * @param {shaka.util.DataViewReader.Endianness} endianness The endianness.\n *\n * @struct\n * @constructor\n * @export\n */\nshaka.util.DataViewReader = function(dataView, endianness) {\n  /** @private {!DataView} */\n  this.dataView_ = dataView;\n\n  /** @private {boolean} */\n  this.littleEndian_ =\n      endianness == shaka.util.DataViewReader.Endianness.LITTLE_ENDIAN;\n\n  /** @private {number} */\n  this.position_ = 0;\n};\n\n\n/**\n * Endianness.\n * @enum {number}\n * @export\n */\nshaka.util.DataViewReader.Endianness = {\n  BIG_ENDIAN: 0,\n  LITTLE_ENDIAN: 1,\n};\n\n\n/**\n * @return {boolean} True if the reader has more data, false otherwise.\n * @export\n */\nshaka.util.DataViewReader.prototype.hasMoreData = function() {\n  return this.position_ < this.dataView_.byteLength;\n};\n\n\n/**\n * Gets the current byte position.\n * @return {number}\n * @export\n */\nshaka.util.DataViewReader.prototype.getPosition = function() {\n  return this.position_;\n};\n\n\n/**\n * Gets the byte length of the DataView.\n * @return {number}\n * @export\n */\nshaka.util.DataViewReader.prototype.getLength = function() {\n  return this.dataView_.byteLength;\n};\n\n\n/**\n * Reads an unsigned 8 bit integer, and advances the reader.\n * @return {number} The integer.\n * @throws {shaka.util.Error} when reading past the end of the data view.\n * @export\n */\nshaka.util.DataViewReader.prototype.readUint8 = function() {\n  try {\n    let value = this.dataView_.getUint8(this.position_);\n    this.position_ += 1;\n    return value;\n  } catch (exception) {\n    this.throwOutOfBounds_();\n  }\n};\n\n\n/**\n * Reads an unsigned 16 bit integer, and advances the reader.\n * @return {number} The integer.\n * @throws {shaka.util.Error} when reading past the end of the data view.\n * @export\n */\nshaka.util.DataViewReader.prototype.readUint16 = function() {\n  try {\n    let value = this.dataView_.getUint16(this.position_, this.littleEndian_);\n    this.position_ += 2;\n    return value;\n  } catch (exception) {\n    this.throwOutOfBounds_();\n  }\n};\n\n\n/**\n * Reads an unsigned 32 bit integer, and advances the reader.\n * @return {number} The integer.\n * @throws {shaka.util.Error} when reading past the end of the data view.\n * @export\n */\nshaka.util.DataViewReader.prototype.readUint32 = function() {\n  try {\n    let value = this.dataView_.getUint32(this.position_, this.littleEndian_);\n    this.position_ += 4;\n    return value;\n  } catch (exception) {\n    this.throwOutOfBounds_();\n  }\n};\n\n\n/**\n * Reads a signed 32 bit integer, and advances the reader.\n * @return {number} The integer.\n * @throws {shaka.util.Error} when reading past the end of the data view.\n * @export\n */\nshaka.util.DataViewReader.prototype.readInt32 = function() {\n  try {\n    let value = this.dataView_.getInt32(this.position_, this.littleEndian_);\n    this.position_ += 4;\n    return value;\n  } catch (exception) {\n    this.throwOutOfBounds_();\n  }\n};\n\n\n/**\n * Reads an unsigned 64 bit integer, and advances the reader.\n * @return {number} The integer.\n * @throws {shaka.util.Error} when reading past the end of the data view or\n *   when reading an integer too large to store accurately in JavaScript.\n * @export\n */\nshaka.util.DataViewReader.prototype.readUint64 = function() {\n  let low;\n  let high;\n\n  try {\n    if (this.littleEndian_) {\n      low = this.dataView_.getUint32(this.position_, true);\n      high = this.dataView_.getUint32(this.position_ + 4, true);\n    } else {\n      high = this.dataView_.getUint32(this.position_, false);\n      low = this.dataView_.getUint32(this.position_ + 4, false);\n    }\n  } catch (exception) {\n    this.throwOutOfBounds_();\n  }\n\n  if (high > 0x1FFFFF) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.JS_INTEGER_OVERFLOW);\n  }\n\n  this.position_ += 8;\n\n  // NOTE: This is subtle, but in JavaScript you can't shift left by 32 and get\n  // the full range of 53-bit values possible.  You must multiply by 2^32.\n  return (high * Math.pow(2, 32)) + low;\n};\n\n\n/**\n * Reads the specified number of raw bytes.\n * @param {number} bytes The number of bytes to read.\n * @return {!Uint8Array}\n * @throws {shaka.util.Error} when reading past the end of the data view.\n * @export\n */\nshaka.util.DataViewReader.prototype.readBytes = function(bytes) {\n  goog.asserts.assert(bytes >= 0, 'Bad call to DataViewReader.readBytes');\n  if (this.position_ + bytes > this.dataView_.byteLength) {\n    this.throwOutOfBounds_();\n  }\n\n  let value = new Uint8Array(\n      this.dataView_.buffer, this.dataView_.byteOffset + this.position_, bytes);\n  this.position_ += bytes;\n  return new Uint8Array(value);\n};\n\n\n/**\n * Skips the specified number of bytes.\n * @param {number} bytes The number of bytes to skip.\n * @throws {shaka.util.Error} when skipping past the end of the data view.\n * @export\n */\nshaka.util.DataViewReader.prototype.skip = function(bytes) {\n  goog.asserts.assert(bytes >= 0, 'Bad call to DataViewReader.skip');\n  if (this.position_ + bytes > this.dataView_.byteLength) {\n    this.throwOutOfBounds_();\n  }\n  this.position_ += bytes;\n};\n\n\n/**\n * Rewinds the specified number of bytes.\n * @param {number} bytes The number of bytes to rewind.\n * @throws {shaka.util.Error} when rewinding past the beginning of the data\n *   view.\n * @export\n */\nshaka.util.DataViewReader.prototype.rewind = function(bytes) {\n  goog.asserts.assert(bytes >= 0, 'Bad call to DataViewReader.rewind');\n  if (this.position_ < bytes) {\n    this.throwOutOfBounds_();\n  }\n  this.position_ -= bytes;\n};\n\n\n/**\n * Seeks to a specified position.\n * @param {number} position The desired byte position within the DataView.\n * @throws {shaka.util.Error} when seeking outside the range of the data view.\n * @export\n */\nshaka.util.DataViewReader.prototype.seek = function(position) {\n  goog.asserts.assert(position >= 0, 'Bad call to DataViewReader.seek');\n  if (position < 0 || position > this.dataView_.byteLength) {\n    this.throwOutOfBounds_();\n  }\n  this.position_ = position;\n};\n\n\n/**\n * Keeps reading until it reaches a byte that equals to zero.  The text is\n * assumed to be UTF-8.\n * @return {string}\n * @export\n */\nshaka.util.DataViewReader.prototype.readTerminatedString = function() {\n  let start = this.position_;\n  while (this.hasMoreData()) {\n    let value = this.dataView_.getUint8(this.position_);\n    if (value == 0) break;\n    this.position_ += 1;\n  }\n\n  let ret = new Uint8Array(\n      this.dataView_.buffer, this.dataView_.byteOffset + start,\n      this.position_ - start);\n  // Skip string termination.\n  this.position_ += 1;\n  return shaka.util.StringUtils.fromUTF8(ret);\n};\n\n\n/**\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.util.DataViewReader.prototype.throwOutOfBounds_ = function() {\n  throw new shaka.util.Error(\n      shaka.util.Error.Severity.CRITICAL,\n      shaka.util.Error.Category.MEDIA,\n      shaka.util.Error.Code.BUFFER_READ_OUT_OF_BOUNDS);\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Mp4Parser');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.util.DataViewReader');\n\n\n/**\n * Create a new MP4 Parser\n * @struct\n * @constructor\n * @export\n */\nshaka.util.Mp4Parser = function() {\n  /** @private {!Object.<number, shaka.util.Mp4Parser.BoxType_>} */\n  this.headers_ = [];\n\n  /** @private {!Object.<number, !shaka.util.Mp4Parser.CallbackType>} */\n  this.boxDefinitions_ = [];\n\n  /** @private {boolean} */\n  this.done_ = false;\n};\n\n\n/**\n * @typedef {function(!shaka.extern.ParsedBox)}\n * @exportInterface\n */\nshaka.util.Mp4Parser.CallbackType;\n\n\n/**\n * An enum used to track the type of box so that the correct values can be\n * read from the header.\n *\n * @enum {number}\n * @private\n */\nshaka.util.Mp4Parser.BoxType_ = {\n  BASIC_BOX: 0,\n  FULL_BOX: 1,\n};\n\n\n/**\n * Declare a box type as a Box.\n *\n * @param {string} type\n * @param {!shaka.util.Mp4Parser.CallbackType} definition\n * @return {!shaka.util.Mp4Parser}\n * @export\n */\nshaka.util.Mp4Parser.prototype.box = function(type, definition) {\n  let typeCode = shaka.util.Mp4Parser.typeFromString_(type);\n  this.headers_[typeCode] = shaka.util.Mp4Parser.BoxType_.BASIC_BOX;\n  this.boxDefinitions_[typeCode] = definition;\n  return this;\n};\n\n\n/**\n * Declare a box type as a Full Box.\n *\n * @param {string} type\n * @param {!shaka.util.Mp4Parser.CallbackType} definition\n * @return {!shaka.util.Mp4Parser}\n * @export\n */\nshaka.util.Mp4Parser.prototype.fullBox = function(type, definition) {\n  let typeCode = shaka.util.Mp4Parser.typeFromString_(type);\n  this.headers_[typeCode] = shaka.util.Mp4Parser.BoxType_.FULL_BOX;\n  this.boxDefinitions_[typeCode] = definition;\n  return this;\n};\n\n\n/**\n * Stop parsing.  Useful for extracting information from partial segments and\n * avoiding an out-of-bounds error once you find what you are looking for.\n *\n * @export\n */\nshaka.util.Mp4Parser.prototype.stop = function() {\n  this.done_ = true;\n};\n\n\n/**\n * Parse the given data using the added callbacks.\n *\n * @param {!BufferSource} data\n * @param {boolean=} partialOkay If true, allow reading partial payloads\n *   from some boxes. If the goal is a child box, we can sometimes find it\n *   without enough data to find all child boxes.\n * @export\n */\nshaka.util.Mp4Parser.prototype.parse = function(data, partialOkay) {\n  let wrapped = new Uint8Array(data);\n  let reader = new shaka.util.DataViewReader(\n      new DataView(wrapped.buffer, wrapped.byteOffset, wrapped.byteLength),\n      shaka.util.DataViewReader.Endianness.BIG_ENDIAN);\n\n  this.done_ = false;\n  while (reader.hasMoreData() && !this.done_) {\n    this.parseNext(0, reader, partialOkay);\n  }\n};\n\n\n/**\n * Parse the next box on the current level.\n *\n * @param {number} absStart The absolute start position in the original\n *   byte array.\n * @param {!shaka.util.DataViewReader} reader\n * @param {boolean=} partialOkay If true, allow reading partial payloads\n *   from some boxes. If the goal is a child box, we can sometimes find it\n *   without enough data to find all child boxes.\n * @export\n */\nshaka.util.Mp4Parser.prototype.parseNext =\n    function(absStart, reader, partialOkay) {\n  let start = reader.getPosition();\n\n  let size = reader.readUint32();\n  let type = reader.readUint32();\n  let name = shaka.util.Mp4Parser.typeToString(type);\n  shaka.log.v2('Parsing MP4 box', name);\n\n  switch (size) {\n    case 0:\n      size = reader.getLength() - start;\n      break;\n    case 1:\n      size = reader.readUint64();\n      break;\n  }\n\n  let boxDefinition = this.boxDefinitions_[type];\n\n  if (boxDefinition) {\n    let version = null;\n    let flags = null;\n\n    if (this.headers_[type] == shaka.util.Mp4Parser.BoxType_.FULL_BOX) {\n      let versionAndFlags = reader.readUint32();\n      version = versionAndFlags >>> 24;\n      flags = versionAndFlags & 0xFFFFFF;\n    }\n\n    // Read the whole payload so that the current level can be safely read\n    // regardless of how the payload is parsed.\n    let end = start + size;\n    if (partialOkay && end > reader.getLength()) {\n      // For partial reads, truncate the payload if we must.\n      end = reader.getLength();\n    }\n    let payloadSize = end - reader.getPosition();\n    let payload =\n        (payloadSize > 0) ? reader.readBytes(payloadSize) : new Uint8Array(0);\n\n    let payloadReader = new shaka.util.DataViewReader(\n        new DataView(payload.buffer, payload.byteOffset, payload.byteLength),\n        shaka.util.DataViewReader.Endianness.BIG_ENDIAN);\n\n    /** @type {shaka.extern.ParsedBox} */\n    let box = {\n      parser: this,\n      partialOkay: partialOkay || false,\n      version: version,\n      flags: flags,\n      reader: payloadReader,\n      size: size,\n      start: start + absStart,\n    };\n\n    boxDefinition(box);\n  } else {\n    // Move the read head to be at the end of the box.\n    // If the box is longer than the remaining parts of the file, e.g. the\n    // mp4 is improperly formatted, or this was a partial range request that\n    // ended in the middle of a box, just skip to the end.\n    const skipLength = Math.min(\n        start + size - reader.getPosition(),\n        reader.getLength() - reader.getPosition());\n    reader.skip(skipLength);\n  }\n};\n\n\n/**\n * A callback that tells the Mp4 parser to treat the body of a box as a series\n * of boxes. The number of boxes is limited by the size of the parent box.\n *\n * @param {!shaka.extern.ParsedBox} box\n * @export\n */\nshaka.util.Mp4Parser.children = function(box) {\n  while (box.reader.hasMoreData() && !box.parser.done_) {\n    box.parser.parseNext(box.start, box.reader, box.partialOkay);\n  }\n};\n\n\n/**\n * A callback that tells the Mp4 parser to treat the body of a box as a sample\n * description. A sample description box has a fixed number of children. The\n * number of children is represented by a 4 byte unsigned integer. Each child\n * is a box.\n *\n * @param {!shaka.extern.ParsedBox} box\n * @export\n */\nshaka.util.Mp4Parser.sampleDescription = function(box) {\n  for (let count = box.reader.readUint32();\n       count > 0 && !box.parser.done_;\n       count -= 1) {\n    box.parser.parseNext(box.start, box.reader, box.partialOkay);\n  }\n};\n\n\n/**\n * Create a callback that tells the Mp4 parser to treat the body of a box as a\n * binary blob and to parse the body's contents using the provided callback.\n *\n * @param {function(!Uint8Array)} callback\n * @return {!shaka.util.Mp4Parser.CallbackType}\n * @export\n */\nshaka.util.Mp4Parser.allData = function(callback) {\n  return function(box) {\n    let all = box.reader.getLength() - box.reader.getPosition();\n    callback(box.reader.readBytes(all));\n  };\n};\n\n\n/**\n * Convert an ascii string name to the integer type for a box.\n *\n * @param {string} name The name of the box. The name must be four\n *                      characters long.\n * @return {number}\n * @private\n */\nshaka.util.Mp4Parser.typeFromString_ = function(name) {\n  goog.asserts.assert(\n      name.length == 4,\n      'Mp4 box names must be 4 characters long');\n\n  let code = 0;\n  for (let i = 0; i < name.length; i++) {\n    code = (code << 8) | name.charCodeAt(i);\n  }\n  return code;\n};\n\n\n/**\n * Convert an integer type from a box into an ascii string name.\n * Useful for debugging.\n *\n * @param {number} type The type of the box, a uint32.\n * @return {string}\n * @export\n */\nshaka.util.Mp4Parser.typeToString = function(type) {\n  let name = String.fromCharCode(\n      (type >> 24) & 0xff,\n      (type >> 16) & 0xff,\n      (type >> 8) & 0xff,\n      type & 0xff);\n  return name;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.Mp4SegmentIndexParser');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.media.SegmentReference');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.Mp4Parser');\n\n\n/**\n * Parses SegmentReferences from an ISO BMFF SIDX structure.\n * @param {!ArrayBuffer} sidxData The MP4's container's SIDX.\n * @param {number} sidxOffset The SIDX's offset, in bytes, from the start of\n *   the MP4 container.\n * @param {!Array.<string>} uris The possible locations of the MP4 file that\n *   contains the segments.\n * @param {number} scaledPresentationTimeOffset\n * @return {!Array.<!shaka.media.SegmentReference>}\n * @throws {shaka.util.Error}\n */\nshaka.media.Mp4SegmentIndexParser = function(\n    sidxData, sidxOffset, uris, scaledPresentationTimeOffset) {\n  const Mp4SegmentIndexParser = shaka.media.Mp4SegmentIndexParser;\n\n  let references;\n\n  let parser = new shaka.util.Mp4Parser()\n      .fullBox('sidx', function(box) {\n        references = Mp4SegmentIndexParser.parseSIDX_(\n            sidxOffset,\n            scaledPresentationTimeOffset,\n            uris,\n            box);\n      });\n\n  if (sidxData) {\n    parser.parse(sidxData);\n  }\n\n  if (references) {\n    return references;\n  } else {\n    shaka.log.error('Invalid box type, expected \"sidx\".');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.MP4_SIDX_WRONG_BOX_TYPE);\n  }\n};\n\n\n/**\n * Parse a SIDX box from the given reader.\n *\n * @param {number} sidxOffset\n * @param {number} scaledPresentationTimeOffset\n * @param {!Array.<string>} uris The possible locations of the MP4 file that\n *   contains the segments.\n * @param {!shaka.extern.ParsedBox} box\n * @return {!Array.<!shaka.media.SegmentReference>}\n * @private\n */\nshaka.media.Mp4SegmentIndexParser.parseSIDX_ = function(\n    sidxOffset,\n    scaledPresentationTimeOffset,\n    uris,\n    box) {\n  goog.asserts.assert(\n      box.version != null,\n      'SIDX is a full box and should have a valid version.');\n\n  let references = [];\n\n  // Parse the SIDX structure.\n  // Skip reference_ID (32 bits).\n  box.reader.skip(4);\n\n  let timescale = box.reader.readUint32();\n\n  if (timescale == 0) {\n    shaka.log.error('Invalid timescale.');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.MP4_SIDX_INVALID_TIMESCALE);\n  }\n\n  let earliestPresentationTime;\n  let firstOffset;\n\n  if (box.version == 0) {\n    earliestPresentationTime = box.reader.readUint32();\n    firstOffset = box.reader.readUint32();\n  } else {\n    earliestPresentationTime = box.reader.readUint64();\n    firstOffset = box.reader.readUint64();\n  }\n\n  // Skip reserved (16 bits).\n  box.reader.skip(2);\n\n  // Add references.\n  let referenceCount = box.reader.readUint16();\n\n  // Substract the presentation time offset\n  let unscaledStartTime = earliestPresentationTime;\n  let startByte = sidxOffset + box.size + firstOffset;\n\n  for (let i = 0; i < referenceCount; i++) {\n    // |chunk| is 1 bit for |referenceType|, and 31 bits for |referenceSize|.\n    let chunk = box.reader.readUint32();\n    let referenceType = (chunk & 0x80000000) >>> 31;\n    let referenceSize = chunk & 0x7FFFFFFF;\n\n    let subsegmentDuration = box.reader.readUint32();\n\n    // Skipping 1 bit for |startsWithSap|, 3 bits for |sapType|, and 28 bits\n    // for |sapDelta|.\n    box.reader.skip(4);\n\n    // If |referenceType| is 1 then the reference is to another SIDX.\n    // We do not support this.\n    if (referenceType == 1) {\n      shaka.log.error('Heirarchical SIDXs are not supported.');\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.MEDIA,\n          shaka.util.Error.Code.MP4_SIDX_TYPE_NOT_SUPPORTED);\n    }\n\n    references.push(\n        new shaka.media.SegmentReference(\n            references.length,\n            (unscaledStartTime / timescale) -\n                scaledPresentationTimeOffset,\n            ((unscaledStartTime + subsegmentDuration) / timescale) -\n                scaledPresentationTimeOffset,\n            function() { return uris; },\n            startByte,\n            startByte + referenceSize - 1));\n\n    unscaledStartTime += subsegmentDuration;\n    startByte += referenceSize;\n  }\n\n  box.parser.stop();\n  return references;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.SegmentIndex');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.media.SegmentReference');\ngoog.require('shaka.util.IDestroyable');\n\n\n/**\n * Creates a SegmentIndex.\n *\n * @param {!Array.<!shaka.media.SegmentReference>} references The list of\n *   SegmentReferences, which must be sorted first by their start times\n *   (ascending) and second by their end times (ascending).  They must have\n *   continuous, increasing positions.\n *\n * @constructor\n * @struct\n * @implements {shaka.util.IDestroyable}\n * @export\n */\nshaka.media.SegmentIndex = function(references) {\n  if (goog.DEBUG) {\n    shaka.media.SegmentIndex.assertCorrectReferences_(references);\n  }\n\n  /** @private {Array.<!shaka.media.SegmentReference>} */\n  this.references_ = references;\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.media.SegmentIndex.prototype.destroy = function() {\n  this.references_ = null;\n  return Promise.resolve();\n};\n\n\n/**\n * Finds the position of the segment for the given time, in seconds, relative\n * to the start of a particular Period.  Returns the position of the segment\n * with the largest end time if more than one segment is known for the given\n * time.\n *\n * @param {number} time\n * @return {?number} The position of the segment, or null\n *   if the position of the segment could not be determined.\n * @export\n */\nshaka.media.SegmentIndex.prototype.find = function(time) {\n  // For live streams, searching from the end is faster.  For VOD, it balances\n  // out either way.  In both cases, references_.length is small enough that the\n  // difference isn't huge.\n  for (let i = this.references_.length - 1; i >= 0; --i) {\n    let r = this.references_[i];\n    // Note that a segment ends immediately before the end time.\n    if ((time >= r.startTime) && (time < r.endTime)) {\n      return r.position;\n    }\n  }\n  if (this.references_.length && time < this.references_[0].startTime) {\n    return this.references_[0].position;\n  }\n\n  return null;\n};\n\n\n/**\n * Gets the SegmentReference for the segment at the given position.\n *\n * @param {number} position The position of the segment.\n * @return {shaka.media.SegmentReference} The SegmentReference, or null if\n *   no such SegmentReference exists.\n * @export\n */\nshaka.media.SegmentIndex.prototype.get = function(position) {\n  if (this.references_.length == 0) {\n    return null;\n  }\n\n  let index = position - this.references_[0].position;\n  if (index < 0 || index >= this.references_.length) {\n    return null;\n  }\n\n  return this.references_[index];\n};\n\n\n/**\n * Offset all segment references by a fixed amount.\n *\n * @param {number} offset The amount to add to each segment's start and end\n *   times.\n * @export\n */\nshaka.media.SegmentIndex.prototype.offset = function(offset) {\n  for (let i = 0; i < this.references_.length; ++i) {\n    this.references_[i].startTime += offset;\n    this.references_[i].endTime += offset;\n  }\n};\n\n\n/**\n * Merges the given SegmentReferences.  Supports extending the original\n * references only.  Will not replace old references or interleave new ones.\n *\n * @param {!Array.<!shaka.media.SegmentReference>} references The list of\n *   SegmentReferences, which must be sorted first by their start times\n *   (ascending) and second by their end times (ascending).  They must have\n *   continuous, increasing positions.\n * @export\n */\nshaka.media.SegmentIndex.prototype.merge = function(references) {\n  if (goog.DEBUG) {\n    shaka.media.SegmentIndex.assertCorrectReferences_(references);\n  }\n\n  let newReferences = [];\n  let i = 0;\n  let j = 0;\n\n  while ((i < this.references_.length) && (j < references.length)) {\n    let r1 = this.references_[i];\n    let r2 = references[j];\n\n    if (r1.startTime < r2.startTime) {\n      newReferences.push(r1);\n      i++;\n    } else if (r1.startTime > r2.startTime) {\n      if (i == 0) {\n        // If the reference appears before any existing reference, it may have\n        // been evicted before; in this case, simply add it back and it will be\n        // evicted again later.\n        newReferences.push(r2);\n      } else {\n        // Drop the new reference if it would have to be interleaved with the\n        // old one.  Issue a warning, since this is not a supported update.\n        shaka.log.warning('Refusing to rewrite original references on update!');\n      }\n      j++;\n    } else {\n      // When period is changed, fit() will expand the last segment to the start\n      // of the next period.  So, it is valid to have end time updated to the\n      // last segment reference in a period.\n      if (Math.abs(r1.endTime - r2.endTime) > 0.1) {\n        goog.asserts.assert(r2.endTime > r1.endTime &&\n            i == this.references_.length - 1 &&\n            j == references.length - 1,\n            'This should be an update of the last segment in a period');\n        let r = new shaka.media.SegmentReference(r1.position,\n            r2.startTime, r2.endTime, r2.getUris, r2.startByte, r2.endByte);\n        newReferences.push(r);\n      } else {\n        // Drop the new reference if there's an old reference with the\n        // same time.\n        newReferences.push(r1);\n      }\n      i++;\n      j++;\n    }\n  }\n\n  while (i < this.references_.length) {\n    newReferences.push(this.references_[i++]);\n  }\n\n  if (newReferences.length) {\n    // The rest of these references may need to be renumbered.\n    let nextPosition = newReferences[newReferences.length - 1].position + 1;\n    while (j < references.length) {\n      let r = references[j++];\n      let r2 = new shaka.media.SegmentReference(nextPosition++,\n          r.startTime, r.endTime, r.getUris, r.startByte, r.endByte);\n      newReferences.push(r2);\n    }\n  } else {\n    newReferences = references;\n  }\n\n  if (goog.DEBUG) {\n    shaka.media.SegmentIndex.assertCorrectReferences_(newReferences);\n  }\n\n  this.references_ = newReferences;\n};\n\n\n/**\n * Replace existing references with new ones, without merging.\n *\n * @param {!Array.<!shaka.media.SegmentReference>} newReferences\n */\nshaka.media.SegmentIndex.prototype.replace = function(newReferences) {\n  if (goog.DEBUG) {\n    shaka.media.SegmentIndex.assertCorrectReferences_(newReferences);\n  }\n  this.references_ = newReferences;\n};\n\n\n/**\n * Removes all SegmentReferences that end before the given time.\n *\n * @param {number} time The time in seconds.\n * @export\n */\nshaka.media.SegmentIndex.prototype.evict = function(time) {\n  for (let i = 0; i < this.references_.length; ++i) {\n    if (this.references_[i].endTime > time) {\n      this.references_.splice(0, i);\n      return;\n    }\n  }\n  this.references_ = [];\n};\n\n\n/**\n * Expands the first SegmentReference so it begins at the start of its Period\n * if it already begins close to the start of its Period.\n *\n * Also expands or contracts the last SegmentReference so it ends at the end of\n * its Period.\n *\n * Do not call on the last period of a live presentation (unknown duration).\n * It is okay to call on the other periods of a live presentation, where the\n * duration is known and another period has been added.\n *\n * @param {?number} periodDuration\n */\nshaka.media.SegmentIndex.prototype.fit = function(periodDuration) {\n  goog.asserts.assert(periodDuration != null,\n                      'Period duration must be known for static content!');\n  goog.asserts.assert(periodDuration != Infinity,\n                      'Period duration must be finite for static content!');\n\n  // Trim out references we will never use.\n  while (this.references_.length) {\n    let lastReference = this.references_[this.references_.length - 1];\n    if (lastReference.startTime >= periodDuration) {\n      this.references_.pop();\n    } else {\n      break;\n    }\n  }\n  while (this.references_.length) {\n    let firstReference = this.references_[0];\n    if (firstReference.endTime <= 0) {\n      this.references_.shift();\n    } else {\n      break;\n    }\n  }\n\n  if (this.references_.length == 0) {\n    return;\n  }\n\n  // Adjust the last SegmentReference.\n  let lastReference = this.references_[this.references_.length - 1];\n  this.references_[this.references_.length - 1] =\n      new shaka.media.SegmentReference(\n          lastReference.position,\n          lastReference.startTime,\n          /* endTime */ periodDuration,\n          lastReference.getUris,\n          lastReference.startByte,\n          lastReference.endByte);\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * Asserts that the given SegmentReferences are sorted and have continuous,\n   * increasing positions.\n   *\n   * @param {!Array.<shaka.media.SegmentReference>} references\n   * @private\n   */\n  shaka.media.SegmentIndex.assertCorrectReferences_ = function(references) {\n    goog.asserts.assert(references.every(function(r2, i) {\n      if (i == 0) return true;\n      let r1 = references[i - 1];\n      if (r2.position != r1.position + 1) return false;\n      if (r1.startTime < r2.startTime) {\n        return true;\n      } else if (r1.startTime > r2.startTime) {\n        return false;\n      } else {\n        if (r1.endTime <= r2.endTime) {\n          return true;\n        } else {\n          return false;\n        }\n      }\n    }), 'SegmentReferences are incorrect');\n  };\n}\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.EbmlElement');\ngoog.provide('shaka.util.EbmlParser');\n\ngoog.require('shaka.util.DataViewReader');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.Uint8ArrayUtils');\n\n\n/**\n * Creates an Extensible Binary Markup Language (EBML) parser.\n * @param {!DataView} dataView The EBML data.\n * @constructor\n * @struct\n */\nshaka.util.EbmlParser = function(dataView) {\n  /** @private {!DataView} */\n  this.dataView_ = dataView;\n\n  /** @private {!shaka.util.DataViewReader} */\n  this.reader_ = new shaka.util.DataViewReader(\n      dataView,\n      shaka.util.DataViewReader.Endianness.BIG_ENDIAN);\n\n  // If not already constructed, build a list of EBML dynamic size constants.\n  // This is not done at load-time to avoid exceptions on unsupported browsers.\n  if (!shaka.util.EbmlParser.DYNAMIC_SIZES) {\n    shaka.util.EbmlParser.DYNAMIC_SIZES = [\n      new Uint8Array([0xff]),\n      new Uint8Array([0x7f, 0xff]),\n      new Uint8Array([0x3f, 0xff, 0xff]),\n      new Uint8Array([0x1f, 0xff, 0xff, 0xff]),\n      new Uint8Array([0x0f, 0xff, 0xff, 0xff, 0xff]),\n      new Uint8Array([0x07, 0xff, 0xff, 0xff, 0xff, 0xff]),\n      new Uint8Array([0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff]),\n      new Uint8Array([0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff]),\n    ];\n  }\n};\n\n\n/** @const {!Array.<!Uint8Array>} */\nshaka.util.EbmlParser.DYNAMIC_SIZES;\n\n\n/**\n * @return {boolean} True if the parser has more data, false otherwise.\n */\nshaka.util.EbmlParser.prototype.hasMoreData = function() {\n  return this.reader_.hasMoreData();\n};\n\n\n/**\n * Parses an EBML element from the parser's current position, and advances\n * the parser.\n * @return {!shaka.util.EbmlElement} The EBML element.\n * @throws {shaka.util.Error}\n * @see http://matroska.org/technical/specs/rfc/index.html\n */\nshaka.util.EbmlParser.prototype.parseElement = function() {\n  let id = this.parseId_();\n\n  // Parse the element's size.\n  let vint = this.parseVint_();\n  let size;\n  if (shaka.util.EbmlParser.isDynamicSizeValue_(vint)) {\n    // If this has an unknown size, assume that it takes up the rest of the\n    // data.\n    size = this.dataView_.byteLength - this.reader_.getPosition();\n  } else {\n    size = shaka.util.EbmlParser.getVintValue_(vint);\n  }\n\n  // Note that if the element's size is larger than the buffer then we are\n  // parsing a \"partial element\". This may occur if for example we are\n  // parsing the beginning of some WebM container data, but our buffer does\n  // not contain the entire WebM container data.\n  let elementSize =\n      this.reader_.getPosition() + size <= this.dataView_.byteLength ?\n      size :\n      this.dataView_.byteLength - this.reader_.getPosition();\n\n  let dataView = new DataView(\n      this.dataView_.buffer,\n      this.dataView_.byteOffset + this.reader_.getPosition(), elementSize);\n\n  this.reader_.skip(elementSize);\n\n  return new shaka.util.EbmlElement(id, dataView);\n};\n\n\n/**\n * Parses an EBML ID from the parser's current position, and advances the\n * parser.\n * @throws {shaka.util.Error}\n * @return {number} The EBML ID.\n * @private\n */\nshaka.util.EbmlParser.prototype.parseId_ = function() {\n  let vint = this.parseVint_();\n\n  if (vint.length > 7) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.EBML_OVERFLOW);\n  }\n\n  let id = 0;\n  for (let i = 0; i < vint.length; i++) {\n    // Note that we cannot use << since |value| may exceed 32 bits.\n    id = (256 * id) + vint[i];\n  }\n\n  return id;\n};\n\n\n/**\n * Parses a variable sized integer from the parser's current position, and\n * advances the parser.\n * For example:\n *   1 byte  wide: 1xxx xxxx\n *   2 bytes wide: 01xx xxxx xxxx xxxx\n *   3 bytes wide: 001x xxxx xxxx xxxx xxxx xxxx\n * @throws {shaka.util.Error}\n * @return {!Uint8Array} The variable sized integer.\n * @private\n */\nshaka.util.EbmlParser.prototype.parseVint_ = function() {\n  let firstByte = this.reader_.readUint8();\n  let numBytes;\n\n  // Determine the byte width of the variable sized integer.\n  for (numBytes = 1; numBytes <= 8; numBytes++) {\n    let mask = 0x1 << (8 - numBytes);\n    if (firstByte & mask) {\n      break;\n    }\n  }\n\n  if (numBytes > 8) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.EBML_OVERFLOW);\n  }\n\n  let vint = new Uint8Array(numBytes);\n  vint[0] = firstByte;\n\n  // Include the remaining bytes.\n  for (let i = 1; i < numBytes; i++) {\n    vint[i] = this.reader_.readUint8();\n  }\n\n  return vint;\n};\n\n\n/**\n * Gets the value of a variable sized integer.\n * For example, the x's below are part of the vint's value.\n *    7-bit value: 1xxx xxxx\n *   14-bit value: 01xx xxxx xxxx xxxx\n *   21-bit value: 001x xxxx xxxx xxxx xxxx xxxx\n * @param {!Uint8Array} vint The variable sized integer.\n * @throws {shaka.util.Error}\n * @return {number} The value of the variable sized integer.\n * @private\n */\nshaka.util.EbmlParser.getVintValue_ = function(vint) {\n  // If |vint| is 8 bytes wide then we must ensure that it does not have more\n  // than 53 meaningful bits. For example, assume |vint| is 8 bytes wide,\n  // so it has the following structure,\n  // 0000 0001 | xxxx xxxx ...\n  // Thus, the first 3 bits following the first byte of |vint| must be 0.\n  if ((vint.length == 8) && (vint[1] & 0xe0)) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.JS_INTEGER_OVERFLOW);\n  }\n\n  // Mask out the first few bits of |vint|'s first byte to get the most\n  // significant bits of |vint|'s value. If |vint| is 8 bytes wide then |value|\n  // will be set to 0.\n  let mask = 0x1 << (8 - vint.length);\n  let value = vint[0] & (mask - 1);\n\n  // Add the remaining bytes.\n  for (let i = 1; i < vint.length; i++) {\n    // Note that we cannot use << since |value| may exceed 32 bits.\n    value = (256 * value) + vint[i];\n  }\n\n  return value;\n};\n\n\n/**\n * Checks if the given variable sized integer represents a dynamic size value.\n * @param {!Uint8Array} vint The variable sized integer.\n * @return {boolean} true if |vint| represents a dynamic size value,\n *   false otherwise.\n * @private\n */\nshaka.util.EbmlParser.isDynamicSizeValue_ = function(vint) {\n  const EbmlParser = shaka.util.EbmlParser;\n  let uint8ArrayEqual = shaka.util.Uint8ArrayUtils.equal;\n\n  for (let i = 0; i < EbmlParser.DYNAMIC_SIZES.length; i++) {\n    if (uint8ArrayEqual(vint, EbmlParser.DYNAMIC_SIZES[i])) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\n\n/**\n * Creates an EbmlElement.\n * @param {number} id The ID.\n * @param {!DataView} dataView The DataView.\n * @constructor\n */\nshaka.util.EbmlElement = function(id, dataView) {\n  /** @type {number} */\n  this.id = id;\n\n  /** @private {!DataView} */\n  this.dataView_ = dataView;\n};\n\n\n/**\n * Gets the element's offset from the beginning of the buffer.\n * @return {number}\n */\nshaka.util.EbmlElement.prototype.getOffset = function() {\n  return this.dataView_.byteOffset;\n};\n\n\n/**\n * Interpret the element's data as a list of sub-elements.\n * @throws {shaka.util.Error}\n * @return {!shaka.util.EbmlParser} A parser over the sub-elements.\n */\nshaka.util.EbmlElement.prototype.createParser = function() {\n  return new shaka.util.EbmlParser(this.dataView_);\n};\n\n\n/**\n * Interpret the element's data as an unsigned integer.\n * @throws {shaka.util.Error}\n * @return {number}\n */\nshaka.util.EbmlElement.prototype.getUint = function() {\n  if (this.dataView_.byteLength > 8) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.EBML_OVERFLOW);\n  }\n\n  // Ensure we have at most 53 meaningful bits.\n  if ((this.dataView_.byteLength == 8) && (this.dataView_.getUint8(0) & 0xe0)) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.JS_INTEGER_OVERFLOW);\n  }\n\n  let value = 0;\n\n  for (let i = 0; i < this.dataView_.byteLength; i++) {\n    let chunk = this.dataView_.getUint8(i);\n    value = (256 * value) + chunk;\n  }\n\n  return value;\n};\n\n\n/**\n * Interpret the element's data as a floating point number (32 bits or 64 bits).\n * 80-bit floating point numbers are not supported.\n * @throws {shaka.util.Error}\n * @return {number}\n */\nshaka.util.EbmlElement.prototype.getFloat = function() {\n  if (this.dataView_.byteLength == 4) {\n    return this.dataView_.getFloat32(0);\n  } else if (this.dataView_.byteLength == 8) {\n    return this.dataView_.getFloat64(0);\n  } else {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.EBML_BAD_FLOATING_POINT_SIZE);\n  }\n};\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.WebmSegmentIndexParser');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.media.SegmentReference');\ngoog.require('shaka.util.EbmlElement');\ngoog.require('shaka.util.EbmlParser');\ngoog.require('shaka.util.Error');\n\n\n/**\n * Creates a WebM Cues element parser.\n *\n * @constructor\n * @struct\n */\nshaka.media.WebmSegmentIndexParser = function() {};\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.EBML_ID = 0x1a45dfa3;\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.SEGMENT_ID = 0x18538067;\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.INFO_ID = 0x1549a966;\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.TIMECODE_SCALE_ID = 0x2ad7b1;\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.DURATION_ID = 0x4489;\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.CUES_ID = 0x1c53bb6b;\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.CUE_POINT_ID = 0xbb;\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.CUE_TIME_ID = 0xb3;\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.CUE_TRACK_POSITIONS_ID = 0xb7;\n\n\n/** @const {number} */\nshaka.media.WebmSegmentIndexParser.CUE_CLUSTER_POSITION = 0xf1;\n\n\n/**\n * Parses SegmentReferences from a WebM container.\n * @param {!ArrayBuffer} cuesData The WebM container's \"Cueing Data\" section.\n * @param {!ArrayBuffer} initData The WebM container's headers.\n * @param {!Array.<string>} uris The possible locations of the WebM file that\n *   contains the segments.\n * @param {number} scaledPresentationTimeOffset\n\n * @return {!Array.<!shaka.media.SegmentReference>}\n * @throws {shaka.util.Error}\n * @see http://www.matroska.org/technical/specs/index.html\n * @see http://www.webmproject.org/docs/container/\n */\nshaka.media.WebmSegmentIndexParser.prototype.parse = function(\n    cuesData, initData, uris, scaledPresentationTimeOffset) {\n  let tuple = this.parseWebmContainer_(initData);\n  let parser = new shaka.util.EbmlParser(new DataView(cuesData));\n  let cuesElement = parser.parseElement();\n  if (cuesElement.id != shaka.media.WebmSegmentIndexParser.CUES_ID) {\n    shaka.log.error('Not a Cues element.');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.WEBM_CUES_ELEMENT_MISSING);\n  }\n\n  return this.parseCues_(\n      cuesElement, tuple.segmentOffset, tuple.timecodeScale, tuple.duration,\n      uris, scaledPresentationTimeOffset);\n};\n\n\n/**\n * Parses a WebM container to get the segment's offset, timecode scale, and\n * duration.\n *\n * @param {!ArrayBuffer} initData\n * @return {{segmentOffset: number, timecodeScale: number, duration: number}}\n *   The segment's offset in bytes, the segment's timecode scale in seconds,\n *   and the duration in seconds.\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.media.WebmSegmentIndexParser.prototype.parseWebmContainer_ = function(\n    initData) {\n  let parser = new shaka.util.EbmlParser(new DataView(initData));\n\n  // Check that the WebM container data starts with the EBML header, but\n  // skip its contents.\n  let ebmlElement = parser.parseElement();\n  if (ebmlElement.id != shaka.media.WebmSegmentIndexParser.EBML_ID) {\n    shaka.log.error('Not an EBML element.');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.WEBM_EBML_HEADER_ELEMENT_MISSING);\n  }\n\n  let segmentElement = parser.parseElement();\n  if (segmentElement.id != shaka.media.WebmSegmentIndexParser.SEGMENT_ID) {\n    shaka.log.error('Not a Segment element.');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.WEBM_SEGMENT_ELEMENT_MISSING);\n  }\n\n  // This value is used as the initial offset to the first referenced segment.\n  let segmentOffset = segmentElement.getOffset();\n\n  // Parse the Segment element to get the segment info.\n  let segmentInfo = this.parseSegment_(segmentElement);\n  return {\n    segmentOffset: segmentOffset,\n    timecodeScale: segmentInfo.timecodeScale,\n    duration: segmentInfo.duration,\n  };\n};\n\n\n/**\n * Parses a WebM Info element to get the segment's timecode scale and duration.\n * @param {!shaka.util.EbmlElement} segmentElement\n * @return {{timecodeScale: number, duration: number}} The segment's timecode\n *   scale in seconds and duration in seconds.\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.media.WebmSegmentIndexParser.prototype.parseSegment_ = function(\n    segmentElement) {\n  let parser = segmentElement.createParser();\n\n  // Find the Info element.\n  let infoElement = null;\n  while (parser.hasMoreData()) {\n    let elem = parser.parseElement();\n    if (elem.id != shaka.media.WebmSegmentIndexParser.INFO_ID) {\n      continue;\n    }\n\n    infoElement = elem;\n\n    break;\n  }\n\n  if (!infoElement) {\n    shaka.log.error('Not an Info element.');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.WEBM_INFO_ELEMENT_MISSING);\n  }\n\n  return this.parseInfo_(infoElement);\n};\n\n\n/**\n * Parses a WebM Info element to get the segment's timecode scale and duration.\n * @param {!shaka.util.EbmlElement} infoElement\n * @return {{timecodeScale: number, duration: number}} The segment's timecode\n *   scale in seconds and duration in seconds.\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.media.WebmSegmentIndexParser.prototype.parseInfo_ = function(\n    infoElement) {\n  let parser = infoElement.createParser();\n\n  // The timecode scale factor in units of [nanoseconds / T], where [T] are the\n  // units used to express all other time values in the WebM container. By\n  // default it's assumed that [T] == [milliseconds].\n  let timecodeScaleNanoseconds = 1000000;\n  /** @type {?number} */\n  let durationScale = null;\n\n  while (parser.hasMoreData()) {\n    let elem = parser.parseElement();\n    if (elem.id == shaka.media.WebmSegmentIndexParser.TIMECODE_SCALE_ID) {\n      timecodeScaleNanoseconds = elem.getUint();\n    } else if (elem.id == shaka.media.WebmSegmentIndexParser.DURATION_ID) {\n      durationScale = elem.getFloat();\n    }\n  }\n  if (durationScale == null) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.WEBM_DURATION_ELEMENT_MISSING);\n  }\n\n  // The timecode scale factor in units of [seconds / T].\n  let timecodeScale = timecodeScaleNanoseconds / 1000000000;\n  // The duration is stored in units of [T]\n  let durationSeconds = durationScale * timecodeScale;\n\n  return {timecodeScale: timecodeScale, duration: durationSeconds};\n};\n\n\n/**\n * Parses a WebM CuesElement.\n * @param {!shaka.util.EbmlElement} cuesElement\n * @param {number} segmentOffset\n * @param {number} timecodeScale\n * @param {number} duration\n * @param {!Array.<string>} uris\n * @param {number} scaledPresentationTimeOffset\n * @return {!Array.<!shaka.media.SegmentReference>}\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.media.WebmSegmentIndexParser.prototype.parseCues_ = function(\n    cuesElement, segmentOffset, timecodeScale, duration, uris,\n    scaledPresentationTimeOffset) {\n  let references = [];\n  let getUris = function() { return uris; };\n\n  let parser = cuesElement.createParser();\n\n  let lastTime = null;\n  let lastOffset = null;\n\n  while (parser.hasMoreData()) {\n    let elem = parser.parseElement();\n    if (elem.id != shaka.media.WebmSegmentIndexParser.CUE_POINT_ID) {\n      continue;\n    }\n\n    let tuple = this.parseCuePoint_(elem);\n    if (!tuple) {\n      continue;\n    }\n\n    // Substract the presentation time offset from the unscaled time\n    let currentTime = timecodeScale * tuple.unscaledTime;\n    let currentOffset = segmentOffset + tuple.relativeOffset;\n\n    if (lastTime != null) {\n      goog.asserts.assert(lastOffset != null, 'last offset cannot be null');\n\n      references.push(\n          new shaka.media.SegmentReference(\n              references.length,\n              lastTime - scaledPresentationTimeOffset,\n              currentTime - scaledPresentationTimeOffset,\n              getUris,\n              lastOffset, currentOffset - 1));\n    }\n\n    lastTime = currentTime;\n    lastOffset = currentOffset;\n  }\n\n  if (lastTime != null) {\n    goog.asserts.assert(lastOffset != null, 'last offset cannot be null');\n\n    references.push(\n        new shaka.media.SegmentReference(\n            references.length,\n            lastTime - scaledPresentationTimeOffset,\n            duration - scaledPresentationTimeOffset,\n            getUris,\n            lastOffset, null));\n  }\n\n  return references;\n};\n\n\n/**\n * Parses a WebM CuePointElement to get an \"unadjusted\" segment reference.\n * @param {shaka.util.EbmlElement} cuePointElement\n * @return {{unscaledTime: number, relativeOffset: number}} The referenced\n *   segment's start time in units of [T] (see parseInfo_()), and the\n *   referenced segment's offset in bytes, relative to a WebM Segment\n *   element.\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.media.WebmSegmentIndexParser.prototype.parseCuePoint_ = function(\n    cuePointElement) {\n  let parser = cuePointElement.createParser();\n\n  // Parse CueTime element.\n  let cueTimeElement = parser.parseElement();\n  if (cueTimeElement.id != shaka.media.WebmSegmentIndexParser.CUE_TIME_ID) {\n    shaka.log.warning('Not a CueTime element.');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.WEBM_CUE_TIME_ELEMENT_MISSING);\n  }\n  let unscaledTime = cueTimeElement.getUint();\n\n  // Parse CueTrackPositions element.\n  let cueTrackPositionsElement = parser.parseElement();\n  if (cueTrackPositionsElement.id !=\n      shaka.media.WebmSegmentIndexParser.CUE_TRACK_POSITIONS_ID) {\n    shaka.log.warning('Not a CueTrackPositions element.');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MEDIA,\n        shaka.util.Error.Code.WEBM_CUE_TRACK_POSITIONS_ELEMENT_MISSING);\n  }\n\n  let cueTrackParser = cueTrackPositionsElement.createParser();\n  let relativeOffset = 0;\n\n  while (cueTrackParser.hasMoreData()) {\n    let elem = cueTrackParser.parseElement();\n    if (elem.id != shaka.media.WebmSegmentIndexParser.CUE_CLUSTER_POSITION) {\n      continue;\n    }\n\n    relativeOffset = elem.getUint();\n    break;\n  }\n\n  return {unscaledTime: unscaledTime, relativeOffset: relativeOffset};\n};\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.dash.SegmentBase');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.dash.MpdUtils');\ngoog.require('shaka.log');\ngoog.require('shaka.media.InitSegmentReference');\ngoog.require('shaka.media.Mp4SegmentIndexParser');\ngoog.require('shaka.media.SegmentIndex');\ngoog.require('shaka.media.WebmSegmentIndexParser');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.XmlUtils');\n\n\n/**\n * @namespace shaka.dash.SegmentBase\n * @summary A set of functions for parsing SegmentBase elements.\n */\n\n\n/**\n * Creates an init segment reference from a Context object.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {function(?shaka.dash.DashParser.InheritanceFrame):Element} callback\n * @return {shaka.media.InitSegmentReference}\n */\nshaka.dash.SegmentBase.createInitSegment = function(context, callback) {\n  const MpdUtils = shaka.dash.MpdUtils;\n  const XmlUtils = shaka.util.XmlUtils;\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n\n  let initialization =\n      MpdUtils.inheritChild(context, callback, 'Initialization');\n  if (!initialization) {\n    return null;\n  }\n\n  let resolvedUris = context.representation.baseUris;\n  let uri = initialization.getAttribute('sourceURL');\n  if (uri) {\n    resolvedUris =\n        ManifestParserUtils.resolveUris(context.representation.baseUris, [uri]);\n  }\n\n  let startByte = 0;\n  let endByte = null;\n  let range = XmlUtils.parseAttr(initialization, 'range', XmlUtils.parseRange);\n  if (range) {\n    startByte = range.start;\n    endByte = range.end;\n  }\n\n  let getUris = function() { return resolvedUris; };\n  return new shaka.media.InitSegmentReference(getUris, startByte, endByte);\n};\n\n\n/**\n * Creates a new Stream object.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.DashParser.RequestInitSegmentCallback} requestInitSegment\n * @throws shaka.util.Error When there is a parsing error.\n * @return {shaka.dash.DashParser.StreamInfo}\n */\nshaka.dash.SegmentBase.createStream = function(context, requestInitSegment) {\n  goog.asserts.assert(context.representation.segmentBase,\n                      'Should only be called with SegmentBase');\n  // Since SegmentBase does not need updates, simply treat any call as\n  // the initial parse.\n  const MpdUtils = shaka.dash.MpdUtils;\n  const SegmentBase = shaka.dash.SegmentBase;\n  const XmlUtils = shaka.util.XmlUtils;\n\n  let unscaledPresentationTimeOffset = Number(MpdUtils.inheritAttribute(\n      context, SegmentBase.fromInheritance_, 'presentationTimeOffset')) || 0;\n\n  let timescaleStr = MpdUtils.inheritAttribute(\n      context, SegmentBase.fromInheritance_, 'timescale');\n  let timescale = 1;\n  if (timescaleStr) {\n    timescale = XmlUtils.parsePositiveInt(timescaleStr) || 1;\n  }\n\n  let scaledPresentationTimeOffset =\n      (unscaledPresentationTimeOffset / timescale) || 0;\n\n  let init =\n      SegmentBase.createInitSegment(context, SegmentBase.fromInheritance_);\n  let index = SegmentBase.createSegmentIndex_(\n      context, requestInitSegment, init, scaledPresentationTimeOffset);\n\n  return {\n    createSegmentIndex: index.createSegmentIndex,\n    findSegmentPosition: index.findSegmentPosition,\n    getSegmentReference: index.getSegmentReference,\n    initSegmentReference: init,\n    scaledPresentationTimeOffset: scaledPresentationTimeOffset,\n  };\n};\n\n\n/**\n * Creates segment index info for the given info.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.DashParser.RequestInitSegmentCallback} requestInitSegment\n * @param {shaka.media.InitSegmentReference} init\n * @param {!Array.<string>} uris\n * @param {number} startByte\n * @param {?number} endByte\n * @param {string} containerType\n * @param {number} scaledPresentationTimeOffset\n * @return {shaka.dash.DashParser.SegmentIndexFunctions}\n */\nshaka.dash.SegmentBase.createSegmentIndexFromUris = function(\n    context, requestInitSegment, init, uris,\n    startByte, endByte, containerType, scaledPresentationTimeOffset) {\n  let presentationTimeline = context.presentationTimeline;\n  let fitLast = !context.dynamic || !context.periodInfo.isLastPeriod;\n  let periodStart = context.periodInfo.start;\n  let periodDuration = context.periodInfo.duration;\n\n  // Create a local variable to bind to so we can set to null to help the GC.\n  let localRequest = requestInitSegment;\n  let segmentIndex = null;\n  let create = function() {\n    let async = [\n      localRequest(uris, startByte, endByte),\n      containerType == 'webm' ?\n          localRequest(init.getUris(), init.startByte, init.endByte) :\n          null,\n    ];\n\n    localRequest = null;\n    return Promise.all(async).then(function(results) {\n      let indexData = results[0];\n      let initData = results[1] || null;\n      let references = null;\n\n      if (containerType == 'mp4') {\n        // eslint-disable-next-line new-cap\n        references = shaka.media.Mp4SegmentIndexParser(\n            indexData, startByte, uris, scaledPresentationTimeOffset);\n      } else {\n        goog.asserts.assert(initData, 'WebM requires init data');\n        let parser = new shaka.media.WebmSegmentIndexParser();\n        references = parser.parse(indexData, initData, uris,\n            scaledPresentationTimeOffset);\n      }\n\n      presentationTimeline.notifySegments(references, periodStart);\n\n      // Since containers are never updated, we don't need to store the\n      // segmentIndex in the map.\n      goog.asserts.assert(!segmentIndex,\n                          'Should not call createSegmentIndex twice');\n\n      segmentIndex = new shaka.media.SegmentIndex(references);\n      if (fitLast) {\n        segmentIndex.fit(periodDuration);\n      }\n    });\n  };\n  let get = function(i) {\n    goog.asserts.assert(segmentIndex, 'Must call createSegmentIndex first');\n    return segmentIndex.get(i);\n  };\n  let find = function(t) {\n    goog.asserts.assert(segmentIndex, 'Must call createSegmentIndex first');\n    return segmentIndex.find(t);\n  };\n\n  return {\n    createSegmentIndex: create,\n    findSegmentPosition: find,\n    getSegmentReference: get,\n  };\n};\n\n\n/**\n * @param {?shaka.dash.DashParser.InheritanceFrame} frame\n * @return {Element}\n * @private\n */\nshaka.dash.SegmentBase.fromInheritance_ = function(frame) {\n  return frame.segmentBase;\n};\n\n\n/**\n * Creates segment index info from a Context object.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.DashParser.RequestInitSegmentCallback} requestInitSegment\n * @param {shaka.media.InitSegmentReference} init\n * @param {number} scaledPresentationTimeOffset\n * @return {shaka.dash.DashParser.SegmentIndexFunctions}\n * @throws shaka.util.Error When there is a parsing error.\n * @private\n */\nshaka.dash.SegmentBase.createSegmentIndex_ = function(\n    context, requestInitSegment, init, scaledPresentationTimeOffset) {\n  const MpdUtils = shaka.dash.MpdUtils;\n  const SegmentBase = shaka.dash.SegmentBase;\n  const XmlUtils = shaka.util.XmlUtils;\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  let contentType = context.representation.contentType;\n  let containerType = context.representation.mimeType.split('/')[1];\n  if (contentType != ContentType.TEXT && containerType != 'mp4' &&\n      containerType != 'webm') {\n    shaka.log.error(\n        'SegmentBase specifies an unsupported container type.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_UNSUPPORTED_CONTAINER);\n  }\n\n  if ((containerType == 'webm') && !init) {\n    shaka.log.error(\n        'SegmentBase does not contain sufficient segment information:',\n        'the SegmentBase uses a WebM container,',\n        'but does not contain an Initialization element.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_WEBM_MISSING_INIT);\n  }\n\n  let representationIndex = MpdUtils.inheritChild(\n      context, SegmentBase.fromInheritance_, 'RepresentationIndex');\n  let indexRangeElem = MpdUtils.inheritAttribute(\n      context, SegmentBase.fromInheritance_, 'indexRange');\n\n  let indexUris = context.representation.baseUris;\n  let indexRange = XmlUtils.parseRange(indexRangeElem || '');\n  if (representationIndex) {\n    let representationUri = representationIndex.getAttribute('sourceURL');\n    if (representationUri) {\n      indexUris = ManifestParserUtils.resolveUris(\n          context.representation.baseUris, [representationUri]);\n    }\n\n    indexRange = XmlUtils.parseAttr(\n        representationIndex, 'range', XmlUtils.parseRange, indexRange);\n  }\n\n  if (!indexRange) {\n    shaka.log.error(\n        'SegmentBase does not contain sufficient segment information:',\n        'the SegmentBase does not contain @indexRange',\n        'or a RepresentationIndex element.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_NO_SEGMENT_INFO);\n  }\n\n  return shaka.dash.SegmentBase.createSegmentIndexFromUris(\n      context, requestInitSegment, init, indexUris, indexRange.start,\n      indexRange.end, containerType, scaledPresentationTimeOffset);\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.dash.SegmentList');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.dash.MpdUtils');\ngoog.require('shaka.dash.SegmentBase');\ngoog.require('shaka.log');\ngoog.require('shaka.media.SegmentIndex');\ngoog.require('shaka.media.SegmentReference');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.Functional');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.XmlUtils');\n\n\n/**\n * @namespace shaka.dash.SegmentList\n * @summary A set of functions for parsing SegmentList elements.\n */\n\n\n/**\n * Creates a new Stream object or updates the Stream in the manifest.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {!Object.<string, !shaka.media.SegmentIndex>} segmentIndexMap\n * @return {shaka.dash.DashParser.StreamInfo}\n */\nshaka.dash.SegmentList.createStream = function(context, segmentIndexMap) {\n  goog.asserts.assert(context.representation.segmentList,\n                      'Should only be called with SegmentList');\n  const SegmentList = shaka.dash.SegmentList;\n\n  let init = shaka.dash.SegmentBase.createInitSegment(\n      context, SegmentList.fromInheritance_);\n  let info = SegmentList.parseSegmentListInfo_(context);\n\n  SegmentList.checkSegmentListInfo_(context, info);\n\n  /** @type {shaka.media.SegmentIndex} */\n  let segmentIndex = null;\n  let id = null;\n  if (context.period.id && context.representation.id) {\n    // Only check/store the index if period and representation IDs are set.\n    id = context.period.id + ',' + context.representation.id;\n    segmentIndex = segmentIndexMap[id];\n  }\n\n  let references = SegmentList.createSegmentReferences_(\n      context.periodInfo.duration, info.startNumber,\n      context.representation.baseUris, info);\n\n  if (segmentIndex) {\n    segmentIndex.merge(references);\n    let start = context.presentationTimeline.getSegmentAvailabilityStart();\n    segmentIndex.evict(start - context.periodInfo.start);\n  } else {\n    context.presentationTimeline.notifySegments(\n        references, context.periodInfo.start);\n    segmentIndex = new shaka.media.SegmentIndex(references);\n    if (id && context.dynamic) {\n      segmentIndexMap[id] = segmentIndex;\n    }\n  }\n\n  if (!context.dynamic || !context.periodInfo.isLastPeriod) {\n    segmentIndex.fit(context.periodInfo.duration);\n  }\n\n  return {\n    createSegmentIndex: Promise.resolve.bind(Promise),\n    findSegmentPosition: segmentIndex.find.bind(segmentIndex),\n    getSegmentReference: segmentIndex.get.bind(segmentIndex),\n    initSegmentReference: init,\n    scaledPresentationTimeOffset: info.scaledPresentationTimeOffset,\n  };\n};\n\n\n/**\n * @typedef {{\n *   mediaUri: string,\n *   start: number,\n *   end: ?number\n * }}\n *\n * @property {string} mediaUri\n *   The URI of the segment.\n * @property {number} start\n *   The start byte of the segment.\n * @property {?number} end\n *   The end byte of the segment, or null.\n */\nshaka.dash.SegmentList.MediaSegment;\n\n\n/**\n * @typedef {{\n *   segmentDuration: ?number,\n *   startTime: number,\n *   startNumber: number,\n *   scaledPresentationTimeOffset: number,\n *   timeline: Array.<shaka.dash.MpdUtils.TimeRange>,\n *   mediaSegments: !Array.<shaka.dash.SegmentList.MediaSegment>\n * }}\n * @private\n *\n * @description\n * Contains information about a SegmentList.\n *\n * @property {?number} segmentDuration\n *   The duration of the segments, if given.\n * @property {number} startTime\n *   The start time of the first segment, in seconds.\n * @property {number} startNumber\n *   The start number of the segments; 1 or greater.\n * @property {number} scaledPresentationTimeOffset\n *   The scaledPresentationTimeOffset of the representation, in seconds.\n * @property {Array.<shaka.dash.MpdUtils.TimeRange>} timeline\n *   The timeline of the representation, if given.  Times in seconds.\n * @property {!Array.<shaka.dash.SegmentList.MediaSegment>} mediaSegments\n *   The URI and byte-ranges of the media segments.\n */\nshaka.dash.SegmentList.SegmentListInfo;\n\n\n/**\n * @param {?shaka.dash.DashParser.InheritanceFrame} frame\n * @return {Element}\n * @private\n */\nshaka.dash.SegmentList.fromInheritance_ = function(frame) {\n  return frame.segmentList;\n};\n\n\n/**\n * Parses the SegmentList items to create an info object.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @return {shaka.dash.SegmentList.SegmentListInfo}\n * @private\n */\nshaka.dash.SegmentList.parseSegmentListInfo_ = function(context) {\n  const SegmentList = shaka.dash.SegmentList;\n  const MpdUtils = shaka.dash.MpdUtils;\n\n  let mediaSegments = SegmentList.parseMediaSegments_(context);\n  let segmentInfo =\n      MpdUtils.parseSegmentInfo(context, SegmentList.fromInheritance_);\n\n  let startNumber = segmentInfo.startNumber;\n  if (startNumber == 0) {\n    shaka.log.warning('SegmentList@startNumber must be > 0');\n    startNumber = 1;\n  }\n\n  let startTime = 0;\n  if (segmentInfo.segmentDuration) {\n    // See DASH sec. 5.3.9.5.3\n    // Don't use presentationTimeOffset for @duration.\n    startTime = segmentInfo.segmentDuration * (startNumber - 1);\n  } else if (segmentInfo.timeline && segmentInfo.timeline.length > 0) {\n    // The presentationTimeOffset was considered in timeline creation.\n    startTime = segmentInfo.timeline[0].start;\n  }\n\n  return {\n    segmentDuration: segmentInfo.segmentDuration,\n    startTime: startTime,\n    startNumber: startNumber,\n    scaledPresentationTimeOffset: segmentInfo.scaledPresentationTimeOffset,\n    timeline: segmentInfo.timeline,\n    mediaSegments: mediaSegments,\n  };\n};\n\n\n/**\n * Checks whether a SegmentListInfo object is valid.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.SegmentList.SegmentListInfo} info\n * @throws shaka.util.Error When there is a parsing error.\n * @private\n */\nshaka.dash.SegmentList.checkSegmentListInfo_ = function(context, info) {\n  if (!info.segmentDuration && !info.timeline &&\n      info.mediaSegments.length > 1) {\n    shaka.log.warning(\n        'SegmentList does not contain sufficient segment information:',\n        'the SegmentList specifies multiple segments,',\n        'but does not specify a segment duration or timeline.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_NO_SEGMENT_INFO);\n  }\n\n  if (!info.segmentDuration && !context.periodInfo.duration && !info.timeline &&\n      info.mediaSegments.length == 1) {\n    shaka.log.warning(\n        'SegmentList does not contain sufficient segment information:',\n        'the SegmentList specifies one segment,',\n        'but does not specify a segment duration, period duration,',\n        'or timeline.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_NO_SEGMENT_INFO);\n  }\n\n  if (info.timeline && info.timeline.length == 0) {\n    shaka.log.warning(\n        'SegmentList does not contain sufficient segment information:',\n        'the SegmentList has an empty timeline.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_NO_SEGMENT_INFO);\n  }\n};\n\n\n/**\n * Creates an array of segment references for the given data.\n *\n * @param {?number} periodDuration in seconds.\n * @param {number} startNumber\n * @param {!Array.<string>} baseUris\n * @param {shaka.dash.SegmentList.SegmentListInfo} info\n * @return {!Array.<!shaka.media.SegmentReference>}\n * @private\n */\nshaka.dash.SegmentList.createSegmentReferences_ = function(\n    periodDuration, startNumber, baseUris, info) {\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n\n  let max = info.mediaSegments.length;\n  if (info.timeline && info.timeline.length != info.mediaSegments.length) {\n    max = Math.min(info.timeline.length, info.mediaSegments.length);\n    shaka.log.warning(\n        'The number of items in the segment timeline and the number of segment',\n        'URLs do not match, truncating', info.mediaSegments.length, 'to', max);\n  }\n\n  /** @type {!Array.<!shaka.media.SegmentReference>} */\n  let references = [];\n  let prevEndTime = info.startTime;\n  for (let i = 0; i < max; i++) {\n    let segment = info.mediaSegments[i];\n    let mediaUri = ManifestParserUtils.resolveUris(\n        baseUris, [segment.mediaUri]);\n\n    let startTime = prevEndTime;\n    let endTime;\n\n    if (info.segmentDuration != null) {\n      endTime = startTime + info.segmentDuration;\n    } else if (info.timeline) {\n      // Ignore the timepoint start since they are continuous.\n      endTime = info.timeline[i].end;\n    } else {\n      // If segmentDuration and timeline are null then there must\n      // be exactly one segment.\n      goog.asserts.assert(\n          info.mediaSegments.length == 1 && periodDuration,\n          'There should be exactly one segment with a Period duration.');\n      endTime = startTime + periodDuration;\n    }\n\n    let getUris = (function(uris) { return uris; }.bind(null, mediaUri));\n    references.push(\n        new shaka.media.SegmentReference(\n            i + startNumber, startTime, endTime, getUris, segment.start,\n            segment.end));\n    prevEndTime = endTime;\n  }\n\n  return references;\n};\n\n\n/**\n * Parses the media URIs from the context.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @return {!Array.<shaka.dash.SegmentList.MediaSegment>}\n * @private\n */\nshaka.dash.SegmentList.parseMediaSegments_ = function(context) {\n  const Functional = shaka.util.Functional;\n  /** @type {!Array.<!Element>} */\n  let segmentLists = [\n    context.representation.segmentList,\n    context.adaptationSet.segmentList,\n    context.period.segmentList,\n  ].filter(Functional.isNotNull);\n\n  const XmlUtils = shaka.util.XmlUtils;\n  // Search each SegmentList for one with at least one SegmentURL element,\n  // select the first one, and convert each SegmentURL element to a tuple.\n  return segmentLists\n      .map(function(node) { return XmlUtils.findChildren(node, 'SegmentURL'); })\n      .reduce(function(all, part) { return all.length > 0 ? all : part; })\n      .map(function(urlNode) {\n        if (urlNode.getAttribute('indexRange') &&\n            !context.indexRangeWarningGiven) {\n          context.indexRangeWarningGiven = true;\n          shaka.log.warning(\n              'We do not support the SegmentURL@indexRange attribute on ' +\n              'SegmentList.  We only use the SegmentList@duration attribute ' +\n              'or SegmentTimeline, which must be accurate.');\n        }\n\n        let uri = urlNode.getAttribute('media');\n        let range = XmlUtils.parseAttr(\n            urlNode, 'mediaRange', XmlUtils.parseRange, {start: 0, end: null});\n        return {mediaUri: uri, start: range.start, end: range.end};\n      });\n};\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.dash.SegmentTemplate');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.dash.MpdUtils');\ngoog.require('shaka.dash.SegmentBase');\ngoog.require('shaka.log');\ngoog.require('shaka.media.InitSegmentReference');\ngoog.require('shaka.media.SegmentIndex');\ngoog.require('shaka.media.SegmentReference');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.ManifestParserUtils');\n\n\n/**\n * @namespace shaka.dash.SegmentTemplate\n * @summary A set of functions for parsing SegmentTemplate elements.\n */\n\n\n/**\n * Creates a new Stream object or updates the Stream in the manifest.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.DashParser.RequestInitSegmentCallback} requestInitSegment\n * @param {!Object.<string, !shaka.media.SegmentIndex>} segmentIndexMap\n * @param {boolean} isUpdate True if the manifest is being updated.\n * @throws shaka.util.Error When there is a parsing error.\n * @return {shaka.dash.DashParser.StreamInfo}\n */\nshaka.dash.SegmentTemplate.createStream = function(\n    context, requestInitSegment, segmentIndexMap, isUpdate) {\n  goog.asserts.assert(context.representation.segmentTemplate,\n                      'Should only be called with SegmentTemplate');\n  const SegmentTemplate = shaka.dash.SegmentTemplate;\n\n  let init = SegmentTemplate.createInitSegment_(context);\n  let info = SegmentTemplate.parseSegmentTemplateInfo_(context);\n\n  SegmentTemplate.checkSegmentTemplateInfo_(context, info);\n\n  /** @type {?shaka.dash.DashParser.SegmentIndexFunctions} */\n  let segmentIndexFunctions = null;\n  if (info.indexTemplate) {\n    segmentIndexFunctions = SegmentTemplate.createFromIndexTemplate_(\n        context, requestInitSegment, init, info);\n  } else if (info.segmentDuration) {\n    if (!isUpdate) {\n      context.presentationTimeline.notifyMaxSegmentDuration(\n          info.segmentDuration);\n      context.presentationTimeline.notifyMinSegmentStartTime(\n        context.periodInfo.start);\n    }\n    segmentIndexFunctions = SegmentTemplate.createFromDuration_(context, info);\n  } else {\n    /** @type {shaka.media.SegmentIndex} */\n    let segmentIndex = null;\n    let id = null;\n    if (context.period.id && context.representation.id) {\n      // Only check/store the index if period and representation IDs are set.\n      id = context.period.id + ',' + context.representation.id;\n      segmentIndex = segmentIndexMap[id];\n    }\n\n    let references = SegmentTemplate.createFromTimeline_(context, info);\n\n    // Don't fit live content, since it might receive more segments.\n    // Unless that live content is multi-period; it's safe to fit every period\n    // but the last one, since only the last period might receive new segments.\n    let shouldFit = !context.dynamic || !context.periodInfo.isLastPeriod;\n\n    if (segmentIndex) {\n      if (shouldFit) {\n        // Fit the new references before merging them, so that the merge\n        // algorithm has a more accurate view of their start and end times.\n        let wrapper = new shaka.media.SegmentIndex(references);\n        wrapper.fit(context.periodInfo.duration);\n      }\n\n      segmentIndex.merge(references);\n      let start = context.presentationTimeline.getSegmentAvailabilityStart();\n      segmentIndex.evict(start - context.periodInfo.start);\n    } else {\n      context.presentationTimeline.notifySegments(\n          references, context.periodInfo.start);\n      segmentIndex = new shaka.media.SegmentIndex(references);\n      if (id && context.dynamic) {\n        segmentIndexMap[id] = segmentIndex;\n      }\n    }\n\n    if (shouldFit) {\n      segmentIndex.fit(context.periodInfo.duration);\n    }\n\n    segmentIndexFunctions = {\n      createSegmentIndex: Promise.resolve.bind(Promise),\n      findSegmentPosition: segmentIndex.find.bind(segmentIndex),\n      getSegmentReference: segmentIndex.get.bind(segmentIndex),\n    };\n  }\n\n  return {\n    createSegmentIndex: segmentIndexFunctions.createSegmentIndex,\n    findSegmentPosition: segmentIndexFunctions.findSegmentPosition,\n    getSegmentReference: segmentIndexFunctions.getSegmentReference,\n    initSegmentReference: init,\n    scaledPresentationTimeOffset: info.scaledPresentationTimeOffset,\n  };\n};\n\n\n/**\n * @typedef {{\n *   timescale: number,\n *   segmentDuration: ?number,\n *   startNumber: number,\n *   scaledPresentationTimeOffset: number,\n *   unscaledPresentationTimeOffset: number,\n *   timeline: Array.<shaka.dash.MpdUtils.TimeRange>,\n *   mediaTemplate: ?string,\n *   indexTemplate: ?string\n * }}\n * @private\n *\n * @description\n * Contains information about a SegmentTemplate.\n *\n * @property {number} timescale\n *   The time-scale of the representation.\n * @property {?number} segmentDuration\n *   The duration of the segments in seconds, if given.\n * @property {number} startNumber\n *   The start number of the segments; 1 or greater.\n * @property {number} scaledPresentationTimeOffset\n *   The presentation time offset of the representation, in seconds.\n * @property {number} unscaledPresentationTimeOffset\n *   The presentation time offset of the representation, in timescale units.\n * @property {Array.<shaka.dash.MpdUtils.TimeRange>} timeline\n *   The timeline of the representation, if given.  Times in seconds.\n * @property {?string} mediaTemplate\n *   The media URI template, if given.\n * @property {?string} indexTemplate\n *   The index URI template, if given.\n */\nshaka.dash.SegmentTemplate.SegmentTemplateInfo;\n\n\n/**\n * @param {?shaka.dash.DashParser.InheritanceFrame} frame\n * @return {Element}\n * @private\n */\nshaka.dash.SegmentTemplate.fromInheritance_ = function(frame) {\n  return frame.segmentTemplate;\n};\n\n\n/**\n * Parses a SegmentTemplate element into an info object.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @return {shaka.dash.SegmentTemplate.SegmentTemplateInfo}\n * @private\n */\nshaka.dash.SegmentTemplate.parseSegmentTemplateInfo_ = function(context) {\n  const SegmentTemplate = shaka.dash.SegmentTemplate;\n  const MpdUtils = shaka.dash.MpdUtils;\n  let segmentInfo =\n      MpdUtils.parseSegmentInfo(context, SegmentTemplate.fromInheritance_);\n\n  let media = MpdUtils.inheritAttribute(\n      context, SegmentTemplate.fromInheritance_, 'media');\n  let index = MpdUtils.inheritAttribute(\n      context, SegmentTemplate.fromInheritance_, 'index');\n\n  return {\n    segmentDuration: segmentInfo.segmentDuration,\n    timescale: segmentInfo.timescale,\n    startNumber: segmentInfo.startNumber,\n    scaledPresentationTimeOffset: segmentInfo.scaledPresentationTimeOffset,\n    unscaledPresentationTimeOffset: segmentInfo.unscaledPresentationTimeOffset,\n    timeline: segmentInfo.timeline,\n    mediaTemplate: media,\n    indexTemplate: index,\n  };\n};\n\n\n/**\n * Verifies a SegmentTemplate info object.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.SegmentTemplate.SegmentTemplateInfo} info\n * @throws shaka.util.Error When there is a parsing error.\n * @private\n */\nshaka.dash.SegmentTemplate.checkSegmentTemplateInfo_ = function(context, info) {\n  let n = 0;\n  n += info.indexTemplate ? 1 : 0;\n  n += info.timeline ? 1 : 0;\n  n += info.segmentDuration ? 1 : 0;\n\n  if (n == 0) {\n    shaka.log.error(\n        'SegmentTemplate does not contain any segment information:',\n        'the SegmentTemplate must contain either an index URL template',\n        'a SegmentTimeline, or a segment duration.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_NO_SEGMENT_INFO);\n  } else if (n != 1) {\n    shaka.log.warning(\n        'SegmentTemplate containes multiple segment information sources:',\n        'the SegmentTemplate should only contain an index URL template,',\n        'a SegmentTimeline or a segment duration.',\n        context.representation);\n    if (info.indexTemplate) {\n      shaka.log.info('Using the index URL template by default.');\n      info.timeline = null;\n      info.segmentDuration = null;\n    } else {\n      goog.asserts.assert(info.timeline, 'There should be a timeline');\n      shaka.log.info('Using the SegmentTimeline by default.');\n      info.segmentDuration = null;\n    }\n  }\n\n  if (!info.indexTemplate && !info.mediaTemplate) {\n    shaka.log.error(\n        'SegmentTemplate does not contain sufficient segment information:',\n        'the SegmentTemplate\\'s media URL template is missing.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_NO_SEGMENT_INFO);\n  }\n};\n\n\n/**\n * Creates segment index functions from a index URL template.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.DashParser.RequestInitSegmentCallback} requestInitSegment\n * @param {shaka.media.InitSegmentReference} init\n * @param {shaka.dash.SegmentTemplate.SegmentTemplateInfo} info\n * @throws shaka.util.Error When there is a parsing error.\n * @return {shaka.dash.DashParser.SegmentIndexFunctions}\n * @private\n */\nshaka.dash.SegmentTemplate.createFromIndexTemplate_ = function(\n    context, requestInitSegment, init, info) {\n  const MpdUtils = shaka.dash.MpdUtils;\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n\n  // Determine the container type.\n  let containerType = context.representation.mimeType.split('/')[1];\n  if ((containerType != 'mp4') && (containerType != 'webm')) {\n    shaka.log.error(\n        'SegmentTemplate specifies an unsupported container type.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_UNSUPPORTED_CONTAINER);\n  }\n\n  if ((containerType == 'webm') && !init) {\n    shaka.log.error(\n        'SegmentTemplate does not contain sufficient segment information:',\n        'the SegmentTemplate uses a WebM container,',\n        'but does not contain an initialization URL template.',\n        context.representation);\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_WEBM_MISSING_INIT);\n  }\n\n  goog.asserts.assert(info.indexTemplate, 'must be using index template');\n  let filledTemplate = MpdUtils.fillUriTemplate(\n      info.indexTemplate, context.representation.id,\n      null, context.bandwidth || null, null);\n\n  let resolvedUris = ManifestParserUtils.resolveUris(\n      context.representation.baseUris, [filledTemplate]);\n\n  return shaka.dash.SegmentBase.createSegmentIndexFromUris(\n      context, requestInitSegment, init, resolvedUris, 0, null, containerType,\n      info.scaledPresentationTimeOffset);\n};\n\n\n/**\n * Creates segment index functions from a segment duration.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.SegmentTemplate.SegmentTemplateInfo} info\n * @return {shaka.dash.DashParser.SegmentIndexFunctions}\n * @private\n */\nshaka.dash.SegmentTemplate.createFromDuration_ = function(context, info) {\n  goog.asserts.assert(info.mediaTemplate,\n                      'There should be a media template with duration');\n  const MpdUtils = shaka.dash.MpdUtils;\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n\n  let periodDuration = context.periodInfo.duration;\n  let segmentDuration = info.segmentDuration;\n  let startNumber = info.startNumber;\n  let timescale = info.timescale;\n\n  let template = info.mediaTemplate;\n  let bandwidth = context.bandwidth || null;\n  let id = context.representation.id;\n  let baseUris = context.representation.baseUris;\n\n  let find = function(periodTime) {\n    if (periodTime < 0) {\n      return null;\n    } else if (periodDuration && periodTime >= periodDuration) {\n      return null;\n    }\n\n    return Math.floor(periodTime / segmentDuration);\n  };\n  let get = function(position) {\n    let segmentStart = position * segmentDuration;\n    // Cap the segment end at the period end, to avoid period transition issues\n    // in StreamingEngine.\n    let segmentEnd = segmentStart + segmentDuration;\n    if (periodDuration) segmentEnd = Math.min(segmentEnd, periodDuration);\n\n    // Do not construct segments references that should not exist.\n    if (segmentEnd < 0) {\n      return null;\n    } else if (periodDuration && segmentStart >= periodDuration) {\n      return null;\n    }\n\n    let getUris = function() {\n      let mediaUri = MpdUtils.fillUriTemplate(\n          template, id, position + startNumber, bandwidth,\n          segmentStart * timescale);\n      return ManifestParserUtils.resolveUris(baseUris, [mediaUri]);\n    };\n\n    return new shaka.media.SegmentReference(\n        position, segmentStart, segmentEnd, getUris, 0, null);\n  };\n\n  return {\n    createSegmentIndex: Promise.resolve.bind(Promise),\n    findSegmentPosition: find,\n    getSegmentReference: get,\n  };\n};\n\n\n/**\n * Creates segment references from a timeline.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.SegmentTemplate.SegmentTemplateInfo} info\n * @return {!Array.<!shaka.media.SegmentReference>}\n * @private\n */\nshaka.dash.SegmentTemplate.createFromTimeline_ = function(context, info) {\n  goog.asserts.assert(info.mediaTemplate,\n                      'There should be a media template with a timeline');\n  const MpdUtils = shaka.dash.MpdUtils;\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n\n  /** @type {!Array.<!shaka.media.SegmentReference>} */\n  let references = [];\n  for (let i = 0; i < info.timeline.length; i++) {\n    let start = info.timeline[i].start;\n    let unscaledStart = info.timeline[i].unscaledStart;\n    let end = info.timeline[i].end;\n\n    // Note: i = k - 1, where k indicates the k'th segment listed in the MPD.\n    // (See section 5.3.9.5.3 of the DASH spec.)\n    let segmentReplacement = i + info.startNumber;\n\n    // Consider the presentation time offset in segment uri computation\n    let timeReplacement = unscaledStart +\n        info.unscaledPresentationTimeOffset;\n    let createUris = (function(\n            template, repId, bandwidth, baseUris, segmentId, time) {\n          let mediaUri = MpdUtils.fillUriTemplate(\n              template, repId, segmentId, bandwidth, time);\n          return ManifestParserUtils.resolveUris(baseUris, [mediaUri])\n              .map(function(g) { return g.toString(); });\n        }.bind(null, info.mediaTemplate, context.representation.id,\n               context.bandwidth || null, context.representation.baseUris,\n               segmentReplacement, timeReplacement));\n\n    references.push(new shaka.media.SegmentReference(\n        segmentReplacement, start, end, createUris, 0, null));\n  }\n\n  return references;\n};\n\n\n/**\n * Creates an init segment reference from a context object.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @return {shaka.media.InitSegmentReference}\n * @private\n */\nshaka.dash.SegmentTemplate.createInitSegment_ = function(context) {\n  const MpdUtils = shaka.dash.MpdUtils;\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n  const SegmentTemplate = shaka.dash.SegmentTemplate;\n\n  let initialization = MpdUtils.inheritAttribute(\n      context, SegmentTemplate.fromInheritance_, 'initialization');\n  if (!initialization) {\n    return null;\n  }\n\n  let repId = context.representation.id;\n  let bandwidth = context.bandwidth || null;\n  let baseUris = context.representation.baseUris;\n  let getUris = function() {\n    goog.asserts.assert(initialization, 'Should have returned earler');\n    let filledTemplate = MpdUtils.fillUriTemplate(\n        initialization, repId, null, bandwidth, null);\n    let resolvedUris = ManifestParserUtils.resolveUris(\n        baseUris, [filledTemplate]);\n    return resolvedUris;\n  };\n\n  return new shaka.media.InitSegmentReference(getUris, 0, null);\n};\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.ManifestParser');\n\ngoog.require('goog.Uri');\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.util.Error');\n\n\n/**\n * @namespace shaka.media.ManifestParser\n * @summary An interface to register manifest parsers.\n * @exportDoc\n */\n\n\n/**\n * Contains the parser factory functions indexed by MIME type.\n *\n * @type {!Object.<string, shaka.extern.ManifestParser.Factory>}\n */\nshaka.media.ManifestParser.parsersByMime = {};\n\n\n/**\n * Contains the parser factory functions indexed by file extension.\n *\n * @type {!Object.<string, shaka.extern.ManifestParser.Factory>}\n */\nshaka.media.ManifestParser.parsersByExtension = {};\n\n\n/**\n * Registers a manifest parser by file extension.\n *\n * @param {string} extension The file extension of the manifest.\n * @param {shaka.extern.ManifestParser.Factory} parserFactory The factory\n *   used to create parser instances.\n * @export\n */\nshaka.media.ManifestParser.registerParserByExtension = function(\n    extension, parserFactory) {\n  shaka.media.ManifestParser.parsersByExtension[extension] = parserFactory;\n};\n\n\n/**\n * Registers a manifest parser by MIME type.\n *\n * @param {string} mimeType The MIME type of the manifest.\n * @param {shaka.extern.ManifestParser.Factory} parserFactory The factory\n *   used to create parser instances.\n * @export\n */\nshaka.media.ManifestParser.registerParserByMime = function(\n    mimeType, parserFactory) {\n  shaka.media.ManifestParser.parsersByMime[mimeType] = parserFactory;\n};\n\n\n/**\n * Returns a map of manifest support for well-known types.\n *\n * @return {!Object.<string, boolean>}\n */\nshaka.media.ManifestParser.probeSupport = function() {\n  // Make sure all registered parsers are shown.\n  let support = {};\n  for (let type in shaka.media.ManifestParser.parsersByMime) {\n    support[type] = true;\n  }\n  for (let type in shaka.media.ManifestParser.parsersByExtension) {\n    support[type] = true;\n  }\n\n  // Make sure all well-known types are tested as well, just to show an explicit\n  // false for things people might be expecting.\n  let testMimeTypes = [\n    // DASH\n    'application/dash+xml',\n    // HLS\n    'application/x-mpegurl',\n    'application/vnd.apple.mpegurl',\n    // SmoothStreaming\n    'application/vnd.ms-sstr+xml',\n  ];\n  let testExtensions = [\n    // DASH\n    'mpd',\n    // HLS\n    'm3u8',\n    // SmoothStreaming\n    'ism',\n  ];\n\n  testMimeTypes.forEach(function(type) {\n    support[type] = !!shaka.media.ManifestParser.parsersByMime[type];\n  });\n  testExtensions.forEach(function(type) {\n    support[type] = !!shaka.media.ManifestParser.parsersByExtension[type];\n  });\n\n  return support;\n};\n\n\n/**\n * Finds a manifest parser factory to parse the given manifest.\n *\n * @param {string} uri\n * @param {!shaka.net.NetworkingEngine} netEngine\n * @param {shaka.extern.RetryParameters} retryParams\n * @param {?string} mimeType\n * @return {!Promise.<shaka.extern.ManifestParser.Factory>}\n */\nshaka.media.ManifestParser.getFactory = async function(\n    uri, netEngine, retryParams, mimeType) {\n  try {\n    return await shaka.media.ManifestParser.getFactory_(\n        uri, netEngine, retryParams, mimeType);\n  } catch (error) {\n    goog.asserts.assert(\n        error instanceof shaka.util.Error, 'Incorrect error type');\n\n    error.severity = shaka.util.Error.Severity.CRITICAL;\n\n    throw error;\n  }\n};\n\n\n/**\n * The internal version of |getFactory| which does not ensure the some error\n * constraints as the public |getFactory|.\n *\n * @param {string} uri\n * @param {!shaka.net.NetworkingEngine} netEngine\n * @param {shaka.extern.RetryParameters} retryParams\n * @param {?string} mimeType\n * @return {!Promise.<shaka.extern.ManifestParser.Factory>}\n * @private\n */\nshaka.media.ManifestParser.getFactory_ = async function(\n    uri, netEngine, retryParams, mimeType) {\n  // Try using the mime type we were given.\n  if (mimeType) {\n    let mime = mimeType.toLowerCase();\n    let factory = shaka.media.ManifestParser.parsersByMime[mime];\n\n    if (factory) {\n      return factory;\n    }\n\n    shaka.log.warning(\n        'Could not determine manifest type using mime type ', mime);\n  }\n\n  // Try using the uri extension.\n  let uriObj = new goog.Uri(uri);\n  let uriPieces = uriObj.getPath().split('/');\n  let uriFilename = uriPieces.pop();\n  let filenamePieces = uriFilename.split('.');\n\n  // Only one piece means there is no extension.\n  if (filenamePieces.length > 1) {\n    let extension = filenamePieces.pop().toLowerCase();\n    let factory = shaka.media.ManifestParser.parsersByExtension[extension];\n\n    if (factory) {\n      return factory;\n    }\n\n    shaka.log.warning(\n        'Could not determine manifest type for extension ', extension);\n  } else {\n    shaka.log.warning('Could not find extension for ', uri);\n  }\n\n  let mime = await shaka.media.ManifestParser.getMimeType_(uri,\n                                                           netEngine,\n                                                           retryParams);\n  let factory = shaka.media.ManifestParser.parsersByMime[mime];\n  if (factory) {\n    return factory;\n  }\n\n  shaka.log.warning('Could not determine manifest type using mime type ', mime);\n\n  throw new shaka.util.Error(\n      shaka.util.Error.Severity.CRITICAL,\n      shaka.util.Error.Category.MANIFEST,\n      shaka.util.Error.Code.UNABLE_TO_GUESS_MANIFEST_TYPE,\n      uri);\n};\n\n\n/**\n * @param {string} uri\n * @param {!shaka.net.NetworkingEngine} netEngine\n * @param {shaka.extern.RetryParameters} retryParams\n * @return {!Promise.<string>}\n * @private\n */\nshaka.media.ManifestParser.getMimeType_ = async function(\n    uri, netEngine, retryParams) {\n  const type = shaka.net.NetworkingEngine.RequestType.MANIFEST;\n\n  let request = shaka.net.NetworkingEngine.makeRequest([uri], retryParams);\n  request.method = 'HEAD';\n\n  let response = await netEngine.request(type, request).promise;\n\n  // https://bit.ly/2K9s9kf says this header should always be available,\n  // but just to be safe:\n  let mimeType = response.headers['content-type'];\n  return mimeType ? mimeType.toLowerCase() : '';\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.PresentationTimeline');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.media.SegmentReference');\n\n\n/**\n * Creates a PresentationTimeline.\n *\n * @param {?number} presentationStartTime The wall-clock time, in seconds,\n *   when the presentation started or will start. Only required for live.\n * @param {number} presentationDelay The delay to give the presentation, in\n *   seconds.  Only required for live.\n *\n * @see {shaka.extern.Manifest}\n * @see {@tutorial architecture}\n *\n * @constructor\n * @struct\n * @export\n */\nshaka.media.PresentationTimeline = function(\n    presentationStartTime, presentationDelay) {\n  /** @private {?number} */\n  this.presentationStartTime_ = presentationStartTime;\n\n  /** @private {number} */\n  this.presentationDelay_ = presentationDelay;\n\n  /** @private {number} */\n  this.duration_ = Infinity;\n\n  /** @private {number} */\n  this.segmentAvailabilityDuration_ = Infinity;\n\n  /**\n   * The maximum segment duration (in seconds).  Can be based on explicitly-\n   * known segments or on signalling in the manifest.\n   *\n   * @private {number}\n   */\n  this.maxSegmentDuration_ = 1;\n\n  /**\n   * The minimum segment start time (in seconds, in the presentation timeline)\n   * for segments we explicitly know about.\n   *\n   * This is null if we have no explicit descriptions of segments, such as in\n   * DASH when using SegmentTemplate w/ duration.\n   *\n   * @private {?number}\n   */\n  this.minSegmentStartTime_ = null;\n\n  /**\n   * The maximum segment end time (in seconds, in the presentation timeline) for\n   * segments we explicitly know about.\n   *\n   * This is null if we have no explicit descriptions of segments, such as in\n   * DASH when using SegmentTemplate w/ duration.  When this is non-null, the\n   * presentation start time is calculated from the segment end times.\n   *\n   * @private {?number}\n   */\n  this.maxSegmentEndTime_ = null;\n\n  /** @private {number} */\n  this.clockOffset_ = 0;\n\n  /** @private {boolean} */\n  this.static_ = true;\n\n  /** @private {number} */\n  this.userSeekStart_ = 0;\n};\n\n\n/**\n * @return {number} The presentation's duration in seconds.\n *   Infinity indicates that the presentation continues indefinitely.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.getDuration = function() {\n  return this.duration_;\n};\n\n\n/**\n * @return {number} The presentation's max segment duration in seconds.\n */\nshaka.media.PresentationTimeline.prototype.getMaxSegmentDuration = function() {\n  return this.maxSegmentDuration_;\n};\n\n\n/**\n * Sets the presentation's duration.\n *\n * @param {number} duration The presentation's duration in seconds.\n *   Infinity indicates that the presentation continues indefinitely.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.setDuration = function(duration) {\n  goog.asserts.assert(duration > 0, 'duration must be > 0');\n  this.duration_ = duration;\n};\n\n\n/**\n * @return {?number} The presentation's start time in seconds.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.getPresentationStartTime =\n    function() {\n  return this.presentationStartTime_;\n};\n\n\n/**\n * Sets the clock offset, which is the the difference between the client's clock\n * and the server's clock, in milliseconds (i.e., serverTime = Date.now() +\n * clockOffset).\n *\n * @param {number} offset The clock offset, in ms.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.setClockOffset = function(offset) {\n  this.clockOffset_ = offset;\n};\n\n\n/**\n * Sets the presentation's static flag.\n *\n * @param {boolean} isStatic If true, the presentation is static, meaning all\n *   segments are available at once.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.setStatic = function(isStatic) {\n  // NOTE: the argument name is not \"static\" because that's a keyword in ES6\n  this.static_ = isStatic;\n};\n\n\n/**\n * Sets the presentation's segment availability duration. The segment\n * availability duration should only be set for live.\n *\n * @param {number} segmentAvailabilityDuration The presentation's new segment\n *   availability duration in seconds.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.setSegmentAvailabilityDuration =\n    function(segmentAvailabilityDuration) {\n  goog.asserts.assert(segmentAvailabilityDuration >= 0,\n                      'segmentAvailabilityDuration must be >= 0');\n  this.segmentAvailabilityDuration_ = segmentAvailabilityDuration;\n};\n\n\n/**\n * Sets the presentation delay in seconds.\n *\n * @param {number} delay\n * @export\n */\nshaka.media.PresentationTimeline.prototype.setDelay = function(delay) {\n  // NOTE: This is no longer used internally, but is exported.\n  // So we cannot remove it without deprecating it and waiting one release\n  // cycle, or else we risk breaking custom manifest parsers.\n  goog.asserts.assert(delay >= 0, 'delay must be >= 0');\n  this.presentationDelay_ = delay;\n};\n\n\n/**\n * Gets the presentation delay in seconds.\n * @return {number}\n * @export\n */\nshaka.media.PresentationTimeline.prototype.getDelay = function() {\n  return this.presentationDelay_;\n};\n\n\n/**\n * Gives PresentationTimeline a Stream's segments so it can size and position\n * the segment availability window, and account for missing segment\n * information.  This function should be called once for each Stream (no more,\n * no less).\n *\n * @param {!Array.<!shaka.media.SegmentReference>} references\n * @param {number} periodStart\n * @export\n */\nshaka.media.PresentationTimeline.prototype.notifySegments = function(\n    references, periodStart) {\n  if (references.length == 0) {\n    return;\n  }\n\n  // TODO: Make SegmentReferences use timestamps in the presentation timeline,\n  // not the period timeline.\n  const firstReferenceStartTime = references[0].startTime + periodStart;\n  const lastReferenceEndTime =\n      references[references.length - 1].endTime + periodStart;\n\n  this.notifyMinSegmentStartTime(firstReferenceStartTime);\n\n  this.maxSegmentDuration_ = references.reduce(\n      function(max, r) { return Math.max(max, r.endTime - r.startTime); },\n      this.maxSegmentDuration_);\n\n  this.maxSegmentEndTime_ =\n      Math.max(this.maxSegmentEndTime_, lastReferenceEndTime);\n\n  if (this.presentationStartTime_ != null) {\n    // Since we have explicit segment end times, calculate a presentation start\n    // based on them.  This start time accounts for drift.\n    // Date.now() is in milliseconds, from which we compute \"now\" in seconds.\n    let now = (Date.now() + this.clockOffset_) / 1000.0;\n    this.presentationStartTime_ =\n        now - this.maxSegmentEndTime_ - this.maxSegmentDuration_;\n  }\n\n  shaka.log.v1('notifySegments:',\n               'maxSegmentDuration=' + this.maxSegmentDuration_);\n};\n\n\n/**\n * Gives PresentationTimeline a Stream's minimum segment start time.\n *\n * @param {number} startTime\n * @export\n */\nshaka.media.PresentationTimeline.prototype.notifyMinSegmentStartTime = function(\n    startTime) {\n  if (this.minSegmentStartTime_ == null) {\n    // No data yet, and Math.min(null, startTime) is always 0.  So just store\n    // startTime.\n    this.minSegmentStartTime_ = startTime;\n  } else {\n    this.minSegmentStartTime_ =\n        Math.min(this.minSegmentStartTime_, startTime);\n  }\n};\n\n\n/**\n * Gives PresentationTimeline a Stream's maximum segment duration so it can\n * size and position the segment availability window.  This function should be\n * called once for each Stream (no more, no less), but does not have to be\n * called if notifySegments() is called instead for a particular stream.\n *\n * @param {number} maxSegmentDuration The maximum segment duration for a\n *   particular stream.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.notifyMaxSegmentDuration = function(\n    maxSegmentDuration) {\n  this.maxSegmentDuration_ = Math.max(\n      this.maxSegmentDuration_, maxSegmentDuration);\n\n  shaka.log.v1('notifyNewSegmentDuration:',\n               'maxSegmentDuration=' + this.maxSegmentDuration_);\n};\n\n\n/**\n * Offsets the segment times by the given amount.\n *\n * @param {number} offset The number of seconds to offset by.  A positive number\n *   adjusts the segment times forward.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.offset = function(offset) {\n  if (this.minSegmentStartTime_ != null) {\n    this.minSegmentStartTime_ += offset;\n  }\n  if (this.maxSegmentEndTime_ != null) {\n    this.maxSegmentEndTime_ += offset;\n  }\n};\n\n\n/**\n * @return {boolean} True if the presentation is live; otherwise, return\n *   false.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.isLive = function() {\n  return this.duration_ == Infinity &&\n         !this.static_;\n};\n\n\n/**\n * @return {boolean} True if the presentation is in progress (meaning not live,\n *   but also not completely available); otherwise, return false.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.isInProgress = function() {\n  return this.duration_ != Infinity &&\n         !this.static_;\n};\n\n\n/**\n * Gets the presentation's current segment availability start time.  Segments\n * ending at or before this time should be assumed to be unavailable.\n *\n * @return {number} The current segment availability start time, in seconds,\n *   relative to the start of the presentation.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.getSegmentAvailabilityStart =\n    function() {\n  goog.asserts.assert(this.segmentAvailabilityDuration_ >= 0,\n                      'The availability duration should be positive');\n\n  if (this.segmentAvailabilityDuration_ == Infinity) {\n    return this.userSeekStart_;\n  }\n\n  let end = this.getSegmentAvailabilityEnd();\n  let start = end - this.segmentAvailabilityDuration_;\n  return Math.max(this.userSeekStart_, start);\n};\n\n\n/**\n * Sets the start time of the user-defined seek range.  This is only used for\n * VOD content.\n *\n * @param {number} time\n * @export\n */\nshaka.media.PresentationTimeline.prototype.setUserSeekStart =\n    function(time) {\n  this.userSeekStart_ = time;\n};\n\n\n/**\n * Gets the presentation's current segment availability end time.  Segments\n * starting after this time should be assumed to be unavailable.\n *\n * @return {number} The current segment availability end time, in seconds,\n *   relative to the start of the presentation.  Always returns the\n *   presentation's duration for video-on-demand.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.getSegmentAvailabilityEnd =\n    function() {\n  if (!this.isLive() && !this.isInProgress()) {\n    return this.duration_;\n  }\n\n  return Math.min(this.getLiveEdge_(), this.duration_);\n};\n\n\n/**\n * Gets the seek range start time, offset by the given amount.  This is used to\n * ensure that we don't \"fall\" back out of the seek window while we are\n * buffering.\n *\n * @param {number} offset The offset to add to the start time.\n * @return {number} The current seek start time, in seconds, relative to the\n *   start of the presentation.\n * @export\n */\nshaka.media.PresentationTimeline.prototype.getSafeSeekRangeStart = function(\n    offset) {\n  // The earliest known segment time, ignoring segment availability duration.\n  const earliestSegmentTime =\n      Math.max(this.minSegmentStartTime_, this.userSeekStart_);\n  if (this.segmentAvailabilityDuration_ == Infinity) {\n    return earliestSegmentTime;\n  }\n\n  // AKA the live edge for live streams.\n  const availabilityEnd = this.getSegmentAvailabilityEnd();\n\n  // The ideal availability start, not considering known segments.\n  const availabilityStart = availabilityEnd - this.segmentAvailabilityDuration_;\n\n  // Add the offset to the availability start to ensure that we don't fall\n  // outside the availability window while we buffer; we don't need to add the\n  // offset to earliestSegmentTime since that won't change over time.\n  // Also see: https://github.com/google/shaka-player/issues/692\n  const desiredStart =\n      Math.min(availabilityStart + offset, this.getSeekRangeEnd());\n  return Math.max(earliestSegmentTime, desiredStart);\n};\n\n\n/**\n * Gets the seek range start time.\n *\n * @return {number}\n * @export\n */\nshaka.media.PresentationTimeline.prototype.getSeekRangeStart = function() {\n  return this.getSafeSeekRangeStart(/* offset */ 0);\n};\n\n\n/**\n * Gets the seek range end.\n *\n * @return {number}\n * @export\n */\nshaka.media.PresentationTimeline.prototype.getSeekRangeEnd = function() {\n  let useDelay = this.isLive() || this.isInProgress();\n  let delay = useDelay ? this.presentationDelay_ : 0;\n  return Math.max(0, this.getSegmentAvailabilityEnd() - delay);\n};\n\n\n/**\n * True if the presentation start time is being used to calculate the live edge.\n * Using the presentation start time means that the stream may be subject to\n * encoder drift.  At runtime, we will avoid using the presentation start time\n * whenever possible.\n *\n * @return {boolean}\n * @export\n */\nshaka.media.PresentationTimeline.prototype.usingPresentationStartTime =\n    function() {\n  // If it's VOD, IPR, or an HLS \"event\", we are not using the presentation\n  // start time.\n  if (this.presentationStartTime_ == null) {\n    return false;\n  }\n\n  // If we have explicit segment times, we're not using the presentation\n  // start time.\n  if (this.maxSegmentEndTime_ != null) {\n    return false;\n  }\n\n  return true;\n};\n\n\n/**\n * @return {number} The current presentation time in seconds.\n * @private\n */\nshaka.media.PresentationTimeline.prototype.getLiveEdge_ = function() {\n  goog.asserts.assert(this.presentationStartTime_ != null,\n                      'Cannot compute timeline live edge without start time');\n  // Date.now() is in milliseconds, from which we compute \"now\" in seconds.\n  let now = (Date.now() + this.clockOffset_) / 1000.0;\n  return Math.max(\n      0, now - this.maxSegmentDuration_ - this.presentationStartTime_);\n};\n\n\nif (goog.DEBUG) {\n  /**\n   * Debug only: assert that the timeline parameters make sense for the type of\n   *   presentation (VOD, IPR, live).\n   */\n  shaka.media.PresentationTimeline.prototype.assertIsValid = function() {\n    if (this.isLive()) {\n      // Implied by isLive(): infinite and dynamic.\n      // Live streams should have a start time.\n      goog.asserts.assert(this.presentationStartTime_ != null,\n          'Detected as live stream, but does not match our model of live!');\n    } else if (this.isInProgress()) {\n      // Implied by isInProgress(): finite and dynamic.\n      // IPR streams should have a start time, and segments should not expire.\n      goog.asserts.assert(this.presentationStartTime_ != null &&\n                          this.segmentAvailabilityDuration_ == Infinity,\n          'Detected as IPR stream, but does not match our model of IPR!');\n    } else {  // VOD\n      // VOD segments should not expire and the presentation should be finite\n      // and static.\n      goog.asserts.assert(this.segmentAvailabilityDuration_ == Infinity &&\n                          this.duration_ != Infinity &&\n                          this.static_,\n          'Detected as VOD stream, but does not match our model of VOD!');\n    }\n  };\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.dash.DashParser');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.abr.Ewma');\ngoog.require('shaka.dash.ContentProtection');\ngoog.require('shaka.dash.MpdUtils');\ngoog.require('shaka.dash.SegmentBase');\ngoog.require('shaka.dash.SegmentList');\ngoog.require('shaka.dash.SegmentTemplate');\ngoog.require('shaka.log');\ngoog.require('shaka.media.DrmEngine');\ngoog.require('shaka.media.ManifestParser');\ngoog.require('shaka.media.PresentationTimeline');\ngoog.require('shaka.media.SegmentReference');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.text.TextEngine');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.Functional');\ngoog.require('shaka.util.LanguageUtils');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.MimeUtils');\ngoog.require('shaka.util.OperationManager');\ngoog.require('shaka.util.StringUtils');\ngoog.require('shaka.util.XmlUtils');\n\n\n/**\n * Creates a new DASH parser.\n *\n * @struct\n * @constructor\n * @implements {shaka.extern.ManifestParser}\n * @export\n */\nshaka.dash.DashParser = function() {\n  /** @private {?shaka.extern.ManifestConfiguration} */\n  this.config_ = null;\n\n  /** @private {?shaka.extern.ManifestParser.PlayerInterface} */\n  this.playerInterface_ = null;\n\n  /** @private {!Array.<string>} */\n  this.manifestUris_ = [];\n\n  /** @private {?shaka.extern.Manifest} */\n  this.manifest_ = null;\n\n  /** @private {!Array.<string>} */\n  this.periodIds_ = [];\n\n  /** @private {number} */\n  this.globalId_ = 1;\n\n  /**\n   * A map of IDs to SegmentIndex objects.\n   * ID: Period@id,AdaptationSet@id,@Representation@id\n   * e.g.: '1,5,23'\n   * @private {!Object.<string, !shaka.media.SegmentIndex>}\n   */\n  this.segmentIndexMap_ = {};\n\n  /**\n   * The update period in seconds, or 0 for no updates.\n   * @private {number}\n   */\n  this.updatePeriod_ = 0;\n\n  /**\n   * An ewma that tracks how long updates take.\n   * This is to mitigate issues caused by slow parsing on embedded devices.\n   * @private {!shaka.abr.Ewma}\n   */\n  this.averageUpdateDuration_ = new shaka.abr.Ewma(5);\n\n  /** @private {?number} */\n  this.updateTimer_ = null;\n\n  /** @private {!shaka.util.OperationManager} */\n  this.operationManager_ = new shaka.util.OperationManager();\n};\n\n\n/**\n * Contains the minimum amount of time, in seconds, between manifest update\n * requests.\n *\n * @private\n * @const {number}\n */\nshaka.dash.DashParser.MIN_UPDATE_PERIOD_ = 3;\n\n\n/**\n * @typedef {\n *   function(!Array.<string>, ?number, ?number):!Promise.<!ArrayBuffer>\n * }\n */\nshaka.dash.DashParser.RequestInitSegmentCallback;\n\n\n/**\n * @typedef {{\n *   segmentBase: Element,\n *   segmentList: Element,\n *   segmentTemplate: Element,\n *   baseUris: !Array.<string>,\n *   width: (number|undefined),\n *   height: (number|undefined),\n *   contentType: string,\n *   mimeType: string,\n *   codecs: string,\n *   frameRate: (number|undefined),\n *   emsgSchemeIdUris: !Array.<string>,\n *   id: ?string,\n *   numChannels: ?number\n * }}\n *\n * @description\n * A collection of elements and properties which are inherited across levels\n * of a DASH manifest.\n *\n * @property {Element} segmentBase\n *   The XML node for SegmentBase.\n * @property {Element} segmentList\n *   The XML node for SegmentList.\n * @property {Element} segmentTemplate\n *   The XML node for SegmentTemplate.\n * @property {!Array.<string>} baseUris\n *   An array of absolute base URIs for the frame.\n * @property {(number|undefined)} width\n *   The inherited width value.\n * @property {(number|undefined)} height\n *   The inherited height value.\n * @property {string} contentType\n *   The inherited media type.\n * @property {string} mimeType\n *   The inherited MIME type value.\n * @property {string} codecs\n *   The inherited codecs value.\n * @property {(number|undefined)} frameRate\n *   The inherited framerate value.\n * @property {!Array.<string>} emsgSchemeIdUris\n *   emsg registered schemeIdUris.\n * @property {?string} id\n *   The ID of the element.\n * @property {?number} numChannels\n *   The number of audio channels, or null if unknown.\n */\nshaka.dash.DashParser.InheritanceFrame;\n\n\n/**\n * @typedef {{\n *   dynamic: boolean,\n *   presentationTimeline: !shaka.media.PresentationTimeline,\n *   period: ?shaka.dash.DashParser.InheritanceFrame,\n *   periodInfo: ?shaka.dash.DashParser.PeriodInfo,\n *   adaptationSet: ?shaka.dash.DashParser.InheritanceFrame,\n *   representation: ?shaka.dash.DashParser.InheritanceFrame,\n *   bandwidth: number,\n *   indexRangeWarningGiven: boolean\n * }}\n *\n * @description\n * Contains context data for the streams.\n *\n * @property {boolean} dynamic\n *   True if the MPD is dynamic (not all segments available at once)\n * @property {!shaka.media.PresentationTimeline} presentationTimeline\n *   The PresentationTimeline.\n * @property {?shaka.dash.DashParser.InheritanceFrame} period\n *   The inheritance from the Period element.\n * @property {?shaka.dash.DashParser.PeriodInfo} periodInfo\n *   The Period info for the current Period.\n * @property {?shaka.dash.DashParser.InheritanceFrame} adaptationSet\n *   The inheritance from the AdaptationSet element.\n * @property {?shaka.dash.DashParser.InheritanceFrame} representation\n *   The inheritance from the Representation element.\n * @property {number} bandwidth\n *   The bandwidth of the Representation, or zero if missing.\n * @property {boolean} indexRangeWarningGiven\n *   True if the warning about SegmentURL@indexRange has been printed.\n */\nshaka.dash.DashParser.Context;\n\n\n/**\n * @typedef {{\n *   start: number,\n *   duration: ?number,\n *   node: !Element,\n *   isLastPeriod: boolean\n * }}\n *\n * @description\n * Contains information about a Period element.\n *\n * @property {number} start\n *   The start time of the period.\n * @property {?number} duration\n *   The duration of the period; or null if the duration is not given.  This\n *   will be non-null for all periods except the last.\n * @property {!Element} node\n *   The XML Node for the Period.\n * @property {boolean} isLastPeriod\n *   Whether this Period is the last one in the manifest.\n */\nshaka.dash.DashParser.PeriodInfo;\n\n\n/**\n * @typedef {{\n *   id: string,\n *   contentType: ?string,\n *   language: string,\n *   main: boolean,\n *   streams: !Array.<shaka.extern.Stream>,\n *   drmInfos: !Array.<shaka.extern.DrmInfo>,\n *   trickModeFor: ?string,\n *   representationIds: !Array.<string>\n * }}\n *\n * @description\n * Contains information about an AdaptationSet element.\n *\n * @property {string} id\n *   The unique ID of the adaptation set.\n * @property {?string} contentType\n *   The content type of the AdaptationSet.\n * @property {string} language\n *   The language of the AdaptationSet.\n * @property {boolean} main\n *   Whether the AdaptationSet has the 'main' type.\n * @property {!Array.<shaka.extern.Stream>} streams\n *   The streams this AdaptationSet contains.\n * @property {!Array.<shaka.extern.DrmInfo>} drmInfos\n *   The DRM info for the AdaptationSet.\n * @property {?string} trickModeFor\n *   If non-null, this AdaptationInfo represents trick mode tracks.  This\n *   property is the ID of the normal AdaptationSet these tracks should be\n *   associated with.\n * @property {!Array.<string>} representationIds\n *   An array of the IDs of the Representations this AdaptationSet contains.\n */\nshaka.dash.DashParser.AdaptationInfo;\n\n\n/**\n * @typedef {{\n *   createSegmentIndex: shaka.extern.CreateSegmentIndexFunction,\n *   findSegmentPosition: shaka.extern.FindSegmentPositionFunction,\n *   getSegmentReference: shaka.extern.GetSegmentReferenceFunction\n * }}\n *\n * @description\n * Contains functions used to create and find segment references.  Used as\n * a return value, to temporarily store them before StreamInfo is created.\n *\n * @property {shaka.extern.CreateSegmentIndexFunction} createSegmentIndex\n *   The createSegmentIndex function.\n * @property {shaka.extern.FindSegmentPositionFunction} findSegmentPosition\n *   The findSegmentPosition function.\n * @property {shaka.extern.GetSegmentReferenceFunction} getSegmentReference\n *   The getSegmentReference function.\n */\nshaka.dash.DashParser.SegmentIndexFunctions;\n\n\n/**\n * @typedef {{\n *   createSegmentIndex: shaka.extern.CreateSegmentIndexFunction,\n *   findSegmentPosition: shaka.extern.FindSegmentPositionFunction,\n *   getSegmentReference: shaka.extern.GetSegmentReferenceFunction,\n *   initSegmentReference: shaka.media.InitSegmentReference,\n *   scaledPresentationTimeOffset: number\n * }}\n *\n * @description\n * Contains information about a Stream.  This is passed from the createStream\n * methods.\n *\n * @property {shaka.extern.CreateSegmentIndexFunction} createSegmentIndex\n *   The createSegmentIndex function for the stream.\n * @property {shaka.extern.FindSegmentPositionFunction} findSegmentPosition\n *   The findSegmentPosition function for the stream.\n * @property {shaka.extern.GetSegmentReferenceFunction} getSegmentReference\n *   The getSegmentReference function for the stream.\n * @property {shaka.media.InitSegmentReference} initSegmentReference\n *   The init segment for the stream.\n * @property {number} scaledPresentationTimeOffset\n *   The presentation time offset for the stream, in seconds.\n */\nshaka.dash.DashParser.StreamInfo;\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.dash.DashParser.prototype.configure = function(config) {\n  goog.asserts.assert(config.dash != null,\n                      'DashManifestConfiguration should not be null!');\n\n  this.config_ = config;\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.dash.DashParser.prototype.start = function(uri, playerInterface) {\n  goog.asserts.assert(this.config_, 'Must call configure() before start()!');\n  this.manifestUris_ = [uri];\n  this.playerInterface_ = playerInterface;\n  return this.requestManifest_().then(function(updateDuration) {\n    if (this.playerInterface_) {\n      this.setUpdateTimer_(updateDuration);\n    }\n    return this.manifest_;\n  }.bind(this));\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.dash.DashParser.prototype.stop = function() {\n  this.playerInterface_ = null;\n  this.config_ = null;\n  this.manifestUris_ = [];\n  this.manifest_ = null;\n  this.periodIds_ = [];\n  this.segmentIndexMap_ = {};\n\n  if (this.updateTimer_ != null) {\n    window.clearTimeout(this.updateTimer_);\n    this.updateTimer_ = null;\n  }\n\n  return this.operationManager_.destroy();\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.dash.DashParser.prototype.update = function() {\n  this.requestManifest_().catch(function(error) {\n    if (!this.playerInterface_) return;\n    this.playerInterface_.onError(error);\n  }.bind(this));\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.dash.DashParser.prototype.onExpirationUpdated = function(\n    sessionId, expiration) {\n  // No-op\n};\n\n\n/**\n * Makes a network request for the manifest and parses the resulting data.\n *\n * @return {!Promise.<number>} Resolves with the time it took, in seconds, to\n *   fulfill the request and parse the data.\n * @private\n */\nshaka.dash.DashParser.prototype.requestManifest_ = function() {\n  const requestType = shaka.net.NetworkingEngine.RequestType.MANIFEST;\n  let request = shaka.net.NetworkingEngine.makeRequest(\n      this.manifestUris_, this.config_.retryParameters);\n  let networkingEngine = this.playerInterface_.networkingEngine;\n\n  const startTime = Date.now();\n  let operation = networkingEngine.request(requestType, request);\n  this.operationManager_.manage(operation);\n\n  return operation.promise.then((response) => {\n    // Detect calls to stop().\n    if (!this.playerInterface_) {\n      return;\n    }\n\n    // This may throw, but it will result in a failed promise.\n    return this.parseManifest_(response.data, response.uri);\n  }).then(() => {\n    // Keep track of how long the longest manifest update took.\n    const endTime = Date.now();\n    const updateDuration = (endTime - startTime) / 1000.0;\n    this.averageUpdateDuration_.sample(1, updateDuration);\n\n    // Let the caller know how long this update took.\n    return updateDuration;\n  });\n};\n\n\n/**\n * Parses the manifest XML.  This also handles updates and will update the\n * stored manifest.\n *\n * @param {ArrayBuffer} data\n * @param {string} finalManifestUri The final manifest URI, which may\n *   differ from this.manifestUri_ if there has been a redirect.\n * @return {!Promise}\n * @throws shaka.util.Error When there is a parsing error.\n * @private\n */\nshaka.dash.DashParser.prototype.parseManifest_ =\n    function(data, finalManifestUri) {\n  const Error = shaka.util.Error;\n  const MpdUtils = shaka.dash.MpdUtils;\n\n  let mpd = MpdUtils.parseXml(data, 'MPD');\n  if (!mpd) {\n    throw new Error(\n        Error.Severity.CRITICAL, Error.Category.MANIFEST,\n        Error.Code.DASH_INVALID_XML, finalManifestUri);\n  }\n\n  // Process the mpd to account for xlink connections.\n  let failGracefully = this.config_.dash.xlinkFailGracefully;\n  let xlinkOperation = MpdUtils.processXlinks(\n      mpd, this.config_.retryParameters, failGracefully, finalManifestUri,\n      this.playerInterface_.networkingEngine);\n  this.operationManager_.manage(xlinkOperation);\n  return xlinkOperation.promise.then((finalMpd) => {\n    return this.processManifest_(finalMpd, finalManifestUri);\n  });\n};\n\n\n/**\n * Takes a formatted MPD and converts it into a manifest.\n *\n * @param {!Element} mpd\n * @param {string} finalManifestUri The final manifest URI, which may\n *   differ from this.manifestUri_ if there has been a redirect.\n * @return {!Promise}\n * @throws shaka.util.Error When there is a parsing error.\n * @private\n */\nshaka.dash.DashParser.prototype.processManifest_ =\n    async function(mpd, finalManifestUri) {\n  const Functional = shaka.util.Functional;\n  const XmlUtils = shaka.util.XmlUtils;\n\n  // Get any Location elements.  This will update the manifest location and\n  // the base URI.\n  /** @type {!Array.<string>} */\n  let manifestBaseUris = [finalManifestUri];\n  /** @type {!Array.<string>} */\n  let locations = XmlUtils.findChildren(mpd, 'Location')\n                      .map(XmlUtils.getContents)\n                      .filter(Functional.isNotNull);\n  if (locations.length > 0) {\n    this.manifestUris_ = locations;\n    manifestBaseUris = locations;\n  }\n\n  let uris = XmlUtils.findChildren(mpd, 'BaseURL').map(XmlUtils.getContents);\n  let baseUris = shaka.util.ManifestParserUtils.resolveUris(\n      manifestBaseUris, uris);\n\n  let ignoreMinBufferTime = this.config_.dash.ignoreMinBufferTime;\n  let minBufferTime;\n  if (!ignoreMinBufferTime) {\n    minBufferTime =\n      XmlUtils.parseAttr(mpd, 'minBufferTime', XmlUtils.parseDuration);\n  }\n\n  this.updatePeriod_ = /** @type {number} */ (XmlUtils.parseAttr(\n      mpd, 'minimumUpdatePeriod', XmlUtils.parseDuration, -1));\n\n  let presentationStartTime = XmlUtils.parseAttr(\n      mpd, 'availabilityStartTime', XmlUtils.parseDate);\n  let segmentAvailabilityDuration = XmlUtils.parseAttr(\n      mpd, 'timeShiftBufferDepth', XmlUtils.parseDuration);\n  let suggestedPresentationDelay = XmlUtils.parseAttr(\n      mpd, 'suggestedPresentationDelay', XmlUtils.parseDuration);\n  let maxSegmentDuration = XmlUtils.parseAttr(\n      mpd, 'maxSegmentDuration', XmlUtils.parseDuration);\n  let mpdType = mpd.getAttribute('type') || 'static';\n\n  /** @type {!shaka.media.PresentationTimeline} */\n  let presentationTimeline;\n  if (this.manifest_) {\n    presentationTimeline = this.manifest_.presentationTimeline;\n  } else {\n    // DASH IOP v3.0 suggests using a default delay between minBufferTime and\n    // timeShiftBufferDepth.  This is literally the range of all feasible\n    // choices for the value.  Nothing older than timeShiftBufferDepth is still\n    // available, and anything less than minBufferTime will cause buffering\n    // issues.\n    //\n    // We have decided that our default will be 1.5 * minBufferTime,\n    // or 10s (configurable) whichever is larger.  This is fairly conservative.\n    // Content providers should provide a suggestedPresentationDelay\n    // whenever possible to optimize the live streaming experience.\n    let defaultPresentationDelay = Math.max(\n        this.config_.dash.defaultPresentationDelay,\n        minBufferTime * 1.5);\n    let presentationDelay = suggestedPresentationDelay != null ?\n        suggestedPresentationDelay : defaultPresentationDelay;\n    presentationTimeline = new shaka.media.PresentationTimeline(\n        presentationStartTime, presentationDelay);\n  }\n\n  /** @type {shaka.dash.DashParser.Context} */\n  let context = {\n    // Don't base on updatePeriod_ since emsg boxes can cause manifest updates.\n    dynamic: mpdType != 'static',\n    presentationTimeline: presentationTimeline,\n    period: null,\n    periodInfo: null,\n    adaptationSet: null,\n    representation: null,\n    bandwidth: 0,\n    indexRangeWarningGiven: false,\n  };\n\n  let periodsAndDuration = this.parsePeriods_(context, baseUris, mpd);\n  let duration = periodsAndDuration.duration;\n  let periods = periodsAndDuration.periods;\n\n  presentationTimeline.setStatic(mpdType == 'static');\n  if (mpdType == 'static' || !periodsAndDuration.durationDerivedFromPeriods) {\n    // Ignore duration calculated from Period lengths if this is dynamic.\n    presentationTimeline.setDuration(duration || Infinity);\n  }\n\n  let isLive = presentationTimeline.isLive();\n\n  // If it's live, we check for an override.\n  if (isLive && !isNaN(this.config_.availabilityWindowOverride)) {\n    segmentAvailabilityDuration = this.config_.availabilityWindowOverride;\n  }\n\n  // If it's null, that means segments are always available.  This is always the\n  // case for VOD, and sometimes the case for live.\n  if (segmentAvailabilityDuration == null) {\n    segmentAvailabilityDuration = Infinity;\n  }\n\n  presentationTimeline.setSegmentAvailabilityDuration(\n      segmentAvailabilityDuration);\n\n  // Use @maxSegmentDuration to override smaller, derived values.\n  presentationTimeline.notifyMaxSegmentDuration(maxSegmentDuration || 1);\n  if (goog.DEBUG) presentationTimeline.assertIsValid();\n\n  // These steps are not done on manifest update.\n  if (!this.manifest_) {\n    this.manifest_ = {\n      presentationTimeline: presentationTimeline,\n      periods: periods,\n      offlineSessionIds: [],\n      minBufferTime: minBufferTime || 0,\n    };\n\n    // We only need to do clock sync when we're using presentation start time.\n    // This condition also excludes VOD streams.\n    if (presentationTimeline.usingPresentationStartTime()) {\n      let timingElements = XmlUtils.findChildren(mpd, 'UTCTiming');\n      const offset =\n          await this.parseUtcTiming_(baseUris, timingElements, isLive);\n      // Detect calls to stop().\n      if (!this.playerInterface_) {\n        return;\n      }\n      presentationTimeline.setClockOffset(offset);\n    }\n  }\n};\n\n\n/**\n * Reads and parses the periods from the manifest.  This first does some\n * partial parsing so the start and duration is available when parsing children.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {!Array.<string>} baseUris\n * @param {!Element} mpd\n * @return {{\n *   periods: !Array.<shaka.extern.Period>,\n *   duration: ?number,\n *   durationDerivedFromPeriods: boolean\n * }}\n * @private\n */\nshaka.dash.DashParser.prototype.parsePeriods_ = function(\n    context, baseUris, mpd) {\n  const XmlUtils = shaka.util.XmlUtils;\n  let presentationDuration = XmlUtils.parseAttr(\n      mpd, 'mediaPresentationDuration', XmlUtils.parseDuration);\n\n  let periods = [];\n  let prevEnd = 0;\n  let periodNodes = XmlUtils.findChildren(mpd, 'Period');\n  for (let i = 0; i < periodNodes.length; i++) {\n    let elem = periodNodes[i];\n    let start = /** @type {number} */ (\n        XmlUtils.parseAttr(elem, 'start', XmlUtils.parseDuration, prevEnd));\n    let givenDuration =\n        XmlUtils.parseAttr(elem, 'duration', XmlUtils.parseDuration);\n\n    let periodDuration = null;\n    if (i != periodNodes.length - 1) {\n      // \"The difference between the start time of a Period and the start time\n      // of the following Period is the duration of the media content\n      // represented by this Period.\"\n      let nextPeriod = periodNodes[i + 1];\n      let nextStart =\n          XmlUtils.parseAttr(nextPeriod, 'start', XmlUtils.parseDuration);\n      if (nextStart != null) {\n        periodDuration = nextStart - start;\n      }\n    } else if (presentationDuration != null) {\n      // \"The Period extends until the Period.start of the next Period, or\n      // until the end of the Media Presentation in the case of the last\n      // Period.\"\n      periodDuration = presentationDuration - start;\n    }\n\n    let threshold =\n        shaka.util.ManifestParserUtils.GAP_OVERLAP_TOLERANCE_SECONDS;\n    if (periodDuration && givenDuration &&\n        Math.abs(periodDuration - givenDuration) > threshold) {\n      shaka.log.warning('There is a gap/overlap between Periods', elem);\n    }\n    // Only use the @duration in the MPD if we can't calculate it.  We should\n    // favor the @start of the following Period.  This ensures that there aren't\n    // gaps between Periods.\n    if (periodDuration == null) {\n      periodDuration = givenDuration;\n    }\n\n    // Parse child nodes.\n    let info = {\n      start: start,\n      duration: periodDuration,\n      node: elem,\n      isLastPeriod: periodDuration == null || i == periodNodes.length - 1,\n    };\n    let period = this.parsePeriod_(context, baseUris, info);\n    periods.push(period);\n\n    // If the period ID is new, add it to the list.  This must be done for both\n    // the initial manifest parse and for updates.\n    // See https://github.com/google/shaka-player/issues/963\n    let periodId = context.period.id;\n    goog.asserts.assert(periodId, 'Period IDs should not be null!');\n    if (!this.periodIds_.includes(periodId)) {\n      this.periodIds_.push(periodId);\n\n      // If this is an update, call filterNewPeriod and add it to the manifest.\n      // If this is the first parse of the manifest (this.manifest_ == null),\n      // filterAllPeriods will be called later.\n      if (this.manifest_) {\n        this.playerInterface_.filterNewPeriod(period);\n        this.manifest_.periods.push(period);\n      }\n    }\n\n    if (periodDuration == null) {\n      if (i != periodNodes.length - 1) {\n        // If the duration is still null and we aren't at the end, then we will\n        // skip any remaining periods.\n        shaka.log.warning(\n            'Skipping Period', i + 1, 'and any subsequent Periods:', 'Period',\n            i + 1, 'does not have a valid start time.', periods[i + 1]);\n      }\n\n      // The duration is unknown, so the end is unknown.\n      prevEnd = null;\n      break;\n    }\n\n    prevEnd = start + periodDuration;\n  } // end of period parsing loop\n\n  // Call filterAllPeriods if this is the initial parse.\n  if (this.manifest_ == null) {\n    this.playerInterface_.filterAllPeriods(periods);\n  }\n\n  if (presentationDuration != null) {\n    if (prevEnd != presentationDuration) {\n      shaka.log.warning(\n          '@mediaPresentationDuration does not match the total duration of all',\n          'Periods.');\n      // Assume @mediaPresentationDuration is correct.\n    }\n    return {\n      periods: periods,\n      duration: presentationDuration,\n      durationDerivedFromPeriods: false,\n    };\n  } else {\n    return {\n      periods: periods,\n      duration: prevEnd,\n      durationDerivedFromPeriods: true,\n    };\n  }\n};\n\n\n/**\n * Parses a Period XML element.  Unlike the other parse methods, this is not\n * given the Node; it is given a PeriodInfo structure.  Also, partial parsing\n * was done before this was called so start and duration are valid.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {!Array.<string>} baseUris\n * @param {shaka.dash.DashParser.PeriodInfo} periodInfo\n * @return {shaka.extern.Period}\n * @throws shaka.util.Error When there is a parsing error.\n * @private\n */\nshaka.dash.DashParser.prototype.parsePeriod_ = function(\n    context, baseUris, periodInfo) {\n  const Functional = shaka.util.Functional;\n  const XmlUtils = shaka.util.XmlUtils;\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  context.period = this.createFrame_(periodInfo.node, null, baseUris);\n  context.periodInfo = periodInfo;\n\n  // If the period doesn't have an ID, give it one based on its start time.\n  if (!context.period.id) {\n    shaka.log.info(\n        'No Period ID given for Period with start time ' + periodInfo.start +\n        ',  Assigning a default');\n    context.period.id = '__shaka_period_' + periodInfo.start;\n  }\n\n  let eventStreamNodes = XmlUtils.findChildren(periodInfo.node, 'EventStream');\n  eventStreamNodes.forEach(\n      this.parseEventStream_.bind(this, periodInfo.start, periodInfo.duration));\n\n  let adaptationSetNodes =\n      XmlUtils.findChildren(periodInfo.node, 'AdaptationSet');\n  let adaptationSets = adaptationSetNodes\n      .map(this.parseAdaptationSet_.bind(this, context))\n      .filter(Functional.isNotNull);\n\n  // For dynamic manifests, we use rep IDs internally, and they must be unique.\n  if (context.dynamic) {\n    const ids = [];\n    for (const set of adaptationSets) {\n      for (const id of set.representationIds) {\n        ids.push(id);\n      }\n    }\n\n    const uniqueIds = new Set(ids);\n\n    if (ids.length != uniqueIds.size) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.MANIFEST,\n          shaka.util.Error.Code.DASH_DUPLICATE_REPRESENTATION_ID);\n    }\n  }\n\n  let normalAdaptationSets = adaptationSets\n      .filter(function(as) { return !as.trickModeFor; });\n\n  let trickModeAdaptationSets = adaptationSets\n      .filter(function(as) { return as.trickModeFor; });\n\n  // Attach trick mode tracks to normal tracks.\n  trickModeAdaptationSets.forEach(function(trickModeSet) {\n    // There may be multiple trick mode streams, but we do not currently\n    // support that.  Just choose one.\n    let trickModeVideo = trickModeSet.streams[0];\n    let targetId = trickModeSet.trickModeFor;\n    normalAdaptationSets.forEach(function(normalSet) {\n      if (normalSet.id == targetId) {\n        normalSet.streams.forEach(function(stream) {\n          stream.trickModeVideo = trickModeVideo;\n        });\n      }\n    });\n  });\n\n  let videoSets = this.getSetsOfType_(normalAdaptationSets, ContentType.VIDEO);\n  let audioSets = this.getSetsOfType_(normalAdaptationSets, ContentType.AUDIO);\n\n  if (!videoSets.length && !audioSets.length) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_EMPTY_PERIOD);\n  }\n\n  // In case of audio-only or video-only content, we create an array of one item\n  // containing a null.  This way, the double-loop works for all kinds of\n  // content.\n  if (!audioSets.length) {\n    audioSets = [null];\n  }\n  if (!videoSets.length) {\n    videoSets = [null];\n  }\n\n  // TODO: Limit number of combinations.  Come up with a heuristic\n  // to decide which audio tracks to combine with which video tracks.\n  let variants = [];\n  for (let i = 0; i < audioSets.length; i++) {\n    for (let j = 0; j < videoSets.length; j++) {\n      let audioSet = audioSets[i];\n      let videoSet = videoSets[j];\n      this.createVariants_(audioSet, videoSet, variants);\n    }\n  }\n\n  let textSets = this.getSetsOfType_(normalAdaptationSets, ContentType.TEXT);\n  let textStreams = [];\n  for (let i = 0; i < textSets.length; i++) {\n    textStreams.push.apply(textStreams, textSets[i].streams);\n  }\n\n  return {\n    startTime: periodInfo.start,\n    textStreams: textStreams,\n    variants: variants,\n  };\n};\n\n\n/**\n * @param {!Array.<!shaka.dash.DashParser.AdaptationInfo>} adaptationSets\n * @param {string} type\n * @return {!Array.<!shaka.dash.DashParser.AdaptationInfo>}\n * @private\n */\nshaka.dash.DashParser.prototype.getSetsOfType_ = function(\n    adaptationSets, type) {\n  return adaptationSets.filter(function(as) {\n    return as.contentType == type;\n  });\n};\n\n\n/**\n * Combines Streams into Variants\n *\n * @param {?shaka.dash.DashParser.AdaptationInfo} audio\n * @param {?shaka.dash.DashParser.AdaptationInfo} video\n * @param {!Array.<shaka.extern.Variant>} variants New variants are pushed onto\n *   this array.\n * @private\n */\nshaka.dash.DashParser.prototype.createVariants_ =\n    function(audio, video, variants) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  // Since both audio and video are of the same type, this assertion will catch\n  // certain mistakes at runtime that the compiler would miss.\n  goog.asserts.assert(!audio || audio.contentType == ContentType.AUDIO,\n                      'Audio parameter mismatch!');\n  goog.asserts.assert(!video || video.contentType == ContentType.VIDEO,\n                      'Video parameter mismatch!');\n\n  /** @type {number} */\n  let bandwidth;\n  /** @type {shaka.extern.Variant} */\n  let variant;\n\n  if (!audio && !video) {\n    return;\n  }\n\n  if (audio && video) {\n    // Audio+video variants\n    const DrmEngine = shaka.media.DrmEngine;\n    if (DrmEngine.areDrmCompatible(audio.drmInfos, video.drmInfos)) {\n      let drmInfos = DrmEngine.getCommonDrmInfos(audio.drmInfos,\n                                                 video.drmInfos);\n\n      for (let i = 0; i < audio.streams.length; i++) {\n        for (let j = 0; j < video.streams.length; j++) {\n          bandwidth =\n              (video.streams[j].bandwidth || 0) +\n              (audio.streams[i].bandwidth || 0);\n          variant = {\n            id: this.globalId_++,\n            language: audio.language,\n            primary: audio.main || video.main,\n            audio: audio.streams[i],\n            video: video.streams[j],\n            bandwidth: bandwidth,\n            drmInfos: drmInfos,\n            allowedByApplication: true,\n            allowedByKeySystem: true,\n          };\n\n          variants.push(variant);\n        }\n      }\n    }\n  } else {\n    // Audio or video only variants\n    let set = audio || video;\n    for (let i = 0; i < set.streams.length; i++) {\n      bandwidth = set.streams[i].bandwidth || 0;\n      variant = {\n        id: this.globalId_++,\n        language: set.language || 'und',\n        primary: set.main,\n        audio: audio ? set.streams[i] : null,\n        video: video ? set.streams[i] : null,\n        bandwidth: bandwidth,\n        drmInfos: set.drmInfos,\n        allowedByApplication: true,\n        allowedByKeySystem: true,\n      };\n\n      variants.push(variant);\n    }\n  }\n};\n\n\n/**\n * Parses an AdaptationSet XML element.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {!Element} elem The AdaptationSet element.\n * @return {?shaka.dash.DashParser.AdaptationInfo}\n * @throws shaka.util.Error When there is a parsing error.\n * @private\n */\nshaka.dash.DashParser.prototype.parseAdaptationSet_ = function(context, elem) {\n  const XmlUtils = shaka.util.XmlUtils;\n  const Functional = shaka.util.Functional;\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n  const ContentType = ManifestParserUtils.ContentType;\n\n  context.adaptationSet = this.createFrame_(elem, context.period, null);\n\n  let main = false;\n  let roleElements = XmlUtils.findChildren(elem, 'Role');\n  let roleValues = roleElements.map(function(role) {\n    return role.getAttribute('value');\n  }).filter(Functional.isNotNull);\n\n  // Default kind for text streams is 'subtitle' if unspecified in the manifest.\n  let kind = undefined;\n  const isText =\n      context.adaptationSet.contentType == ManifestParserUtils.ContentType.TEXT;\n  if (isText) {\n    kind = ManifestParserUtils.TextStreamKind.SUBTITLE;\n  }\n\n  for (let i = 0; i < roleElements.length; i++) {\n    let scheme = roleElements[i].getAttribute('schemeIdUri');\n    if (scheme == null || scheme == 'urn:mpeg:dash:role:2011') {\n      // These only apply for the given scheme, but allow them to be specified\n      // if there is no scheme specified.\n      // See: DASH section 5.8.5.5\n      let value = roleElements[i].getAttribute('value');\n      switch (value) {\n        case 'main':\n          main = true;\n          break;\n        case 'caption':\n        case 'subtitle':\n          kind = value;\n          break;\n      }\n    }\n  }\n\n  let essentialProperties = XmlUtils.findChildren(elem, 'EssentialProperty');\n  // ID of real AdaptationSet if this is a trick mode set:\n  let trickModeFor = null;\n  let unrecognizedEssentialProperty = false;\n  essentialProperties.forEach(function(prop) {\n    let schemeId = prop.getAttribute('schemeIdUri');\n    if (schemeId == 'http://dashif.org/guidelines/trickmode') {\n      trickModeFor = prop.getAttribute('value');\n    } else {\n      unrecognizedEssentialProperty = true;\n    }\n  });\n\n  const accessibilities = XmlUtils.findChildren(elem, 'Accessibility');\n  const LanguageUtils = shaka.util.LanguageUtils;\n  let closedCaptions = new Map();\n  for (const prop of accessibilities) {\n    let schemeId = prop.getAttribute('schemeIdUri');\n    if (schemeId == 'urn:scte:dash:cc:cea-608:2015' ||\n        schemeId == 'urn:scte:dash:cc:cea-708:2015') {\n      let channelId = 1;\n      let closedCaptionsValue = prop.getAttribute('value');\n      if (closedCaptionsValue != null) {\n        closedCaptionsValue.split(';').forEach((captionStr) => {\n          let channel;\n          let language;\n          // Some closed caption descriptions have channel number and language,\n          // like \"CC1=eng\" or \"1=lang:eng\", others may only have the language,\n          // like \"eng\".\n          if (!captionStr.includes('=')) {\n            // Since only odd numbers are used as channel numbers, like CC1,\n            // CC3, CC5, etc, when the channel number is not provided, use an\n            // odd number as the key. https://en.wikipedia.org/wiki/EIA-608\n            channel = 'CC' + channelId;\n            channelId += 2;\n            language = captionStr;\n          } else {\n            const channelAndLanguage = captionStr.split('=');\n            // The channel info can be '1' or 'CC1'.\n            // If the channel info only has channel number(like '1'), add 'CC'\n            // as prefix so that it can be a full channel id (like 'CC1').\n            channel = channelAndLanguage[0].startsWith('CC') ?\n                channelAndLanguage[0] : 'CC' + channelAndLanguage[0];\n            // The language info can be different formats, like 'eng',\n            // 'lang:eng', or 'lang:eng,war:1,er:1'. Extract the language info\n            // and convert it to 2-letter language code format.\n            language = channelAndLanguage[1].split(',')[0].split(':').pop();\n          }\n          closedCaptions.set(channel, LanguageUtils.normalize(language));\n        });\n      } else {\n        // If channel and language information has not been provided, assign\n        // 'CC1' as channel id and 'und' as language info.\n        closedCaptions.set('CC1', 'und');\n      }\n    }\n  }\n\n  // According to DASH spec (2014) section 5.8.4.8, \"the successful processing\n  // of the descriptor is essential to properly use the information in the\n  // parent element\".  According to DASH IOP v3.3, section 3.3.4, \"if the scheme\n  // or the value\" for EssentialProperty is not recognized, \"the DASH client\n  // shall ignore the parent element.\"\n  if (unrecognizedEssentialProperty) {\n    // Stop parsing this AdaptationSet and let the caller filter out the nulls.\n    return null;\n  }\n\n  let contentProtectionElems = XmlUtils.findChildren(elem, 'ContentProtection');\n  let contentProtection = shaka.dash.ContentProtection.parseFromAdaptationSet(\n      contentProtectionElems, this.config_.dash.customScheme,\n      this.config_.dash.ignoreDrmInfo);\n\n  let language =\n      shaka.util.LanguageUtils.normalize(elem.getAttribute('lang') || 'und');\n\n  // This attribute is currently non-standard, but it is supported by Kaltura.\n  let label = elem.getAttribute('label');\n\n  // Parse Representations into Streams.\n  let representations = XmlUtils.findChildren(elem, 'Representation');\n  let streams = representations\n      .map(this.parseRepresentation_.bind(this, context, contentProtection,\n          kind, language, label, main, roleValues, closedCaptions))\n      .filter(function(s) { return !!s; });\n\n  if (streams.length == 0) {\n    // Ignore empty AdaptationSets if they are for text content.\n    if (isText) {\n      return null;\n    }\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.DASH_EMPTY_ADAPTATION_SET);\n  }\n\n  // If AdaptationSet's type is unknown or is ambiguously \"application\",\n  // guess based on the information in the first stream.  If the attributes\n  // mimeType and codecs are split across levels, they will both be inherited\n  // down to the stream level by this point, so the stream will have all the\n  // necessary information.\n  if (!context.adaptationSet.contentType ||\n      context.adaptationSet.contentType == ContentType.APPLICATION) {\n    let mimeType = streams[0].mimeType;\n    let codecs = streams[0].codecs;\n    context.adaptationSet.contentType =\n        shaka.dash.DashParser.guessContentType_(mimeType, codecs);\n\n    streams.forEach(function(stream) {\n      stream.type = context.adaptationSet.contentType;\n    });\n  }\n\n  streams.forEach(function(stream) {\n    // Some DRM license providers require that we have a default\n    // key ID from the manifest in the wrapped license request.\n    // Thus, it should be put in drmInfo to be accessible to request filters.\n    contentProtection.drmInfos.forEach(function(drmInfo) {\n      if (stream.keyId) {\n        drmInfo.keyIds.push(stream.keyId);\n      }\n    });\n  });\n\n  let repIds = representations\n      .map(function(node) { return node.getAttribute('id'); })\n      .filter(shaka.util.Functional.isNotNull);\n\n  return {\n    id: context.adaptationSet.id || ('__fake__' + this.globalId_++),\n    contentType: context.adaptationSet.contentType,\n    language: language,\n    main: main,\n    streams: streams,\n    drmInfos: contentProtection.drmInfos,\n    trickModeFor: trickModeFor,\n    representationIds: repIds,\n  };\n};\n\n\n/**\n * Parses a Representation XML element.\n *\n * @param {shaka.dash.DashParser.Context} context\n * @param {shaka.dash.ContentProtection.Context} contentProtection\n * @param {(string|undefined)} kind\n * @param {string} language\n * @param {string} label\n * @param {boolean} isPrimary\n * @param {!Array.<string>} roles\n * @param {Map.<string, string>} closedCaptions\n * @param {!Element} node\n * @return {?shaka.extern.Stream} The Stream, or null when there is a\n *   non-critical parsing error.\n * @throws shaka.util.Error When there is a parsing error.\n * @private\n */\nshaka.dash.DashParser.prototype.parseRepresentation_ = function(\n    context, contentProtection, kind, language, label, isPrimary, roles,\n    closedCaptions, node) {\n  const XmlUtils = shaka.util.XmlUtils;\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  context.representation = this.createFrame_(node, context.adaptationSet, null);\n  if (!this.verifyRepresentation_(context.representation)) {\n    shaka.log.warning('Skipping Representation', context.representation);\n    return null;\n  }\n\n  // NOTE: bandwidth is a mandatory attribute according to the spec, and zero\n  // does not make sense in the DASH spec's bandwidth formulas.\n  // In some content, however, the attribute is missing or zero.\n  // To avoid NaN at the variant level on broken content, fall back to zero.\n  // https://github.com/google/shaka-player/issues/938#issuecomment-317278180\n  context.bandwidth =\n      XmlUtils.parseAttr(node, 'bandwidth', XmlUtils.parsePositiveInt) || 0;\n\n  /** @type {?shaka.dash.DashParser.StreamInfo} */\n  let streamInfo;\n\n  const contentType = context.representation.contentType;\n  const isText = contentType == ContentType.TEXT ||\n                 contentType == ContentType.APPLICATION;\n\n  try {\n    const requestInitSegment = this.requestInitSegment_.bind(this);\n    if (context.representation.segmentBase) {\n      streamInfo = shaka.dash.SegmentBase.createStream(\n          context, requestInitSegment);\n    } else if (context.representation.segmentList) {\n      streamInfo = shaka.dash.SegmentList.createStream(\n          context, this.segmentIndexMap_);\n    } else if (context.representation.segmentTemplate) {\n      streamInfo = shaka.dash.SegmentTemplate.createStream(\n          context, requestInitSegment, this.segmentIndexMap_, !!this.manifest_);\n    } else {\n      goog.asserts.assert(isText,\n          'Must have Segment* with non-text streams.');\n\n      let baseUris = context.representation.baseUris;\n      let duration = context.periodInfo.duration || 0;\n      streamInfo = {\n        createSegmentIndex: Promise.resolve.bind(Promise),\n        findSegmentPosition:\n            /** @return {?number} */ function(/** number */ time) {\n              if (time >= 0 && time < duration) {\n                return 1;\n              } else {\n                return null;\n              }\n            },\n        getSegmentReference:\n            /** @return {shaka.media.SegmentReference} */\n            function(/** number */ ref) {\n              if (ref != 1) {\n                return null;\n              }\n\n              return new shaka.media.SegmentReference(\n                  1, 0, duration, function() { return baseUris; }, 0, null);\n            },\n        initSegmentReference: null,\n        scaledPresentationTimeOffset: 0,\n      };\n    }\n  } catch (error) {\n    if (isText && error.code == shaka.util.Error.Code.DASH_NO_SEGMENT_INFO) {\n      // We will ignore any DASH_NO_SEGMENT_INFO errors for text streams.\n      return null;\n    }\n\n    // For anything else, re-throw.\n    throw error;\n  }\n\n  let contentProtectionElems = XmlUtils.findChildren(node, 'ContentProtection');\n  let keyId = shaka.dash.ContentProtection.parseFromRepresentation(\n      contentProtectionElems, this.config_.dash.customScheme,\n      contentProtection, this.config_.dash.ignoreDrmInfo);\n\n  return {\n    id: this.globalId_++,\n    originalId: context.representation.id,\n    createSegmentIndex: streamInfo.createSegmentIndex,\n    findSegmentPosition: streamInfo.findSegmentPosition,\n    getSegmentReference: streamInfo.getSegmentReference,\n    initSegmentReference: streamInfo.initSegmentReference,\n    presentationTimeOffset: streamInfo.scaledPresentationTimeOffset,\n    mimeType: context.representation.mimeType,\n    codecs: context.representation.codecs,\n    frameRate: context.representation.frameRate,\n    bandwidth: context.bandwidth,\n    width: context.representation.width,\n    height: context.representation.height,\n    kind: kind,\n    encrypted: contentProtection.drmInfos.length > 0,\n    keyId: keyId,\n    language: language,\n    label: label,\n    type: context.adaptationSet.contentType,\n    primary: isPrimary,\n    trickModeVideo: null,\n    emsgSchemeIdUris:\n        context.representation.emsgSchemeIdUris,\n    roles: roles,\n    channelsCount: context.representation.numChannels,\n    closedCaptions: closedCaptions,\n  };\n};\n\n\n/**\n * Called when the update timer ticks.\n *\n * @private\n */\nshaka.dash.DashParser.prototype.onUpdate_ = function() {\n  goog.asserts.assert(this.updateTimer_, 'Should only be called by timer');\n  goog.asserts.assert(this.updatePeriod_ >= 0,\n                      'There should be an update period');\n\n  shaka.log.info('Updating manifest...');\n\n  this.updateTimer_ = null;\n\n  this.requestManifest_().then(function(updateDuration) {\n    // Detect a call to stop()\n    if (!this.playerInterface_) {\n      return;\n    }\n\n    // Ensure the next update occurs within |updatePeriod_| seconds by taking\n    // into account the time it took to update the manifest.\n    this.setUpdateTimer_(updateDuration);\n  }.bind(this)).catch(function(error) {\n    goog.asserts.assert(error instanceof shaka.util.Error,\n                        'Should only receive a Shaka error');\n\n    // Try updating again, but ensure we haven't been destroyed.\n    if (this.playerInterface_) {\n      // We will retry updating, so override the severity of the error.\n      error.severity = shaka.util.Error.Severity.RECOVERABLE;\n      this.playerInterface_.onError(error);\n\n      this.setUpdateTimer_(0);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Sets the update timer.  Does nothing if the manifest does not specify an\n * update period.\n *\n * @param {number} offset An offset, in seconds, to apply to the manifest's\n *   update period.\n * @private\n */\nshaka.dash.DashParser.prototype.setUpdateTimer_ = function(offset) {\n  // NOTE: An updatePeriod_ of -1 means the attribute was missing.\n  // An attribute which is present and set to 0 should still result in periodic\n  // updates.  For more, see: https://github.com/google/shaka-player/issues/331\n  if (this.updatePeriod_ < 0) {\n    return;\n  }\n  goog.asserts.assert(this.updateTimer_ == null,\n                      'Timer should not be already set');\n\n  let period = Math.max(\n      shaka.dash.DashParser.MIN_UPDATE_PERIOD_,\n      this.updatePeriod_ - offset,\n      this.averageUpdateDuration_.getEstimate());\n  shaka.log.debug('actual update period', period);\n\n  let callback = this.onUpdate_.bind(this);\n  this.updateTimer_ = window.setTimeout(callback, 1000 * period);\n};\n\n\n/**\n * Creates a new inheritance frame for the given element.\n *\n * @param {!Element} elem\n * @param {?shaka.dash.DashParser.InheritanceFrame} parent\n * @param {Array.<string>} baseUris\n * @return {shaka.dash.DashParser.InheritanceFrame}\n * @private\n */\nshaka.dash.DashParser.prototype.createFrame_ = function(\n    elem, parent, baseUris) {\n  goog.asserts.assert(parent || baseUris,\n                      'Must provide either parent or baseUris');\n  const ManifestParserUtils = shaka.util.ManifestParserUtils;\n  const XmlUtils = shaka.util.XmlUtils;\n  parent = parent || /** @type {shaka.dash.DashParser.InheritanceFrame} */ ({\n    contentType: '',\n    mimeType: '',\n    codecs: '',\n    emsgSchemeIdUris: [],\n    frameRate: undefined,\n    numChannels: null,\n  });\n  baseUris = baseUris || parent.baseUris;\n\n  let parseNumber = XmlUtils.parseNonNegativeInt;\n  let evalDivision = XmlUtils.evalDivision;\n  let uris = XmlUtils.findChildren(elem, 'BaseURL').map(XmlUtils.getContents);\n\n  let contentType = elem.getAttribute('contentType') || parent.contentType;\n  let mimeType = elem.getAttribute('mimeType') || parent.mimeType;\n  let codecs = elem.getAttribute('codecs') || parent.codecs;\n  let frameRate =\n      XmlUtils.parseAttr(elem, 'frameRate', evalDivision) || parent.frameRate;\n  let emsgSchemeIdUris = this.emsgSchemeIdUris_(\n      XmlUtils.findChildren(elem, 'InbandEventStream'),\n      parent.emsgSchemeIdUris);\n  let audioChannelConfigs =\n      XmlUtils.findChildren(elem, 'AudioChannelConfiguration');\n  let numChannels =\n      this.parseAudioChannels_(audioChannelConfigs) || parent.numChannels;\n\n  if (!contentType) {\n    contentType = shaka.dash.DashParser.guessContentType_(mimeType, codecs);\n  }\n\n  return {\n    baseUris: ManifestParserUtils.resolveUris(baseUris, uris),\n    segmentBase: XmlUtils.findChild(elem, 'SegmentBase') || parent.segmentBase,\n    segmentList: XmlUtils.findChild(elem, 'SegmentList') || parent.segmentList,\n    segmentTemplate:\n        XmlUtils.findChild(elem, 'SegmentTemplate') || parent.segmentTemplate,\n    width: XmlUtils.parseAttr(elem, 'width', parseNumber) || parent.width,\n    height: XmlUtils.parseAttr(elem, 'height', parseNumber) || parent.height,\n    contentType: contentType,\n    mimeType: mimeType,\n    codecs: codecs,\n    frameRate: frameRate,\n    emsgSchemeIdUris: emsgSchemeIdUris,\n    id: elem.getAttribute('id'),\n    numChannels: numChannels,\n  };\n};\n\n/**\n * Returns a new array of InbandEventStream schemeIdUri containing the union of\n * the ones parsed from inBandEventStreams and the ones provided in\n * emsgSchemeIdUris.\n *\n * @param {!Array.<!Element>} inBandEventStreams Array of InbandEventStream\n *     elements to parse and add to the returned array.\n * @param {!Array.<string>} emsgSchemeIdUris Array of parsed\n *     InbandEventStream schemeIdUri attributes to add to the returned array.\n * @return {!Array.<string>} schemeIdUris Array of parsed\n *     InbandEventStream schemeIdUri attributes.\n * @private\n */\nshaka.dash.DashParser.prototype.emsgSchemeIdUris_ = function(\n    inBandEventStreams, emsgSchemeIdUris) {\n  let schemeIdUris = emsgSchemeIdUris.slice();\n  for (let event of inBandEventStreams) {\n    let schemeIdUri = event.getAttribute('schemeIdUri');\n    if (!schemeIdUris.includes(schemeIdUri)) {\n      schemeIdUris.push(schemeIdUri);\n    }\n  }\n  return schemeIdUris;\n};\n\n/**\n * @param {!Array.<!Element>} audioChannelConfigs An array of\n *   AudioChannelConfiguration elements.\n * @return {?number} The number of audio channels, or null if unknown.\n * @private\n */\nshaka.dash.DashParser.prototype.parseAudioChannels_ =\n    function(audioChannelConfigs) {\n  for (let i = 0; i < audioChannelConfigs.length; ++i) {\n    let elem = audioChannelConfigs[i];\n\n    let scheme = elem.getAttribute('schemeIdUri');\n    if (!scheme) continue;\n\n    let value = elem.getAttribute('value');\n    if (!value) continue;\n\n    switch (scheme) {\n      case 'urn:mpeg:dash:outputChannelPositionList:2012':\n        // A space-separated list of speaker positions, so the number of\n        // channels is the length of this list.\n        return value.trim().split(/ +/).length;\n\n      case 'urn:mpeg:dash:23003:3:audio_channel_configuration:2011':\n      case 'urn:dts:dash:audio_channel_configuration:2012': {\n        // As far as we can tell, this is a number of channels.\n        let intValue = parseInt(value, 10);\n        if (!intValue) {  // 0 or NaN\n          shaka.log.warning('Channel parsing failure! ' +\n                            'Ignoring scheme and value', scheme, value);\n          continue;\n        }\n        return intValue;\n      }\n\n      case 'tag:dolby.com,2014:dash:audio_channel_configuration:2011':\n      case 'urn:dolby:dash:audio_channel_configuration:2011': {\n        // A hex-encoded 16-bit integer, in which each bit represents a channel.\n        let hexValue = parseInt(value, 16);\n        if (!hexValue) {  // 0 or NaN\n          shaka.log.warning('Channel parsing failure! ' +\n                            'Ignoring scheme and value', scheme, value);\n          continue;\n        }\n        // Count the 1-bits in hexValue.\n        let numBits = 0;\n        while (hexValue) {\n          if (hexValue & 1) ++numBits;\n          hexValue >>= 1;\n        }\n        return numBits;\n      }\n\n      default:\n        shaka.log.warning('Unrecognized audio channel scheme:', scheme, value);\n        continue;\n    }\n  }\n\n  return null;\n};\n\n\n/**\n * Verifies that a Representation has exactly one Segment* element.  Prints\n * warnings if there is a problem.\n *\n * @param {shaka.dash.DashParser.InheritanceFrame} frame\n * @return {boolean} True if the Representation is usable; otherwise return\n *   false.\n * @private\n */\nshaka.dash.DashParser.prototype.verifyRepresentation_ = function(frame) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  let n = 0;\n  n += frame.segmentBase ? 1 : 0;\n  n += frame.segmentList ? 1 : 0;\n  n += frame.segmentTemplate ? 1 : 0;\n\n  if (n == 0) {\n    // TODO: Extend with the list of MIME types registered to TextEngine.\n    if (frame.contentType == ContentType.TEXT ||\n        frame.contentType == ContentType.APPLICATION) {\n      return true;\n    } else {\n      shaka.log.warning(\n          'Representation does not contain a segment information source:',\n          'the Representation must contain one of SegmentBase, SegmentList,',\n          'SegmentTemplate, or explicitly indicate that it is \"text\".',\n          frame);\n      return false;\n    }\n  }\n\n  if (n != 1) {\n    shaka.log.warning(\n        'Representation contains multiple segment information sources:',\n        'the Representation should only contain one of SegmentBase,',\n        'SegmentList, or SegmentTemplate.',\n        frame);\n    if (frame.segmentBase) {\n      shaka.log.info('Using SegmentBase by default.');\n      frame.segmentList = null;\n      frame.segmentTemplate = null;\n    } else {\n      goog.asserts.assert(frame.segmentList, 'There should be a SegmentList');\n      shaka.log.info('Using SegmentList by default.');\n      frame.segmentTemplate = null;\n    }\n  }\n\n  return true;\n};\n\n\n/**\n * Makes a request to the given URI and calculates the clock offset.\n *\n * @param {!Array.<string>} baseUris\n * @param {string} uri\n * @param {string} method\n * @return {!Promise.<number>}\n * @private\n */\nshaka.dash.DashParser.prototype.requestForTiming_ =\n    function(baseUris, uri, method) {\n  let requestUris = shaka.util.ManifestParserUtils.resolveUris(baseUris, [uri]);\n  let request = shaka.net.NetworkingEngine.makeRequest(\n      requestUris, this.config_.retryParameters);\n  request.method = method;\n  const type = shaka.net.NetworkingEngine.RequestType.TIMING;\n\n  let operation = this.playerInterface_.networkingEngine.request(type, request);\n  this.operationManager_.manage(operation);\n\n  return operation.promise.then((response) => {\n    let text;\n    if (method == 'HEAD') {\n      if (!response.headers || !response.headers['date']) {\n        shaka.log.warning('UTC timing response is missing',\n                          'expected date header');\n        return 0;\n      }\n      text = response.headers['date'];\n    } else {\n      text = shaka.util.StringUtils.fromUTF8(response.data);\n    }\n    let date = Date.parse(text);\n    if (isNaN(date)) {\n      shaka.log.warning('Unable to parse date from UTC timing response');\n      return 0;\n    }\n    return (date - Date.now());\n  });\n};\n\n\n/**\n * Parses an array of UTCTiming elements.\n *\n * @param {!Array.<string>} baseUris\n * @param {!Array.<!Element>} elems\n * @param {boolean} isLive\n * @return {!Promise.<number>}\n * @private\n */\nshaka.dash.DashParser.prototype.parseUtcTiming_ =\n    function(baseUris, elems, isLive) {\n  let schemesAndValues = elems.map(function(elem) {\n    return {\n      scheme: elem.getAttribute('schemeIdUri'),\n      value: elem.getAttribute('value'),\n    };\n  });\n\n  // If there's nothing specified in the manifest, but we have a default from\n  // the config, use that.\n  let clockSyncUri = this.config_.dash.clockSyncUri;\n  if (isLive && !schemesAndValues.length && clockSyncUri) {\n    schemesAndValues.push({\n      scheme: 'urn:mpeg:dash:utc:http-head:2014',\n      value: clockSyncUri,\n    });\n  }\n\n  const Functional = shaka.util.Functional;\n  return Functional.createFallbackPromiseChain(schemesAndValues, function(sv) {\n    let scheme = sv.scheme;\n    let value = sv.value;\n    switch (scheme) {\n      // See DASH IOP Guidelines Section 4.7\n      // https://bit.ly/DashIop3-2\n      // Some old ISO23009-1 drafts used 2012.\n      case 'urn:mpeg:dash:utc:http-head:2014':\n      case 'urn:mpeg:dash:utc:http-head:2012':\n        return this.requestForTiming_(baseUris, value, 'HEAD');\n      case 'urn:mpeg:dash:utc:http-xsdate:2014':\n      case 'urn:mpeg:dash:utc:http-iso:2014':\n      case 'urn:mpeg:dash:utc:http-xsdate:2012':\n      case 'urn:mpeg:dash:utc:http-iso:2012':\n        return this.requestForTiming_(baseUris, value, 'GET');\n      case 'urn:mpeg:dash:utc:direct:2014':\n      case 'urn:mpeg:dash:utc:direct:2012': {\n        let date = Date.parse(value);\n        return isNaN(date) ? 0 : (date - Date.now());\n      }\n\n      case 'urn:mpeg:dash:utc:http-ntp:2014':\n      case 'urn:mpeg:dash:utc:ntp:2014':\n      case 'urn:mpeg:dash:utc:sntp:2014':\n        shaka.log.warning('NTP UTCTiming scheme is not supported');\n        return Promise.reject();\n      default:\n        shaka.log.warning(\n            'Unrecognized scheme in UTCTiming element', scheme);\n        return Promise.reject();\n    }\n  }.bind(this)).catch(function() {\n    if (isLive) {\n      shaka.log.warning(\n          'A UTCTiming element should always be given in live manifests! ' +\n          'This content may not play on clients with bad clocks!');\n    }\n    return 0;\n  });\n};\n\n\n/**\n * Parses an EventStream element.\n *\n * @param {number} periodStart\n * @param {?number} periodDuration\n * @param {!Element} elem\n * @private\n */\nshaka.dash.DashParser.prototype.parseEventStream_ = function(\n    periodStart, periodDuration, elem) {\n  const XmlUtils = shaka.util.XmlUtils;\n  let parseNumber = XmlUtils.parseNonNegativeInt;\n\n  let schemeIdUri = elem.getAttribute('schemeIdUri') || '';\n  let value = elem.getAttribute('value') || '';\n  let timescale = XmlUtils.parseAttr(elem, 'timescale', parseNumber) || 1;\n\n  XmlUtils.findChildren(elem, 'Event').forEach(function(eventNode) {\n    let presentationTime =\n        XmlUtils.parseAttr(eventNode, 'presentationTime', parseNumber) || 0;\n    let duration = XmlUtils.parseAttr(eventNode, 'duration', parseNumber) || 0;\n\n    let startTime = presentationTime / timescale + periodStart;\n    let endTime = startTime + (duration / timescale);\n    if (periodDuration != null) {\n      // An event should not go past the Period, even if the manifest says so.\n      // See: Dash sec. 5.10.2.1\n      startTime = Math.min(startTime, periodStart + periodDuration);\n      endTime = Math.min(endTime, periodStart + periodDuration);\n    }\n\n    /** @type {shaka.extern.TimelineRegionInfo} */\n    let region = {\n      schemeIdUri: schemeIdUri,\n      value: value,\n      startTime: startTime,\n      endTime: endTime,\n      id: eventNode.getAttribute('id') || '',\n      eventElement: eventNode,\n    };\n\n    this.playerInterface_.onTimelineRegionAdded(region);\n  }.bind(this));\n};\n\n\n/**\n * Makes a network request on behalf of SegmentBase.createStream.\n *\n * @param {!Array.<string>} uris\n * @param {?number} startByte\n * @param {?number} endByte\n * @return {!Promise.<!ArrayBuffer>}\n * @private\n */\nshaka.dash.DashParser.prototype.requestInitSegment_ = function(\n    uris, startByte, endByte) {\n  const requestType = shaka.net.NetworkingEngine.RequestType.SEGMENT;\n  let request = shaka.net.NetworkingEngine.makeRequest(\n      uris, this.config_.retryParameters);\n  if (startByte != null) {\n    let end = (endByte != null ? endByte : '');\n    request.headers['Range'] = 'bytes=' + startByte + '-' + end;\n  }\n\n  let networkingEngine = this.playerInterface_.networkingEngine;\n  let operation = networkingEngine.request(requestType, request);\n  this.operationManager_.manage(operation);\n  return operation.promise.then((response) => response.data);\n};\n\n\n/**\n * Guess the content type based on MIME type and codecs.\n *\n * @param {string} mimeType\n * @param {string} codecs\n * @return {string}\n * @private\n */\nshaka.dash.DashParser.guessContentType_ = function(mimeType, codecs) {\n  let fullMimeType = shaka.util.MimeUtils.getFullType(mimeType, codecs);\n\n  if (shaka.text.TextEngine.isTypeSupported(fullMimeType)) {\n    // If it's supported by TextEngine, it's definitely text.\n    // We don't check MediaSourceEngine, because that would report support\n    // for platform-supported video and audio types as well.\n    return shaka.util.ManifestParserUtils.ContentType.TEXT;\n  }\n\n  // Otherwise, just split the MIME type.  This handles video and audio\n  // types well.\n  return mimeType.split('/')[0];\n};\n\n\nshaka.media.ManifestParser.registerParserByExtension(\n    'mpd', shaka.dash.DashParser);\nshaka.media.ManifestParser.registerParserByMime(\n    'application/dash+xml', shaka.dash.DashParser);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.hls.Attribute');\ngoog.provide('shaka.hls.Playlist');\ngoog.provide('shaka.hls.PlaylistType');\ngoog.provide('shaka.hls.Segment');\ngoog.provide('shaka.hls.Tag');\n\ngoog.require('goog.asserts');\n\n\n/**\n * Creates an HLS playlist object.\n *\n * @param {string} absoluteUri An absolute, final URI after redirects.\n * @param {!shaka.hls.PlaylistType} type\n * @param {!Array.<shaka.hls.Tag>} tags\n * @param {!Array.<shaka.hls.Segment>=} segments\n *\n * @constructor\n * @struct\n */\nshaka.hls.Playlist = function(absoluteUri, type, tags, segments) {\n  /**\n   * An absolute, final URI after redirects.\n   *\n   * @const {string}\n   */\n  this.absoluteUri = absoluteUri;\n\n  /** @const {shaka.hls.PlaylistType} */\n  this.type = type;\n\n  /** @const {!Array.<!shaka.hls.Tag>} */\n  this.tags = tags;\n\n  /** @const {Array.<!shaka.hls.Segment>} */\n  this.segments = segments || null;\n};\n\n\n/**\n * @enum {number}\n */\nshaka.hls.PlaylistType = {\n  MASTER: 0,\n  MEDIA: 1,\n};\n\n\n/**\n * Creates an HLS tag object.\n *\n * @param {number} id\n * @param {string} name\n * @param {!Array.<shaka.hls.Attribute>} attributes\n * @param {?string=} value\n *\n * @constructor\n * @struct\n */\nshaka.hls.Tag = function(id, name, attributes, value = null) {\n  goog.asserts.assert(\n      (attributes.length == 0 && value) ||\n      (attributes.length > 0 && !value) ||\n      (attributes.length == 0 && !value),\n      'Tags can only take the form ' +\n      '(1) <NAME>:<VALUE> ' +\n      '(2) <NAME>:<ATTRIBUTE_LIST> ' +\n      ' (3) <NAME>');\n\n  /** @const {number} */\n  this.id = id;\n\n  /** @const {string} */\n  this.name = name;\n\n  /** @const {Array.<shaka.hls.Attribute>} */\n  this.attributes = attributes;\n\n  /** @const {?string} */\n  this.value = value;\n};\n\n\n/**\n * Create the string representation of the tag.\n *\n * For the DRM system - the full tag needs to be passed down to the CDM.  There\n * are two ways of doing this (1) save the original tag or (2) recreate the tag.\n * As in some cases (like in tests) the tag never existed in string form, it\n * is far easier to recreate the tag from the parsed form.\n *\n * @return {string}\n * @override\n */\nshaka.hls.Tag.prototype.toString = function() {\n  /**\n   * @param {shaka.hls.Attribute} attr\n   * @return {string}\n   */\n  let attrToStr = function(attr) {\n    return attr.name + '=\"' + attr.value + '\"';\n  };\n\n\n  // A valid tag can only follow 1 of 3 patterns.\n  //  1) <NAME>:<VALUE>\n  //  2) <NAME>:<ATTRIBUTE LIST>\n  //  3) <NAME>\n\n  if (this.value) {\n    return '#' + this.name + ':' + this.value;\n  }\n\n  if (this.attributes.length > 0) {\n    return '#' + this.name + ':' + this.attributes.map(attrToStr).join(',');\n  }\n\n  return '#' + this.name;\n};\n\n\n/**\n * Creates an HLS attribute object.\n *\n * @param {string} name\n * @param {string} value\n *\n * @constructor\n * @struct\n */\nshaka.hls.Attribute = function(name, value) {\n  /** @const {string} */\n  this.name = name;\n\n  /** @const {string} */\n  this.value = value;\n};\n\n\n/**\n * Adds an attribute to an HLS Tag.\n *\n * @param {!shaka.hls.Attribute} attribute\n */\nshaka.hls.Tag.prototype.addAttribute = function(attribute) {\n  this.attributes.push(attribute);\n};\n\n\n/**\n * Gets the first attribute of the tag with a specified name.\n *\n * @param {string} name\n * @return {?shaka.hls.Attribute} attribute\n */\nshaka.hls.Tag.prototype.getAttribute = function(name) {\n  let attributes = this.attributes.filter(function(attr) {\n    return attr.name == name;\n  });\n\n  goog.asserts.assert(attributes.length < 2,\n                      'A tag should not have multiple attributes ' +\n                      'with the same name!');\n\n  if (attributes.length) {\n    return attributes[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Gets the value of the first attribute of the tag with a specified name.\n * If not found, returns an optional default value.\n *\n * @param {string} name\n * @param {string=} defaultValue\n * @return {?string}\n */\nshaka.hls.Tag.prototype.getAttributeValue = function(name, defaultValue) {\n  let attribute = this.getAttribute(name);\n  return attribute ? attribute.value : (defaultValue || null);\n};\n\n\n/**\n * Creates an HLS segment object.\n *\n * @param {string} absoluteUri An absolute URI.\n * @param {!Array.<shaka.hls.Tag>} tags\n *\n * @constructor\n * @struct\n */\nshaka.hls.Segment = function(absoluteUri, tags) {\n  /** @const {!Array.<shaka.hls.Tag>} */\n  this.tags = tags;\n\n  /**\n   * An absolute URI.\n   *\n   * @const {string}\n   */\n  this.absoluteUri = absoluteUri;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.hls.Utils');\n\ngoog.require('shaka.util.ManifestParserUtils');\n\n\n/**\n *\n * @param {!Array.<!shaka.hls.Tag>} tags\n * @param {string} name\n * @return {!Array.<!shaka.hls.Tag>}\n */\nshaka.hls.Utils.filterTagsByName = function(tags, name) {\n  return tags.filter(function(tag) {\n    return tag.name == name;\n  });\n};\n\n\n/**\n *\n * @param {!Array.<!shaka.hls.Tag>} tags\n * @param {string} name\n * @return {?shaka.hls.Tag}\n */\nshaka.hls.Utils.getFirstTagWithName = function(tags, name) {\n  let tagsWithName = shaka.hls.Utils.filterTagsByName(tags, name);\n  if (!tagsWithName.length) return null;\n\n  return tagsWithName[0];\n};\n\n\n/**\n * @param {!Array.<!shaka.hls.Tag>} tags An array of EXT-X-MEDIA tags.\n * @param {string} type\n * @param {string} groupId\n * @return {!Array.<!shaka.hls.Tag>} The first tag that has the given media type\n *   and group id.\n */\nshaka.hls.Utils.findMediaTags = function(tags, type, groupId) {\n  return tags.filter(function(tag) {\n    let typeAttr = tag.getAttribute('TYPE');\n    let groupIdAttr = tag.getAttribute('GROUP-ID');\n    return typeAttr.value == type && groupIdAttr.value == groupId;\n  });\n};\n\n\n/**\n * @param {string} parentAbsoluteUri\n * @param {string} uri\n * @return {string}\n */\nshaka.hls.Utils.constructAbsoluteUri = function(parentAbsoluteUri, uri) {\n  let uris = shaka.util.ManifestParserUtils.resolveUris(\n      [parentAbsoluteUri], [uri]);\n\n  return uris[0];\n};\n\n\n/**\n * Matches a string to an HLS comment format and returns the result.\n *\n * @param {string} line\n * @return {boolean}\n */\nshaka.hls.Utils.isComment = function(line) {\n  return /^#(?!EXT)/m.test(line);\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.TextParser');\n\ngoog.require('goog.asserts');\n\n\n/**\n * Reads elements from strings.\n *\n * @param {string} data\n * @constructor\n * @struct\n */\nshaka.util.TextParser = function(data) {\n  /**\n   * @const\n   * @private {string}\n   */\n  this.data_ = data;\n\n  /** @private {number} */\n  this.position_ = 0;\n};\n\n\n/** @return {boolean} Whether it is at the end of the string. */\nshaka.util.TextParser.prototype.atEnd = function() {\n  return this.position_ == this.data_.length;\n};\n\n\n/**\n * Reads a line from the parser.  This will read but not return the newline.\n * Returns null at the end.\n *\n * @return {?string}\n */\nshaka.util.TextParser.prototype.readLine = function() {\n  return this.readRegexReturnCapture_(/(.*?)(\\n|$)/gm, 1);\n};\n\n\n/**\n * Reads a word from the parser.  This will not read or return any whitespace\n * before or after the word (including newlines).  Returns null at the end.\n *\n * @return {?string}\n */\nshaka.util.TextParser.prototype.readWord = function() {\n  return this.readRegexReturnCapture_(/[^ \\t\\n]*/gm, 0);\n};\n\n\n/**\n * Skips any continuous whitespace from the parser.  Returns null at the end.\n */\nshaka.util.TextParser.prototype.skipWhitespace = function() {\n  this.readRegex(/[ \\t]+/gm);\n};\n\n\n/**\n * Reads the given regular expression from the parser.  This requires the match\n * to be at the current position; there is no need to include a head anchor.\n * This requires that the regex have the global flag to be set so that it can\n * set lastIndex to start the search at the current position.  Returns null at\n * the end or if the regex does not match the current position.\n *\n * @param {!RegExp} regex\n * @return {Array.<string>}\n */\nshaka.util.TextParser.prototype.readRegex = function(regex) {\n  let index = this.indexOf_(regex);\n  if (this.atEnd() || index == null || index.position != this.position_) {\n    return null;\n  }\n\n  this.position_ += index.length;\n  return index.results;\n};\n\n\n/**\n * Reads a regex from the parser and returns the given capture.\n *\n * @param {!RegExp} regex\n * @param {number} index\n * @return {?string}\n * @private\n */\nshaka.util.TextParser.prototype.readRegexReturnCapture_ = function(\n    regex, index) {\n  if (this.atEnd()) {\n    return null;\n  }\n\n  let ret = this.readRegex(regex);\n  if (!ret) {\n    return null;\n  } else {\n    return ret[index];\n  }\n};\n\n\n/**\n * Returns the index info about a regular expression match.\n *\n * @param {!RegExp} regex\n * @return {?{position: number, length: number, results: !Array.<string>}}\n * @private\n */\nshaka.util.TextParser.prototype.indexOf_ = function(regex) {\n  // The global flag is required to use lastIndex.\n  goog.asserts.assert(regex.global, 'global flag should be set');\n\n  regex.lastIndex = this.position_;\n  let results = regex.exec(this.data_);\n  if (results == null) {\n    return null;\n  } else {\n    return {\n      position: results.index,\n      length: results[0].length,\n      results: results,\n    };\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.hls.ManifestTextParser');\n\ngoog.require('shaka.hls.Attribute');\ngoog.require('shaka.hls.Playlist');\ngoog.require('shaka.hls.PlaylistType');\ngoog.require('shaka.hls.Segment');\ngoog.require('shaka.hls.Tag');\ngoog.require('shaka.hls.Utils');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.StringUtils');\ngoog.require('shaka.util.TextParser');\n\n\n/**\n * Creates a new ManifestTextParser.\n *\n * @constructor\n * @struct\n */\nshaka.hls.ManifestTextParser = function() {\n  /** @private {number} */\n  this.globalId_ = 0;\n};\n\n\n/**\n * @param {ArrayBuffer} data\n * @param {string} absolutePlaylistUri An absolute, final URI after redirects.\n * @return {!shaka.hls.Playlist}\n * @throws {shaka.util.Error}\n */\nshaka.hls.ManifestTextParser.prototype.parsePlaylist =\n    function(data, absolutePlaylistUri) {\n  const MEDIA_PLAYLIST_TAGS = shaka.hls.ManifestTextParser.MEDIA_PLAYLIST_TAGS;\n  const SEGMENT_TAGS = shaka.hls.ManifestTextParser.SEGMENT_TAGS;\n\n  // Get the input as a string.  Normalize newlines to \\n.\n  let str = shaka.util.StringUtils.fromUTF8(data);\n  str = str.replace(/\\r\\n|\\r(?=[^\\n]|$)/gm, '\\n').trim();\n\n  const lines = str.split(/\\n+/m);\n\n  if (!/^#EXTM3U($|[ \\t\\n])/m.test(lines[0])) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_PLAYLIST_HEADER_MISSING);\n  }\n\n  /** shaka.hls.PlaylistType */\n  let playlistType = shaka.hls.PlaylistType.MASTER;\n\n  // First, look for media playlist tags, so that we know what the playlist\n  // type really is before we start parsing.\n  for (let i = 1; i < lines.length; i++) {\n    // Ignore comments.\n    if (!shaka.hls.Utils.isComment(lines[i])) {\n      const tag = this.parseTag_(lines[i]);\n      // These tags won't actually be used, so don't increment the global id.\n      this.globalId_ -= 1;\n\n      if (MEDIA_PLAYLIST_TAGS.includes(tag.name)) {\n        playlistType = shaka.hls.PlaylistType.MEDIA;\n        break;\n      } else if (tag.name == 'EXT-X-STREAM-INF') {\n        i += 1;\n      }\n    }\n  }\n\n  /** {Array.<shaka.hls.Tag>} */\n  const tags = [];\n  for (let i = 1; i < lines.length;) {\n    // Skip comments\n    if (shaka.hls.Utils.isComment(lines[i])) {\n      i += 1;\n      continue;\n    }\n\n    const tag = this.parseTag_(lines[i]);\n    if (SEGMENT_TAGS.includes(tag.name)) {\n      if (playlistType != shaka.hls.PlaylistType.MEDIA) {\n        // Only media playlists should contain segment tags\n        throw new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.MANIFEST,\n            shaka.util.Error.Code.HLS_INVALID_PLAYLIST_HIERARCHY);\n      }\n\n      const segmentsData = lines.splice(i, lines.length - i);\n      const segments = this.parseSegments_(\n          absolutePlaylistUri, segmentsData, tags);\n      return new shaka.hls.Playlist(\n          absolutePlaylistUri, playlistType, tags, segments);\n    }\n\n    tags.push(tag);\n    i += 1;\n\n    // An EXT-X-STREAM-INF tag is followed by a URI of a media playlist.\n    // Add the URI to the tag object.\n    if (tag.name == 'EXT-X-STREAM-INF') {\n      const tagUri = new shaka.hls.Attribute('URI', lines[i]);\n      tag.addAttribute(tagUri);\n      i += 1;\n    }\n  }\n\n  return new shaka.hls.Playlist(absolutePlaylistUri, playlistType, tags);\n};\n\n\n/**\n * Parses an array of strings into an array of HLS Segment objects.\n *\n * @param {string} absoluteMediaPlaylistUri\n * @param {!Array.<string>} lines\n * @param {!Array.<!shaka.hls.Tag>} playlistTags\n * @return {!Array.<shaka.hls.Segment>}\n * @private\n * @throws {shaka.util.Error}\n */\nshaka.hls.ManifestTextParser.prototype.parseSegments_ =\n    function(absoluteMediaPlaylistUri, lines, playlistTags) {\n  /** @type {!Array.<shaka.hls.Segment>} */\n  let segments = [];\n  /** @type {!Array.<shaka.hls.Tag>} */\n  let segmentTags = [];\n  lines.forEach((line) => {\n    if (/^(#EXT)/.test(line)) {\n      let tag = this.parseTag_(line);\n      if (shaka.hls.ManifestTextParser.MEDIA_PLAYLIST_TAGS.includes(tag.name)) {\n        playlistTags.push(tag);\n      } else {\n        segmentTags.push(tag);\n      }\n    } else if (shaka.hls.Utils.isComment(line)) {\n      // Skip comments.\n      return [];\n    } else {\n      const verbatimSegmentUri = line.trim();\n      const absoluteSegmentUri = shaka.hls.Utils.constructAbsoluteUri(\n          absoluteMediaPlaylistUri, verbatimSegmentUri);\n\n      // The URI appears after all of the tags describing the segment.\n      const segment = new shaka.hls.Segment(absoluteSegmentUri, segmentTags);\n      segments.push(segment);\n      segmentTags = [];\n    }\n  });\n  return segments;\n};\n\n\n/**\n * Parses a string into an HLS Tag object while tracking what id to use next.\n *\n * @param {string} word\n * @return {!shaka.hls.Tag}\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.hls.ManifestTextParser.prototype.parseTag_ = function(word) {\n  return shaka.hls.ManifestTextParser.parseTag(this.globalId_++, word);\n};\n\n\n/**\n * Parses a string into an HLS Tag object.\n *\n * @param {number} id\n * @param {string} word\n * @return {!shaka.hls.Tag}\n * @throws {shaka.util.Error}\n */\nshaka.hls.ManifestTextParser.parseTag = function(id, word) {\n  /* HLS tags start with '#EXT'. A tag can have a set of attributes\n    (#EXT-<tagname>:<attribute list>) or a value (#EXT-<tagname>:<value>).\n    An attribute's format is 'AttributeName=AttributeValue'.\n    The parsing logic goes like this:\n     1. Everything before ':' is a name (we ignore '#').\n     2. Everything after should be parsed as attributes if it contains '='.\n     3. Otherwise, this is a value.\n     4. If there is no \":\", it's a simple tag with no attributes and no value */\n  let blocks = word.match(/^#(EXT[^:]*)(?::(.*))?$/);\n  if (!blocks) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.INVALID_HLS_TAG,\n        word);\n  }\n  let name = blocks[1];\n  let data = blocks[2];\n  let attributes = [];\n\n  if (data && data.includes('=')) {\n    let parser = new shaka.util.TextParser(data);\n    let blockAttrs;\n\n    // Regex:\n    // 1. Key name ([1])\n    // 2. Equals sign\n    // 3. Either:\n    //   a. A quoted string (everything up to the next quote, [2])\n    //   b. An unquoted string\n    //    (everything up to the next comma or end of line, [3])\n    // 4. Either:\n    //   a. A comma\n    //   b. End of line\n    const regex = /([^=]+)=(?:\"([^\"]*)\"|([^\",]*))(?:,|$)/g;\n    while ((blockAttrs = parser.readRegex(regex))) {\n      let attrName = blockAttrs[1];\n      let attrValue = blockAttrs[2] || blockAttrs[3];\n      let attribute = new shaka.hls.Attribute(attrName, attrValue);\n      attributes.push(attribute);\n    }\n  } else if (data) {\n    return new shaka.hls.Tag(id, name, attributes, data);\n  }\n\n  return new shaka.hls.Tag(id, name, attributes);\n};\n\n\n/**\n * HLS tags that only appear on Media Playlists.\n * Used to determine a playlist type.\n *\n * @const {!Array.<string>}\n */\nshaka.hls.ManifestTextParser.MEDIA_PLAYLIST_TAGS = [\n  'EXT-X-TARGETDURATION',\n  'EXT-X-MEDIA-SEQUENCE',\n  'EXT-X-DISCONTINUITY-SEQUENCE',\n  'EXT-X-PLAYLIST-TYPE',\n  'EXT-X-MAP',\n  'EXT-X-I-FRAMES-ONLY',\n  'EXT-X-ENDLIST',\n];\n\n\n/**\n * HLS tags that only appear on Segments in a Media Playlists.\n * Used to determine the start of the segments info.\n *\n * @const {!Array.<string>}\n */\nshaka.hls.ManifestTextParser.SEGMENT_TAGS = [\n  'EXTINF',\n  'EXT-X-BYTERANGE',\n  'EXT-X-DISCONTINUITY',\n  'EXT-X-PROGRAM-DATE-TIME',\n  'EXT-X-KEY',\n  'EXT-X-DATERANGE',\n];\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.net.DataUriPlugin');\n\ngoog.require('shaka.log');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.util.AbortableOperation');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.StringUtils');\ngoog.require('shaka.util.Uint8ArrayUtils');\n\n\n/**\n * @namespace\n * @summary A networking plugin to handle data URIs.\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/data_URIs\n * @param {string} uri\n * @param {shaka.extern.Request} request\n * @param {shaka.net.NetworkingEngine.RequestType=} requestType\n * @return {!shaka.extern.IAbortableOperation.<shaka.extern.Response>}\n * @export\n */\nshaka.net.DataUriPlugin = function(uri, request, requestType) {\n  try {\n    let parsed = shaka.net.DataUriPlugin.parse(uri);\n\n    /** @type {shaka.extern.Response} */\n    let response = {\n      uri: uri,\n      data: parsed.data,\n      headers: {\n        'content-type': parsed.contentType,\n      },\n    };\n\n    return shaka.util.AbortableOperation.completed(response);\n  } catch (error) {\n    return shaka.util.AbortableOperation.failed(error);\n  }\n};\n\n\n/**\n * @param {string} uri\n * @return {{data: ArrayBuffer, contentType: string}}\n */\nshaka.net.DataUriPlugin.parse = function(uri) {\n  // Extract the scheme.\n  let parts = uri.split(':');\n  if (parts.length < 2 || parts[0] != 'data') {\n    shaka.log.error('Bad data URI, failed to parse scheme');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.NETWORK,\n        shaka.util.Error.Code.MALFORMED_DATA_URI,\n        uri);\n  }\n  let path = parts.slice(1).join(':');\n\n  // Extract the encoding and MIME type (required but can be empty).\n  let infoAndData = path.split(',');\n  if (infoAndData.length < 2) {\n    shaka.log.error('Bad data URI, failed to extract encoding and MIME type');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.NETWORK,\n        shaka.util.Error.Code.MALFORMED_DATA_URI,\n        uri);\n  }\n  let info = infoAndData[0];\n  let dataStr = window.decodeURIComponent(infoAndData.slice(1).join(','));\n\n  // Extract the encoding (optional).\n  let typeAndEncoding = info.split(';');\n  let encoding = null;\n  if (typeAndEncoding.length > 1) {\n    encoding = typeAndEncoding[1];\n  }\n\n  // Convert the data.\n  /** @type {ArrayBuffer} */\n  let data;\n  if (encoding == 'base64') {\n    data = shaka.util.Uint8ArrayUtils.fromBase64(dataStr).buffer;\n  } else if (encoding) {\n    shaka.log.error('Bad data URI, unknown encoding');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.NETWORK,\n        shaka.util.Error.Code.UNKNOWN_DATA_URI_ENCODING,\n        uri);\n  } else {\n    data = shaka.util.StringUtils.toUTF8(dataStr);\n  }\n\n  return {data: data, contentType: typeAndEncoding[0]};\n};\n\n\nshaka.net.NetworkingEngine.registerScheme('data', shaka.net.DataUriPlugin);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\ngoog.provide('shaka.hls.HlsParser');\n\ngoog.require('goog.Uri');\ngoog.require('goog.asserts');\ngoog.require('shaka.hls.ManifestTextParser');\ngoog.require('shaka.hls.Playlist');\ngoog.require('shaka.hls.PlaylistType');\ngoog.require('shaka.hls.Tag');\ngoog.require('shaka.hls.Utils');\ngoog.require('shaka.log');\ngoog.require('shaka.media.DrmEngine');\ngoog.require('shaka.media.InitSegmentReference');\ngoog.require('shaka.media.ManifestParser');\ngoog.require('shaka.media.PresentationTimeline');\ngoog.require('shaka.media.SegmentIndex');\ngoog.require('shaka.media.SegmentReference');\ngoog.require('shaka.net.DataUriPlugin');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.text.TextEngine');\ngoog.require('shaka.util.ArrayUtils');\ngoog.require('shaka.util.DataViewReader');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.Functional');\ngoog.require('shaka.util.LanguageUtils');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.MimeUtils');\ngoog.require('shaka.util.Mp4Parser');\ngoog.require('shaka.util.OperationManager');\n\n\n/**\n * Creates a new HLS parser.\n *\n * @struct\n * @constructor\n * @implements {shaka.extern.ManifestParser}\n * @export\n */\nshaka.hls.HlsParser = function() {\n  /** @private {?shaka.extern.ManifestParser.PlayerInterface} */\n  this.playerInterface_ = null;\n\n  /** @private {?shaka.extern.ManifestConfiguration} */\n  this.config_ = null;\n\n  /** @private {number} */\n  this.globalId_ = 1;\n\n  /**\n   * @private {!Map.<number, shaka.hls.HlsParser.StreamInfo>}\n   */\n  // TODO: This is now only used for text codec detection, try to remove.\n  this.mediaTagsToStreamInfosMap_ = new Map();\n\n  /**\n   * The values are strings of the form \"<VIDEO URI> - <AUDIO URI>\",\n   * where the URIs are the verbatim media playlist URIs as they appeared in the\n   * master playlist.\n   *\n   * Used to avoid duplicates that vary only in their text stream.\n   *\n   * @private {!Set.<string>}\n   */\n  this.variantUriSet_ = new Set();\n\n  /**\n   * A map from (verbatim) media playlist URI to stream infos representing the\n   * playlists.\n   *\n   * On update, used to iterate through and update from media playlists.\n   *\n   * On initial parse, used to iterate through and determine minimum timestamps,\n   * offsets, and to handle TS rollover.\n   *\n   * During parsing, used to avoid duplicates in the async methods\n   * createStreamInfoFromMediaTag_ and createStreamInfoFromVariantTag_.\n   *\n   * During parsing of updates, used by getStartTime_ to determine the start\n   * time of the first segment from existing segment references.\n   *\n   * @private {!Map.<string, shaka.hls.HlsParser.StreamInfo>}\n   */\n  this.uriToStreamInfosMap_ = new Map();\n\n  /** @private {?shaka.media.PresentationTimeline} */\n  this.presentationTimeline_ = null;\n\n  /**\n   * The master playlist URI, after redirects.\n   *\n   * @private {string}\n   */\n  this.masterPlaylistUri_ = '';\n\n  /** @private {shaka.hls.ManifestTextParser} */\n  this.manifestTextParser_ = new shaka.hls.ManifestTextParser();\n\n  /**\n   * The update period in seconds, or null for no updates.\n   * @private {?number}\n   */\n  this.updatePeriod_ = null;\n\n  /** @private {?number} */\n  this.updateTimer_ = null;\n\n  /** @private {shaka.hls.HlsParser.PresentationType_} */\n  this.presentationType_ = shaka.hls.HlsParser.PresentationType_.VOD;\n\n  /** @private {?shaka.extern.Manifest} */\n  this.manifest_ = null;\n\n  /** @private {number} */\n  this.maxTargetDuration_ = 0;\n\n  /** @private {number} */\n  this.minTargetDuration_ = Infinity;\n\n  /** @private {!shaka.util.OperationManager} */\n  this.operationManager_ = new shaka.util.OperationManager();\n\n  /** @private {!Array.<!Array.<!shaka.media.SegmentReference>>} */\n  this.segmentsToNotifyByStream_ = [];\n};\n\n\n/**\n * @typedef {{\n *   stream: !shaka.extern.Stream,\n *   segmentIndex: !shaka.media.SegmentIndex,\n *   drmInfos: !Array.<shaka.extern.DrmInfo>,\n *   verbatimMediaPlaylistUri: string,\n *   absoluteMediaPlaylistUri: string,\n *   minTimestamp: number,\n *   maxTimestamp: number,\n *   duration: number\n * }}\n *\n * @description\n * Contains a stream and information about it.\n *\n * @property {!shaka.extern.Stream} stream\n *   The Stream itself.\n * @property {!shaka.media.SegmentIndex} segmentIndex\n *   SegmentIndex of the stream.\n * @property {!Array.<shaka.extern.DrmInfo>} drmInfos\n *   DrmInfos of the stream.  There may be multiple for multi-DRM content.\n * @property {string} verbatimMediaPlaylistUri\n *   The verbatim media playlist URI, as it appeared in the master playlist.\n *   This has not been canonicalized into an absolute URI.  This gives us a\n *   consistent key for this playlist, even if redirects cause us to update\n *   from different origins each time.\n * @property {string} absoluteMediaPlaylistUri\n *   The absolute media playlist URI, resolved relative to the master playlist\n *   and updated to reflect any redirects.\n * @property {number} minTimestamp\n *   The minimum timestamp found in the stream.\n * @property {number} maxTimestamp\n *   The maximum timestamp found in the stream.\n * @property {number} duration\n *   The duration of the playlist.  Used for VOD only.\n */\nshaka.hls.HlsParser.StreamInfo;\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.hls.HlsParser.prototype.configure = function(config) {\n  this.config_ = config;\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.hls.HlsParser.prototype.start = function(uri, playerInterface) {\n  goog.asserts.assert(this.config_, 'Must call configure() before start()!');\n  this.playerInterface_ = playerInterface;\n\n  return this.requestManifest_(uri).then(function(response) {\n    // Record the master playlist URI after redirects.\n    this.masterPlaylistUri_ = response.uri;\n\n    return this.parseManifest_(response.data).then(function() {\n      this.setUpdateTimer_(this.updatePeriod_);\n      return this.manifest_;\n    }.bind(this));\n  }.bind(this));\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.hls.HlsParser.prototype.stop = function() {\n  this.playerInterface_ = null;\n  this.config_ = null;\n  this.mediaTagsToStreamInfosMap_.clear();\n  this.variantUriSet_.clear();\n  this.uriToStreamInfosMap_.clear();\n  this.manifest_ = null;\n  return this.operationManager_.destroy();\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.hls.HlsParser.prototype.update = function() {\n  if (!this.isLive_()) {\n    return;\n  }\n\n  const promises = [];\n\n  for (const streamInfo of this.uriToStreamInfosMap_.values()) {\n    promises.push(this.updateStream_(streamInfo));\n  }\n\n  return Promise.all(promises);\n};\n\n\n/**\n * Updates a stream.\n *\n * @param {!shaka.hls.HlsParser.StreamInfo} streamInfo\n * @throws shaka.util.Error\n * @private\n */\nshaka.hls.HlsParser.prototype.updateStream_ = function(streamInfo) {\n  this.requestManifest_(streamInfo.absoluteMediaPlaylistUri).then(\n      function(response) {\n    const Utils = shaka.hls.Utils;\n    const PresentationType = shaka.hls.HlsParser.PresentationType_;\n    const playlist = this.manifestTextParser_.parsePlaylist(\n        response.data, response.uri);\n    if (playlist.type != shaka.hls.PlaylistType.MEDIA) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.MANIFEST,\n          shaka.util.Error.Code.HLS_INVALID_PLAYLIST_HIERARCHY);\n    }\n\n    let mediaSequenceTag = Utils.getFirstTagWithName(playlist.tags,\n                                                     'EXT-X-MEDIA-SEQUENCE');\n\n    let startPosition = mediaSequenceTag ? Number(mediaSequenceTag.value) : 0;\n    let stream = streamInfo.stream;\n    this.createSegments_(streamInfo.verbatimMediaPlaylistUri, playlist,\n                         startPosition, stream.mimeType, stream.codecs)\n        .then(function(segments) {\n          streamInfo.segmentIndex.replace(segments);\n\n          let newestSegment = segments[segments.length - 1];\n          goog.asserts.assert(newestSegment, 'Should have segments!');\n\n          // Once the last segment has been added to the playlist,\n          // #EXT-X-ENDLIST tag will be appended.\n          // If that happened, treat the rest of the EVENT presentation as VOD.\n          let endListTag = Utils.getFirstTagWithName(playlist.tags,\n                                                     'EXT-X-ENDLIST');\n          if (endListTag) {\n            // Convert the presentation to VOD and set the duration to the last\n            // segment's end time.\n            this.setPresentationType_(PresentationType.VOD);\n            this.presentationTimeline_.setDuration(newestSegment.endTime);\n          }\n        }.bind(this));\n  }.bind(this));\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nshaka.hls.HlsParser.prototype.onExpirationUpdated = function(\n    sessionId, expiration) {\n  // No-op\n};\n\n\n/**\n * Parses the manifest.\n *\n * @param {!ArrayBuffer} data\n * @throws shaka.util.Error When there is a parsing error.\n * @return {!Promise}\n * @private\n */\nshaka.hls.HlsParser.prototype.parseManifest_ = function(data) {\n  goog.asserts.assert(this.masterPlaylistUri_,\n      'Master playlist URI must be set before calling parseManifest_!');\n\n  const playlist = this.manifestTextParser_.parsePlaylist(\n      data, this.masterPlaylistUri_);\n\n  // We don't support directly providing a Media Playlist.\n  // See the error code for details.\n  if (playlist.type != shaka.hls.PlaylistType.MASTER) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_MASTER_PLAYLIST_NOT_PROVIDED);\n  }\n\n  return this.createPeriod_(playlist).then(function(period) {\n    // HLS has no notion of periods.  We're treating the whole presentation as\n    // one period.\n    this.playerInterface_.filterAllPeriods([period]);\n\n    // Find the min and max timestamp of the earliest segment in all streams.\n    // Find the minimum duration of all streams as well.\n    let minFirstTimestamp = Infinity;\n    let maxFirstTimestamp = 0;\n    let maxLastTimestamp = 0;\n    let minDuration = Infinity;\n\n    for (const streamInfo of this.uriToStreamInfosMap_.values()) {\n      minFirstTimestamp =\n          Math.min(minFirstTimestamp, streamInfo.minTimestamp);\n      maxFirstTimestamp =\n          Math.max(maxFirstTimestamp, streamInfo.minTimestamp);\n      maxLastTimestamp =\n          Math.max(maxLastTimestamp, streamInfo.maxTimestamp);\n      if (streamInfo.stream.type != 'text') {\n        minDuration = Math.min(minDuration, streamInfo.duration);\n      }\n    }\n\n    // This assert is our own sanity check.\n    goog.asserts.assert(this.presentationTimeline_ == null,\n                        'Presentation timeline created early!');\n    this.createPresentationTimeline_(maxLastTimestamp);\n\n    // This assert satisfies the compiler that it is not null for the rest of\n    // the method.\n    goog.asserts.assert(this.presentationTimeline_,\n                        'Presentation timeline not created!');\n\n    if (this.isLive_()) {\n      // The HLS spec (RFC 8216) states in 6.3.4:\n      // \"the client MUST wait for at least the target duration before\n      // attempting to reload the Playlist file again\"\n      this.updatePeriod_ = this.minTargetDuration_;\n\n      // The spec says nothing much about seeking in live content, but Safari's\n      // built-in HLS implementation does not allow it.  Therefore we will set\n      // the availability window equal to the presentation delay.  The player\n      // will be able to buffer ahead three segments, but the seek window will\n      // be zero-sized.\n      const PresentationType = shaka.hls.HlsParser.PresentationType_;\n\n      if (this.presentationType_ == PresentationType.LIVE) {\n        // This defaults to the presentation delay, which has the effect of\n        // making the live stream unseekable.  This is consistent with Apple's\n        // HLS implementation.\n        let segmentAvailabilityDuration = this.presentationTimeline_.getDelay();\n\n        // The app can override that with a longer duration, to allow seeking.\n        if (!isNaN(this.config_.availabilityWindowOverride)) {\n          segmentAvailabilityDuration = this.config_.availabilityWindowOverride;\n        }\n\n        this.presentationTimeline_.setSegmentAvailabilityDuration(\n            segmentAvailabilityDuration);\n      }\n\n      let rolloverSeconds =\n          shaka.hls.HlsParser.TS_ROLLOVER_ / shaka.hls.HlsParser.TS_TIMESCALE_;\n      let offset = 0;\n      while (maxFirstTimestamp >= rolloverSeconds) {\n        offset += rolloverSeconds;\n        maxFirstTimestamp -= rolloverSeconds;\n      }\n      if (offset) {\n        shaka.log.debug('Offsetting live streams by', offset,\n                        'to compensate for rollover');\n\n        for (const streamInfo of this.uriToStreamInfosMap_.values()) {\n          if (streamInfo.minTimestamp < rolloverSeconds) {\n            shaka.log.v1('Offset applied to', streamInfo.stream.type);\n            // This is the offset that StreamingEngine must apply to align the\n            // actual segment times with the period.\n            streamInfo.stream.presentationTimeOffset = -offset;\n            // The segments were created with actual media times, rather than\n            // period-aligned times, so offset them all to period time.\n            streamInfo.segmentIndex.offset(offset);\n          } else {\n            shaka.log.v1('Offset NOT applied to', streamInfo.stream.type);\n          }\n        }\n      }\n    } else {\n      // For VOD/EVENT content, offset everything back to 0.\n      // Use the minimum timestamp as the offset for all streams.\n      // Use the minimum duration as the presentation duration.\n      this.presentationTimeline_.setDuration(minDuration);\n      // Use a negative offset to adjust towards 0.\n      this.presentationTimeline_.offset(-minFirstTimestamp);\n\n      for (const streamInfo of this.uriToStreamInfosMap_.values()) {\n        // This is the offset that StreamingEngine must apply to align the\n        // actual segment times with the period.\n        streamInfo.stream.presentationTimeOffset = minFirstTimestamp;\n        // The segments were created with actual media times, rather than\n        // period-aligned times, so offset them all now.\n        streamInfo.segmentIndex.offset(-minFirstTimestamp);\n        // Finally, fit the segments to the period duration.\n        streamInfo.segmentIndex.fit(minDuration);\n      }\n    }\n\n    this.manifest_ = {\n      presentationTimeline: this.presentationTimeline_,\n      periods: [period],\n      offlineSessionIds: [],\n      minBufferTime: 0,\n    };\n  }.bind(this));\n};\n\n\n/**\n * Parses a playlist into a Period object.\n *\n * @param {!shaka.hls.Playlist} playlist\n * @return {!Promise.<!shaka.extern.Period>}\n * @private\n */\nshaka.hls.HlsParser.prototype.createPeriod_ = function(playlist) {\n  const Utils = shaka.hls.Utils;\n  const Functional = shaka.util.Functional;\n  let tags = playlist.tags;\n\n  let mediaTags = Utils.filterTagsByName(playlist.tags, 'EXT-X-MEDIA');\n  let textStreamTags = mediaTags.filter(function(tag) {\n    let type = shaka.hls.HlsParser.getRequiredAttributeValue_(tag, 'TYPE');\n    return type == 'SUBTITLES';\n  }.bind(this));\n\n  // TODO: CLOSED-CAPTIONS requires the parsing of CEA-608 from the video.\n  let textStreamPromises = textStreamTags.map(function(tag) {\n    return this.createTextStream_(tag, playlist);\n  }.bind(this));\n\n  return Promise.all(textStreamPromises).then(function(textStreams) {\n    // Create Variants for every 'EXT-X-STREAM-INF' tag.  Do this after text\n    // streams have been created, so that we can push text codecs found on the\n    // variant tag back into the created text streams.\n    let variantTags = Utils.filterTagsByName(tags, 'EXT-X-STREAM-INF');\n    let variantsPromises = variantTags.map(function(tag) {\n      return this.createVariantsForTag_(tag, playlist);\n    }.bind(this));\n\n    return Promise.all(variantsPromises).then(function(allVariants) {\n      let variants = allVariants.reduce(Functional.collapseArrays, []);\n      return {\n        startTime: 0,\n        variants: variants,\n        textStreams: textStreams,\n      };\n    }.bind(this));\n  }.bind(this));\n};\n\n\n/**\n * @param {!shaka.hls.Tag} tag\n * @param {!shaka.hls.Playlist} playlist\n * @return {!Promise.<!Array.<!shaka.extern.Variant>>}\n * @private\n */\nshaka.hls.HlsParser.prototype.createVariantsForTag_ = function(tag, playlist) {\n  goog.asserts.assert(tag.name == 'EXT-X-STREAM-INF',\n                      'Should only be called on variant tags!');\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  const HlsParser = shaka.hls.HlsParser;\n  const Utils = shaka.hls.Utils;\n\n  // These are the default codecs to assume if none are specified.\n  //\n  // The video codec is H.264, with baseline profile and level 3.0.\n  // http://blog.pearce.org.nz/2013/11/what-does-h264avc1-codecs-parameters.html\n  //\n  // The audio codec is \"low-complexity\" AAC.\n  const defaultCodecs = 'avc1.42E01E,mp4a.40.2';\n\n  const codecsString = tag.getAttributeValue('CODECS', defaultCodecs);\n  // Strip out internal whitespace while splitting on commas:\n  /** @type {!Array.<string>} */\n  let codecs = codecsString.split(/\\s*,\\s*/);\n  let resolutionAttr = tag.getAttribute('RESOLUTION');\n  let width = null;\n  let height = null;\n  let frameRate = tag.getAttributeValue('FRAME-RATE');\n  let bandwidth =\n      Number(HlsParser.getRequiredAttributeValue_(tag, 'BANDWIDTH'));\n\n  // TODO: Add parsing for closed captions. Note that the value may be 'NONE'.\n  // let closedCaptions = tag.getAttributeValue('CLOSED-CAPTIONS');\n\n  if (resolutionAttr) {\n    let resBlocks = resolutionAttr.value.split('x');\n    width = resBlocks[0];\n    height = resBlocks[1];\n  }\n\n  // After filtering, this is a list of the media tags we will process to\n  // combine with the variant tag (EXT-X-STREAM-INF) we are working on.\n  let mediaTags = Utils.filterTagsByName(playlist.tags, 'EXT-X-MEDIA');\n\n  let audioGroupId = tag.getAttributeValue('AUDIO');\n  let videoGroupId = tag.getAttributeValue('VIDEO');\n  goog.asserts.assert(audioGroupId == null || videoGroupId == null,\n      'Unexpected: both video and audio described by media tags!');\n\n  // Find any associated audio or video groups and create streams for them.\n  if (audioGroupId) {\n    mediaTags = Utils.findMediaTags(mediaTags, 'AUDIO', audioGroupId);\n  } else if (videoGroupId) {\n    mediaTags = Utils.findMediaTags(mediaTags, 'VIDEO', videoGroupId);\n  }\n\n  // There may be a codec string for the text stream.  We should identify it,\n  // add it to the appropriate stream, then strip it out of the variant to\n  // avoid confusing our multiplex detection below.\n  let textCodecs = this.guessCodecsSafe_(ContentType.TEXT, codecs);\n  if (textCodecs) {\n    // We found a text codec in the list, so look for an associated text stream.\n    let subGroupId = tag.getAttributeValue('SUBTITLES');\n    if (subGroupId) {\n      let textTags = Utils.findMediaTags(mediaTags, 'SUBTITLES', subGroupId);\n      goog.asserts.assert(textTags.length == 1,\n                          'Exactly one text tag expected!');\n      if (textTags.length) {\n        // We found a text codec and text stream, so make sure the codec is\n        // attached to the stream.\n        const textStreamInfo =\n            this.mediaTagsToStreamInfosMap_.get(textTags[0].id);\n        textStreamInfo.stream.codecs = textCodecs;\n      }\n    }\n\n    // Remove this entry from the list of codecs that belong to audio/video.\n    shaka.util.ArrayUtils.remove(codecs, textCodecs);\n  }\n\n  let promises = mediaTags.map(function(tag) {\n    return this.createStreamInfoFromMediaTag_(tag, codecs);\n  }.bind(this));\n\n  let audioStreamInfos = [];\n  let videoStreamInfos = [];\n\n  return Promise.all(promises).then(function(data) {\n    if (audioGroupId) {\n      audioStreamInfos = data;\n    } else if (videoGroupId) {\n      videoStreamInfos = data;\n    }\n\n    // Make an educated guess about the stream type.\n    shaka.log.debug('Guessing stream type for', tag.toString());\n    let type;\n    let ignoreStream = false;\n    if (!audioStreamInfos.length && !videoStreamInfos.length) {\n      // There are no associated streams.  This is either an audio-only stream,\n      // a video-only stream, or a multiplexed stream.\n\n      if (codecs.length == 1) {\n        // There is only one codec, so it shouldn't be multiplexed.\n\n        let videoCodecs = this.guessCodecsSafe_(ContentType.VIDEO, codecs);\n        if (resolutionAttr || frameRate || videoCodecs) {\n          // Assume video-only.\n          shaka.log.debug('Guessing video-only.');\n          type = ContentType.VIDEO;\n        } else {\n          // Assume audio-only.\n          shaka.log.debug('Guessing audio-only.');\n          type = ContentType.AUDIO;\n        }\n      } else {\n        // There are multiple codecs, so assume multiplexed content.\n        // Note that the default used when CODECS is missing assumes multiple\n        // (and therefore multiplexed).\n        // Recombine the codec strings into one so that MediaSource isn't\n        // lied to later.  (That would trigger an error in Chrome.)\n        shaka.log.debug('Guessing multiplexed audio+video.');\n        type = ContentType.VIDEO;\n        codecs = [codecs.join(',')];\n      }\n    } else if (audioStreamInfos.length) {\n      let streamURI = HlsParser.getRequiredAttributeValue_(tag, 'URI');\n      let firstAudioStreamURI = audioStreamInfos[0].verbatimMediaPlaylistUri;\n      if (streamURI == firstAudioStreamURI) {\n        // The Microsoft HLS manifest generators will make audio-only variants\n        // that link to their URI both directly and through an audio tag.\n        // In that case, ignore the local URI and use the version in the\n        // AUDIO tag, so you inherit its language.\n        // As an example, see the manifest linked in issue #860.\n        shaka.log.debug('Guessing audio-only.');\n        type = ContentType.AUDIO;\n        ignoreStream = true;\n      } else {\n        // There are associated audio streams.  Assume this is video.\n        shaka.log.debug('Guessing video.');\n        type = ContentType.VIDEO;\n      }\n    } else {\n      // There are associated video streams.  Assume this is audio.\n      goog.asserts.assert(videoStreamInfos.length,\n          'No video streams!  This should have been handled already!');\n      shaka.log.debug('Guessing audio.');\n      type = ContentType.AUDIO;\n    }\n\n    goog.asserts.assert(type, 'Type should have been set by now!');\n    if (ignoreStream) {\n      return Promise.resolve();\n    }\n    return this.createStreamInfoFromVariantTag_(tag, codecs, type);\n  }.bind(this)).then(function(streamInfo) {\n    if (streamInfo) {\n      if (streamInfo.stream.type == ContentType.AUDIO) {\n        audioStreamInfos = [streamInfo];\n      } else {\n        videoStreamInfos = [streamInfo];\n      }\n    }\n    goog.asserts.assert(videoStreamInfos || audioStreamInfos,\n        'We should have created a stream!');\n\n    if (videoStreamInfos) {\n      this.filterLegacyCodecs_(videoStreamInfos);\n    }\n    if (audioStreamInfos) {\n      this.filterLegacyCodecs_(audioStreamInfos);\n    }\n\n    return this.createVariants_(\n        audioStreamInfos,\n        videoStreamInfos,\n        bandwidth,\n        width,\n        height,\n        frameRate);\n  }.bind(this));\n};\n\n\n/**\n * Filters out unsupported codec strings from an array of stream infos.\n * @param {!Array.<shaka.hls.HlsParser.StreamInfo>} streamInfos\n * @private\n */\nshaka.hls.HlsParser.prototype.filterLegacyCodecs_ = function(streamInfos) {\n  streamInfos.forEach(function(streamInfo) {\n    let codecs = streamInfo.stream.codecs.split(',');\n    codecs = codecs.filter(function(codec) {\n      // mp4a.40.34 is a nonstandard codec string that is sometimes used in HLS\n      // for legacy reasons.  It is not recognized by non-Apple MSE.\n      // See https://bugs.chromium.org/p/chromium/issues/detail?id=489520\n      // Therefore, ignore this codec string.\n      return codec != 'mp4a.40.34';\n    });\n    streamInfo.stream.codecs = codecs.join(',');\n  });\n};\n\n\n/**\n * @param {!Array.<!shaka.hls.HlsParser.StreamInfo>} audioInfos\n * @param {!Array.<!shaka.hls.HlsParser.StreamInfo>} videoInfos\n * @param {number} bandwidth\n * @param {?string} width\n * @param {?string} height\n * @param {?string} frameRate\n * @return {!Array.<!shaka.extern.Variant>}\n * @private\n */\nshaka.hls.HlsParser.prototype.createVariants_ =\n    function(audioInfos, videoInfos, bandwidth, width, height, frameRate) {\n  const DrmEngine = shaka.media.DrmEngine;\n\n  videoInfos.forEach(function(info) {\n    this.addVideoAttributes_(info.stream, width, height, frameRate);\n  }.bind(this));\n\n  // In case of audio-only or video-only content, we create an array of\n  // one item containing a null.  This way, the double-loop works for all\n  // kinds of content.\n  // NOTE: we currently don't have support for audio-only content.\n  if (!audioInfos.length) {\n    audioInfos = [null];\n  }\n  if (!videoInfos.length) {\n    videoInfos = [null];\n  }\n\n  let variants = [];\n  for (let i = 0; i < audioInfos.length; i++) {\n    for (let j = 0; j < videoInfos.length; j++) {\n      let audioStream = audioInfos[i] ? audioInfos[i].stream : null;\n      let videoStream = videoInfos[j] ? videoInfos[j].stream : null;\n      let audioDrmInfos = audioInfos[i] ? audioInfos[i].drmInfos : null;\n      let videoDrmInfos = videoInfos[j] ? videoInfos[j].drmInfos : null;\n\n      let drmInfos;\n      if (audioStream && videoStream) {\n        if (DrmEngine.areDrmCompatible(audioDrmInfos, videoDrmInfos)) {\n          drmInfos = DrmEngine.getCommonDrmInfos(audioDrmInfos, videoDrmInfos);\n        } else {\n          shaka.log.warning('Incompatible DRM info in HLS variant.  Skipping.');\n          continue;\n        }\n      } else if (audioStream) {\n        drmInfos = audioDrmInfos;\n      } else if (videoStream) {\n        drmInfos = videoDrmInfos;\n      }\n\n      const videoStreamUri =\n          videoInfos[i] ? videoInfos[i].verbatimMediaPlaylistUri : '';\n      const audioStreamUri =\n          audioInfos[i] ? audioInfos[i].verbatimMediaPlaylistUri : '';\n      const variantUriKey = videoStreamUri + ' - ' + audioStreamUri;\n      if (this.variantUriSet_.has(variantUriKey)) {\n        // This happens when two variants only differ in their text streams.\n        shaka.log.debug('Skipping variant which only differs in text streams.');\n        continue;\n      }\n\n      let variant = this.createVariant_(\n          audioStream, videoStream, bandwidth, drmInfos);\n      variants.push(variant);\n      this.variantUriSet_.add(variantUriKey);\n    }\n  }\n  return variants;\n};\n\n\n/**\n * @param {shaka.extern.Stream} audio\n * @param {shaka.extern.Stream} video\n * @param {number} bandwidth\n * @param {!Array.<shaka.extern.DrmInfo>} drmInfos\n * @return {!shaka.extern.Variant}\n * @private\n */\nshaka.hls.HlsParser.prototype.createVariant_ =\n    function(audio, video, bandwidth, drmInfos) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  // Since both audio and video are of the same type, this assertion will catch\n  // certain mistakes at runtime that the compiler would miss.\n  goog.asserts.assert(!audio || audio.type == ContentType.AUDIO,\n                      'Audio parameter mismatch!');\n  goog.asserts.assert(!video || video.type == ContentType.VIDEO,\n                      'Video parameter mismatch!');\n\n  return {\n    id: this.globalId_++,\n    language: audio ? audio.language : 'und',\n    primary: (!!audio && audio.primary) || (!!video && video.primary),\n    audio: audio,\n    video: video,\n    bandwidth: bandwidth,\n    drmInfos: drmInfos,\n    allowedByApplication: true,\n    allowedByKeySystem: true,\n  };\n};\n\n\n/**\n * Parses an EXT-X-MEDIA tag with TYPE=\"SUBTITLES\" into a text stream.\n *\n * @param {!shaka.hls.Tag} tag\n * @param {!shaka.hls.Playlist} playlist\n * @return {!Promise.<?shaka.extern.Stream>}\n * @private\n */\nshaka.hls.HlsParser.prototype.createTextStream_ = function(tag, playlist) {\n  goog.asserts.assert(tag.name == 'EXT-X-MEDIA',\n                      'Should only be called on media tags!');\n\n  let type = shaka.hls.HlsParser.getRequiredAttributeValue_(tag, 'TYPE');\n  goog.asserts.assert(type == 'SUBTITLES',\n                      'Should only be called on tags with TYPE=\"SUBTITLES\"!');\n\n  return this.createStreamInfoFromMediaTag_(tag, [])\n    .then(function(streamInfo) {\n        return streamInfo.stream;\n      });\n};\n\n\n/**\n * Parse EXT-X-MEDIA media tag into a Stream object.\n *\n * @param {shaka.hls.Tag} tag\n * @param {!Array.<string>} allCodecs\n * @return {!Promise.<shaka.hls.HlsParser.StreamInfo>}\n * @private\n */\nshaka.hls.HlsParser.prototype.createStreamInfoFromMediaTag_ =\n    function(tag, allCodecs) {\n  goog.asserts.assert(tag.name == 'EXT-X-MEDIA',\n                      'Should only be called on media tags!');\n\n  const HlsParser = shaka.hls.HlsParser;\n  const verbatimMediaPlaylistUri = HlsParser.getRequiredAttributeValue_(\n      tag, 'URI');\n\n  // Check if the stream has already been created as part of another Variant\n  // and return it if it has.\n  if (this.uriToStreamInfosMap_.has(verbatimMediaPlaylistUri)) {\n    return Promise.resolve(\n        this.uriToStreamInfosMap_.get(verbatimMediaPlaylistUri));\n  }\n\n  let type = HlsParser.getRequiredAttributeValue_(tag, 'TYPE').toLowerCase();\n  // Shaka recognizes the content types 'audio', 'video' and 'text'.\n  // The HLS 'subtitles' type needs to be mapped to 'text'.\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (type == 'subtitles') type = ContentType.TEXT;\n\n  const LanguageUtils = shaka.util.LanguageUtils;\n  let language = LanguageUtils.normalize(/** @type {string} */(\n      tag.getAttributeValue('LANGUAGE', 'und')));\n  const name = tag.getAttributeValue('NAME');\n\n  let defaultAttr = tag.getAttribute('DEFAULT');\n  let autoselectAttr = tag.getAttribute('AUTOSELECT');\n  // TODO: Should we take into account some of the currently ignored attributes:\n  // FORCED, INSTREAM-ID, CHARACTERISTICS, CHANNELS?\n  // Attribute descriptions: https://bit.ly/2lpjOhj\n  let channelsAttribute = tag.getAttributeValue('CHANNELS');\n  let channelsCount = type == 'audio' ?\n      this.getChannelCount_(channelsAttribute) : null;\n  let primary = !!defaultAttr || !!autoselectAttr;\n  return this.createStreamInfo_(\n      verbatimMediaPlaylistUri, allCodecs, type, language, primary,\n      name, channelsCount).then(function(streamInfo) {\n    // TODO: This check is necessary because of the possibility of multiple\n    // calls to createStreamInfoFromMediaTag_ before either has resolved.\n    if (this.uriToStreamInfosMap_.has(verbatimMediaPlaylistUri)) {\n      return this.uriToStreamInfosMap_.get(verbatimMediaPlaylistUri);\n    }\n\n    this.mediaTagsToStreamInfosMap_.set(tag.id, streamInfo);\n    this.uriToStreamInfosMap_.set(verbatimMediaPlaylistUri, streamInfo);\n    return streamInfo;\n  }.bind(this));\n};\n\n\n/**\n * Get the channel count information for an HLS audio track.\n *\n * @param {?string} channels A string that specifies an ordered, \"/\" separated\n *   list of parameters.  If the type is audio, the first parameter will be a\n *   decimal integer specifying the number of independent, simultaneous audio\n *   channels.\n *   No other channels parameters are currently defined.\n * @return {?number} channelcount\n * @private\n */\nshaka.hls.HlsParser.prototype.getChannelCount_ = function(channels) {\n  if (!channels) return null;\n  let channelcountstring = channels.split('/')[0];\n  let count = parseInt(channelcountstring, 10);\n  return count;\n};\n\n\n/**\n * Parse an EXT-X-STREAM-INF media tag into a Stream object.\n *\n * @param {!shaka.hls.Tag} tag\n * @param {!Array.<string>} allCodecs\n * @param {string} type\n * @return {!Promise.<shaka.hls.HlsParser.StreamInfo>}\n * @private\n */\nshaka.hls.HlsParser.prototype.createStreamInfoFromVariantTag_ =\n    function(tag, allCodecs, type) {\n  goog.asserts.assert(tag.name == 'EXT-X-STREAM-INF',\n                      'Should only be called on media tags!');\n\n  const HlsParser = shaka.hls.HlsParser;\n  const verbatimMediaPlaylistUri = HlsParser.getRequiredAttributeValue_(\n      tag, 'URI');\n\n  if (this.uriToStreamInfosMap_.has(verbatimMediaPlaylistUri)) {\n    return Promise.resolve(\n        this.uriToStreamInfosMap_.get(verbatimMediaPlaylistUri));\n  }\n  // TODO: Add parsing for closed captions. Note that the value may be 'NONE'.\n  // let closedCaptions = tag.getAttributeValue('CLOSED-CAPTIONS');\n\n  return this.createStreamInfo_(verbatimMediaPlaylistUri, allCodecs, type,\n                                /* language */ 'und', /* primary */ false,\n                                /* name */ null, /* channelcount */ null).then(\n      function(streamInfo) {\n        // TODO: This check is necessary because of the possibility of multiple\n        // calls to createStreamInfoFromVariantTag_ before either has resolved.\n        if (this.uriToStreamInfosMap_.has(verbatimMediaPlaylistUri)) {\n          return this.uriToStreamInfosMap_.get(verbatimMediaPlaylistUri);\n        }\n\n        this.uriToStreamInfosMap_.set(verbatimMediaPlaylistUri, streamInfo);\n        return streamInfo;\n      }.bind(this));\n};\n\n\n/**\n * @param {string} verbatimMediaPlaylistUri\n * @param {!Array.<string>} allCodecs\n * @param {string} type\n * @param {string} language\n * @param {boolean} primary\n * @param {?string} name\n * @param {?number} channelsCount\n * @return {!Promise.<shaka.hls.HlsParser.StreamInfo>}\n * @throws shaka.util.Error\n * @private\n */\nshaka.hls.HlsParser.prototype.createStreamInfo_ = function(\n    verbatimMediaPlaylistUri, allCodecs, type, language, primary, name,\n    channelsCount) {\n  // TODO: Refactor, too many parameters\n  const Utils = shaka.hls.Utils;\n  const HlsParser = shaka.hls.HlsParser;\n\n  let absoluteMediaPlaylistUri = Utils.constructAbsoluteUri(\n      this.masterPlaylistUri_, verbatimMediaPlaylistUri);\n\n  /** @type {!shaka.hls.Playlist} */\n  let playlist;\n  /** @type {string} */\n  let codecs = '';\n  /** @type {string} */\n  let mimeType;\n\n  return this.requestManifest_(absoluteMediaPlaylistUri).then((response) => {\n    // Record the final URI after redirects.\n    absoluteMediaPlaylistUri = response.uri;\n\n    // Record the redirected, final URI of this media playlist when we parse it.\n    playlist = this.manifestTextParser_.parsePlaylist(\n        response.data, absoluteMediaPlaylistUri);\n\n    if (playlist.type != shaka.hls.PlaylistType.MEDIA) {\n      // EXT-X-MEDIA tags should point to media playlists.\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.MANIFEST,\n          shaka.util.Error.Code.HLS_INVALID_PLAYLIST_HIERARCHY);\n    }\n\n    goog.asserts.assert(playlist.segments != null,\n                        'Media playlist should have segments!');\n\n    this.determinePresentationType_(playlist);\n\n    codecs = this.guessCodecs_(type, allCodecs);\n    return this.guessMimeType_(type, codecs, playlist);\n  }).then((mimeTypeArg) => {\n    mimeType = mimeTypeArg;\n\n    let mediaSequenceTag = Utils.getFirstTagWithName(playlist.tags,\n                                                     'EXT-X-MEDIA-SEQUENCE');\n\n    let startPosition = mediaSequenceTag ? Number(mediaSequenceTag.value) : 0;\n\n    return this.createSegments_(\n        verbatimMediaPlaylistUri, playlist, startPosition, mimeType, codecs);\n  }).then((segments) => {\n    let minTimestamp = segments[0].startTime;\n    let lastEndTime = segments[segments.length - 1].endTime;\n    let duration = lastEndTime - minTimestamp;\n    let segmentIndex = new shaka.media.SegmentIndex(segments);\n\n    const initSegmentReference = this.createInitSegmentReference_(playlist);\n\n    let kind = undefined;\n    const ManifestParserUtils = shaka.util.ManifestParserUtils;\n    if (type == ManifestParserUtils.ContentType.TEXT) {\n      kind = ManifestParserUtils.TextStreamKind.SUBTITLE;\n    }\n    // TODO: CLOSED-CAPTIONS requires the parsing of CEA-608 from the video.\n\n    let drmTags = [];\n    playlist.segments.forEach(function(segment) {\n      let segmentKeyTags = Utils.filterTagsByName(segment.tags,\n                                                  'EXT-X-KEY');\n      drmTags.push.apply(drmTags, segmentKeyTags);\n    });\n\n    let encrypted = false;\n    let drmInfos = [];\n    let keyId = null;\n\n    // TODO: May still need changes to support key rotation.\n    drmTags.forEach(function(drmTag) {\n      let method = HlsParser.getRequiredAttributeValue_(drmTag, 'METHOD');\n      if (method != 'NONE') {\n        encrypted = true;\n\n        let keyFormat =\n            HlsParser.getRequiredAttributeValue_(drmTag, 'KEYFORMAT');\n        let drmParser =\n            shaka.hls.HlsParser.KEYFORMATS_TO_DRM_PARSERS_[keyFormat];\n\n        let drmInfo = drmParser ? drmParser(drmTag) : null;\n        if (drmInfo) {\n          if (drmInfo.keyIds.length) {\n            keyId = drmInfo.keyIds[0];\n          }\n          drmInfos.push(drmInfo);\n        } else {\n          shaka.log.warning('Unsupported HLS KEYFORMAT', keyFormat);\n        }\n      }\n    });\n\n    if (encrypted && !drmInfos.length) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.MANIFEST,\n          shaka.util.Error.Code.HLS_KEYFORMATS_NOT_SUPPORTED);\n    }\n\n    /** @type {shaka.extern.Stream} */\n    let stream = {\n      id: this.globalId_++,\n      originalId: name,\n      createSegmentIndex: Promise.resolve.bind(Promise),\n      findSegmentPosition: segmentIndex.find.bind(segmentIndex),\n      getSegmentReference: segmentIndex.get.bind(segmentIndex),\n      initSegmentReference: initSegmentReference,\n      presentationTimeOffset: 0,\n      mimeType: mimeType,\n      codecs: codecs,\n      kind: kind,\n      encrypted: encrypted,\n      keyId: keyId,\n      language: language,\n      label: name,  // For historical reasons, since before \"originalId\".\n      type: type,\n      primary: primary,\n      // TODO: trick mode\n      trickModeVideo: null,\n      emsgSchemeIdUris: null,\n      frameRate: undefined,\n      width: undefined,\n      height: undefined,\n      bandwidth: undefined,\n      roles: [],\n      channelsCount: channelsCount,\n      closedCaptions: null,\n    };\n\n    return {\n      stream: stream,\n      segmentIndex: segmentIndex,\n      drmInfos: drmInfos,\n      verbatimMediaPlaylistUri: verbatimMediaPlaylistUri,\n      absoluteMediaPlaylistUri: absoluteMediaPlaylistUri,\n      minTimestamp: minTimestamp,\n      maxTimestamp: lastEndTime,\n      duration: duration,\n    };\n  });\n};\n\n\n/**\n * @param {!shaka.hls.Playlist} playlist\n * @private\n */\nshaka.hls.HlsParser.prototype.determinePresentationType_ = function(playlist) {\n  const Utils = shaka.hls.Utils;\n  const PresentationType = shaka.hls.HlsParser.PresentationType_;\n  let presentationTypeTag = Utils.getFirstTagWithName(playlist.tags,\n                                                      'EXT-X-PLAYLIST-TYPE');\n  let endListTag = Utils.getFirstTagWithName(playlist.tags, 'EXT-X-ENDLIST');\n\n  let isVod = (presentationTypeTag && presentationTypeTag.value == 'VOD') ||\n      endListTag;\n  let isEvent = presentationTypeTag && presentationTypeTag.value == 'EVENT' &&\n      !isVod;\n  let isLive = !isVod && !isEvent;\n\n  if (isVod) {\n    this.setPresentationType_(PresentationType.VOD);\n  } else {\n    // If it's not VOD, it must be presentation type LIVE or an ongoing EVENT.\n    if (isLive) {\n      this.setPresentationType_(PresentationType.LIVE);\n    } else {\n      this.setPresentationType_(PresentationType.EVENT);\n    }\n\n    let targetDurationTag = this.getRequiredTag_(playlist.tags,\n                                                 'EXT-X-TARGETDURATION');\n    let targetDuration = Number(targetDurationTag.value);\n\n    // According to the HLS spec, updates should not happen more often than\n    // once in targetDuration.  It also requires us to only update the active\n    // variant.  We might implement that later, but for now every variant\n    // will be updated.  To get the update period, choose the smallest\n    // targetDuration value across all playlists.\n\n    // Update the longest target duration if need be to use as a presentation\n    // delay later.\n    this.maxTargetDuration_ = Math.max(targetDuration, this.maxTargetDuration_);\n    // Update the shortest one to use as update period and segment availability\n    // time (for LIVE).\n    this.minTargetDuration_ = Math.min(targetDuration, this.minTargetDuration_);\n  }\n};\n\n\n/**\n * @param {number} lastTimestamp\n * @throws shaka.util.Error\n * @private\n */\nshaka.hls.HlsParser.prototype.createPresentationTimeline_ =\n    function(lastTimestamp) {\n  if (this.isLive_()) {\n    // The live edge will be calculated from segments, so we don't need to set\n    // a presentation start time.  We will assert later that this is working as\n    // expected.\n\n    // The HLS spec (RFC 8216) states in 6.3.3:\n    //\n    // \"The client SHALL choose which Media Segment to play first ... the\n    // client SHOULD NOT choose a segment that starts less than three target\n    // durations from the end of the Playlist file.  Doing so can trigger\n    // playback stalls.\"\n    //\n    // We accomplish this in our DASH-y model by setting a presentation delay\n    // of 3 segments.  This will be the \"live edge\" of the presentation.\n    this.presentationTimeline_ = new shaka.media.PresentationTimeline(\n        /* presentationStartTime */ 0, /* delay */ this.maxTargetDuration_ * 3);\n    this.presentationTimeline_.setStatic(false);\n  } else {\n    this.presentationTimeline_ = new shaka.media.PresentationTimeline(\n        /* presentationStartTime */ null, /* delay */ 0);\n    this.presentationTimeline_.setStatic(true);\n  }\n\n  this.notifySegments_();\n\n  // This asserts that the live edge is being calculated from segment times.\n  // For VOD and event streams, this check should still pass.\n  goog.asserts.assert(\n      !this.presentationTimeline_.usingPresentationStartTime(),\n      'We should not be using the presentation start time in HLS!');\n};\n\n\n/**\n * @param {!shaka.hls.Playlist} playlist\n * @return {shaka.media.InitSegmentReference}\n * @private\n * @throws {shaka.util.Error}\n */\nshaka.hls.HlsParser.prototype.createInitSegmentReference_ = function(playlist) {\n  const Utils = shaka.hls.Utils;\n  let mapTags = Utils.filterTagsByName(playlist.tags, 'EXT-X-MAP');\n  // TODO: Support multiple map tags?\n  // For now, we don't support multiple map tags and will throw an error.\n  if (!mapTags.length) {\n    return null;\n  } else if (mapTags.length > 1) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_MULTIPLE_MEDIA_INIT_SECTIONS_FOUND);\n  }\n\n  // Map tag example: #EXT-X-MAP:URI=\"main.mp4\",BYTERANGE=\"720@0\"\n  let mapTag = mapTags[0];\n  const verbatimInitSegmentUri =\n      shaka.hls.HlsParser.getRequiredAttributeValue_(mapTag, 'URI');\n  const absoluteInitSegmentUri =\n      Utils.constructAbsoluteUri(playlist.absoluteUri, verbatimInitSegmentUri);\n\n  let startByte = 0;\n  let endByte = null;\n  let byterange = mapTag.getAttributeValue('BYTERANGE');\n  // If a BYTERANGE attribute is not specified, the segment consists\n  // of the entire resource.\n  if (byterange) {\n    let blocks = byterange.split('@');\n    let byteLength = Number(blocks[0]);\n    startByte = Number(blocks[1]);\n    endByte = startByte + byteLength - 1;\n  }\n\n  return new shaka.media.InitSegmentReference(\n      () => [absoluteInitSegmentUri],\n      startByte,\n      endByte);\n};\n\n\n/**\n * Parses one shaka.hls.Segment object into a shaka.media.SegmentReference.\n *\n * @param {!shaka.hls.Playlist} playlist\n * @param {shaka.media.SegmentReference} previousReference\n * @param {!shaka.hls.Segment} hlsSegment\n * @param {number} position\n * @param {number} startTime\n * @return {!shaka.media.SegmentReference}\n * @private\n */\nshaka.hls.HlsParser.prototype.createSegmentReference_ =\n    function(playlist, previousReference, hlsSegment, position, startTime) {\n  const Utils = shaka.hls.Utils;\n  const tags = hlsSegment.tags;\n  const absoluteSegmentUri = hlsSegment.absoluteUri;\n\n  let extinfTag = this.getRequiredTag_(tags, 'EXTINF');\n  // The EXTINF tag format is '#EXTINF:<duration>,[<title>]'.\n  // We're interested in the duration part.\n  let extinfValues = extinfTag.value.split(',');\n  let duration = Number(extinfValues[0]);\n  let endTime = startTime + duration;\n\n  let startByte = 0;\n  let endByte = null;\n  let byterange = Utils.getFirstTagWithName(tags, 'EXT-X-BYTERANGE');\n\n  // If BYTERANGE is not specified, the segment consists of the entire resource.\n  if (byterange) {\n    let blocks = byterange.value.split('@');\n    let byteLength = Number(blocks[0]);\n    if (blocks[1]) {\n      startByte = Number(blocks[1]);\n    } else {\n      goog.asserts.assert(previousReference,\n                          'Cannot refer back to previous HLS segment!');\n      startByte = previousReference.endByte + 1;\n    }\n    endByte = startByte + byteLength - 1;\n  }\n\n  return new shaka.media.SegmentReference(\n      position,\n      startTime,\n      endTime,\n      () => [absoluteSegmentUri],\n      startByte,\n      endByte);\n};\n\n\n/** @private */\nshaka.hls.HlsParser.prototype.notifySegments_ = function() {\n  // The presentation timeline may or may not be set yet.\n  // If it does not yet exist, hold onto the segments until it does.\n  if (!this.presentationTimeline_) {\n    return;\n  }\n  this.segmentsToNotifyByStream_.forEach((segments) => {\n    // HLS doesn't have separate periods.\n    this.presentationTimeline_.notifySegments(segments, /* periodStart */ 0);\n  });\n  this.segmentsToNotifyByStream_ = [];\n};\n\n\n/**\n * Parses shaka.hls.Segment objects into shaka.media.SegmentReferences.\n *\n * @param {string} verbatimMediaPlaylistUri\n * @param {!shaka.hls.Playlist} playlist\n * @param {number} startPosition\n * @param {string} mimeType\n * @param {string} codecs\n * @return {!Promise<!Array.<!shaka.media.SegmentReference>>}\n * @private\n */\nshaka.hls.HlsParser.prototype.createSegments_ = function(\n    verbatimMediaPlaylistUri, playlist, startPosition, mimeType, codecs) {\n  const hlsSegments = playlist.segments;\n  const references = [];\n\n  goog.asserts.assert(hlsSegments.length, 'Playlist should have segments!');\n  // We may need to look at the media itself to determine a segment start time.\n  const firstSegmentUri = hlsSegments[0].absoluteUri;\n  const firstSegmentRef =\n      this.createSegmentReference_(\n          playlist,\n          null /* previousReference */,\n          hlsSegments[0],\n          startPosition,\n          0 /* startTime, irrelevant */);\n\n  const initSegmentRef = this.createInitSegmentReference_(playlist);\n\n  return this.getStartTime_(verbatimMediaPlaylistUri, initSegmentRef,\n                            firstSegmentRef, mimeType, codecs)\n      .then(function(firstStartTime) {\n        shaka.log.debug('First segment', firstSegmentUri.split('/').pop(),\n                        'starts at', firstStartTime);\n        for (let i = 0; i < hlsSegments.length; ++i) {\n          let hlsSegment = hlsSegments[i];\n          let previousReference = references[references.length - 1];\n          let startTime = (i == 0) ? firstStartTime : previousReference.endTime;\n          let position = startPosition + i;\n\n          let reference = this.createSegmentReference_(\n              playlist,\n              previousReference,\n              hlsSegment,\n              position,\n              startTime);\n          references.push(reference);\n        }\n\n        this.segmentsToNotifyByStream_.push(references);\n        this.notifySegments_();\n\n        return references;\n      }.bind(this));\n};\n\n\n/**\n * Try to fetch a partial segment, and fall back to a full segment if we have\n * to.\n *\n * @param {!shaka.media.AnySegmentReference} segmentRef\n * @return {!Promise.<shaka.extern.Response>}\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.hls.HlsParser.prototype.fetchPartialSegment_ = function(segmentRef) {\n  let networkingEngine = this.playerInterface_.networkingEngine;\n  const requestType = shaka.net.NetworkingEngine.RequestType.SEGMENT;\n  let request = shaka.net.NetworkingEngine.makeRequest(\n      segmentRef.getUris(), this.config_.retryParameters);\n\n  // Try to avoid fetching the entire segment, which can be quite large.\n  let partialSegmentHeaders = {};\n  let startByte = segmentRef.startByte;\n  let partialEndByte =\n      startByte + shaka.hls.HlsParser.PARTIAL_SEGMENT_SIZE_ - 1;\n  partialSegmentHeaders['Range'] = 'bytes=' + startByte + '-' + partialEndByte;\n\n  // Prepare a fallback to the entire segment.\n  let fullSegmentHeaders = {};\n  if ((startByte != 0) || (segmentRef.endByte != null)) {\n    let range = 'bytes=' + startByte + '-';\n    if (segmentRef.endByte != null) range += segmentRef.endByte;\n\n    fullSegmentHeaders['Range'] = range;\n  }\n\n  // Try a partial request first.\n  request.headers = partialSegmentHeaders;\n  let operation = networkingEngine.request(requestType, request);\n  this.operationManager_.manage(operation);\n  return operation.promise.catch((error) => {\n    // The partial request may fail for a number of reasons.\n    // Some servers do not support Range requests, and others do not support\n    // the OPTIONS request which must be made before any cross-origin Range\n    // request.  Since this fallback is expensive, warn the app developer.\n    shaka.log.alwaysWarn('Unable to fetch a partial HLS segment! ' +\n                         'Falling back to a full segment request, ' +\n                         'which is expensive!  Your server should ' +\n                         'support Range requests and CORS preflights.',\n                         request.uris[0]);\n    request.headers = fullSegmentHeaders;\n    let operation = networkingEngine.request(requestType, request);\n    this.operationManager_.manage(operation);\n    return operation.promise;\n  });\n};\n\n\n/**\n * Gets the start time of a segment from the existing manifest (if possible) or\n * by downloading it and parsing it otherwise.\n *\n * @param {string} verbatimMediaPlaylistUri\n * @param {shaka.media.InitSegmentReference} initSegmentRef\n * @param {!shaka.media.SegmentReference} segmentRef\n * @param {string} mimeType\n * @param {string} codecs\n * @return {!Promise.<number>}\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.hls.HlsParser.prototype.getStartTime_ = function(\n    verbatimMediaPlaylistUri, initSegmentRef, segmentRef, mimeType, codecs) {\n  // If we are updating the manifest, we can usually skip fetching the segment\n  // by examining the references we already have.  This won't be possible if\n  // there was some kind of lag or delay updating the manifest on the server,\n  // in which extreme case we would fall back to fetching a segment.  This\n  // allows us to both avoid fetching segments when possible, and recover from\n  // certain server-side issues gracefully.\n  if (this.manifest_) {\n    const streamInfo = this.uriToStreamInfosMap_.get(verbatimMediaPlaylistUri);\n    const segmentIndex = streamInfo.segmentIndex;\n    const reference = segmentIndex.get(segmentRef.position);\n    if (reference) {\n      // We found it!  Avoid fetching and parsing the segment.\n      shaka.log.v1('Found segment start time in previous manifest');\n      return Promise.resolve(reference.startTime);\n    }\n\n    shaka.log.debug('Unable to find segment start time in previous manifest!');\n  }\n\n  // TODO: Introduce a new tag to extend HLS and provide the first segment's\n  // start time.  This will avoid the need for these fetches in content packaged\n  // with Shaka Packager.  This web-friendly extension to HLS can then be\n  // proposed to Apple for inclusion in a future version of HLS.\n  // See https://github.com/google/shaka-packager/issues/294\n\n  shaka.log.v1('Fetching segment to find start time');\n  let fetches = [this.fetchPartialSegment_(segmentRef)];\n\n  if (mimeType == 'video/mp4' || mimeType == 'audio/mp4') {\n    // We also need the init segment to get the correct timescale.\n    if (initSegmentRef) {\n      fetches.push(this.fetchPartialSegment_(initSegmentRef));\n    } else {\n      // If the stream is self-initializing, use the same response for both.\n      fetches.push(fetches[0]);\n    }\n  }\n\n  return Promise.all(fetches).then(function(responses) {\n    if (mimeType == 'video/mp4' || mimeType == 'audio/mp4') {\n      return this.getStartTimeFromMp4Segment_(\n          responses[0].data, responses[1].data);\n    } else if (mimeType == 'audio/mpeg') {\n      // There is no standard way to embed a timestamp in an mp3 file, so the\n      // start time is presumably 0.\n      return 0;\n    } else if (mimeType == 'video/mp2t') {\n      return this.getStartTimeFromTsSegment_(responses[0].data);\n    } else if (mimeType == 'application/mp4' ||\n               mimeType.startsWith('text/')) {\n      return this.getStartTimeFromTextSegment_(\n          mimeType, codecs, responses[0].data);\n    } else {\n      // TODO: Parse WebM?\n      // TODO: Parse raw AAC?\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.MANIFEST,\n          shaka.util.Error.Code.HLS_COULD_NOT_PARSE_SEGMENT_START_TIME);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Parses an mp4 segment to get its start time.\n *\n * @param {!ArrayBuffer} mediaData\n * @param {!ArrayBuffer} initData\n * @return {number}\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.hls.HlsParser.prototype.getStartTimeFromMp4Segment_ =\n    function(mediaData, initData) {\n  const Mp4Parser = shaka.util.Mp4Parser;\n\n  let timescale = 0;\n  new Mp4Parser()\n      .box('moov', Mp4Parser.children)\n      .box('trak', Mp4Parser.children)\n      .box('mdia', Mp4Parser.children)\n      .fullBox('mdhd', function(box) {\n        goog.asserts.assert(\n            box.version == 0 || box.version == 1,\n            'MDHD version can only be 0 or 1');\n\n        // Skip \"creation_time\" and \"modification_time\".\n        // They are 4 bytes each if the mdhd box is version 0, 8 bytes each if\n        // it is version 1.\n        box.reader.skip(box.version == 0 ? 8 : 16);\n\n        timescale = box.reader.readUint32();\n        box.parser.stop();\n      }).parse(initData, true /* partialOkay */);\n\n  if (!timescale) {\n    shaka.log.error('Unable to find timescale in init segment!');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_COULD_NOT_PARSE_SEGMENT_START_TIME);\n  }\n\n  let startTime = 0;\n  let parsedMedia = false;\n  new Mp4Parser()\n      .box('moof', Mp4Parser.children)\n      .box('traf', Mp4Parser.children)\n      .fullBox('tfdt', function(box) {\n        goog.asserts.assert(\n            box.version == 0 || box.version == 1,\n            'TFDT version can only be 0 or 1');\n        let baseTime = (box.version == 0) ?\n            box.reader.readUint32() :\n            box.reader.readUint64();\n        startTime = baseTime / timescale;\n        parsedMedia = true;\n        box.parser.stop();\n      }).parse(mediaData, true /* partialOkay */);\n\n  if (!parsedMedia) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_COULD_NOT_PARSE_SEGMENT_START_TIME);\n  }\n  return startTime;\n};\n\n\n/**\n * Parses a TS segment to get its start time.\n *\n * @param {!ArrayBuffer} data\n * @return {number}\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.hls.HlsParser.prototype.getStartTimeFromTsSegment_ = function(data) {\n  let reader = new shaka.util.DataViewReader(\n      new DataView(data), shaka.util.DataViewReader.Endianness.BIG_ENDIAN);\n\n  const fail = function() {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_COULD_NOT_PARSE_SEGMENT_START_TIME);\n  };\n\n  let packetStart = 0;\n  let syncByte = 0;\n\n  const skipPacket = function() {\n    // 188-byte packets are standard, so assume that.\n    reader.seek(packetStart + 188);\n    syncByte = reader.readUint8();\n    if (syncByte != 0x47) {\n      // We haven't found the sync byte, so try it as a 192-byte packet.\n      reader.seek(packetStart + 192);\n      syncByte = reader.readUint8();\n    }\n    if (syncByte != 0x47) {\n      // We still haven't found the sync byte, so try as a 204-byte packet.\n      reader.seek(packetStart + 204);\n      syncByte = reader.readUint8();\n    }\n    if (syncByte != 0x47) {\n      // We still haven't found the sync byte, so the packet was of a\n      // non-standard size.\n      fail();\n    }\n    // Put the sync byte back so we can read it in the next loop.\n    reader.rewind(1);\n  };\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    // Format reference: https://bit.ly/TsPacket\n    packetStart = reader.getPosition();\n\n    syncByte = reader.readUint8();\n    if (syncByte != 0x47) fail();\n\n    let flagsAndPacketId = reader.readUint16();\n    let hasPesPacket = flagsAndPacketId & 0x4000;\n    if (!hasPesPacket) fail();\n\n    let flags = reader.readUint8();\n    let adaptationFieldControl = (flags & 0x30) >> 4;\n    if (adaptationFieldControl == 0 /* reserved */ ||\n        adaptationFieldControl == 2 /* adaptation field, no payload */) {\n      fail();\n    }\n\n    if (adaptationFieldControl == 3) {\n      // Skip over adaptation field.\n      let length = reader.readUint8();\n      reader.skip(length);\n    }\n\n    // Now we come to the PES header (hopefully).\n    // Format reference: https://bit.ly/TsPES\n    let startCode = reader.readUint32();\n    let startCodePrefix = startCode >> 8;\n    if (startCodePrefix != 1) {\n      // Not a PES packet yet.  Skip this TS packet and try again.\n      skipPacket();\n      continue;\n    }\n\n    // Skip the 16-bit PES length and the first 8 bits of the optional header.\n    reader.skip(3);\n    // The next 8 bits contain flags about DTS & PTS.\n    let ptsDtsIndicator = reader.readUint8() >> 6;\n    if (ptsDtsIndicator == 0 /* no timestamp */ ||\n        ptsDtsIndicator == 1 /* forbidden */) {\n      fail();\n    }\n\n    let pesHeaderLengthRemaining = reader.readUint8();\n    if (pesHeaderLengthRemaining == 0) {\n      fail();\n    }\n\n    if (ptsDtsIndicator == 2 /* PTS only */) {\n      goog.asserts.assert(pesHeaderLengthRemaining == 5, 'Bad PES header?');\n    } else if (ptsDtsIndicator == 3 /* PTS and DTS */) {\n      goog.asserts.assert(pesHeaderLengthRemaining == 10, 'Bad PES header?');\n    }\n\n    let pts0 = reader.readUint8();\n    let pts1 = reader.readUint16();\n    let pts2 = reader.readUint16();\n    // Reconstruct 33-bit PTS from the 5-byte, padded structure.\n    let ptsHigh3 = (pts0 & 0x0e) >> 1;\n    let ptsLow30 = ((pts1 & 0xfffe) << 14) | ((pts2 & 0xfffe) >> 1);\n    // Reconstruct the PTS as a float.  Avoid bitwise operations to combine\n    // because bitwise ops treat the values as 32-bit ints.\n    let pts = ptsHigh3 * (1 << 30) + ptsLow30;\n    return pts / shaka.hls.HlsParser.TS_TIMESCALE_;\n  }\n};\n\n\n/**\n * Parses a text segment to get its start time.\n *\n * @param {string} mimeType\n * @param {string} codecs\n * @param {!ArrayBuffer} data\n * @return {number}\n * @throws {shaka.util.Error}\n * @private\n */\nshaka.hls.HlsParser.prototype.getStartTimeFromTextSegment_ =\n    function(mimeType, codecs, data) {\n  let fullMimeType = shaka.util.MimeUtils.getFullType(mimeType, codecs);\n  if (!shaka.text.TextEngine.isTypeSupported(fullMimeType)) {\n    // We won't be able to parse this, but it will be filtered out anyway.\n    // So we don't have to care about the start time.\n    return 0;\n  }\n\n  let textEngine = new shaka.text.TextEngine(/* displayer */ null);\n  textEngine.initParser(fullMimeType);\n  return textEngine.getStartTime(data);\n};\n\n\n/**\n * Attempts to guess which codecs from the codecs list belong to a given content\n * type.  Does not assume a single codec is anything special, and does not throw\n * if it fails to match.\n *\n * @param {string} contentType\n * @param {!Array.<string>} codecs\n * @return {?string} or null if no match is found\n * @private\n */\nshaka.hls.HlsParser.prototype.guessCodecsSafe_ = function(contentType, codecs) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  const HlsParser = shaka.hls.HlsParser;\n  let formats = HlsParser.CODEC_REGEXPS_BY_CONTENT_TYPE_[contentType];\n\n  for (let i = 0; i < formats.length; i++) {\n    for (let j = 0; j < codecs.length; j++) {\n      if (formats[i].test(codecs[j].trim())) {\n        return codecs[j].trim();\n      }\n    }\n  }\n\n  // Text does not require a codec string.\n  if (contentType == ContentType.TEXT) {\n    return '';\n  }\n\n  return null;\n};\n\n\n/**\n * Attempts to guess which codecs from the codecs list belong to a given content\n * type.  Assumes that at least one codec is correct, and throws if none are.\n *\n * @param {string} contentType\n * @param {!Array.<string>} codecs\n * @return {string}\n * @private\n * @throws {shaka.util.Error}\n */\nshaka.hls.HlsParser.prototype.guessCodecs_ = function(contentType, codecs) {\n  if (codecs.length == 1) {\n    return codecs[0];\n  }\n\n  let match = this.guessCodecsSafe_(contentType, codecs);\n  // A failure is specifically denoted by null; an empty string represents a\n  // valid match of no codec.\n  if (match != null) {\n    return match;\n  }\n\n  // Unable to guess codecs.\n  throw new shaka.util.Error(\n      shaka.util.Error.Severity.CRITICAL,\n      shaka.util.Error.Category.MANIFEST,\n      shaka.util.Error.Code.HLS_COULD_NOT_GUESS_CODECS,\n      codecs);\n};\n\n\n/**\n * Attempts to guess stream's mime type based on content type and URI.\n *\n * @param {string} contentType\n * @param {string} codecs\n * @param {!shaka.hls.Playlist} playlist\n * @return {!Promise.<string>}\n * @private\n * @throws {shaka.util.Error}\n */\nshaka.hls.HlsParser.prototype.guessMimeType_ =\n    function(contentType, codecs, playlist) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  const HlsParser = shaka.hls.HlsParser;\n\n  goog.asserts.assert(playlist.segments.length,\n                      'Playlist should have segments!');\n  const firstSegmentUri = playlist.segments[0].absoluteUri;\n\n  let parsedUri = new goog.Uri(firstSegmentUri);\n  let extension = parsedUri.getPath().split('.').pop();\n  let map = HlsParser.EXTENSION_MAP_BY_CONTENT_TYPE_[contentType];\n\n  let mimeType = map[extension];\n  if (mimeType) {\n    return Promise.resolve(mimeType);\n  }\n\n  if (contentType == ContentType.TEXT) {\n    // The extension map didn't work.\n    if (!codecs || codecs == 'vtt') {\n      // If codecs is 'vtt', it's WebVTT.\n      // If there was no codecs string, assume HLS text streams are WebVTT.\n      return Promise.resolve('text/vtt');\n    } else {\n      // Otherwise, assume MP4-embedded text, since text-based formats tend not\n      // to have a codecs string at all.\n      return Promise.resolve('application/mp4');\n    }\n  }\n\n  // If unable to guess mime type, request a segment and try getting it\n  // from the response.\n  let headRequest = shaka.net.NetworkingEngine.makeRequest(\n      [firstSegmentUri], this.config_.retryParameters);\n  headRequest.method = 'HEAD';\n  const requestType = shaka.net.NetworkingEngine.RequestType.SEGMENT;\n  let networkingEngine = this.playerInterface_.networkingEngine;\n  let operation = networkingEngine.request(requestType, headRequest);\n  this.operationManager_.manage(operation);\n\n  return operation.promise.then((response) => {\n    let mimeType = response.headers['content-type'];\n    if (!mimeType) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.MANIFEST,\n          shaka.util.Error.Code.HLS_COULD_NOT_GUESS_MIME_TYPE,\n          extension);\n    }\n\n    // Split the MIME type in case the server sent additional parameters.\n    return mimeType.split(';')[0];\n  });\n};\n\n\n/**\n * Find the attribute and returns its value.\n * Throws an error if attribute was not found.\n *\n * @param {shaka.hls.Tag} tag\n * @param {string} attributeName\n * @return {string}\n * @private\n * @throws {shaka.util.Error}\n */\nshaka.hls.HlsParser.getRequiredAttributeValue_ = function(tag, attributeName) {\n  let attribute = tag.getAttribute(attributeName);\n  if (!attribute) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_REQUIRED_ATTRIBUTE_MISSING,\n        attributeName);\n  }\n\n  return attribute.value;\n};\n\n\n/**\n * Returns a tag with a given name.\n * Throws an error if tag was not found.\n *\n * @param {!Array.<shaka.hls.Tag>} tags\n * @param {string} tagName\n * @return {!shaka.hls.Tag}\n * @private\n * @throws {shaka.util.Error}\n */\nshaka.hls.HlsParser.prototype.getRequiredTag_ = function(tags, tagName) {\n  const Utils = shaka.hls.Utils;\n  let tag = Utils.getFirstTagWithName(tags, tagName);\n  if (!tag) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.HLS_REQUIRED_TAG_MISSING, tagName);\n  }\n\n  return tag;\n};\n\n\n/**\n * @param {shaka.extern.Stream} stream\n * @param {?string} width\n * @param {?string} height\n * @param {?string} frameRate\n * @private\n */\nshaka.hls.HlsParser.prototype.addVideoAttributes_ =\n    function(stream, width, height, frameRate) {\n  if (stream) {\n    stream.width = Number(width) || undefined;\n    stream.height = Number(height) || undefined;\n    stream.frameRate = Number(frameRate) || undefined;\n  }\n};\n\n\n/**\n * Makes a network request for the manifest and returns a Promise\n * with the resulting data.\n *\n * @param {string} absoluteUri\n * @return {!Promise.<!shaka.extern.Response>}\n * @private\n */\nshaka.hls.HlsParser.prototype.requestManifest_ = function(absoluteUri) {\n  const requestType = shaka.net.NetworkingEngine.RequestType.MANIFEST;\n  let request = shaka.net.NetworkingEngine.makeRequest(\n      [absoluteUri], this.config_.retryParameters);\n  let networkingEngine = this.playerInterface_.networkingEngine;\n  let operation = networkingEngine.request(requestType, request);\n  this.operationManager_.manage(operation);\n  return operation.promise;\n};\n\n\n/**\n * A list of regexps to detect well-known video codecs.\n *\n * @const {!Array.<!RegExp>}\n * @private\n */\nshaka.hls.HlsParser.VIDEO_CODEC_REGEXPS_ = [\n  /^avc/,\n  /^hev/,\n  /^hvc/,\n  /^vp0?[89]/,\n  /^av1$/,\n];\n\n\n/**\n * A list of regexps to detect well-known audio codecs.\n *\n * @const {!Array.<!RegExp>}\n * @private\n */\nshaka.hls.HlsParser.AUDIO_CODEC_REGEXPS_ = [\n  /^vorbis$/,\n  /^opus$/,\n  /^flac$/,\n  /^mp4a/,\n  /^[ae]c-3$/,\n];\n\n\n/**\n * A list of regexps to detect well-known text codecs.\n *\n * @const {!Array.<!RegExp>}\n * @private\n */\nshaka.hls.HlsParser.TEXT_CODEC_REGEXPS_ = [\n  /^vtt$/,\n  /^wvtt/,\n  /^stpp/,\n];\n\n\n/**\n * @const {!Object.<string, !Array.<!RegExp>>}\n * @private\n */\nshaka.hls.HlsParser.CODEC_REGEXPS_BY_CONTENT_TYPE_ = {\n  'audio': shaka.hls.HlsParser.AUDIO_CODEC_REGEXPS_,\n  'video': shaka.hls.HlsParser.VIDEO_CODEC_REGEXPS_,\n  'text': shaka.hls.HlsParser.TEXT_CODEC_REGEXPS_,\n};\n\n\n/**\n * @const {!Object.<string, string>}\n * @private\n */\nshaka.hls.HlsParser.AUDIO_EXTENSIONS_TO_MIME_TYPES_ = {\n  'mp4': 'audio/mp4',\n  'm4s': 'audio/mp4',\n  'm4i': 'audio/mp4',\n  'm4a': 'audio/mp4',\n  // MPEG2-TS also uses video/ for audio: https://bit.ly/TsMse\n  'ts': 'video/mp2t',\n};\n\n\n/**\n * @const {!Object.<string, string>}\n * @private\n */\nshaka.hls.HlsParser.VIDEO_EXTENSIONS_TO_MIME_TYPES_ = {\n  'mp4': 'video/mp4',\n  'm4s': 'video/mp4',\n  'm4i': 'video/mp4',\n  'm4v': 'video/mp4',\n  'ts': 'video/mp2t',\n};\n\n\n/**\n * @const {!Object.<string, string>}\n * @private\n */\nshaka.hls.HlsParser.TEXT_EXTENSIONS_TO_MIME_TYPES_ = {\n  'mp4': 'application/mp4',\n  'm4s': 'application/mp4',\n  'm4i': 'application/mp4',\n  'vtt': 'text/vtt',\n  'ttml': 'application/ttml+xml',\n};\n\n\n/**\n * @const {!Object.<string, !Object.<string, string>>}\n * @private\n */\nshaka.hls.HlsParser.EXTENSION_MAP_BY_CONTENT_TYPE_ = {\n  'audio': shaka.hls.HlsParser.AUDIO_EXTENSIONS_TO_MIME_TYPES_,\n  'video': shaka.hls.HlsParser.VIDEO_EXTENSIONS_TO_MIME_TYPES_,\n  'text': shaka.hls.HlsParser.TEXT_EXTENSIONS_TO_MIME_TYPES_,\n};\n\n\n/**\n * @typedef {function(!shaka.hls.Tag):?shaka.extern.DrmInfo}\n * @private\n */\nshaka.hls.HlsParser.DrmParser_;\n\n\n/**\n * @param {!shaka.hls.Tag} drmTag\n * @return {?shaka.extern.DrmInfo}\n * @private\n */\nshaka.hls.HlsParser.widevineDrmParser_ = function(drmTag) {\n  const HlsParser = shaka.hls.HlsParser;\n  let method = HlsParser.getRequiredAttributeValue_(drmTag, 'METHOD');\n  // TODO: https://github.com/google/shaka-player/issues/1227\n  // Keep 'SAMPLE-AES-CENC' for backward compatibility.  Deprecate it in a\n  // future release.\n  const VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n  if (!VALID_METHODS.includes(method)) {\n    shaka.log.error('Widevine in HLS is only supported with [',\n                    VALID_METHODS.join(', '), '], not', method);\n    return null;\n  }\n\n  let uri = HlsParser.getRequiredAttributeValue_(drmTag, 'URI');\n  let parsedData = shaka.net.DataUriPlugin.parse(uri);\n\n  // The data encoded in the URI is a PSSH box to be used as init data.\n  let pssh = new Uint8Array(parsedData.data);\n  let drmInfo = shaka.util.ManifestParserUtils.createDrmInfo(\n      'com.widevine.alpha', [\n        {initDataType: 'cenc', initData: pssh},\n      ]);\n\n  let keyId = drmTag.getAttributeValue('KEYID');\n  if (keyId) {\n    // This value should begin with '0x':\n    goog.asserts.assert(keyId.startsWith('0x'), 'Incorrect KEYID format!');\n    // But the output should not contain the '0x':\n    drmInfo.keyIds = [keyId.substr(2).toLowerCase()];\n  }\n  return drmInfo;\n};\n\n\n/**\n * Called when the update timer ticks.\n *\n * @private\n */\nshaka.hls.HlsParser.prototype.onUpdate_ = function() {\n  goog.asserts.assert(this.updateTimer_, 'Should only be called by timer');\n  goog.asserts.assert(this.updatePeriod_ != null,\n                      'There should be an update period');\n\n  shaka.log.info('Updating manifest...');\n\n  // Detect a call to stop()\n  if (!this.playerInterface_) {\n    return;\n  }\n\n  this.updateTimer_ = null;\n  this.update().then(function() {\n    this.setUpdateTimer_(this.updatePeriod_);\n  }.bind(this)).catch(function(error) {\n    goog.asserts.assert(error instanceof shaka.util.Error,\n                        'Should only receive a Shaka error');\n\n    // Try updating again, but ensure we haven't been destroyed.\n    if (this.playerInterface_) {\n      // We will retry updating, so override the severity of the error.\n      error.severity = shaka.util.Error.Severity.RECOVERABLE;\n      this.playerInterface_.onError(error);\n\n      this.setUpdateTimer_(0);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Sets the update timer.\n *\n * @param {?number} time in seconds\n * @private\n */\nshaka.hls.HlsParser.prototype.setUpdateTimer_ = function(time) {\n  if (this.updatePeriod_ == null || time == null) {\n    return;\n  }\n  goog.asserts.assert(this.updateTimer_ == null,\n                      'Timer should not be already set');\n\n  let callback = this.onUpdate_.bind(this);\n  this.updateTimer_ = window.setTimeout(callback, time * 1000);\n};\n\n\n/**\n * @return {boolean}\n * @private\n */\nshaka.hls.HlsParser.prototype.isLive_ = function() {\n  const PresentationType = shaka.hls.HlsParser.PresentationType_;\n  return this.presentationType_ != PresentationType.VOD;\n};\n\n\n/**\n * @param {shaka.hls.HlsParser.PresentationType_} type\n * @private\n */\nshaka.hls.HlsParser.prototype.setPresentationType_ = function(type) {\n  this.presentationType_ = type;\n\n  if (this.presentationTimeline_) {\n    this.presentationTimeline_.setStatic(!this.isLive_());\n  }\n\n  if (!this.isLive_()) {\n    if (this.updateTimer_ != null) {\n      window.clearTimeout(this.updateTimer_);\n      this.updateTimer_ = null;\n      this.updatePeriod_ = null;\n    }\n  }\n};\n\n\n/**\n * @const {!Object.<string, shaka.hls.HlsParser.DrmParser_>}\n * @private\n */\nshaka.hls.HlsParser.KEYFORMATS_TO_DRM_PARSERS_ = {\n  /* TODO: https://github.com/google/shaka-player/issues/382\n  'com.apple.streamingkeydelivery':\n      shaka.hls.HlsParser.fairplayDrmParser_,\n  */\n  'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed':\n      shaka.hls.HlsParser.widevineDrmParser_,\n};\n\n\n/**\n * @enum {string}\n * @private\n */\nshaka.hls.HlsParser.PresentationType_ = {\n  VOD: 'VOD',\n  EVENT: 'EVENT',\n  LIVE: 'LIVE',\n};\n\n\n/**\n * @const {number}\n * @private\n */\nshaka.hls.HlsParser.TS_TIMESCALE_ = 90000;\n\n\n/**\n * At this value, timestamps roll over in TS content.\n * @const {number}\n * @private\n */\nshaka.hls.HlsParser.TS_ROLLOVER_ = 0x200000000;\n\n\n/**\n * The amount of data from the start of a segment we will try to fetch when we\n * need to know the segment start time.  This allows us to avoid fetching the\n * entire segment in many cases.\n *\n * @const {number}\n * @private\n */\nshaka.hls.HlsParser.PARTIAL_SEGMENT_SIZE_ = 2048;\n\n\nshaka.media.ManifestParser.registerParserByExtension(\n    'm3u8', shaka.hls.HlsParser);\nshaka.media.ManifestParser.registerParserByMime(\n    'application/x-mpegurl', shaka.hls.HlsParser);\nshaka.media.ManifestParser.registerParserByMime(\n    'application/vnd.apple.mpegurl', shaka.hls.HlsParser);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.ActiveStreamMap');\n\n\n/**\n * A structure used to track which streams were last used in any given period.\n *\n * @final\n */\nshaka.media.ActiveStreamMap = class {\n  constructor() {\n    /**\n     * A map of Period number to a map of content type to stream id.\n     * @private {!Object.<number, !shaka.media.ActiveStreamMap.Frame>}\n     */\n    this.history_ = {};\n  }\n\n  /**\n   * Check if a period has been played or has started playing.\n   *\n   * @param {number} periodIndex\n   * @return {boolean}\n   */\n  hasPeriod(periodIndex) {\n    return this.history_[periodIndex] != null;\n  }\n\n  /**\n   * Update the records to show that |stream| was the last stream of\n   * |type| playing in |period|.\n   *\n   * @param {number} periodIndex\n   * @param {shaka.media.ActiveStreamMap.StreamType} type\n   * @param {shaka.media.ActiveStreamMap.StreamId} streamId\n   */\n  update(periodIndex, type, streamId) {\n    this.history_[periodIndex] = this.history_[periodIndex] ||\n                            new shaka.media.ActiveStreamMap.Frame();\n    this.history_[periodIndex].update(type, streamId);\n  }\n\n  /**\n   * Get the id for the stream with the given type that was playing last in the\n   * given period. If the period had not started playing or there is no stream\n   * of type |type|, then |null| will be returned.\n   *\n   * @param {number} periodIndex\n   * @param {shaka.media.ActiveStreamMap.StreamType} type\n   * @return {?shaka.media.ActiveStreamMap.StreamId}\n   */\n  get(periodIndex, type) {\n    const record = this.history_[periodIndex];\n    return record ? record.get(type) : null;\n  }\n};\n\n\n/**\n * A structure used to track which streams were played during a specific\n * time frame.\n *\n * @final\n */\nshaka.media.ActiveStreamMap.Frame = class {\n  constructor() {\n    /**\n     * A mapping of stream type to stream id.\n     *\n     * @private {!Object<shaka.media.ActiveStreamMap.StreamType,\n     *                   shaka.media.ActiveStreamMap.StreamId>}\n     */\n    this.record_ = {};\n  }\n\n  /**\n   * @param {shaka.media.ActiveStreamMap.StreamType} type\n   * @param {shaka.media.ActiveStreamMap.StreamId} streamId\n   */\n  update(type, streamId) {\n    this.record_[type] = streamId;\n  }\n\n  /**\n   * Get the stream id for the stream type |type| played during this time\n   * frame. If there was no stream of type |type|, |null| will be returned.\n   *\n   * @param {shaka.media.ActiveStreamMap.StreamType} type\n   * @return {?shaka.media.ActiveStreamMap.StreamId}\n   */\n  get(type) {\n    return this.record_[type];\n  }\n};\n\n\n/**\n * A type definition for a stream's id.\n * @typedef {number}\n */\nshaka.media.ActiveStreamMap.StreamId;\n\n\n/**\n * A type definitions for a stream's type.\n * @typedef {string}\n */\nshaka.media.ActiveStreamMap.StreamType;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.AdaptationSet');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.util.MimeUtils');\n\n\n/**\n * A set of variants that we want to adapt between.\n *\n * @final\n */\nshaka.media.AdaptationSet = class {\n  /**\n   * @param {shaka.extern.Variant} root\n   *    The variant that all other variants will be tested against when being\n   *    added to the adaptation set. If a variant is not compatible with the\n   *    root, it will not be added.\n   * @param {!Iterable.<shaka.extern.Variant>=} candidates\n   *    Variants that may be compatible with the root and should be added if\n   *    compatible. If a candidate is not compatible, it will not end up in the\n   *    adaptation set.\n   */\n  constructor(root, candidates) {\n    /** @private {shaka.extern.Variant} */\n    this.root_ = root;\n    /** @private {!Set.<shaka.extern.Variant>} */\n    this.variants_ = new Set([root]);\n\n    // Try to add all the candidates. If they cannot be added (because they\n    // are not compatible with the root, they will be rejected by |add|.\n    candidates = candidates || [];\n    for (const candidate of candidates) {\n      this.add(candidate);\n    }\n  }\n\n  /**\n   * @param {shaka.extern.Variant} variant\n   * @return {boolean}\n   */\n  add(variant) {\n    if (this.canInclude(variant)) {\n      this.variants_.add(variant);\n      return true;\n    }\n\n    // To be nice, issue a warning if someone is trying to add something that\n    // they shouldn't.\n    shaka.log.warning('Rejecting variant - not compatible with root.');\n    return false;\n  }\n\n  /**\n   * Check if |variant| can be included with the set. If |canInclude| returns\n   * |false|, calling |add| will result in it being ignored.\n   *\n   * @param {shaka.extern.Variant} variant\n   * @return {boolean}\n   */\n  canInclude(variant) {\n    return shaka.media.AdaptationSet.areAdaptable(this.root_, variant);\n  }\n\n  /**\n   * @param {shaka.extern.Variant} a\n   * @param {shaka.extern.Variant} b\n   * @return {boolean}\n   */\n  static areAdaptable(a, b) {\n    const AdaptationSet = shaka.media.AdaptationSet;\n    const areAudiosCompatible = AdaptationSet.areAudiosCompatible_;\n    const areVideosCompatible = AdaptationSet.areVideosCompatible_;\n\n    // All variants should have audio or should all not have audio.\n    if (!!a.audio != !!b.audio) {\n      return false;\n    }\n\n    // All variants should have video or should all not have video.\n    if (!!a.video != !!b.video) {\n      return false;\n    }\n\n    // If the languages don't match, we should not adapt between them.\n    if (a.language != b.language) {\n      return false;\n    }\n\n    goog.asserts.assert(\n        !!a.audio == !!b.audio,\n        'Both should either have audio or not have audio.');\n    if (a.audio && b.audio && !areAudiosCompatible(a.audio, b.audio)) {\n      return false;\n    }\n\n    goog.asserts.assert(\n        !!a.video == !!b.video,\n        'Both should either have video or not have video.');\n    if (a.video && b.video && !areVideosCompatible(a.video, b.video)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * @return {!Iterable.<shaka.extern.Variant>}\n   */\n  values() {\n    return this.variants_.values();\n  }\n\n  /**\n   * Check if we can switch between two audio streams.\n   *\n   * @param {shaka.extern.Stream} a\n   * @param {shaka.extern.Stream} b\n   * @return {boolean}\n   * @private\n   */\n  static areAudiosCompatible_(a, b) {\n    const AdaptationSet = shaka.media.AdaptationSet;\n    const canTransitionBetween = AdaptationSet.canTransitionBetween_;\n    const areRolesEqual = AdaptationSet.areRolesEqual_;\n\n    // Audio channel counts must not change between adaptations.\n    if (a.channelsCount != b.channelsCount) {\n      return false;\n    }\n\n    // We can only adapt between base-codecs.\n    if (!canTransitionBetween(a, b)) {\n      return false;\n    }\n\n    // Audio roles must not change between adaptations.\n    if (!areRolesEqual(a.roles, b.roles)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Check if we can switch between two video streams.\n   *\n   * @param {shaka.extern.Stream} a\n   * @param {shaka.extern.Stream} b\n   * @return {boolean}\n   * @private\n   */\n  static areVideosCompatible_(a, b) {\n    const AdaptationSet = shaka.media.AdaptationSet;\n    const canTransitionBetween = AdaptationSet.canTransitionBetween_;\n    const areRolesEqual = AdaptationSet.areRolesEqual_;\n\n    // We can only adapt between base-codecs.\n    if (!canTransitionBetween(a, b)) {\n      return false;\n    }\n\n    // Video roles must not change between adaptations.\n    if (!areRolesEqual(a.roles, b.roles)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Check if we can switch between two streams based on their codec and mime\n   * type.\n   *\n   * @param {shaka.extern.Stream} a\n   * @param {shaka.extern.Stream} b\n   * @return {boolean}\n   * @private\n   */\n  static canTransitionBetween_(a, b) {\n    if (a.mimeType != b.mimeType) {\n      return false;\n    }\n\n\n    // Get the base codec of each codec in each stream.\n    const codecsA = shaka.util.MimeUtils.splitCodecs(a.codecs).map((codec) => {\n      return shaka.util.MimeUtils.getCodecBase(codec);\n    });\n    const codecsB = shaka.util.MimeUtils.splitCodecs(b.codecs).map((codec) => {\n      return shaka.util.MimeUtils.getCodecBase(codec);\n    });\n\n    // We don't want to allow switching between transmuxed and non-transmuxed\n    // content so the number of codecs should be the same.\n    //\n    // To avoid the case where an codec is used for audio and video we will\n    // codecs using arrays (not sets). While at this time, there are no codecs\n    // that work for audio and video, it is possible for \"raw\" codecs to be\n    // which would share the same name.\n    if (codecsA.length != codecsB.length) {\n      return false;\n    }\n\n    // Sort them so that we can walk through them and compare them\n    // element-by-element.\n    codecsA.sort();\n    codecsB.sort();\n\n    for (let i = 0; i < codecsA.length; i++) {\n      if (codecsA[i] != codecsB[i]) { return false; }\n    }\n\n    return true;\n  }\n\n  /**\n   * Check if two role lists are the equal. This will take into account all\n   * unique behaviours when comparing roles.\n   *\n   * @param {!Iterable.<string>} a\n   * @param {!Iterable.<string>} b\n   * @return {boolean}\n   * @private\n   */\n  static areRolesEqual_(a, b) {\n    const aSet = new Set(a);\n    const bSet = new Set(b);\n\n    // Remove the main role from the role lists (we expect to see them only\n    // in dash manifests).\n    const mainRole = 'main';\n    aSet.delete(mainRole);\n    bSet.delete(mainRole);\n\n    // Make sure that we have the same number roles in each list. Make sure to\n    // do it after correcting for 'main'.\n    if (aSet.size != bSet.size) { return false; }\n\n    // Because we know the two sets are the same size, if any item is missing\n    // if means that they are not the same.\n    for (const x of aSet) {\n      if (!bSet.has(x)) { return false; }\n    }\n\n    return true;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.AdaptationSetCriteria');\ngoog.provide('shaka.media.ExampleBasedCriteria');\ngoog.provide('shaka.media.PreferenceBasedCriteria');\n\ngoog.require('shaka.media.AdaptationSet');\n\n\n/**\n * An adaptation set criteria is a unit of logic that can take a set of\n * variants and return a subset of variants that should (and can) be\n * adapted between.\n *\n * @interface\n */\nshaka.media.AdaptationSetCriteria = class {\n  /**\n   * Take a set of variants, and return a subset of variants that can be\n   * adapted between.\n   *\n   * @param {!Array.<shaka.extern.Variant>} variants\n   * @return {!shaka.media.AdaptationSet}\n   */\n  create(variants) {}\n};\n\n\n/**\n * @implements {shaka.media.AdaptationSetCriteria}\n * @final\n */\nshaka.media.ExampleBasedCriteria = class {\n  /**\n   * @param {shaka.extern.Variant} example\n   */\n  constructor(example) {\n    /** @private {shaka.extern.Variant} */\n    this.example_ = example;\n\n    // We can't know what role is really the most important, so we don't use\n    // role for this.\n    const role = '';\n    const channelCount = example.audio && example.audio.channelsCount ?\n                         example.audio.channelsCount :\n                         0;\n\n    /** @private {!shaka.media.AdaptationSetCriteria} */\n    this.fallback_ = new shaka.media.PreferenceBasedCriteria(\n        example.language, role, channelCount);\n  }\n\n  /** @override */\n  create(variants) {\n    // We can't assume that the example is |variants| because it could actually\n    // be from another period.\n    const shortList = variants.filter((variant) => {\n      return shaka.media.AdaptationSet.areAdaptable(this.example_, variant);\n    });\n\n    if (shortList.length) {\n      // Use the first item in the short list as the root. It should not matter\n      // which element we use as all items in the short list should already be\n      // compatible.\n      return new shaka.media.AdaptationSet(shortList[0], shortList);\n    } else {\n      return this.fallback_.create(variants);\n    }\n  }\n};\n\n\n/**\n * @implements {shaka.media.AdaptationSetCriteria}\n * @final\n */\nshaka.media.PreferenceBasedCriteria = class {\n  /**\n   * @param {string} language\n   * @param {string} role\n   * @param {number} channelCount\n   */\n  constructor(language, role, channelCount) {\n    /** @private {string} */\n    this.language_ = language;\n    /** @private {string} */\n    this.role_ = role;\n    /** @private {number} */\n    this.channelCount_ = channelCount;\n  }\n\n  /** @override */\n  create(variants) {\n    const Class = shaka.media.PreferenceBasedCriteria;\n    const StreamUtils = shaka.util.StreamUtils;\n\n    let current = [];\n\n    const byLanguage = Class.filterByLanguage_(variants, this.language_);\n    const byPrimary = variants.filter((variant) => variant.primary);\n\n    if (byLanguage.length) {\n      current = byLanguage;\n    } else if (byPrimary.length) {\n      current = byPrimary;\n    } else {\n      current = variants;\n    }\n\n    // Now refine the choice based on role preference.\n    if (this.role_) {\n      const byRole = Class.filterVariantsByRole_(current, this.role_);\n      if (byRole.length) {\n        current = byRole;\n      } else {\n        shaka.log.warning('No exact match for variant role could be found.');\n      }\n    }\n\n    if (this.channelCount_) {\n      const byChannel = StreamUtils.filterVariantsByAudioChannelCount(\n          current, this.channelCount_);\n      if (byChannel.length) {\n        current = byChannel;\n      } else {\n        shaka.log.warning(\n            'No exact match for the channel count could be found.');\n      }\n    }\n\n    // Make sure we only return a valid adaptation set.\n    const set = new shaka.media.AdaptationSet(current[0]);\n    for (const variant of current) {\n      if (set.canInclude(variant)) {\n        set.add(variant);\n      }\n    }\n\n    return set;\n  }\n\n  /**\n   * @param {!Array.<shaka.extern.Variant>} variants\n   * @param {string} preferredLanguage\n   * @return {!Array.<shaka.extern.Variant>}\n   * @private\n   */\n  static filterByLanguage_(variants, preferredLanguage) {\n    const LanguageUtils = shaka.util.LanguageUtils;\n    const findClosestLocale = LanguageUtils.findClosestLocale;\n    const getLocaleForVariant = LanguageUtils.getLocaleForVariant;\n    const normalize = LanguageUtils.normalize;\n\n    /** @type {string} */\n    const preferredLocale = normalize(preferredLanguage);\n\n    /** @type {?string} */\n    const closestLocale = findClosestLocale(\n        preferredLocale,\n        variants.map((variant) => getLocaleForVariant(variant)));\n\n    // There were no locales close to what we preferred.\n    if (!closestLocale) {\n      return [];\n    }\n\n    // Find the variants that use the closest variant.\n    return variants.filter((variant) => {\n      return closestLocale == getLocaleForVariant(variant);\n    });\n  }\n\n  /**\n   * Filter Variants by role.\n   *\n   * @param {!Array.<shaka.extern.Variant>} variants\n   * @param {string} preferredRole\n   * @return {!Array.<shaka.extern.Variant>}\n   * @private\n   */\n  static filterVariantsByRole_(variants, preferredRole) {\n    return variants.filter((variant) => {\n      const audio = variant.audio;\n      const video = variant.video;\n      return (audio && audio.roles.indexOf(preferredRole) >= 0) ||\n             (video && video.roles.indexOf(preferredRole) >= 0);\n    });\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.GapJumpingController');\n\ngoog.require('shaka.log');\ngoog.require('shaka.media.TimeRangesUtils');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.Timer');\n\n\n/**\n * Creates a new GapJumpingController that handles jumping gaps that appear\n * within the content.  This will only jump gaps between two buffered ranges,\n * so we should not have to worry about the availability window.\n *\n * @param {!HTMLMediaElement} video\n * @param {!shaka.media.PresentationTimeline} timeline\n * @param {shaka.extern.StreamingConfiguration} config\n * @param {function(!Event)} onEvent Called when an event is raised to be sent\n *   to the application.\n *\n * @constructor\n * @struct\n * @implements {shaka.util.IDestroyable}\n */\nshaka.media.GapJumpingController = function(video, timeline, config, onEvent) {\n  /** @private {HTMLMediaElement} */\n  this.video_ = video;\n\n  /** @private {?shaka.media.PresentationTimeline} */\n  this.timeline_ = timeline;\n\n  /** @private {?shaka.extern.StreamingConfiguration} */\n  this.config_ = config;\n\n  /** @private {?function(!Event)} */\n  this.onEvent_ = onEvent;\n\n  /** @private {shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  /** @private {?shaka.util.Timer} */\n  this.gapJumpTimer_ = null;\n\n  /** @private {boolean} */\n  this.seekingEventReceived_ = false;\n\n  /** @private {number} */\n  this.prevReadyState_ = video.readyState;\n\n  /** @private {boolean} */\n  this.didFireLargeGap_ = false;\n\n  /**\n   * The wall-clock time (in milliseconds) that the stall occurred.  This is\n   * used to ensure we don't flush the pipeline too often.\n   * @private {number}\n   */\n  this.stallWallTime_ = -1;\n\n  /**\n   * The playhead time where we think a stall occurred.  When the ready state\n   * says we don't have enough data and the playhead stops too long, we assume\n   * we have stalled.\n   * @private {number}\n   */\n  this.stallPlayheadTime_ = -1;\n\n  /**\n   * True if we have already flushed the pipeline at stallPlayheadTime_.\n   * Allows us to avoid flushing multiple times for the same stall.\n   * @private {boolean}\n   */\n  this.stallCorrected_ = false;\n\n  /** @private {boolean} */\n  this.hadSegmentAppended_ = false;\n\n\n  let pollGap = this.onPollGapJump_.bind(this);\n  this.eventManager_.listen(video, 'waiting', pollGap);\n\n  // We can't trust readyState or 'waiting' events on all platforms.  So poll\n  // the current time and if we are in a gap, jump it.\n  // See: https://bit.ly/2McuXxm and https://bit.ly/2K5xmJO\n  this.gapJumpTimer_ = new shaka.util.Timer(pollGap);\n  this.gapJumpTimer_.scheduleRepeated(0.25);\n};\n\n\n/**\n * The limit, in seconds, for the gap size that we will assume the browser will\n * handle for us.\n * @const\n */\nshaka.media.GapJumpingController.BROWSER_GAP_TOLERANCE = 0.001;\n\n\n/** @override */\nshaka.media.GapJumpingController.prototype.destroy = function() {\n  let p = this.eventManager_.destroy();\n  this.eventManager_ = null;\n  this.video_ = null;\n  this.timeline_ = null;\n  this.onEvent_ = null;\n\n  if (this.gapJumpTimer_ != null) {\n    this.gapJumpTimer_.cancel();\n    this.gapJumpTimer_ = null;\n  }\n\n  return p;\n};\n\n\n/**\n * Called when a segment is appended by StreamingEngine, but not when a clear is\n * pending.  This means StreamingEngine will continue buffering forward from\n * what is buffered.  So we know about any gaps before the start.\n */\nshaka.media.GapJumpingController.prototype.onSegmentAppended = function() {\n  this.hadSegmentAppended_ = true;\n  this.onPollGapJump_();\n};\n\n\n/** Called when a seek has started. */\nshaka.media.GapJumpingController.prototype.onSeeking = function() {\n  this.seekingEventReceived_ = true;\n  this.hadSegmentAppended_ = false;\n  this.didFireLargeGap_ = false;\n};\n\n\n/**\n * Called on a recurring timer to check for gaps in the media.  This is also\n * called in a 'waiting' event.\n *\n * @private\n */\nshaka.media.GapJumpingController.prototype.onPollGapJump_ = function() {\n  // Don't gap jump before the video is ready to play.\n  if (this.video_.readyState == 0) return;\n  // Do not gap jump if seeking has begun, but the seeking event has not\n  // yet fired for this particular seek.\n  if (this.video_.seeking) {\n    if (!this.seekingEventReceived_) {\n      return;\n    }\n  } else {\n    this.seekingEventReceived_ = false;\n  }\n  // Don't gap jump while paused, so that you don't constantly jump ahead while\n  // paused on a livestream.\n  if (this.video_.paused) return;\n\n\n  // When the ready state changes, we have moved on, so we should fire the large\n  // gap event if we see one.\n  if (this.video_.readyState != this.prevReadyState_) {\n    this.didFireLargeGap_ = false;\n    this.prevReadyState_ = this.video_.readyState;\n  }\n\n  const smallGapLimit = this.config_.smallGapLimit;\n  let currentTime = this.video_.currentTime;\n  let buffered = this.video_.buffered;\n\n  let gapIndex = shaka.media.TimeRangesUtils.getGapIndex(buffered, currentTime);\n\n  // The current time is unbuffered or is too far from a gap.\n  if (gapIndex == null) {\n    this.handleStall_();\n    return;\n  }\n  // If we are before the first buffered range, this could be an unbuffered\n  // seek.  So wait until a segment is appended so we are sure it is a gap.\n  if (gapIndex == 0 && !this.hadSegmentAppended_) {\n    return;\n  }\n\n  // StreamingEngine can buffer past the seek end, but still don't allow seeking\n  // past it.\n  let jumpTo = buffered.start(gapIndex);\n  let seekEnd = this.timeline_.getSeekRangeEnd();\n  if (jumpTo >= seekEnd) {\n    return;\n  }\n\n  let jumpSize = jumpTo - currentTime;\n  let isGapSmall = jumpSize <= smallGapLimit;\n  let jumpLargeGap = false;\n\n  // If we jump to exactly the gap start, we may detect a small gap due to\n  // rounding errors or browser bugs.  We can ignore these extremely small gaps\n  // since the browser should play through them for us.\n  if (jumpSize < shaka.media.GapJumpingController.BROWSER_GAP_TOLERANCE) {\n    return;\n  }\n\n  if (!isGapSmall && !this.didFireLargeGap_) {\n    this.didFireLargeGap_ = true;\n\n    // Event firing is synchronous.\n    let event = new shaka.util.FakeEvent(\n        'largegap', {'currentTime': currentTime, 'gapSize': jumpSize});\n    event.cancelable = true;\n    this.onEvent_(event);\n\n    if (this.config_.jumpLargeGaps && !event.defaultPrevented) {\n      jumpLargeGap = true;\n    } else {\n      shaka.log.info('Ignoring large gap at', currentTime);\n    }\n  }\n\n  if (isGapSmall || jumpLargeGap) {\n    if (gapIndex == 0) {\n      shaka.log.info(\n          'Jumping forward', jumpSize,\n          'seconds because of gap before start time of', jumpTo);\n    } else {\n      shaka.log.info(\n          'Jumping forward', jumpSize, 'seconds because of gap starting at',\n          buffered.end(gapIndex - 1), 'and ending at', jumpTo);\n    }\n\n    this.video_.currentTime = jumpTo;\n  }\n};\n\n\n/**\n * This determines if we are stalled inside a buffered range and corrects it if\n * possible.\n * @private\n */\nshaka.media.GapJumpingController.prototype.handleStall_ = function() {\n  let currentTime = this.video_.currentTime;\n  let buffered = this.video_.buffered;\n\n  if (!this.video_.paused && this.video_.playbackRate > 0) {\n    // Some platforms/browsers can get stuck in the middle of a buffered range\n    // (e.g. when seeking in a background tab).  Flush the media pipeline to\n    // help. Flush once we have stopped for more than 1 second inside a buffered\n    // range.\n    if (this.stallPlayheadTime_ != currentTime) {\n      this.stallPlayheadTime_ = currentTime;\n      this.stallWallTime_ = Date.now();\n      this.stallCorrected_ = false;\n    } else if (!this.stallCorrected_ &&\n               this.stallWallTime_ < Date.now() - 1000) {\n      for (let i = 0; i < buffered.length; i++) {\n        // Ignore the end of the buffered range since it may not play any more\n        // on all platforms.\n        if (currentTime >= buffered.start(i) &&\n            currentTime < buffered.end(i) - 0.5) {\n          shaka.log.debug(\n              'Flushing media pipeline due to stall inside buffered range');\n          this.video_.currentTime += 0.1;\n          this.stallPlayheadTime_ = this.video_.currentTime;\n          this.stallCorrected_ = true;\n          break;\n        }\n      }\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.VideoWrapper');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.Timer');\n\n\n/**\n * Creates a new VideoWrapper that manages setting current time and playback\n * rate.  This handles seeks before content is loaded and ensuring the video\n * time is set properly.  This doesn't handle repositioning within the\n * presentation window.\n *\n * @param {!HTMLMediaElement} video\n * @param {function()} onSeek Called when the video seeks.\n * @param {number} startTime The time to start at.\n *\n * @constructor\n * @struct\n * @implements {shaka.util.IDestroyable}\n */\nshaka.media.VideoWrapper = function(video, onSeek, startTime) {\n  /** @private {HTMLMediaElement} */\n  this.video_ = video;\n\n  /** @private {?function()} */\n  this.onSeek_ = onSeek;\n\n  /** @private {number} */\n  this.startTime_ = startTime;\n\n  /** @private {shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  /** @private {number} */\n  this.playbackRate_ = 1;\n\n  /** @private {boolean} */\n  this.buffering_ = false;\n\n  /** @private {shaka.util.Timer} */\n  this.trickPlayTimer_ = null;\n\n  // Check if the video has already loaded some metadata.\n  if (video.readyState > 0) {\n    this.onLoadedMetadata_();\n  } else {\n    this.eventManager_.listenOnce(\n        video, 'loadedmetadata', this.onLoadedMetadata_.bind(this));\n  }\n\n  this.eventManager_.listen(video, 'ratechange', this.onRateChange_.bind(this));\n};\n\n\n/** @override */\nshaka.media.VideoWrapper.prototype.destroy = function() {\n  let p = this.eventManager_.destroy();\n  this.eventManager_ = null;\n\n  if (this.trickPlayTimer_ != null) {\n    this.trickPlayTimer_.cancel();\n    this.trickPlayTimer_ = null;\n  }\n\n  this.video_ = null;\n  this.onSeek_ = null;\n\n  return p;\n};\n\n\n/**\n * Gets the video's current (logical) position.\n *\n * @return {number}\n */\nshaka.media.VideoWrapper.prototype.getTime = function() {\n  if (this.video_.readyState > 0) {\n    return this.video_.currentTime;\n  } else {\n    return this.startTime_;\n  }\n};\n\n\n/**\n * Sets the current time of the video.\n *\n * @param {number} time\n */\nshaka.media.VideoWrapper.prototype.setTime = function(time) {\n  if (this.video_.readyState > 0) {\n    this.movePlayhead_(this.video_.currentTime, time);\n  } else {\n    this.startTime_ = time;\n    setTimeout(this.onSeek_, 0);\n  }\n};\n\n\n/**\n * Gets the current effective playback rate.  This may be negative even if the\n * browser does not directly support rewinding.\n * @return {number}\n */\nshaka.media.VideoWrapper.prototype.getPlaybackRate = function() {\n  return this.playbackRate_;\n};\n\n\n/**\n * Sets the playback rate.\n * @param {number} rate\n */\nshaka.media.VideoWrapper.prototype.setPlaybackRate = function(rate) {\n  if (this.trickPlayTimer_ != null) {\n    this.trickPlayTimer_.cancel();\n    this.trickPlayTimer_ = null;\n  }\n\n  this.playbackRate_ = rate;\n  // All major browsers support playback rates above zero.  Only need fake\n  // trick play for negative rates.\n  this.video_.playbackRate = (this.buffering_ || rate < 0) ? 0 : rate;\n\n  if (!this.buffering_ && rate < 0) {\n    // Defer creating the timer until we stop buffering.  This function will be\n    // called again from setBuffering().\n    let trickPlay = () => { this.video_.currentTime += rate / 4; };\n    this.trickPlayTimer_ = new shaka.util.Timer(trickPlay);\n    this.trickPlayTimer_.scheduleRepeated(0.25);\n  }\n};\n\n\n/**\n * Stops the playhead for buffering, or resumes the playhead after buffering.\n *\n * @param {boolean} buffering True to stop the playhead; false to allow it to\n *   continue.\n */\nshaka.media.VideoWrapper.prototype.setBuffering = function(buffering) {\n  if (buffering != this.buffering_) {\n    this.buffering_ = buffering;\n    this.setPlaybackRate(this.playbackRate_);\n  }\n};\n\n\n/**\n * Handles a 'ratechange' event.\n *\n * @private\n */\nshaka.media.VideoWrapper.prototype.onRateChange_ = function() {\n  // NOTE: This will not allow explicitly setting the playback rate to 0 while\n  // the playback rate is negative.  Pause will still work.\n  let expectedRate =\n      this.buffering_ || this.playbackRate_ < 0 ? 0 : this.playbackRate_;\n\n  // Native controls in Edge trigger a change to playbackRate and set it to 0\n  // when seeking.  If we don't exclude 0 from this check, we will force the\n  // rate to stay at 0 after a seek with Edge native controls.\n  // https://github.com/google/shaka-player/issues/951\n  if (this.video_.playbackRate && this.video_.playbackRate != expectedRate) {\n    shaka.log.debug('Video playback rate changed to', this.video_.playbackRate);\n    this.setPlaybackRate(this.video_.playbackRate);\n  }\n};\n\n\n/**\n * Handles a 'loadedmetadata' event.\n *\n * @private\n */\nshaka.media.VideoWrapper.prototype.onLoadedMetadata_ = function() {\n  if (Math.abs(this.video_.currentTime - this.startTime_) < 0.001) {\n    this.onSeekingToStartTime_();\n  } else {\n    this.eventManager_.listenOnce(\n        this.video_, 'seeking', this.onSeekingToStartTime_.bind(this));\n    // If the currentTime != 0, it indicates that the user has seeked after\n    // calling load(), so it is intended to start from a specific timestamp\n    // when playback, and should not be overriden by the startTime.\n    if (this.video_.currentTime == 0) {\n      this.video_.currentTime = this.startTime_;\n    } else {\n      // This is a workaround solution. If the currentTime is not set again, the\n      // video is stuck and could not be played.\n      // TODO: Need further investigation why it happens. Before and after\n      // setting the current time, video.readyState is 1, video.paused is true,\n      // and video.buffered's TimeRanges length is 0.\n      // See: https://github.com/google/shaka-player/issues/1298\n      this.video_.currentTime = this.video_.currentTime;\n    }\n  }\n};\n\n\n/**\n * Handles the 'seeking' event from the initial jump to the start time (if\n * there is one).\n *\n * @private\n */\nshaka.media.VideoWrapper.prototype.onSeekingToStartTime_ = function() {\n  goog.asserts.assert(this.video_.readyState > 0,\n                      'readyState should be greater than 0');\n  this.eventManager_.listen(this.video_, 'seeking', () => this.onSeek_());\n};\n\n\n/**\n * Moves the playhead to the target time, triggering a call to onSeeking_().\n *\n * @param {number} currentTime\n * @param {number} targetTime\n * @private\n */\nshaka.media.VideoWrapper.prototype.movePlayhead_ = function(\n    currentTime, targetTime) {\n  shaka.log.debug('Moving playhead...',\n                  'currentTime=' + currentTime,\n                  'targetTime=' + targetTime);\n  this.video_.currentTime = targetTime;\n\n  // Sometimes, IE and Edge ignore re-seeks.  Check every 100ms and try\n  // again if need be, up to 10 tries.\n  // Delay stats over 100 runs of a re-seeking integration test:\n  // IE     -   0ms -  47%\n  // IE     - 100ms -  63%\n  // Edge   -   0ms -   2%\n  // Edge   - 100ms -  40%\n  // Edge   - 200ms -  32%\n  // Edge   - 300ms -  24%\n  // Edge   - 400ms -   2%\n  // Chrome -   0ms - 100%\n  // TODO: File a bug on IE/Edge about this.\n  let tries = 0;\n  let recheck = () => {\n    if (!this.video_) return;\n    if (tries++ >= 10) return;\n\n    if (this.video_.currentTime == currentTime) {\n      // Sigh.  Try again.\n      this.video_.currentTime = targetTime;\n      setTimeout(recheck, 100);\n    }\n  };\n  setTimeout(recheck, 100);\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.Playhead');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.media.GapJumpingController');\ngoog.require('shaka.media.TimeRangesUtils');\ngoog.require('shaka.media.VideoWrapper');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.Timer');\n\n\n/**\n * Creates a Playhead, which manages the video's current time.\n *\n * The Playhead provides mechanisms for setting the presentation's start time,\n * restricting seeking to valid time ranges, and stopping playback for startup\n * and re-buffering.\n *\n * @param {!HTMLMediaElement} video\n * @param {!shaka.media.PresentationTimeline} timeline\n * @param {number} minBufferTime\n * @param {shaka.extern.StreamingConfiguration} config\n * @param {?number} startTime The playhead's initial position in seconds. If\n *   null, defaults to the start of the presentation for VOD and the live-edge\n *   for live.\n * @param {function()} onSeek Called when the user agent seeks to a time within\n *   the presentation timeline.\n * @param {function(!Event)} onEvent Called when an event is raised to be sent\n *   to the application.\n *\n * @constructor\n * @struct\n * @implements {shaka.util.IDestroyable}\n */\nshaka.media.Playhead = function(\n    video, timeline, minBufferTime, config, startTime, onSeek, onEvent) {\n  /** @private {HTMLMediaElement} */\n  this.video_ = video;\n\n  /** @private {?shaka.media.PresentationTimeline} */\n  this.timeline_ = timeline;\n\n  /** @private {number} */\n  this.minBufferTime_ = minBufferTime;\n\n  /** @private {?shaka.extern.StreamingConfiguration} */\n  this.config_ = config;\n\n  /** @private {?function()} */\n  this.onSeek_ = onSeek;\n\n  /** @private {?shaka.util.Timer} */\n  this.checkWindowTimer_ = null;\n\n  /** @private {?number} */\n  this.lastCorrectiveSeek_;\n\n  /** @private {shaka.media.GapJumpingController} */\n  this.gapController_ = new shaka.media.GapJumpingController(\n      video, timeline, config, onEvent);\n\n  /** @private {shaka.media.VideoWrapper} */\n  this.videoWrapper_ = new shaka.media.VideoWrapper(\n      video, this.onSeeking_.bind(this), this.getStartTime_(startTime));\n\n\n  let poll = this.onPollWindow_ .bind(this);\n  this.checkWindowTimer_ = new shaka.util.Timer(poll);\n  this.checkWindowTimer_.scheduleRepeated(0.25);\n};\n\n\n/**\n * This is the minimum size (in seconds) that the seek range can be.  If it is\n * smaller than this, change it to be this big so we don't repeatedly seek to\n * keep within a zero-width window.\n * This has been increased to 3s long, to account for the weaker hardware on\n * Chromecasts.\n * @private {number}\n * @const\n */\nshaka.media.Playhead.MIN_SEEK_RANGE_ = 3.0;\n\n\n/** @override */\nshaka.media.Playhead.prototype.destroy = function() {\n  let p = Promise.all([\n    this.videoWrapper_.destroy(),\n    this.gapController_.destroy(),\n  ]);\n  this.videoWrapper_ = null;\n  this.gapController_ = null;\n\n  if (this.checkWindowTimer_ != null) {\n    this.checkWindowTimer_.cancel();\n    this.checkWindowTimer_ = null;\n  }\n\n  this.video_ = null;\n  this.timeline_ = null;\n  this.config_ = null;\n  this.onSeek_ = null;\n\n  return p;\n};\n\n\n/**\n * Adjust the start time.  Used by Player to implement the\n * streaming.startAtSegmentBoundary configuration.\n *\n * @param {number} startTime\n */\nshaka.media.Playhead.prototype.setStartTime = function(startTime) {\n  this.videoWrapper_.setTime(startTime);\n};\n\n\n/**\n * Gets the playhead's current (logical) position.\n *\n * @return {number}\n */\nshaka.media.Playhead.prototype.getTime = function() {\n  let time = this.videoWrapper_.getTime();\n  if (this.video_.readyState > 0) {\n    // Although we restrict the video's currentTime elsewhere, clamp it here to\n    // ensure timing issues don't cause us to return a time outside the segment\n    // availability window.  E.g., the user agent seeks and calls this function\n    // before we receive the 'seeking' event.\n    //\n    // We don't buffer when the livestream video is paused and the playhead time\n    // is out of the seek range; thus, we do not clamp the current time when the\n    // video is paused.\n    // https://github.com/google/shaka-player/issues/1121\n    if (!this.video_.paused) {\n      time = this.clampTime_(time);\n    }\n  }\n\n  return time;\n};\n\n\n/**\n * Gets the playhead's initial position in seconds.\n *\n * @param {?number} startTime\n * @return {number}\n * @private\n */\nshaka.media.Playhead.prototype.getStartTime_ = function(startTime) {\n  if (startTime == null) {\n    if (this.timeline_.getDuration() < Infinity) {\n      // If the presentation is VOD, or if the presentation is live but has\n      // finished broadcasting, then start from the beginning.\n      startTime = this.timeline_.getSeekRangeStart();\n    } else {\n      // Otherwise, start near the live-edge.\n      startTime = this.timeline_.getSeekRangeEnd();\n    }\n  } else if (startTime < 0) {\n    // For live streams, if the startTime is negative, start from a certain\n    // offset time from the live edge.  If the offset from the live edge is not\n    // available, start from the current available segment start point instead,\n    // handled by clampTime_().\n    startTime = this.timeline_.getSeekRangeEnd() + startTime;\n  }\n  return this.clampSeekToDuration_(this.clampTime_(startTime));\n};\n\n\n/**\n * Stops the playhead for buffering, or resumes the playhead after buffering.\n *\n * @param {boolean} buffering True to stop the playhead; false to allow it to\n *   continue.\n */\nshaka.media.Playhead.prototype.setBuffering = function(buffering) {\n  this.videoWrapper_.setBuffering(buffering);\n};\n\n\n/**\n * Gets the current effective playback rate.  This may be negative even if the\n * browser does not directly support rewinding.\n * @return {number}\n */\nshaka.media.Playhead.prototype.getPlaybackRate = function() {\n  return this.videoWrapper_.getPlaybackRate();\n};\n\n\n/**\n * Sets the playback rate.\n * @param {number} rate\n */\nshaka.media.Playhead.prototype.setPlaybackRate = function(rate) {\n  this.videoWrapper_.setPlaybackRate(rate);\n};\n\n\n/**\n * Called when a segment is appended by StreamingEngine, but not when a clear is\n * pending.  This means StreamingEngine will continue buffering forward from\n * what is buffered, so that we know about any gaps before the start.\n */\nshaka.media.Playhead.prototype.onSegmentAppended = function() {\n  this.gapController_.onSegmentAppended();\n};\n\n\n/**\n * Called on a recurring timer to keep the playhead from falling outside the\n * availability window.\n *\n * @private\n */\nshaka.media.Playhead.prototype.onPollWindow_ = function() {\n  // Don't catch up to the seek range when we are paused or empty.\n  // The definition of \"seeking\" says that we are seeking until the buffered\n  // data intersects with the playhead.  If we fall outside of the seek range,\n  // it doesn't matter if we are in a \"seeking\" state.  We can and should go\n  // ahead and catch up while seeking.\n  if (this.video_.readyState == 0 || this.video_.paused) {\n    return;\n  }\n\n  let currentTime = this.video_.currentTime;\n  let seekStart = this.timeline_.getSeekRangeStart();\n  let seekEnd = this.timeline_.getSeekRangeEnd();\n\n  const minRange = shaka.media.Playhead.MIN_SEEK_RANGE_;\n  if (seekEnd - seekStart < minRange) {\n    seekStart = seekEnd - minRange;\n  }\n\n  if (currentTime < seekStart) {\n    // The seek range has moved past the playhead.  Move ahead to catch up.\n    let targetTime = this.reposition_(currentTime);\n    shaka.log.info('Jumping forward ' + (targetTime - currentTime) +\n                   ' seconds to catch up with the seek range.');\n    this.video_.currentTime = targetTime;\n  }\n};\n\n\n/**\n * Handles when a seek happens on the video.\n *\n * @private\n */\nshaka.media.Playhead.prototype.onSeeking_ = function() {\n  this.gapController_.onSeeking();\n  let currentTime = this.videoWrapper_.getTime();\n  let targetTime = this.reposition_(currentTime);\n\n  const gapLimit = shaka.media.GapJumpingController.BROWSER_GAP_TOLERANCE;\n  if (Math.abs(targetTime - currentTime) > gapLimit) {\n    // You can only seek like this every so often. This is to prevent an\n    // infinite loop on systems where changing currentTime takes a significant\n    // amount of time (e.g. Chromecast).\n    let time = new Date().getTime() / 1000;\n    if (!this.lastCorrectiveSeek_ || this.lastCorrectiveSeek_ < time - 1) {\n      this.lastCorrectiveSeek_ = time;\n      this.videoWrapper_.setTime(targetTime);\n      return;\n    }\n  }\n\n  shaka.log.v1('Seek to ' + currentTime);\n  this.onSeek_();\n};\n\n\n/**\n * Clamp seek times and playback start times so that we never seek to the\n * presentation duration.  Seeking to or starting at duration does not work\n * consistently across browsers.\n *\n * TODO: Clean up and simplify Playhead.  There are too many layers of, methods\n * for, and conditions on timestamp adjustment.\n *\n * @see https://github.com/google/shaka-player/issues/979\n * @param {number} time\n * @return {number} The adjusted seek time.\n * @private\n */\nshaka.media.Playhead.prototype.clampSeekToDuration_ = function(time) {\n  let duration = this.timeline_.getDuration();\n  if (time >= duration) {\n    goog.asserts.assert(this.config_.durationBackoff >= 0,\n                        'Duration backoff must be non-negative!');\n    return duration - this.config_.durationBackoff;\n  }\n  return time;\n};\n\n\n/**\n * Computes a new playhead position that's within the presentation timeline.\n *\n * @param {number} currentTime\n * @return {number} The time to reposition the playhead to.\n * @private\n */\nshaka.media.Playhead.prototype.reposition_ = function(currentTime) {\n  goog.asserts.assert(\n      this.config_,\n      'Cannot reposition playhead when it has beeen destroyed');\n\n  /** @type {function(number)} */\n  let isBuffered =\n      shaka.media.TimeRangesUtils.isBuffered.bind(null, this.video_.buffered);\n\n  let rebufferingGoal = Math.max(\n      this.minBufferTime_,\n      this.config_.rebufferingGoal);\n\n  let start = this.timeline_.getSeekRangeStart();\n  let end = this.timeline_.getSeekRangeEnd();\n  let duration = this.timeline_.getDuration();\n\n  const minRange = shaka.media.Playhead.MIN_SEEK_RANGE_;\n  if (end - start < minRange) {\n    start = end - minRange;\n  }\n\n  // With live content, the beginning of the availability window is moving\n  // forward.  This means we cannot seek to it since we will \"fall\" outside the\n  // window while we buffer.  So we define a \"safe\" region that is far enough\n  // away.  For VOD, |safe == start|.\n  let safe = this.timeline_.getSafeSeekRangeStart(rebufferingGoal);\n\n  // These are the times to seek to rather than the exact destinations.  When\n  // we seek, we will get another event (after a slight delay) and these steps\n  // will run again.  So if we seeked directly to |start|, |start| would move\n  // on the next call and we would loop forever.\n  //\n  // Offset by 5 seconds since Chromecast takes a few seconds to start playing\n  // after a seek, even when buffered.\n  let seekStart = this.timeline_.getSafeSeekRangeStart(5);\n  let seekSafe = this.timeline_.getSafeSeekRangeStart(rebufferingGoal + 5);\n\n\n  if (currentTime >= duration) {\n    shaka.log.v1('Playhead past duration.');\n    return this.clampSeekToDuration_(currentTime);\n  }\n\n  if (currentTime > end) {\n    shaka.log.v1('Playhead past end.');\n    return end;\n  }\n\n  if (currentTime < start) {\n    if (isBuffered(seekStart)) {\n      shaka.log.v1('Playhead before start & start is buffered');\n      return seekStart;\n    } else {\n      shaka.log.v1('Playhead before start & start is unbuffered');\n      return seekSafe;\n    }\n  }\n\n  if (currentTime >= safe || isBuffered(currentTime)) {\n    shaka.log.v1('Playhead in safe region or in buffered region.');\n    return currentTime;\n  } else {\n    shaka.log.v1('Playhead outside safe region & in unbuffered region.');\n    return seekSafe;\n  }\n};\n\n\n/**\n * Clamps the given time to the seek range.\n *\n * @param {number} time The time in seconds.\n * @return {number} The clamped time in seconds.\n * @private\n */\nshaka.media.Playhead.prototype.clampTime_ = function(time) {\n  let start = this.timeline_.getSeekRangeStart();\n  if (time < start) return start;\n\n  let end = this.timeline_.getSeekRangeEnd();\n  if (time > end) return end;\n\n  return time;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Destroyer');\n\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.PublicPromise');\n\n\n/**\n * A utility class to help work with |shaka.util.IDestroyable| objects.\n *\n * @final\n */\nshaka.util.Destroyer = class {\n  /**\n   * @param {function():!Promise} callback\n   *    A callback to destroy an object. This callback will only be called once\n   *    regardless of how many times |destroy| is called.\n   */\n  constructor(callback) {\n    /** @private {boolean} */\n    this.destroyed_ = false;\n\n    /** @private {!shaka.util.PublicPromise} */\n    this.waitOnDestroy_ = new shaka.util.PublicPromise();\n\n    /** @private {function():!Promise} */\n    this.onDestroy_ = callback;\n  }\n\n  /**\n   * Check if |destroy| has been called. This returning |true| does not mean\n   * that the promise returned by |destroy| has resolved yet.\n   *\n   * @return {boolean}\n   * @final\n   */\n  destroyed() {\n    return this.destroyed_;\n  }\n\n  /**\n   * Request that the destroy callback be called. Will return a promise that\n   * will resolve once the callback terminates. The promise will never be\n   * rejected.\n   *\n   * @return {!Promise}\n   * @final\n   */\n  destroy() {\n    if (this.destroyed_) {\n      return this.waitOnDestroy_;\n    }\n\n    // We have started destroying this object, so we should never get here\n    // again.\n    this.destroyed_ = true;\n\n    return this.onDestroy_().then(\n        () => { this.waitOnDestroy_.resolve(); },\n        () => { this.waitOnDestroy_.resolve(); });\n  }\n\n  /**\n   * A helper function to call |destroy| on |shaka.util.IDestroyable| objects\n   * in |objs| after |callback| terminates. All objects in |objs| will have\n   * |destroy| called regardless if |callback| is resolved or is rejected.\n   *\n   * @param {!Array.<!shaka.util.IDestroyable>} objs\n   *    A list of destroyable objects that should be destroyed after the\n   *    callback completes.\n   * @param {function():!Promise<T>|function():T} callback\n   *    A callback that should perform actions on the objects in |objs|. When\n   *    the promise returned by this callback is resolved or is rejected, all\n   *    objects in |objs| will have |destroy| called.\n   * @return {!Promise.<T>}\n   * @template T\n   */\n  static async with(objs, callback) {\n    try {\n      return await Promise.resolve(callback());\n    } finally {\n      await Promise.all(objs.map((obj) => obj.destroy()));\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.MediaSourcePlayheadObserver');\ngoog.provide('shaka.media.PlayheadObserver');\ngoog.provide('shaka.media.VideoPlayheadObserver');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.media.TimeRangesUtils');\ngoog.require('shaka.util.Destroyer');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.ObjectUtils');\ngoog.require('shaka.util.StreamUtils');\n\n\n/**\n * This observes the current playhead position to raise events.  This will only\n * observe the playhead, {@link shaka.media.Playhead} will modify it. This will:\n * <ul>\n *   <li>Track buffering state and call |onBuffering|.</li>\n *   <li>Track current Period and call |onChangePeriod|.</li>\n *   <li>Track timeline regions and raise respective events.</li>\n * </ul>\n *\n * @param {HTMLMediaElement} video\n * @param {number} minBufferTime\n * @param {shaka.extern.StreamingConfiguration} config\n * @param {function(boolean)} onBuffering Called and passed true when stopped\n *   for buffering; called and passed false when proceeding after buffering.\n *   If passed true, the callback should not set the video's playback rate.\n * @param {function(!Event)} onEvent Called when an event is raised to be sent\n *   to the application.\n * @param {function()} onChangePeriod Called when the playhead moves to a\n *   different Period.\n * @param {!shaka.media.PlayheadObserver.Implementation} impl Some functions\n *   need to be implemented differently depending on if we are using media\n *   media source or \"video.src=\".\n *\n * @constructor\n * @struct\n * @implements {shaka.util.IDestroyable}\n */\nshaka.media.PlayheadObserver = function(\n    video, minBufferTime, config, onBuffering, onEvent, onChangePeriod, impl) {\n  /** @private {HTMLMediaElement} */\n  this.video_ = video;\n\n  /** @private {number} */\n  this.minBufferTime_ = minBufferTime;\n\n  /** @private {?shaka.extern.StreamingConfiguration} */\n  this.config_ = config;\n\n  /** @private {?function(boolean)} */\n  this.onBuffering_ = onBuffering;\n\n  /** @private {?function(!Event)} */\n  this.onEvent_ = onEvent;\n\n  /** @private {?function()} */\n  this.onChangePeriod_ = onChangePeriod;\n\n  /** @private {!Array.<shaka.media.PlayheadObserver.TimelineRegion>} */\n  this.timelineRegions_ = [];\n\n  /** @private {shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  /** @private {boolean} */\n  this.buffering_ = false;\n\n  /** @private {number} */\n  this.curPeriodIndex_ = -1;\n\n  /** @private {?number} */\n  this.watchdogTimer_ = null;\n\n  /** @private {?shaka.media.PlayheadObserver.Implementation} */\n  this.impl_ = impl;\n\n  /** @private {!shaka.util.Destroyer} */\n  this.destroyer_ = new shaka.util.Destroyer(() => {\n    let p = Promise.all([\n      this.eventManager_ ? this.eventManager_.destroy() : null,\n      this.impl_ ? this.impl_.destroy() : null,\n    ]);\n\n    this.eventManager_ = null;\n    this.cancelWatchdogTimer_();\n\n    // Break all the links to other objects.\n    this.video_ = null;\n    this.config_ = null;\n    this.onBuffering_ = null;\n    this.onEvent_ = null;\n    this.onChangePeriod_ = null;\n    this.timelineRegions_ = [];\n    this.impl_ = null;\n\n    return p;\n  });\n\n  this.startWatchdogTimer_();\n};\n\n\n/**\n * The threshold for underflow, in seconds.  If there is less than this amount\n * of data buffered, we will consider the player to be out of data.\n *\n * @private {number}\n * @const\n */\nshaka.media.PlayheadObserver.UNDERFLOW_THRESHOLD_ = 0.5;\n\n\n/**\n * @enum {number}\n * @private\n */\nshaka.media.PlayheadObserver.RegionLocation_ = {\n  FUTURE_REGION: 1,\n  INSIDE: 2,\n  PAST_REGION: 3,\n};\n\n\n/**\n * @extends {shaka.util.IDestroyable}\n * @interface\n */\nshaka.media.PlayheadObserver.Implementation = class {\n  /**\n   * Get the period for the given time.\n   *\n   * @param {number} time\n   * @return {number}\n   */\n  getPeriodIndex(time) {}\n\n  /**\n   * Check if we have buffered to the end of the content given the current end\n   * of the buffered range.\n   *\n   * @param {number} bufferedEnd\n   * @return {boolean}\n   */\n  isBufferedToEnd(bufferedEnd) {}\n};\n\n\n/**\n * @typedef {{\n *   info: shaka.extern.TimelineRegionInfo,\n *   status: shaka.media.PlayheadObserver.RegionLocation_\n * }}\n *\n * @property {shaka.extern.TimelineRegionInfo} info\n *   The info for this timeline region.\n * @property {shaka.media.PlayheadObserver.RegionLocation_} status\n *   This tracks where the region is relative to the playhead.  This tracks\n *   whether we are before or after the region so we can raise events if we pass\n *   it.\n */\nshaka.media.PlayheadObserver.TimelineRegion;\n\n\n/** @override */\nshaka.media.PlayheadObserver.prototype.destroy = function() {\n  return this.destroyer_.destroy();\n};\n\n\n/** Called when a seek completes. */\nshaka.media.PlayheadObserver.prototype.seeked = function() {\n  this.timelineRegions_.forEach(\n      this.updateTimelineRegion_.bind(this, /* isSeek */ true));\n};\n\n\n/**\n * Adds a new timeline region.  Events will be raised whenever the playhead\n * enters or exits the given region.  This method will raise a\n * 'timelineregionadded' event.\n * @param {shaka.extern.TimelineRegionInfo} regionInfo\n */\nshaka.media.PlayheadObserver.prototype.addTimelineRegion = function(\n    regionInfo) {\n  // Check there isn't an existing event with the same scheme ID and time range.\n  // This ensures that the manifest parser doesn't need to also track which\n  // events have already been added.\n  let hasExistingRegion = this.timelineRegions_.some(function(existing) {\n    return existing.info.schemeIdUri == regionInfo.schemeIdUri &&\n        existing.info.startTime == regionInfo.startTime &&\n        existing.info.endTime == regionInfo.endTime;\n  });\n  if (hasExistingRegion) return;\n\n  let region = {\n    info: regionInfo,\n    status: shaka.media.PlayheadObserver.RegionLocation_.FUTURE_REGION,\n  };\n  this.timelineRegions_.push(region);\n\n  let cloneTimelineInfo_ = shaka.media.PlayheadObserver.cloneTimelineInfo_;\n  let event = new shaka.util.FakeEvent(\n      'timelineregionadded', {detail: cloneTimelineInfo_(regionInfo)});\n  this.onEvent_(event);\n\n  // Pretend this is a seek so it will ignore if it should be PAST_REGION but\n  // still fire an event if it should be INSIDE.\n  this.updateTimelineRegion_(/* isSeek */ true, region);\n};\n\n\n/**\n * Clones the given TimelineRegionInfo so the app can modify it without\n * modifying our internal objects.\n * @param {shaka.extern.TimelineRegionInfo} source\n * @return {shaka.extern.TimelineRegionInfo}\n * @private\n */\nshaka.media.PlayheadObserver.cloneTimelineInfo_ = function(source) {\n  // cloneObject will ignore non-simple objects like the DOM element.\n  let copy = shaka.util.ObjectUtils.cloneObject(source);\n  copy.eventElement = source.eventElement;\n  return copy;\n};\n\n\n/**\n * Updates the status of a timeline region and fires any enter/exit events.\n * @param {boolean} isSeek\n * @param {shaka.media.PlayheadObserver.TimelineRegion} region\n * @private\n */\nshaka.media.PlayheadObserver.prototype.updateTimelineRegion_ = function(\n    isSeek, region) {\n  let RegionLocation = shaka.media.PlayheadObserver.RegionLocation_;\n  let cloneTimelineInfo_ = shaka.media.PlayheadObserver.cloneTimelineInfo_;\n\n  // The events are fired when the playhead enters a region.  We fire both\n  // events when passing over a region and not seeking since the playhead was\n  // in the region but left before we saw it.  We don't fire both when seeking\n  // since the playhead was never in the region.\n  //\n  // |--------------------------------------|\n  // | From \\ To |  FUTURE | INSIDE | PAST  |\n  // |   FUTURE  |         |  enter | both* |\n  // |   INSIDE  |   exit  |        | exit  |\n  // |    PAST   |   both* |  enter |       |\n  // |--------------------------------------|\n  // * Only when not seeking.\n  let newStatus = region.info.startTime > this.video_.currentTime ?\n      RegionLocation.FUTURE_REGION :\n      (region.info.endTime < this.video_.currentTime ?\n           RegionLocation.PAST_REGION :\n           RegionLocation.INSIDE);\n  const wasInside = region.status == RegionLocation.INSIDE;\n  const isInside = newStatus == RegionLocation.INSIDE;\n\n  if (newStatus != region.status) {\n    let passedRegion = !wasInside && !isInside;\n    if (!(isSeek && passedRegion)) {\n      if (!wasInside) {\n        this.onEvent_(new shaka.util.FakeEvent(\n            'timelineregionenter',\n            {'detail': cloneTimelineInfo_(region.info)}));\n      }\n      if (!isInside) {\n        this.onEvent_(new shaka.util.FakeEvent(\n            'timelineregionexit', {'detail': cloneTimelineInfo_(region.info)}));\n      }\n    }\n    region.status = newStatus;\n  }\n};\n\n\n/**\n * Starts the watchdog timer.\n * @private\n */\nshaka.media.PlayheadObserver.prototype.startWatchdogTimer_ = function() {\n  this.cancelWatchdogTimer_();\n  this.watchdogTimer_ =\n      window.setTimeout(this.onWatchdogTimer_.bind(this), 250);\n};\n\n\n/**\n * Cancels the watchdog timer, if any.\n * @private\n */\nshaka.media.PlayheadObserver.prototype.cancelWatchdogTimer_ = function() {\n  if (this.watchdogTimer_) {\n    window.clearTimeout(this.watchdogTimer_);\n    this.watchdogTimer_ = null;\n  }\n};\n\n\n/**\n * Called on a recurring timer to detect buffering events and Period changes.\n * @private\n */\nshaka.media.PlayheadObserver.prototype.onWatchdogTimer_ = function() {\n  goog.asserts.assert(\n      this.config_,\n      'Cannot update time when playhead observer has been destroyed');\n\n  this.watchdogTimer_ = null;\n  this.startWatchdogTimer_();\n\n  let newPeriod = this.impl_.getPeriodIndex(this.video_.currentTime);\n\n  if (newPeriod != this.curPeriodIndex_) {\n    // Ignore seek to start time; the first 'trackschanged' event is handled\n    // during player.load().\n    if (this.curPeriodIndex_ != -1) {\n      this.onChangePeriod_();\n    }\n    this.curPeriodIndex_ = newPeriod;\n  }\n\n  // This uses an intersection of buffered ranges for both audio and video, so\n  // it's an accurate way to determine if we are buffering or not.\n  let bufferedAhead = shaka.media.TimeRangesUtils.bufferedAheadOf(\n      this.video_.buffered, this.video_.currentTime);\n  let bufferEnd = shaka.media.TimeRangesUtils.bufferEnd(this.video_.buffered);\n  let bufferedToEnd = this.impl_.isBufferedToEnd(bufferEnd || 0);\n\n  if (!this.buffering_) {\n    // If there are no buffered ranges but the playhead is at the end of\n    // the video then we shouldn't enter a buffering state.\n    const threshold = shaka.media.PlayheadObserver.UNDERFLOW_THRESHOLD_;\n    if (!bufferedToEnd && bufferedAhead < threshold) {\n      this.setBuffering_(true);\n    }\n  } else {\n    let rebufferingGoal = Math.max(\n        this.minBufferTime_,\n        this.config_.rebufferingGoal);\n    if (bufferedToEnd || bufferedAhead >= rebufferingGoal) {\n      this.setBuffering_(false);\n    }\n  }\n\n  this.timelineRegions_.forEach(\n      this.updateTimelineRegion_.bind(this, /* isSeek */ false));\n};\n\n\n/**\n * Stops the playhead for buffering, or resumes the playhead after buffering.\n *\n * @param {boolean} buffering True to stop the playhead; false to allow it to\n *   continue.\n * @private\n */\nshaka.media.PlayheadObserver.prototype.setBuffering_ = function(buffering) {\n  if (buffering != this.buffering_) {\n    this.buffering_ = buffering;\n    this.onBuffering_(buffering);\n  }\n};\n\n\n/**\n * @implements {shaka.media.PlayheadObserver.Implementation}\n */\nshaka.media.VideoPlayheadObserver = class {\n  /**\n   * @param {!HTMLMediaElement} video\n   */\n  constructor(video) {\n    /** @private {HTMLMediaElement} */\n    this.video_ = video;\n  }\n\n  /** @override */\n  destroy() {\n    this.video_ = null;\n    return Promise.resolve();\n  }\n\n  /** @override */\n  getPeriodIndex(time) {\n    // There is really just one period, so always return the first period\n    // index.\n    return 0;\n  }\n\n  /** @override */\n  isBufferedToEnd(bufferEnd) {\n    // video.ended is only true when the playhead reaches the end. With src=, we\n    // don't get to fetch and append, so we can (at best) compare buffered range\n    // end to duration and fall back to video.ended, since the duration might\n    // not be precise.\n\n    return bufferEnd >= this.video_.duration || this.video_.ended;\n  }\n};\n\n\n/**\n * @implements {shaka.media.PlayheadObserver.Implementation}\n */\nshaka.media.MediaSourcePlayheadObserver = class {\n  /**\n   * @param {!HTMLMediaElement} video\n   * @param {!shaka.media.MediaSourceEngine} mediaSourceEngine\n   * @param {shaka.extern.Manifest} manifest\n   */\n  constructor(video, mediaSourceEngine, manifest) {\n    /** @private {HTMLMediaElement} */\n    this.video_ = video;\n\n    /** @private {shaka.media.MediaSourceEngine} */\n    this.mediaSourceEngine_ = mediaSourceEngine;\n\n    /** @private {?shaka.extern.Manifest} */\n    this.manifest_ = manifest;\n  }\n\n  /** @override */\n  destroy() {\n    this.video_ = null;\n    this.mediaSourceEngine_= null;\n    this.manifest_ = null;\n\n    return Promise.resolve();\n  }\n\n  /** @override */\n  getPeriodIndex(time) {\n    goog.asserts.assert(\n        this.manifest_,\n        'Cannot call getPeriodIndex after calling destroy');\n\n    return shaka.util.StreamUtils.findPeriodContainingTime(\n        this.manifest_, time);\n  }\n\n  /** @override */\n  isBufferedToEnd(bufferEnd) {\n    goog.asserts.assert(\n        this.manifest_,\n        'Cannot call atEnd after calling destroy');\n\n    let timeline = this.manifest_.presentationTimeline;\n\n    let liveEdge = timeline.getSegmentAvailabilityEnd();\n    let bufferedToLiveEdge = timeline.isLive() && bufferEnd >= liveEdge;\n    let noMoreSegments = this.mediaSourceEngine_.ended();\n\n    return bufferedToLiveEdge || noMoreSegments || this.video_.ended;\n  }\n};\n","/* eslint-disable */\ngoog.provide('lin.VstubSegmentList');\ngoog.provide('lin.VstubSegmentList.InitSegmentReference');\ngoog.provide('lin.VstubSegmentList.SegmentReference');\n\n//goog.require('goog.asserts');\ngoog.require('shaka.log');\n\n/**\n * @namespace lin.VstubSegmentList\n * @summary A set of functions for parsing SegmentList elements.\n */\n\n\n/**\n * @typedef {{\n *   from: number,\n *   to: number\n * }}\n *\n * @property {from} start\n *   The start byte of the range.\n * @property {to} end\n *   The end byte of the range\n */\nlin.VstubSegmentList.Range;\n\n\n/**\n * Creates an InitSegmentReference, which provides the location to an\n * initialization segment.\n *\n * @param {!Array.<string>} uris\n *   A function that creates the URIs of the resource containing the segment.\n * @param {number} startByte The offset from the start of the resource to the\n *   start of the segment.\n * @param {?number} endByte The offset from the start of the resource to the\n *   end of the segment, inclusive. null indicates that the segment extends\n *   to the end of the resource.\n *\n *   @param {function():!ArrayBuffer} initFunc init function\n *\n * @constructor\n * @struct\n * @export\n */\nlin.VstubSegmentList.InitSegmentReference = function (uris, startByte, endByte, initFunc) {\n  /** @type {function():!Array.<string>} */\n  this.getUris = function () { return uris; };\n\n  /** @const {number} */\n  this.startByte = startByte;\n\n  /** @const {?number} */\n  this.endByte = endByte;\n\n  /** @type {function():!ArrayBuffer} */\n  this.initSegmentBytesFunc = initFunc;\n};\n\n/**\n *\n * @typedef {{\n *   index: number,\n *   position: number,\n *   startTime: number,\n *   endTime: number,\n *   startByte: number,\n *   endByte: ?number,\n *   getUris: function():!Array.<string>,\n *   mdatSize: number,\n *   byteRanges: !Array.<lin.VstubSegmentList.Range>,\n *   sixdmoofBytes: Uint8Array\n * }}\n *\n * @property {number} position The segment's position within a particular Period.\n *   The following should hold true between any two SegmentReferences from the\n *   same Period, r1 and r2:\n *   IF r2.position > r1.position THEN\n *     [ (r2.startTime > r1.startTime) OR\n *       (r2.startTime == r1.startTime AND r2.endTime >= r1.endTime) ]\n * @property {number} startTime The segment's start time in seconds, relative to\n *   the start of a particular Period.\n * @property {number} endTime The segment's end time in seconds, relative to\n *   the start of a particular Period. The segment ends the instant before\n *   this time, so |endTime| must be strictly greater than |startTime|.\n * @property {function():!Array.<string>} uris\n *   A function that creates the URIs of the resource containing the segment.\n * @property {number} startByte The offset from the start of the resource to the\n *   start of the segment.\n * @property {?number} endByte The offset from the start of the resource to the\n *   end of the segment, inclusive. null indicates that the segment extends\n *   to the end of the resource.\n * @property {number} mdatSize mdat Size\n *\n * @property {!Uint8Array} sixdmoofBytes\n *\n */\nlin.VstubSegmentList.SegmentReference;\n\n\n/**\n * Creates a new Stream object or updates the Stream in the manifest.\n *\n * @param {shakaExtern.Period} period\n * @param {!lin.VstubParser.Vstub} vstub\n *\n * @return {lin.VstubParser.StreamInfo}\n */\nlin.VstubSegmentList.createStream = function (period, vstub) {\n\n  var initFunc = lin.VstubSegmentList.getInitVstubBytes.bind(this, vstub);\n  var initBytes = vstub.initSegment;\n  //var init = {getUris: [vstub.assetUrl], startByte: 0, endByte: initBytes.length - 1, initSegmentBytesFunc: initFunc};\n  var init = new lin.VstubSegmentList.InitSegmentReference([vstub.assetUrl], 0, initBytes.length - 1, initFunc);\n\n  var segmentsArray = [];\n  var index = 0;\n  var getUris = (function (uris) {\n    return [uris];\n  }.bind(null, vstub.assetUrl));\n\n  var startNumber = 0;//can be supplied as external parameter but 0 is fine for now\n\n  vstub.segments.forEach(function (seg) {\n\n    var from = Math.min.apply(null, seg.mdatRanges.map(function (rg) {\n      return rg.from;\n    }));\n    var to = Math.max.apply(null, seg.mdatRanges.map(function (rg) {\n      return rg.to;\n    }));\n\n    var mediaSegment = {};//lin.VstubSegmentList.MediaSegment\n    mediaSegment.index = index++;\n    mediaSegment.position = startNumber + mediaSegment.index;\n    mediaSegment.mediaUri = vstub.assetUrl;\n    mediaSegment.getUris = getUris;\n    mediaSegment.startByte = from;\n    mediaSegment.endByte = to;\n    mediaSegment.startTime = seg.startTime;\n    mediaSegment.endTime = Math.min(vstub.duration, seg.endTime);\n    mediaSegment.sixdmoofBytes = seg.sixdmoof;\n    mediaSegment.byteRanges = seg.mdatRanges;\n    mediaSegment.mdatSize = seg.mdatSize;\n\n    if (mediaSegment.startTime < mediaSegment.endTime) {\n      segmentsArray.push(mediaSegment);\n      shaka.log.info(\"pushing: \" + mediaSegment.startTime + \"   -  \" + mediaSegment.endTime);\n    }\n  });\n\n  //var findSegmentPositionFunc = lin.VstubSegmentList.findByTime.bind(this,segmentsArray);\n  //var getSegmentByIndexFunc =lin.VstubSegmentList.findByIndex.bind(this,segmentsArray);\n\n  /** @type {lin.VstubParser.StreamInfo} */\n  var streamInfo = {\n    createSegmentIndex: Promise.resolve.bind(Promise),\n    findSegmentPosition: lin.VstubSegmentList.findByTime.bind(this, segmentsArray),\n    getSegmentReference: lin.VstubSegmentList.findByIndex.bind(this, segmentsArray),\n    initSegmentReference: init,\n    presentationTimeOffset: 0\n  };\n\n  return streamInfo;\n};\n\n\n\n/**\n * Return init segment from the provided VSTUB as ArrayBuffer\n *\n * @param {!lin.VstubParser.Vstub} vstub\n * * @return {!ArrayBuffer}\n *\n * @private\n */\nlin.VstubSegmentList.getInitVstubBytes = function (vstub) {\n  var buffer = new ArrayBuffer(vstub.initSegment.length);\n  var byteArray = new Uint8Array(buffer);\n  byteArray.set(vstub.initSegment, 0);\n  return buffer;\n};\n\n/**\n * Find video segment by time\n *\n * @param  {Array} segments\n * @param  {number} time\n *\n * @return {lin.VstubSegmentList.SegmentReference}\n */\nlin.VstubSegmentList.findByTime = function (segments, time) {\n\n  for (var i = 0; i < segments.length; i++) {\n    var seg = segments[i];\n\n    if ((time >= seg.startTime) && (time < seg.endTime)) {\n      shaka.log.v2('findByTime [successful]: ', time, ' seg=' + i);\n      return seg.index;\n    }\n  }\n\n  shaka.log.v2('findByTime [failed]: ', time);\n};\n\n/**\n * Find video segment by time\n *\n * @param  {Array} segments\n * @param  {number} index\n *\n * @return {!lin.VstubSegmentList.SegmentReference}\n */\nlin.VstubSegmentList.findByIndex = function (segments, index) {\n  shaka.log.v2('findByIndex: ', index, ' (of ' + segments.length + ')');\n  return segments[index];\n};\n\n/**\n * build binary header for the mdat box\n *\n * @param  {number} mdatSize\n *\n * @return {!Uint8Array}\n */\nlin.VstubSegmentList.buildMdatHeader = function (mdatSize) {\n  var arr = new ArrayBuffer(8); // an Int32 takes 4 bytes\n  var view = new DataView(arr);\n  view.setUint32(0, mdatSize, false);\n  view.setUint32(4, 0x6d646174, false);\n  return new Uint8Array(arr);\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.media.StreamingEngine');\n\ngoog.require('goog.asserts');\ngoog.require('lin.VstubSegmentList');\ngoog.require('shaka.log');\ngoog.require('shaka.media.MediaSourceEngine');\ngoog.require('shaka.media.Playhead');\ngoog.require('shaka.net.Backoff');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.Functional');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.MimeUtils');\ngoog.require('shaka.util.Mp4Parser');\ngoog.require('shaka.util.PublicPromise');\ngoog.require('shaka.util.StreamUtils');\n\n\n/**\n * Creates a StreamingEngine.\n *\n * The StreamingEngine is responsible for setting up the Manifest's Streams\n * (i.e., for calling each Stream's createSegmentIndex() function), for\n * downloading segments, for co-ordinating audio, video, and text buffering,\n * and for handling Period transitions. The StreamingEngine provides an\n * interface to switch between Streams, but it does not choose which Streams to\n * switch to.\n *\n * The StreamingEngine notifies its owner when it needs to buffer a new Period,\n * so its owner can choose which Streams within that Period to initially\n * buffer. Moreover, the StreamingEngine also notifies its owner when any\n * Stream within the current Period may be switched to, so its owner can switch\n * bitrates, resolutions, or languages.\n *\n * The StreamingEngine does not need to be notified about changes to the\n * Manifest's SegmentIndexes; however, it does need to be notified when new\n * Periods are added to the Manifest, so it can set up that Period's Streams.\n *\n * To start the StreamingEngine the owner must first call configure() followed\n * by init(). The StreamingEngine will then call onChooseStreams(p) when it\n * needs to buffer Period p; it will then switch to the Streams returned from\n * that function. The StreamingEngine will call onCanSwitch() when any\n * Stream within the current Period may be switched to.\n *\n * The owner must call seeked() each time the playhead moves to a new location\n * within the presentation timeline; however, the owner may forego calling\n * seeked() when the playhead moves outside the presentation timeline.\n *\n * @param {shaka.extern.Manifest} manifest\n * @param {shaka.media.StreamingEngine.PlayerInterface} playerInterface\n *\n * @constructor\n * @struct\n * @implements {shaka.util.IDestroyable}\n */\nshaka.media.StreamingEngine = function(manifest, playerInterface) {\n  /** @private {?shaka.media.StreamingEngine.PlayerInterface} */\n  this.playerInterface_ = playerInterface;\n\n  /** @private {?shaka.extern.Manifest} */\n  this.manifest_ = manifest;\n\n  /** @private {?shaka.extern.StreamingConfiguration} */\n  this.config_ = null;\n\n  /** @private {number} */\n  this.bufferingGoalScale_ = 1;\n\n  /** @private {Promise} */\n  this.setupPeriodPromise_ = Promise.resolve();\n\n  /**\n   * Maps a Period's index to an object that indicates that either\n   *   1. the Period has not been set up (undefined).\n   *   2. the Period is being set up ([a PublicPromise, false]).\n   *   3. the Period is set up (i.e., all Streams within the Period are set up)\n   *      and can be switched to ([a PublicPromise, true]).\n   *\n   * @private {Array.<?{promise: shaka.util.PublicPromise, resolved: boolean}>}\n   */\n  this.canSwitchPeriod_ = [];\n\n  /**\n   * Maps a Stream's ID to an object that indicates that either\n   *   1. the Stream has not been set up (undefined).\n   *   2. the Stream is being set up ([a Promise instance, false]).\n   *   3. the Stream is set up and can be switched to\n   *      ([a Promise instance, true]).\n   *\n   * @private {!Map.<number,\n   *                 ?{promise: shaka.util.PublicPromise, resolved: boolean}>}\n   */\n  this.canSwitchStream_ = new Map();\n\n  /**\n   * Maps a content type, e.g., 'audio', 'video', or 'text', to a MediaState.\n   *\n   * @private {!Map.<shaka.util.ManifestParserUtils.ContentType,\n                       !shaka.media.StreamingEngine.MediaState_>}\n   */\n  this.mediaStates_ = new Map();\n\n  /**\n   * Set to true once one segment of each content type has been buffered.\n   *\n   * @private {boolean}\n   */\n  this.startupComplete_ = false;\n\n  /**\n   * Used for delay and backoff of failure callbacks, so that apps do not retry\n   * instantly.\n   *\n   * @private {shaka.net.Backoff}\n   */\n  this.failureCallbackBackoff_ = null;\n\n  /**\n   * Set to true on fatal error.  Interrupts fetchAndAppend_().\n   *\n   * @private {boolean}\n   */\n  this.fatalError_ = false;\n\n  /** @private {boolean} */\n  this.destroyed_ = false;\n\n  /**\n   * Set to true when a request to unload text stream comes in. This is used\n   * since loading new text stream is async, the request of unloading text\n   * stream might come in before setting up new text stream is finished.\n   * @private {boolean}\n   */\n  this.unloadingTextStream_ = false;\n\n  /** @private {number} */\n  this.textStreamSequenceId_ = 0;\n};\n\n\n/**\n * @typedef {{\n *   variant: (?shaka.extern.Variant|undefined),\n *   text: ?shaka.extern.Stream\n * }}\n *\n * @property {(?shaka.extern.Variant|undefined)} variant\n *   The chosen variant.  May be omitted for text re-init.\n * @property {?shaka.extern.Stream} text\n *   The chosen text stream.\n */\nshaka.media.StreamingEngine.ChosenStreams;\n\n\n/**\n * @typedef {{\n *   playhead: !shaka.media.Playhead,\n *   mediaSourceEngine: !shaka.media.MediaSourceEngine,\n *   netEngine: shaka.net.NetworkingEngine,\n *   onChooseStreams: function(!shaka.extern.Period):\n *                        shaka.media.StreamingEngine.ChosenStreams,\n *   onCanSwitch: function(),\n *   onError: function(!shaka.util.Error),\n *   onEvent: function(!Event),\n *   onManifestUpdate: function(),\n *   onSegmentAppended: function(),\n *   onInitialStreamsSetup: (function()|undefined),\n *   onStartupComplete: (function()|undefined)\n * }}\n *\n * @property {!shaka.media.Playhead} playhead\n *   The Playhead. The caller retains ownership.\n * @property {!shaka.media.MediaSourceEngine} mediaSourceEngine\n *   The MediaSourceEngine. The caller retains ownership.\n * @property {shaka.net.NetworkingEngine} netEngine\n *   The NetworkingEngine instance to use. The caller retains ownership.\n * @property {function(!shaka.extern.Period):\n *                shaka.media.StreamingEngine.ChosenStreams} onChooseStreams\n *   Called by StreamingEngine when the given Period needs to be buffered.\n *   StreamingEngine will switch to the variant and text stream returned from\n *   this function.\n *   The owner cannot call switch() directly until the StreamingEngine calls\n *   onCanSwitch().\n * @property {function()} onCanSwitch\n *   Called by StreamingEngine when the Period is set up and switching is\n *   permitted.\n * @property {function(!shaka.util.Error)} onError\n *   Called when an error occurs. If the error is recoverable (see\n *   {@link shaka.util.Error}) then the caller may invoke either\n *   StreamingEngine.switch*() or StreamingEngine.seeked() to attempt recovery.\n * @property {function(!Event)} onEvent\n *   Called when an event occurs that should be sent to the app.\n * @property {function()} onManifestUpdate\n *   Called when an embedded 'emsg' box should trigger a manifest update.\n * @property {function()} onSegmentAppended\n *   Called after a segment is successfully appended to a MediaSource.\n * @property {(function()|undefined)} onInitialStreamsSetup\n *   Optional callback which is called when the initial set of Streams have been\n *   setup. Intended to be used by tests.\n * @property {(function()|undefined)} onStartupComplete\n *   Optional callback which is called when startup has completed. Intended to\n *   be used by tests.\n */\nshaka.media.StreamingEngine.PlayerInterface;\n\n\n/**\n * @typedef {{\n *   type: shaka.util.ManifestParserUtils.ContentType,\n *   stream: shaka.extern.Stream,\n *   lastStream: ?shaka.extern.Stream,\n *   lastSegmentReference: shaka.media.SegmentReference,\n *   restoreStreamAfterTrickPlay: ?shaka.extern.Stream,\n *   needInitSegment: boolean,\n *   needPeriodIndex: number,\n *   endOfStream: boolean,\n *   performingUpdate: boolean,\n *   updateTimer: ?number,\n *   waitingToClearBuffer: boolean,\n *   waitingToFlushBuffer: boolean,\n *   clearBufferSafeMargin: number,\n *   clearingBuffer: boolean,\n *   recovering: boolean,\n *   hasError: boolean,\n *   resumeAt: number\n * }}\n *\n * @description\n * Contains the state of a logical stream, i.e., a sequence of segmented data\n * for a particular content type. At any given time there is a Stream object\n * associated with the state of the logical stream.\n *\n * @property {shaka.util.ManifestParserUtils.ContentType} type\n *   The stream's content type, e.g., 'audio', 'video', or 'text'.\n * @property {shaka.extern.Stream} stream\n *   The current Stream.\n * @property {?shaka.extern.Stream} lastStream\n *   The Stream of the last segment that was appended.\n * @property {shaka.media.SegmentReference} lastSegmentReference\n *   The SegmentReference of the last segment that was appended.\n * @property {?shaka.extern.Stream} restoreStreamAfterTrickPlay\n *   The Stream to restore after trick play mode is turned off.\n * @property {boolean} needInitSegment\n *   True indicates that |stream|'s init segment must be inserted before the\n *   next media segment is appended.\n * @property {boolean} endOfStream\n *   True indicates that the end of the buffer has hit the end of the\n *   presentation.\n * @property {number} needPeriodIndex\n *   The index of the Period which needs to be buffered.\n * @property {boolean} performingUpdate\n *   True indicates that an update is in progress.\n * @property {?number} updateTimer\n *   A non-null value indicates that an update is scheduled.\n * @property {boolean} waitingToClearBuffer\n *   True indicates that the buffer must be cleared after the current update\n *   finishes.\n * @property {boolean} waitingToFlushBuffer\n *   True indicates that the buffer must be flushed after it is cleared.\n * @property {number} clearBufferSafeMargin\n *   The amount of buffer to retain when clearing the buffer after the update.\n * @property {boolean} clearingBuffer\n *   True indicates that the buffer is being cleared.\n * @property {boolean} recovering\n *   True indicates that the last segment was not appended because it could not\n *   fit in the buffer.\n * @property {boolean} hasError\n *   True indicates that the stream has encountered an error and has stopped\n *   updating.\n * @property {number} resumeAt\n *   An override for the time to start performing updates at.  If the playhead\n *   is behind this time, update_() will still start fetching segments from\n *   this time.  If the playhead is ahead of the time, this field is ignored.\n */\nshaka.media.StreamingEngine.MediaState_;\n\n\n/**\n * The fudge factor for the appendWindowStart.  By adjusting the window\n * backward, we avoid rounding errors that could cause us to remove the keyframe\n * at the start of the Period.\n *\n * NOTE: This was increased as part of the solution to\n * https://github.com/google/shaka-player/issues/1281\n *\n * @const {number}\n * @private\n */\nshaka.media.StreamingEngine.APPEND_WINDOW_START_FUDGE_ = 0.1;\n\n\n/**\n * The maximum number of segments by which a stream can get ahead of other\n * streams.\n *\n * Introduced to keep StreamingEngine from letting one media type get too far\n * ahead of another.  For example, audio segments are typically much smaller\n * than video segments, so in the time it takes to fetch one video segment, we\n * could fetch many audio segments.  This doesn't help with buffering, though,\n * since the intersection of the two buffered ranges is what counts.\n *\n * @const {number}\n * @private\n */\nshaka.media.StreamingEngine.MAX_RUN_AHEAD_SEGMENTS_ = 1;\n\n\n/** @override */\nshaka.media.StreamingEngine.prototype.destroy = function() {\n  for (const state of this.mediaStates_.values()) {\n    this.cancelUpdate_(state);\n  }\n\n  this.mediaStates_.clear();\n  this.canSwitchStream_.clear();\n\n  this.playerInterface_ = null;\n  this.manifest_ = null;\n  this.setupPeriodPromise_ = null;\n  this.canSwitchPeriod_ = null;\n  this.config_ = null;\n\n  this.destroyed_ = true;\n\n  return Promise.resolve();\n};\n\n\n/**\n * Called by the Player to provide an updated configuration any time it changes.\n * Must be called at least once before init().\n *\n * @param {shaka.extern.StreamingConfiguration} config\n */\nshaka.media.StreamingEngine.prototype.configure = function(config) {\n  this.config_ = config;\n\n  // Create separate parameters for backoff during streaming failure.\n\n  /** @type {shaka.extern.RetryParameters} */\n  let failureRetryParams = {\n    // The term \"attempts\" includes the initial attempt, plus all retries.\n    // In order to see a delay, there would have to be at least 2 attempts.\n    maxAttempts: Math.max(config.retryParameters.maxAttempts, 2),\n    baseDelay: config.retryParameters.baseDelay,\n    backoffFactor: config.retryParameters.backoffFactor,\n    fuzzFactor: config.retryParameters.fuzzFactor,\n    timeout: 0,  // irrelevant\n  };\n\n  // We don't want to ever run out of attempts.  The application should be\n  // allowed to retry streaming infinitely if it wishes.\n  let autoReset = true;\n  this.failureCallbackBackoff_ =\n    new shaka.net.Backoff(failureRetryParams, autoReset);\n};\n\n\n/**\n * Initializes the StreamingEngine.\n *\n * After this function is called the StreamingEngine will call\n * onChooseStreams(p) when it needs to buffer Period p and onCanSwitch() when\n * any Stream within that Period may be switched to.\n *\n * After the StreamingEngine calls onChooseStreams(p) for the first time, it\n * will begin setting up the Streams returned from that function and\n * subsequently switch to them. However, the StreamingEngine will not begin\n * setting up any other Streams until at least one segment from each of the\n * initial set of Streams has been buffered (this reduces startup latency).\n * After the StreamingEngine completes this startup phase it will begin setting\n * up each Period's Streams (while buffering in parrallel).\n *\n * When the StreamingEngine needs to buffer the next Period it will have\n * already set up that Period's Streams. So, when the StreamingEngine calls\n * onChooseStreams(p) after the first time, the StreamingEngine will\n * immediately switch to the Streams returned from that function.\n *\n * @return {!Promise}\n */\nshaka.media.StreamingEngine.prototype.init = function() {\n  goog.asserts.assert(this.config_,\n    'StreamingEngine configure() must be called before init()!');\n\n  // Determine which Period we must buffer.\n  let playheadTime = this.playerInterface_.playhead.getTime();\n  let needPeriodIndex = this.findPeriodContainingTime_(playheadTime);\n\n  // Get the initial set of Streams.\n  let initialStreams = this.playerInterface_.onChooseStreams(\n    this.manifest_.periods[needPeriodIndex]);\n  if (!initialStreams.variant && !initialStreams.text) {\n    shaka.log.error('init: no Streams chosen');\n    return Promise.reject(new shaka.util.Error(\n      shaka.util.Error.Severity.CRITICAL,\n      shaka.util.Error.Category.STREAMING,\n      shaka.util.Error.Code.INVALID_STREAMS_CHOSEN));\n  }\n\n  // Setup the initial set of Streams and then begin each update cycle. After\n  // startup completes onUpdate_() will set up the remaining Periods.\n  return this.initStreams_(initialStreams).then(function() {\n    if (this.destroyed_) {\n      return;\n    }\n\n    shaka.log.debug('init: completed initial Stream setup');\n\n    // Subtlety: onInitialStreamsSetup() may call switch() or seeked(), so we\n    // must schedule an update beforehand so |updateTimer| is set.\n    if (this.playerInterface_ && this.playerInterface_.onInitialStreamsSetup) {\n      shaka.log.v1('init: calling onInitialStreamsSetup()...');\n      this.playerInterface_.onInitialStreamsSetup();\n    }\n  }.bind(this));\n};\n\n\n/**\n * Gets the current Period the stream is in.  This Period might not be\n * initialized yet if canSwitch(period) has not been called yet.\n * @return {shaka.extern.Period}\n */\nshaka.media.StreamingEngine.prototype.getCurrentPeriod = function() {\n  let playheadTime = this.playerInterface_.playhead.getTime();\n  let needPeriodIndex = this.findPeriodContainingTime_(playheadTime);\n  return this.manifest_.periods[needPeriodIndex];\n};\n\n\n/**\n * Gets the Period in which we are currently buffering.  This might be different\n * from the Period which contains the Playhead.\n * @return {?shaka.extern.Period}\n */\nshaka.media.StreamingEngine.prototype.getActivePeriod = function() {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  const video = this.mediaStates_.get(ContentType.VIDEO);\n  if (video) { return this.manifest_.periods[video.needPeriodIndex]; }\n\n  const audio = this.mediaStates_.get(ContentType.AUDIO);\n  if (audio) { return this.manifest_.periods[audio.needPeriodIndex]; }\n\n  return null;\n};\n\n\n/**\n * Get the active audio stream. Returns null if there is no audio streaming.\n * @return {?shaka.extern.Stream}\n */\nshaka.media.StreamingEngine.prototype.getActiveAudio = function() {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  return this.getStream_(ContentType.AUDIO);\n};\n\n\n/**\n * Get the active video stream. Returns null if there is no video streaming.\n * @return {?shaka.extern.Stream}\n */\nshaka.media.StreamingEngine.prototype.getActiveVideo = function() {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  return this.getStream_(ContentType.VIDEO);\n};\n\n\n/**\n * Get the active text stream. Returns null if there is no text streaming.\n * @return {?shaka.extern.Stream}\n */\nshaka.media.StreamingEngine.prototype.getActiveText = function() {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  return this.getStream_(ContentType.TEXT);\n};\n\n\n/**\n * Get the active stream for the given type. Returns null if there is no stream\n * for the given type.\n * @param {shaka.util.ManifestParserUtils.ContentType} type\n * @return {?shaka.extern.Stream}\n * @private\n*/\nshaka.media.StreamingEngine.prototype.getStream_ = function(type) {\n  const state = this.mediaStates_.get(type);\n\n  if (state) {\n    // Don't tell the caller about trick play streams.  If we're in trick\n    // play, return the stream we will go back to after we exit trick play.\n    return state.restoreStreamAfterTrickPlay || state.stream;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Notifies StreamingEngine that a new text stream was added to the manifest.\n * This initializes the given stream. This returns a Promise that resolves when\n * the stream has been set up, and a media state has been created.\n *\n * @param {shaka.extern.Stream} stream\n * @return {!Promise}\n */\nshaka.media.StreamingEngine.prototype.loadNewTextStream = async function(\n  stream) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  // Clear MediaSource's buffered text, so that the new text stream will\n  // properly replace the old buffered text.\n  this.playerInterface_.mediaSourceEngine.clear(ContentType.TEXT);\n\n  // Since setupStreams_() is async, if the user hides/shows captions quickly,\n  // there would be a race condition that a new text media state is created\n  // but the old media state is not yet deleted.\n  // The Sequence Id is to avoid that risk condition.\n  this.textStreamSequenceId_++;\n  this.unloadingTextStream_ = false;\n  let currentSequenceId = this.textStreamSequenceId_;\n\n  let mediaSourceEngine = this.playerInterface_.mediaSourceEngine;\n\n  const streamMap = new Map();\n  const streamSet = new Set();\n\n  streamMap.set(ContentType.TEXT, stream);\n  streamSet.add(stream);\n\n  await mediaSourceEngine.init(streamMap, /** forceTansmuxTS */ false);\n  if (this.destroyed_) { return; }\n\n  await this.setupStreams_(streamSet);\n  if (this.destroyed_) { return; }\n\n  if ((this.textStreamSequenceId_ == currentSequenceId) &&\n    !this.mediaStates_.has(ContentType.TEXT) &&\n    !this.unloadingTextStream_) {\n    let playheadTime = this.playerInterface_.playhead.getTime();\n    let needPeriodIndex = this.findPeriodContainingTime_(playheadTime);\n\n    const state = this.createMediaState_(stream, needPeriodIndex);\n    this.mediaStates_.set(ContentType.TEXT, state);\n    this.scheduleUpdate_(state, 0);\n  }\n};\n\n\n/**\n * Stop fetching text stream when the user chooses to hide the captions.\n */\nshaka.media.StreamingEngine.prototype.unloadTextStream = function() {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  this.unloadingTextStream_ = true;\n\n  const state = this.mediaStates_.get(ContentType.TEXT);\n  if (state) {\n    this.cancelUpdate_(state);\n    this.mediaStates_.delete(ContentType.TEXT);\n  }\n};\n\n\n/**\n * Set trick play on or off.\n * If trick play is on, related trick play streams will be used when possible.\n * @param {boolean} on\n */\nshaka.media.StreamingEngine.prototype.setTrickPlay = function(on) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  const mediaState = this.mediaStates_.get(ContentType.VIDEO);\n  if (!mediaState) return;\n\n  let stream = mediaState.stream;\n  if (!stream) return;\n\n  shaka.log.debug('setTrickPlay', on);\n  if (on) {\n    let trickModeVideo = stream.trickModeVideo;\n    if (!trickModeVideo) return;  // Can't engage trick play.\n\n    let normalVideo = mediaState.restoreStreamAfterTrickPlay;\n    if (normalVideo) return;  // Already in trick play.\n\n    shaka.log.debug('Engaging trick mode stream', trickModeVideo);\n    this.switchInternal_(trickModeVideo, false, 0);\n    mediaState.restoreStreamAfterTrickPlay = stream;\n  } else {\n    let normalVideo = mediaState.restoreStreamAfterTrickPlay;\n    if (!normalVideo) return;\n\n    shaka.log.debug('Restoring non-trick-mode stream', normalVideo);\n    mediaState.restoreStreamAfterTrickPlay = null;\n    this.switchInternal_(normalVideo, true, 0);\n  }\n};\n\n\n/**\n * @param {shaka.extern.Variant} variant\n * @param {boolean} clearBuffer\n * @param {number} safeMargin\n */\nshaka.media.StreamingEngine.prototype.switchVariant =\n  function(variant, clearBuffer, safeMargin) {\n    if (variant.video) {\n      this.switchInternal_(variant.video, clearBuffer, safeMargin);\n    }\n    if (variant.audio) {\n      this.switchInternal_(variant.audio, clearBuffer, safeMargin);\n    }\n  };\n\n\n/**\n * @param {shaka.extern.Stream} textStream\n */\nshaka.media.StreamingEngine.prototype.switchTextStream = function(textStream) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  goog.asserts.assert(textStream && textStream.type == ContentType.TEXT,\n    'Wrong stream type passed to switchTextStream!');\n  this.switchInternal_(textStream, /* clearBuffer */ true, /* safeMargin */ 0);\n};\n\n\n/**\n * Switches to the given Stream. |stream| may be from any Variant or any Period.\n *\n * @param {shaka.extern.Stream} stream\n * @param {boolean} clearBuffer\n * @param {number} safeMargin\n * @private\n */\nshaka.media.StreamingEngine.prototype.switchInternal_ = function(\n  stream, clearBuffer, safeMargin) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  const type = /** @type {!ContentType} */(stream.type);\n  const mediaState = this.mediaStates_.get(type);\n\n  if (!mediaState && stream.type == ContentType.TEXT &&\n    this.config_.ignoreTextStreamFailures) {\n    this.loadNewTextStream(stream);\n    return;\n  }\n  goog.asserts.assert(mediaState, 'switch: expected mediaState to exist');\n  if (!mediaState) return;\n\n  // If we are selecting a stream from a different Period, then we need to\n  // handle a Period transition.  Simply ignore the given stream, assuming that\n  // Player will select the same track in onChooseStreams.\n  let periodIndex = this.findPeriodContainingStream_(stream);\n  if (clearBuffer && periodIndex != mediaState.needPeriodIndex) {\n    shaka.log.debug('switch: switching to stream in another Period; clearing ' +\n      'buffer and changing Periods');\n    // handlePeriodTransition_ will be called on the next update because the\n    // current Period won't match the playhead Period.\n    this.clearAllBuffers_();\n    return;\n  }\n\n  if (mediaState.restoreStreamAfterTrickPlay) {\n    shaka.log.debug('switch during trick play mode', stream);\n\n    // Already in trick play mode, so stick with trick mode tracks if possible.\n    if (stream.trickModeVideo) {\n      // Use the trick mode stream, but revert to the new selection later.\n      mediaState.restoreStreamAfterTrickPlay = stream;\n      stream = stream.trickModeVideo;\n      shaka.log.debug('switch found trick play stream', stream);\n    } else {\n      // There is no special trick mode video for this stream!\n      mediaState.restoreStreamAfterTrickPlay = null;\n      shaka.log.debug('switch found no special trick play stream');\n    }\n  }\n\n  // Ensure the Period is ready.\n  let canSwitchRecord = this.canSwitchPeriod_[periodIndex];\n  goog.asserts.assert(\n    canSwitchRecord && canSwitchRecord.resolved,\n    'switch: expected Period ' + periodIndex + ' to be ready');\n  if (!canSwitchRecord || !canSwitchRecord.resolved) return;\n\n  // Sanity check. If the Period is ready then the Stream should be ready too.\n  canSwitchRecord = this.canSwitchStream_.get(stream.id);\n  goog.asserts.assert(canSwitchRecord && canSwitchRecord.resolved,\n    'switch: expected Stream ' + stream.id + ' to be ready');\n  if (!canSwitchRecord || !canSwitchRecord.resolved) return;\n\n  if (mediaState.stream == stream) {\n    let streamTag = shaka.media.StreamingEngine.logPrefix_(mediaState);\n    shaka.log.debug('switch: Stream ' + streamTag + ' already active');\n    return;\n  }\n\n  if (stream.type == ContentType.TEXT) {\n    // Mime types are allowed to change for text streams.\n    // Reinitialize the text parser, but only if we are going to fetch the init\n    // segment again.\n    let fullMimeType = shaka.util.MimeUtils.getFullType(\n      stream.mimeType, stream.codecs);\n    this.playerInterface_.mediaSourceEngine.reinitText(fullMimeType);\n  }\n\n  mediaState.stream = stream;\n  mediaState.needInitSegment = true;\n\n  let streamTag = shaka.media.StreamingEngine.logPrefix_(mediaState);\n  shaka.log.debug('switch: switching to Stream ' + streamTag);\n\n  if (clearBuffer) {\n    if (mediaState.clearingBuffer) {\n      // We are already going to clear the buffer, but make sure it is also\n      // flushed.\n      mediaState.waitingToFlushBuffer = true;\n    } else if (mediaState.performingUpdate) {\n      // We are performing an update, so we have to wait until it's finished.\n      // onUpdate_() will call clearBuffer_() when the update has finished.\n      // We need to save the safe margin because its value will be needed when\n      // clearing the buffer after the update.\n      mediaState.waitingToClearBuffer = true;\n      mediaState.clearBufferSafeMargin = safeMargin;\n      mediaState.waitingToFlushBuffer = true;\n    } else {\n      // Cancel the update timer, if any.\n      this.cancelUpdate_(mediaState);\n      // Clear right away.\n      this.clearBuffer_(mediaState, /* flush */ true, safeMargin);\n    }\n  }\n};\n\n\n/**\n * Notifies the StreamingEngine that the playhead has moved to a valid time\n * within the presentation timeline.\n */\nshaka.media.StreamingEngine.prototype.seeked = function() {\n  const playheadTime = this.playerInterface_.playhead.getTime();\n  const smallGapLimit = this.config_.smallGapLimit;\n  const isAllBuffered = Array.from(this.mediaStates_.keys()).every((type) => {\n    return this.playerInterface_.mediaSourceEngine.isBuffered(\n      type, playheadTime, smallGapLimit);\n  });\n\n  // Only treat this as a buffered seek if every media state has a buffer.  For\n  // example, if we have buffered text but not video, we should still clear\n  // every buffer so all media states need the same Period.\n  if (isAllBuffered) {\n    shaka.log.debug(\n      '(all): seeked: buffered seek: playheadTime=' + playheadTime);\n    return;\n  }\n\n  // This was an unbuffered seek for at least one stream, so clear all buffers.\n  // Don't clear only some of the buffers because we can become stalled since\n  // the media states are waiting for different Periods.\n  shaka.log.debug('(all): seeked: unbuffered seek: clearing all buffers');\n  this.clearAllBuffers_();\n};\n\n\n/**\n * Clears the buffer for every stream.  Unlike clearBuffer_, this will handle\n * cases where a MediaState is performing an update.  After this runs, every\n * MediaState will have a pending update.\n * @private\n */\nshaka.media.StreamingEngine.prototype.clearAllBuffers_ = function() {\n  this.mediaStates_.forEach((mediaState, type) => {\n    let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n\n    if (mediaState.clearingBuffer) {\n      // We're already clearing the buffer, so we don't need to clear the\n      // buffer again.\n      shaka.log.debug(logPrefix, 'clear: already clearing the buffer');\n      return;\n    }\n\n    if (mediaState.waitingToClearBuffer) {\n      // May not be performing an update, but an update will still happen.\n      // See: https://github.com/google/shaka-player/issues/334\n      shaka.log.debug(logPrefix, 'clear: already waiting');\n      return;\n    }\n\n    if (mediaState.performingUpdate) {\n      // We are performing an update, so we have to wait until it's finished.\n      // onUpdate_() will call clearBuffer_() when the update has finished.\n      shaka.log.debug(logPrefix, 'clear: currently updating');\n      mediaState.waitingToClearBuffer = true;\n      // We can set the offset to zero to remember that this was a call to\n      // clearAllBuffers.\n      mediaState.clearBufferSafeMargin = 0;\n      return;\n    }\n\n    if (this.playerInterface_.mediaSourceEngine.bufferStart(type) == null) {\n      // Nothing buffered.\n      shaka.log.debug(logPrefix, 'clear: nothing buffered');\n      if (mediaState.updateTimer == null) {\n        // Note: an update cycle stops when we buffer to the end of the\n        // presentation or Period, or when we raise an error.\n        this.scheduleUpdate_(mediaState, 0);\n      }\n      return;\n    }\n\n    // An update may be scheduled, but we can just cancel it and clear the\n    // buffer right away. Note: clearBuffer_() will schedule the next update.\n    shaka.log.debug(logPrefix, 'clear: handling right now');\n    this.cancelUpdate_(mediaState);\n    this.clearBuffer_(mediaState, /* flush */ false, 0);\n  });\n};\n\n\n/**\n * Initializes the given streams and media states if required.  This will\n * schedule updates for the given types.\n *\n * @param {shaka.media.StreamingEngine.ChosenStreams} chosenStreams\n * @param {number=} resumeAt\n * @return {!Promise}\n * @private\n */\nshaka.media.StreamingEngine.prototype.initStreams_ = async function(\n  chosenStreams, resumeAt) {\n  goog.asserts.assert(this.config_,\n    'StreamingEngine configure() must be called before init()!');\n\n  // Determine which Period we must buffer.\n  let playheadTime = this.playerInterface_.playhead.getTime();\n  let needPeriodIndex = this.findPeriodContainingTime_(playheadTime);\n\n  // Init/re-init MediaSourceEngine. Note that a re-init is only valid for text.\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  /**\n   * @type {!Map.<shaka.util.ManifestParserUtils.ContentType,\n   *              shaka.extern.Stream>}\n   */\n  const streamsByType = new Map();\n  /** @type {!Set.<shaka.extern.Stream>} */\n  const streams = new Set();\n\n  if (chosenStreams.variant && chosenStreams.variant.audio) {\n    streamsByType.set(ContentType.AUDIO, chosenStreams.variant.audio);\n    streams.add(chosenStreams.variant.audio);\n  }\n  if (chosenStreams.variant && chosenStreams.variant.video) {\n    streamsByType.set(ContentType.VIDEO, chosenStreams.variant.video);\n    streams.add(chosenStreams.variant.video);\n  }\n  if (chosenStreams.text) {\n    streamsByType.set(ContentType.TEXT, chosenStreams.text);\n    streams.add(chosenStreams.text);\n  }\n\n  // Init MediaSourceEngine.\n  let mediaSourceEngine = this.playerInterface_.mediaSourceEngine;\n  let forceTransmuxTS = this.config_.forceTransmuxTS;\n\n  await mediaSourceEngine.init(streamsByType, forceTransmuxTS);\n  if (this.destroyed_) { return; }\n\n  this.setDuration_();\n\n  // Setup the initial set of Streams and then begin each update cycle. After\n  // startup completes onUpdate_() will set up the remaining Periods.\n  await this.setupStreams_(streams);\n  if (this.destroyed_) { return; }\n\n  streamsByType.forEach((stream, type) => {\n    if (!this.mediaStates_.has(type)) {\n      const state = this.createMediaState_(stream, needPeriodIndex, resumeAt);\n      this.mediaStates_.set(type, state);\n      this.scheduleUpdate_(state, 0);\n    }\n  });\n};\n\n\n/**\n * Creates a media state.\n *\n * @param {shaka.extern.Stream} stream\n * @param {number} needPeriodIndex\n * @param {number=} resumeAt\n * @return {shaka.media.StreamingEngine.MediaState_}\n * @private\n */\nshaka.media.StreamingEngine.prototype.createMediaState_ = function(\n  stream, needPeriodIndex, resumeAt) {\n  return /** @type {shaka.media.StreamingEngine.MediaState_} */ ({\n    stream: stream,\n    type: stream.type,\n    lastStream: null,\n    lastSegmentReference: null,\n    restoreStreamAfterTrickPlay: null,\n    needInitSegment: true,\n    needPeriodIndex: needPeriodIndex,\n    endOfStream: false,\n    performingUpdate: false,\n    updateTimer: null,\n    waitingToClearBuffer: false,\n    clearBufferSafeMargin: 0,\n    waitingToFlushBuffer: false,\n    clearingBuffer: false,\n    recovering: false,\n    hasError: false,\n    resumeAt: resumeAt || 0,\n  });\n};\n\n\n/**\n * Sets up the given Period if necessary. Calls onError() if an error occurs.\n *\n * @param {number} periodIndex The Period's index.\n * @return {!Promise} A Promise which resolves when the given Period is set up.\n * @private\n */\nshaka.media.StreamingEngine.prototype.setupPeriod_ = function(periodIndex) {\n  let canSwitchRecord = this.canSwitchPeriod_[periodIndex];\n  if (canSwitchRecord) {\n    shaka.log.debug(\n      '(all) Period ' + periodIndex + ' is being or has been set up');\n    goog.asserts.assert(canSwitchRecord.promise, 'promise must not be null');\n    return canSwitchRecord.promise;\n  }\n\n  shaka.log.debug('(all) setting up Period ' + periodIndex);\n  canSwitchRecord = {\n    promise: new shaka.util.PublicPromise(),\n    resolved: false,\n  };\n  this.canSwitchPeriod_[periodIndex] = canSwitchRecord;\n\n  const streams = new Set();\n\n  // Add all video, trick video, and audio streams.\n  for (const variant of this.manifest_.periods[periodIndex].variants) {\n    if (variant.video) {\n      streams.add(variant.video);\n    }\n    if (variant.video && variant.video.trickModeVideo) {\n      streams.add(variant.video.trickModeVideo);\n    }\n    if (variant.audio) {\n      streams.add(variant.audio);\n    }\n  }\n\n  // Add text streams\n  for (const stream of this.manifest_.periods[periodIndex].textStreams) {\n    streams.add(stream);\n  }\n\n  // Serialize Period set up.\n  this.setupPeriodPromise_ = this.setupPeriodPromise_.then(function() {\n    if (this.destroyed_) return;\n    return this.setupStreams_(streams);\n  }.bind(this)).then(function() {\n    if (this.destroyed_) return;\n    this.canSwitchPeriod_[periodIndex].promise.resolve();\n    this.canSwitchPeriod_[periodIndex].resolved = true;\n    shaka.log.v1('(all) setup Period ' + periodIndex);\n  }.bind(this)).catch(function(error) {\n    if (this.destroyed_) return;\n    this.canSwitchPeriod_[periodIndex].promise.catch(() => { });\n    this.canSwitchPeriod_[periodIndex].promise.reject();\n    delete this.canSwitchPeriod_[periodIndex];\n    shaka.log.warning('(all) failed to setup Period ' + periodIndex);\n    this.playerInterface_.onError(error);\n    // Don't stop other Periods from being set up.\n  }.bind(this));\n\n  return canSwitchRecord.promise;\n};\n\n\n/**\n * Sets up the given Streams if necessary. Does NOT call onError() if an\n * error occurs.\n *\n * @param {!Set.<!shaka.extern.Stream>} streams\n *    Use a set instead of list because duplicate ids will cause the player to\n *    hang.\n * @return {!Promise}\n * @private\n */\nshaka.media.StreamingEngine.prototype.setupStreams_ = async function(streams) {\n  // Parallelize Stream set up.\n  const parallelWork = [];\n\n  for (const stream of streams) {\n    const canSwitchRecord = this.canSwitchStream_.get(stream.id);\n\n    if (canSwitchRecord) {\n      shaka.log.debug(\n        '(all) Stream ' + stream.id + ' is being or has been set up');\n      parallelWork.push(canSwitchRecord.promise);\n    } else {\n      shaka.log.v1('(all) setting up Stream ' + stream.id);\n      this.canSwitchStream_.set(stream.id, {\n        promise: new shaka.util.PublicPromise(),\n        resolved: false,\n      });\n      parallelWork.push(stream.createSegmentIndex());\n    }\n  }\n\n  try {\n    await Promise.all(parallelWork);\n    if (this.destroyed_) return;\n  } catch (error) {\n    if (this.destroyed_) return;\n\n    for (const stream of streams) {\n      this.canSwitchStream_.get(stream.id).promise.catch(() => { });\n      this.canSwitchStream_.get(stream.id).promise.reject();\n      this.canSwitchStream_.delete(stream.id);\n    }\n\n    throw error;\n  }\n\n  for (const stream of streams) {\n    const canSwitchRecord = this.canSwitchStream_.get(stream.id);\n    if (!canSwitchRecord.resolved) {\n      canSwitchRecord.promise.resolve();\n      canSwitchRecord.resolved = true;\n      shaka.log.v1('(all) setup Stream ' + stream.id);\n    }\n  }\n};\n\n\n/**\n * Sets the MediaSource's duration.\n * @private\n */\nshaka.media.StreamingEngine.prototype.setDuration_ = function() {\n  let duration = this.manifest_.presentationTimeline.getDuration();\n  if (duration < Infinity) {\n    this.playerInterface_.mediaSourceEngine.setDuration(duration);\n  } else {\n    // Not all platforms support infinite durations, so set a finite duration\n    // so we can append segments and so the user agent can seek.\n    this.playerInterface_.mediaSourceEngine.setDuration(Math.pow(2, 32));\n  }\n};\n\n\n/**\n * Called when |mediaState|'s update timer has expired.\n *\n * @param {!shaka.media.StreamingEngine.MediaState_} mediaState\n * @private\n */\nshaka.media.StreamingEngine.prototype.onUpdate_ = function(mediaState) {\n  if (this.destroyed_) return;\n\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n\n  // Sanity check.\n  goog.asserts.assert(\n    !mediaState.performingUpdate && (mediaState.updateTimer != null),\n    logPrefix + ' unexpected call to onUpdate_()');\n  if (mediaState.performingUpdate || (mediaState.updateTimer == null)) return;\n\n  goog.asserts.assert(\n    !mediaState.clearingBuffer,\n    logPrefix + ' onUpdate_() should not be called when clearing the buffer');\n  if (mediaState.clearingBuffer) return;\n\n  mediaState.updateTimer = null;\n\n  // Handle pending buffer clears.\n  if (mediaState.waitingToClearBuffer) {\n    // Note: clearBuffer_() will schedule the next update.\n    shaka.log.debug(logPrefix, 'skipping update and clearing the buffer');\n    this.clearBuffer_(\n      mediaState, mediaState.waitingToFlushBuffer,\n      mediaState.clearBufferSafeMargin);\n    return;\n  }\n\n  // Update the MediaState.\n  try {\n    let delay = this.update_(mediaState);\n    if (delay != null) {\n      this.scheduleUpdate_(mediaState, delay);\n      mediaState.hasError = false;\n    }\n  } catch (error) {\n    this.handleStreamingError_(error);\n    return;\n  }\n\n  const mediaStates = Array.from(this.mediaStates_.values());\n\n  // Check if we've buffered to the end of the Period.\n  this.handlePeriodTransition_(mediaState);\n\n  // Check if we've buffered to the end of the presentation.\n  if (mediaStates.every(function(ms) { return ms.endOfStream; })) {\n    shaka.log.v1(logPrefix, 'calling endOfStream()...');\n    this.playerInterface_.mediaSourceEngine.endOfStream().then(function() {\n      if (this.destroyed_) {\n        return;\n      }\n\n      // If the media segments don't reach the end, then we need to update the\n      // timeline duration to match the final media duration to avoid buffering\n      // forever at the end.  We should only do this if the duration needs to\n      // shrink.  Growing it by less than 1ms can actually cause buffering on\n      // replay, as in https://github.com/google/shaka-player/issues/979\n      let duration = this.playerInterface_.mediaSourceEngine.getDuration();\n      if (duration < this.manifest_.presentationTimeline.getDuration()) {\n        this.manifest_.presentationTimeline.setDuration(duration);\n      }\n    }.bind(this));\n  }\n};\n\n\n/**\n * Updates the given MediaState.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @return {?number} The number of seconds to wait until updating again or\n *   null if another update does not need to be scheduled.\n * @throws {!shaka.util.Error} if an error occurs.\n * @private\n */\nshaka.media.StreamingEngine.prototype.update_ = function(mediaState) {\n  goog.asserts.assert(this.manifest_, 'manifest_ should not be null');\n  goog.asserts.assert(this.config_, 'config_ should not be null');\n\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  // If it's a text stream and the original id starts with 'CC', it's CEA\n  // closed captions. Do not schedule update for closed captions text\n  // mediastate, since closed captions are embedded in video streams.\n  const isCaptionState = (state) => {\n    return state.type == ContentType.TEXT &&\n      state.stream.mimeType == shaka.util.MimeUtils.CLOSED_CAPTION_MIMETYPE;\n  };\n  if (isCaptionState(mediaState)) {\n    this.playerInterface_.mediaSourceEngine.setSelectedClosedCaptionId(\n      mediaState.stream.originalId || '');\n    return null;\n  }\n\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n\n  // Compute how far we've buffered ahead of the playhead.\n  let playheadTime = this.playerInterface_.playhead.getTime();\n\n  // Get the next timestamp we need.\n  let timeNeeded = this.getTimeNeeded_(mediaState, playheadTime);\n  shaka.log.v2(logPrefix, 'timeNeeded=' + timeNeeded);\n\n  let currentPeriodIndex = this.findPeriodContainingStream_(mediaState.stream);\n  let needPeriodIndex = this.findPeriodContainingTime_(timeNeeded);\n\n  // Get the amount of content we have buffered, accounting for drift.  This\n  // is only used to determine if we have meet the buffering goal.  This should\n  // be the same method that PlayheadObserver uses.\n  let bufferedAhead = this.playerInterface_.mediaSourceEngine.bufferedAheadOf(\n    mediaState.type, playheadTime);\n\n  shaka.log.v2(logPrefix,\n    'update_:',\n    'playheadTime=' + playheadTime,\n    'bufferedAhead=' + bufferedAhead);\n\n  let unscaledBufferingGoal = Math.max(\n    this.manifest_.minBufferTime || 0,\n    this.config_.rebufferingGoal,\n    this.config_.bufferingGoal);\n\n  let scaledBufferingGoal = unscaledBufferingGoal * this.bufferingGoalScale_;\n\n  // Check if we've buffered to the end of the presentation.\n  if (timeNeeded >= this.manifest_.presentationTimeline.getDuration()) {\n    // We shouldn't rebuffer if the playhead is close to the end of the\n    // presentation.\n    shaka.log.debug(logPrefix, 'buffered to end of presentation');\n    mediaState.endOfStream = true;\n\n    if (mediaState.type == ContentType.VIDEO) {\n      // Since the text stream of CEA closed captions doesn't have update timer,\n      // we have to set the text endOfStream based on the video stream's\n      // endOfStream state.\n      const textState = this.mediaStates_.get(ContentType.TEXT);\n      if (textState && textState.stream.mimeType ==\n        shaka.util.MimeUtils.CLOSED_CAPTION_MIMETYPE) {\n        textState.endOfStream = true;\n      }\n    }\n    return null;\n  }\n  mediaState.endOfStream = false;\n\n  // Check if we've buffered to the end of the Period. This should be done\n  // before checking segment availability because the new Period may become\n  // available once it's switched to. Note that we don't use the non-existence\n  // of SegmentReferences as an indicator to determine Period boundaries\n  // because a SegmentIndex can provide SegmentReferences outside its Period.\n  mediaState.needPeriodIndex = needPeriodIndex;\n  if (needPeriodIndex != currentPeriodIndex) {\n    shaka.log.debug(logPrefix,\n      'need Period ' + needPeriodIndex,\n      'playheadTime=' + playheadTime,\n      'timeNeeded=' + timeNeeded,\n      'currentPeriodIndex=' + currentPeriodIndex);\n    return null;\n  }\n\n  // If we've buffered to the buffering goal then schedule an update.\n  if (bufferedAhead >= scaledBufferingGoal) {\n    shaka.log.v2(logPrefix, 'buffering goal met');\n\n    // Do not try to predict the next update.  Just poll twice every second.\n    // The playback rate can change at any time, so any prediction we make now\n    // could be terribly invalid soon.\n    return 0.5;\n  }\n\n  let bufferEnd =\n    this.playerInterface_.mediaSourceEngine.bufferEnd(mediaState.type);\n  let reference = this.getSegmentReferenceNeeded_(\n    mediaState, playheadTime, bufferEnd, currentPeriodIndex);\n  if (!reference) {\n    // The segment could not be found, does not exist, or is not available.  In\n    // any case just try again... if the manifest is incomplete or is not being\n    // updated then we'll idle forever; otherwise, we'll end up getting a\n    // SegmentReference eventually.\n    return 1;\n  }\n\n  // Do not let any one stream get far ahead of any other.\n  let minTimeNeeded = Infinity;\n  const mediaStates = Array.from(this.mediaStates_.values());\n  mediaStates.forEach((otherState) => {\n    // Do not consider embedded captions in this calculation.  It could lead\n    // to hangs in streaming.\n    if (isCaptionState(otherState)) return;\n\n    const timeNeeded = this.getTimeNeeded_(otherState, playheadTime);\n    minTimeNeeded = Math.min(minTimeNeeded, timeNeeded);\n  });\n\n  const maxSegmentDuration =\n    this.manifest_.presentationTimeline.getMaxSegmentDuration();\n  const maxRunAhead =\n    maxSegmentDuration * shaka.media.StreamingEngine.MAX_RUN_AHEAD_SEGMENTS_;\n  if (timeNeeded >= minTimeNeeded + maxRunAhead) {\n    // Wait and give other media types time to catch up to this one.\n    // For example, let video buffering catch up to audio buffering before\n    // fetching another audio segment.\n    return 1;\n  }\n\n  mediaState.resumeAt = 0;\n  this.fetchAndAppend_(mediaState, playheadTime, currentPeriodIndex, reference);\n  return null;\n};\n\n\n/**\n * Gets the next timestamp needed. Returns the playhead's position if the\n * buffer is empty; otherwise, returns the time at which the last segment\n * appended ends.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {number} playheadTime\n * @return {number} The next timestamp needed.\n * @private\n */\nshaka.media.StreamingEngine.prototype.getTimeNeeded_ = function(\n  mediaState, playheadTime) {\n  // Get the next timestamp we need. We must use |lastSegmentReference|\n  // to determine this and not the actual buffer for two reasons:\n  //   1. Actual segments end slightly before their advertised end times, so\n  //      the next timestamp we need is actually larger than |bufferEnd|.\n  //   2. There may be drift (the timestamps in the segments are ahead/behind\n  //      of the timestamps in the manifest), but we need drift-free times when\n  //      comparing times against presentation and Period boundaries.\n  if (!mediaState.lastStream || !mediaState.lastSegmentReference) {\n    return Math.max(playheadTime, mediaState.resumeAt);\n  }\n\n  let lastPeriodIndex =\n    this.findPeriodContainingStream_(mediaState.lastStream);\n  let lastPeriod = this.manifest_.periods[lastPeriodIndex];\n  return lastPeriod.startTime + mediaState.lastSegmentReference.endTime;\n};\n\n\n/**\n * Gets the SegmentReference of the next segment needed.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {number} playheadTime\n * @param {?number} bufferEnd\n * @param {number} currentPeriodIndex\n * @return {shaka.media.SegmentReference} The SegmentReference of the\n *   next segment needed. Returns null if a segment could not be found, does not\n *   exist, or is not available.\n * @private\n */\nshaka.media.StreamingEngine.prototype.getSegmentReferenceNeeded_ = function(\n  mediaState, playheadTime, bufferEnd, currentPeriodIndex) {\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n\n  if (mediaState.lastSegmentReference &&\n    mediaState.stream == mediaState.lastStream) {\n    // Something is buffered from the same Stream.\n    let position = mediaState.lastSegmentReference.position + 1;\n    shaka.log.v2(logPrefix, 'next position known:', 'position=' + position);\n\n    return this.getSegmentReferenceIfAvailable_(\n      mediaState, currentPeriodIndex, position);\n  }\n\n  let position;\n\n  if (mediaState.lastSegmentReference) {\n    // Something is buffered from another Stream.\n    goog.asserts.assert(mediaState.lastStream, 'lastStream should not be null');\n    shaka.log.v1(logPrefix, 'next position unknown: another Stream buffered');\n    let lastPeriodIndex =\n      this.findPeriodContainingStream_(mediaState.lastStream);\n    let lastPeriod = this.manifest_.periods[lastPeriodIndex];\n    position = this.lookupSegmentPosition_(\n      mediaState,\n      lastPeriod.startTime + mediaState.lastSegmentReference.endTime,\n      currentPeriodIndex);\n  } else {\n    // Either nothing is buffered, or we have cleared part of the buffer.  If\n    // we still have some buffered, use that time to find the segment, otherwise\n    // start at the playhead time.\n    goog.asserts.assert(!mediaState.lastStream, 'lastStream should be null');\n    shaka.log.v1(logPrefix, 'next position unknown: nothing buffered');\n    position = this.lookupSegmentPosition_(\n      mediaState, bufferEnd || playheadTime, currentPeriodIndex);\n  }\n\n  if (position == null) {\n    return null;\n  }\n\n  let reference = null;\n  if (bufferEnd == null) {\n    // If there's positive drift then we need to get the previous segment;\n    // however, we don't actually know how much drift there is, so we must\n    // unconditionally get the previous segment. If it turns out that there's\n    // non-positive drift then we'll just end up buffering beind the playhead a\n    // little more than we needed.\n    let optimalPosition = Math.max(0, position - 1);\n    reference = this.getSegmentReferenceIfAvailable_(\n      mediaState, currentPeriodIndex, optimalPosition);\n  }\n  return reference ||\n    this.getSegmentReferenceIfAvailable_(\n      mediaState, currentPeriodIndex, position);\n};\n\n\n/**\n * Looks up the position of the segment containing the given timestamp.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {number} presentationTime The timestamp needed, relative to the\n *   start of the presentation.\n * @param {number} currentPeriodIndex\n * @return {?number} A segment position, or null if a segment was not be found.\n * @private\n */\nshaka.media.StreamingEngine.prototype.lookupSegmentPosition_ = function(\n  mediaState, presentationTime, currentPeriodIndex) {\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n  let currentPeriod = this.manifest_.periods[currentPeriodIndex];\n\n  shaka.log.debug(logPrefix,\n    'looking up segment:',\n    'presentationTime=' + presentationTime,\n    'currentPeriod.startTime=' + currentPeriod.startTime);\n\n  let lookupTime = Math.max(0, presentationTime - currentPeriod.startTime);\n  let position = mediaState.stream.findSegmentPosition(lookupTime);\n\n  if (position == null) {\n    shaka.log.warning(logPrefix,\n      'cannot find segment:',\n      'currentPeriod.startTime=' + currentPeriod.startTime,\n      'lookupTime=' + lookupTime);\n  }\n\n  return position;\n};\n\n\n/**\n * Gets the SegmentReference at the given position if it's available.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {number} currentPeriodIndex\n * @param {number} position\n * @return {shaka.media.SegmentReference}\n *\n * @private\n */\nshaka.media.StreamingEngine.prototype.getSegmentReferenceIfAvailable_ =\n  function(mediaState, currentPeriodIndex, position) {\n    let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n    let currentPeriod = this.manifest_.periods[currentPeriodIndex];\n\n    let reference = mediaState.stream.getSegmentReference(position);\n    if (!reference) {\n      shaka.log.v1(logPrefix,\n        'segment does not exist:',\n        'currentPeriod.startTime=' + currentPeriod.startTime,\n        'position=' + position);\n      return null;\n    }\n\n    let timeline = this.manifest_.presentationTimeline;\n    let availabilityStart = timeline.getSegmentAvailabilityStart();\n    let availabilityEnd = timeline.getSegmentAvailabilityEnd();\n\n    if ((currentPeriod.startTime + reference.endTime < availabilityStart) ||\n      (currentPeriod.startTime + reference.startTime > availabilityEnd)) {\n      shaka.log.v2(logPrefix,\n        'segment is not available:',\n        'currentPeriod.startTime=' + currentPeriod.startTime,\n        'reference.startTime=' + reference.startTime,\n        'reference.endTime=' + reference.endTime,\n        'availabilityStart=' + availabilityStart,\n        'availabilityEnd=' + availabilityEnd);\n      return null;\n    }\n\n    return reference;\n  };\n\n\n/**\n * Fetches and appends the given segment. Sets up the given MediaState's\n * associated SourceBuffer and evicts segments if either are required\n * beforehand. Schedules another update after completing successfully.\n *\n * @param {!shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {number} playheadTime\n * @param {number} currentPeriodIndex The index of the current Period.\n * @param {!shaka.media.SegmentReference} reference\n * @private\n */\nshaka.media.StreamingEngine.prototype.fetchAndAppend_ = function(\n  mediaState, playheadTime, currentPeriodIndex, reference) {\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  let currentPeriod = this.manifest_.periods[currentPeriodIndex];\n\n  shaka.log.v1(logPrefix,\n    'fetchAndAppend_:',\n    'playheadTime=' + playheadTime,\n    'currentPeriod.startTime=' + currentPeriod.startTime,\n    'reference.position=' + reference.position,\n    'reference.startTime=' + reference.startTime,\n    'reference.endTime=' + reference.endTime);\n\n  // Subtlety: The playhead may move while asynchronous update operations are\n  // in progress, so we should avoid calling playhead.getTime() in any\n  // callbacks. Furthermore, switch() may be called at any time, so we should\n  // also avoid using mediaState.stream or mediaState.needInitSegment in any\n  // callbacks.\n  let stream = mediaState.stream;\n\n  // Compute the append window.\n  let duration = this.manifest_.presentationTimeline.getDuration();\n  let followingPeriod = this.manifest_.periods[currentPeriodIndex + 1];\n  // Rounding issues can cause us to remove the first frame of the Period, so\n  // reduce the start time slightly.\n  let windowFudge = shaka.media.StreamingEngine.APPEND_WINDOW_START_FUDGE_;\n  let appendWindowStart = Math.max(0, currentPeriod.startTime - windowFudge);\n  let appendWindowEnd = followingPeriod ? followingPeriod.startTime : duration;\n  goog.asserts.assert(\n    reference.startTime <= appendWindowEnd,\n    logPrefix + ' segment should start before append window end');\n\n  let initSourceBuffer = this.initSourceBuffer_(\n    mediaState, currentPeriodIndex, appendWindowStart, appendWindowEnd);\n\n  mediaState.performingUpdate = true;\n\n  // We may set |needInitSegment| to true in switch(), so set it to false here,\n  // since we want it to remain true if switch() is called.\n  mediaState.needInitSegment = false;\n\n  shaka.log.v2(logPrefix, 'fetching segment');\n  let fetchSegment = this.fetch_(reference);\n\n  Promise.all([initSourceBuffer, fetchSegment]).then(function(results) {\n    if (this.destroyed_ || this.fatalError_) return;\n    return this.append_(mediaState,\n      playheadTime,\n      currentPeriod,\n      stream,\n      reference,\n      results[1]);\n  }.bind(this)).then(function() {\n    if (this.destroyed_ || this.fatalError_) return;\n\n    mediaState.performingUpdate = false;\n    mediaState.recovering = false;\n\n    if (!mediaState.waitingToClearBuffer) {\n      this.playerInterface_.onSegmentAppended();\n    }\n\n    // Update right away.\n    this.scheduleUpdate_(mediaState, 0);\n\n    // Subtlety: handleStartup_() calls onStartupComplete() which may call\n    // switch() or seeked(), so we must schedule an update beforehand so\n    // |updateTimer| is set.\n    this.handleStartup_(mediaState, stream);\n\n    shaka.log.v1(logPrefix, 'finished fetch and append');\n  }.bind(this)).catch(function(error) {\n    if (this.destroyed_ || this.fatalError_) return;\n    goog.asserts.assert(error instanceof shaka.util.Error,\n      'Should only receive a Shaka error');\n\n    mediaState.performingUpdate = false;\n\n    if (mediaState.type == ContentType.TEXT &&\n      this.config_.ignoreTextStreamFailures) {\n      if (error.code == shaka.util.Error.Code.BAD_HTTP_STATUS) {\n        shaka.log.warning(logPrefix,\n          'Text stream failed to download. Proceeding without it.');\n      } else {\n        shaka.log.warning(logPrefix,\n          'Text stream failed to parse. Proceeding without it.');\n      }\n\n      this.mediaStates_.delete(ContentType.TEXT);\n    } else if (error.code == shaka.util.Error.Code.QUOTA_EXCEEDED_ERROR) {\n      this.handleQuotaExceeded_(mediaState, error);\n    } else {\n      shaka.log.error(logPrefix, 'failed fetch and append: code=' + error.code);\n      mediaState.hasError = true;\n\n      error.severity = shaka.util.Error.Severity.CRITICAL;\n      this.handleStreamingError_(error);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Clear per-stream error states and retry any failed streams.\n * @return {boolean} False if unable to retry.\n */\nshaka.media.StreamingEngine.prototype.retry = function() {\n  if (this.destroyed_) {\n    shaka.log.error('Unable to retry after StreamingEngine is destroyed!');\n    return false;\n  }\n\n  if (this.fatalError_) {\n    shaka.log.error('Unable to retry after StreamingEngine encountered a ' +\n      'fatal error!');\n    return false;\n  }\n\n  for (const mediaState of this.mediaStates_.values()) {\n    let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n    if (mediaState.hasError) {\n      shaka.log.info(logPrefix, 'Retrying after failure...');\n      mediaState.hasError = false;\n      this.scheduleUpdate_(mediaState, 0.1);\n    }\n  }\n\n  return true;\n};\n\n\n/**\n * Handles a QUOTA_EXCEEDED_ERROR.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {!shaka.util.Error} error\n * @private\n */\nshaka.media.StreamingEngine.prototype.handleQuotaExceeded_ = function(\n  mediaState, error) {\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n\n  // The segment cannot fit into the SourceBuffer. Ideally, MediaSource would\n  // have evicted old data to accommodate the segment; however, it may have\n  // failed to do this if the segment is very large, or if it could not find\n  // a suitable time range to remove.\n  //\n  // We can overcome the latter by trying to append the segment again;\n  // however, to avoid continuous QuotaExceededErrors we must reduce the size\n  // of the buffer going forward.\n  //\n  // If we've recently reduced the buffering goals, wait until the stream\n  // which caused the first QuotaExceededError recovers. Doing this ensures\n  // we don't reduce the buffering goals too quickly.\n\n  const mediaStates = Array.from(this.mediaStates_.values());\n  let waitingForAnotherStreamToRecover = mediaStates.some(function(ms) {\n    return ms != mediaState && ms.recovering;\n  });\n\n  if (!waitingForAnotherStreamToRecover) {\n    // Reduction schedule: 80%, 60%, 40%, 20%, 16%, 12%, 8%, 4%, fail.\n    // Note: percentages are used for comparisons to avoid rounding errors.\n    let percentBefore = Math.round(100 * this.bufferingGoalScale_);\n    if (percentBefore > 20) {\n      this.bufferingGoalScale_ -= 0.2;\n    } else if (percentBefore > 4) {\n      this.bufferingGoalScale_ -= 0.04;\n    } else {\n      shaka.log.error(\n        logPrefix, 'MediaSource threw QuotaExceededError too many times');\n      mediaState.hasError = true;\n      this.fatalError_ = true;\n      this.playerInterface_.onError(error);\n      return;\n    }\n    let percentAfter = Math.round(100 * this.bufferingGoalScale_);\n    shaka.log.warning(\n      logPrefix,\n      'MediaSource threw QuotaExceededError:',\n      'reducing buffering goals by ' + (100 - percentAfter) + '%');\n    mediaState.recovering = true;\n  } else {\n    shaka.log.debug(\n      logPrefix,\n      'MediaSource threw QuotaExceededError:',\n      'waiting for another stream to recover...');\n  }\n\n  // QuotaExceededError gets thrown if evication didn't help to make room\n  // for a segment. We want to wait for a while (4 seconds is just an\n  // arbitrary number) before updating to give the playhead a chance to\n  // advance, so we don't immidiately throw again.\n  this.scheduleUpdate_(mediaState, 4);\n};\n\n\n/**\n * Sets the given MediaState's associated SourceBuffer's timestamp offset and\n * init segment if either are required. If an error occurs then neither the\n * timestamp offset or init segment are unset, since another call to switch()\n * will end up superseding them.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {number} currentPeriodIndex\n * @param {number} appendWindowStart\n * @param {number} appendWindowEnd\n * @return {!Promise}\n * @private\n */\nshaka.media.StreamingEngine.prototype.initSourceBuffer_ = function(\n  mediaState, currentPeriodIndex, appendWindowStart, appendWindowEnd) {\n  if (!mediaState.needInitSegment) {\n    return Promise.resolve();\n  }\n\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n  let currentPeriod = this.manifest_.periods[currentPeriodIndex];\n\n  // If we need an init segment then the Stream switched, so we've either\n  // changed bitrates, Periods, or both. If we've changed Periods then we must\n  // set a new timestamp offset and append window end. Note that by setting\n  // these values here, we avoid having to co-ordinate ongoing updates, which\n  // we would have to do if we instead set them in switch().\n  let timestampOffset =\n    currentPeriod.startTime - mediaState.stream.presentationTimeOffset;\n  shaka.log.v1(logPrefix, 'setting timestamp offset to ' + timestampOffset);\n  shaka.log.v1(logPrefix,\n    'setting appstart window start to ' + appendWindowStart);\n  shaka.log.v1(logPrefix, 'setting append window end to ' + appendWindowEnd);\n  let setStreamProperties =\n    this.playerInterface_.mediaSourceEngine.setStreamProperties(\n      mediaState.type, timestampOffset, appendWindowStart, appendWindowEnd);\n\n  if (!mediaState.stream.initSegmentReference) {\n    // The Stream is self initializing.\n    return setStreamProperties;\n  }\n\n  shaka.log.v1(logPrefix, 'fetching init segment');\n  let fetchInit = this.fetch_(mediaState.stream.initSegmentReference);\n  let appendInit = fetchInit.then(function(initSegment) {\n    if (this.destroyed_) return;\n    shaka.log.v1(logPrefix, 'appending init segment');\n    const hasClosedCaptions = mediaState.stream.closedCaptions &&\n      mediaState.stream.closedCaptions.size > 0;\n    return this.playerInterface_.mediaSourceEngine.appendBuffer(\n      mediaState.type, initSegment, null /* startTime */, null /* endTime */,\n      hasClosedCaptions);\n  }.bind(this)).catch(function(error) {\n    mediaState.needInitSegment = true;\n    return Promise.reject(error);\n  });\n\n  return Promise.all([setStreamProperties, appendInit]);\n};\n\n\n/**\n * Appends the given segment and evicts content if required to append.\n *\n * @param {!shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {number} playheadTime\n * @param {shaka.extern.Period} period\n * @param {shaka.extern.Stream} stream\n * @param {!shaka.media.SegmentReference} reference\n * @param {!ArrayBuffer} segment\n * @return {!Promise}\n * @private\n */\nshaka.media.StreamingEngine.prototype.append_ = function(\n  mediaState, playheadTime, period, stream, reference, segment) {\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n\n  const hasClosedCaptions = stream.closedCaptions &&\n    stream.closedCaptions.size > 0;\n  if (stream.emsgSchemeIdUris != null && stream.emsgSchemeIdUris.length > 0) {\n    new shaka.util.Mp4Parser()\n      .fullBox(\n        'emsg',\n        this.parseEMSG_.bind(\n          this, period, reference, stream.emsgSchemeIdUris))\n      .parse(segment);\n  }\n\n  return this.evict_(mediaState, playheadTime).then(function() {\n    if (this.destroyed_) return;\n    shaka.log.v1(logPrefix, 'appending media segment');\n\n    // MediaSourceEngine expects times relative to the start of the\n    // presentation.  Reference times are relative to the start of the period.\n    const startTime = reference.startTime + period.startTime;\n    const endTime = reference.endTime + period.startTime;\n\n    return this.playerInterface_.mediaSourceEngine.appendBuffer(\n      mediaState.type, segment, startTime, endTime, hasClosedCaptions);\n  }.bind(this)).then(function() {\n    if (this.destroyed_) return;\n    shaka.log.v2(logPrefix, 'appended media segment');\n\n    // We must use |stream| because switch() may have been called.\n    mediaState.lastStream = stream;\n    mediaState.lastSegmentReference = reference;\n\n    return Promise.resolve();\n  }.bind(this));\n};\n\n\n/**\n * Parse the EMSG box from a MP4 container.\n *\n * @param {!shaka.extern.Period} period\n * @param {!shaka.media.SegmentReference} reference\n * @param {?Array.<string>} emsgSchemeIdUris Array of emsg\n *     scheme_id_uri for which emsg boxes should be parsed.\n * @param {!shaka.extern.ParsedBox} box\n * @private\n */\nshaka.media.StreamingEngine.prototype.parseEMSG_ = function(\n  period, reference, emsgSchemeIdUris, box) {\n  let schemeId = box.reader.readTerminatedString();\n  // Read the rest of the data.\n  let value = box.reader.readTerminatedString();\n  let timescale = box.reader.readUint32();\n  let presentationTimeDelta = box.reader.readUint32();\n  let eventDuration = box.reader.readUint32();\n  let id = box.reader.readUint32();\n  let messageData = box.reader.readBytes(\n    box.reader.getLength() - box.reader.getPosition());\n\n  let startTime = period.startTime + reference.startTime +\n    (presentationTimeDelta / timescale);\n\n  // See DASH sec. 5.10.3.3.1\n  // If a DASH client detects an event message box with a scheme that is not\n  // defined in MPD, the client is expected to ignore it.\n  if (emsgSchemeIdUris.includes(schemeId)) {\n    // See DASH sec. 5.10.4.1\n    // A special scheme in DASH used to signal manifest updates.\n    if (schemeId == 'urn:mpeg:dash:event:2012') {\n      this.playerInterface_.onManifestUpdate();\n    } else {\n      /** @type {shaka.extern.EmsgInfo} */\n      let emsg = {\n        startTime: startTime,\n        endTime: startTime + (eventDuration / timescale),\n        schemeIdUri: schemeId,\n        value: value,\n        timescale: timescale,\n        presentationTimeDelta: presentationTimeDelta,\n        eventDuration: eventDuration,\n        id: id,\n        messageData: messageData,\n      };\n\n      // Dispatch an event to notify the application about the emsg box.\n      let event = new shaka.util.FakeEvent('emsg', {'detail': emsg});\n      this.playerInterface_.onEvent(event);\n    }\n  }\n};\n\n\n/**\n * Evicts media to meet the max buffer behind limit.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {number} playheadTime\n * @return {!Promise}\n * @private\n */\nshaka.media.StreamingEngine.prototype.evict_ = function(\n  mediaState, playheadTime) {\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n  shaka.log.v2(logPrefix, 'checking buffer length');\n\n  // Use the max segment duration, if it is longer than the bufferBehind, to\n  // avoid accidentally clearing too much data when dealing with a manifest\n  // with a long keyframe interval.\n  let bufferBehind = Math.max(this.config_.bufferBehind,\n    this.manifest_.presentationTimeline.getMaxSegmentDuration());\n\n  let startTime =\n    this.playerInterface_.mediaSourceEngine.bufferStart(mediaState.type);\n  if (startTime == null) {\n    shaka.log.v2(logPrefix,\n      'buffer behind okay because nothing buffered:',\n      'playheadTime=' + playheadTime,\n      'bufferBehind=' + bufferBehind);\n    return Promise.resolve();\n  }\n  let bufferedBehind = playheadTime - startTime;\n\n  let overflow = bufferedBehind - bufferBehind;\n  if (overflow <= 0) {\n    shaka.log.v2(logPrefix,\n      'buffer behind okay:',\n      'playheadTime=' + playheadTime,\n      'bufferedBehind=' + bufferedBehind,\n      'bufferBehind=' + bufferBehind,\n      'underflow=' + (-overflow));\n    return Promise.resolve();\n  }\n\n  shaka.log.v1(logPrefix,\n    'buffer behind too large:',\n    'playheadTime=' + playheadTime,\n    'bufferedBehind=' + bufferedBehind,\n    'bufferBehind=' + bufferBehind,\n    'overflow=' + overflow);\n\n  return this.playerInterface_.mediaSourceEngine.remove(\n    mediaState.type, startTime, startTime + overflow).then(function() {\n      if (this.destroyed_) return;\n      shaka.log.v1(logPrefix, 'evicted ' + overflow + ' seconds');\n    }.bind(this));\n};\n\n\n/**\n * Sets up all known Periods when startup completes; otherwise, does nothing.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState The last\n *   MediaState updated.\n * @param {shaka.extern.Stream} stream\n * @private\n */\nshaka.media.StreamingEngine.prototype.handleStartup_ = function(\n  mediaState, stream) {\n  const Functional = shaka.util.Functional;\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  if (this.startupComplete_) {\n    return;\n  }\n\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n\n  const mediaStates = Array.from(this.mediaStates_.values());\n  this.startupComplete_ = mediaStates.every(function(ms) {\n    // Startup completes once we have buffered at least one segment from each\n    // MediaState, not counting text.\n    if (ms.type == ContentType.TEXT) return true;\n    return !ms.waitingToClearBuffer &&\n      !ms.clearingBuffer &&\n      ms.lastSegmentReference;\n  });\n\n  if (!this.startupComplete_) {\n    return;\n  }\n\n  shaka.log.debug(logPrefix, 'startup complete');\n\n  // We must use |stream| because switch() may have been called.\n  let currentPeriodIndex = this.findPeriodContainingStream_(stream);\n\n  goog.asserts.assert(\n    mediaStates.every(function(ms) {\n      // It is possible for one stream (usually text) to buffer the whole\n      // Period and need the next one.\n      return ms.needPeriodIndex == currentPeriodIndex ||\n        ms.needPeriodIndex == currentPeriodIndex + 1;\n    }),\n    logPrefix + ' expected all MediaStates to need same Period');\n\n  // Setup the current Period if necessary, which is likely since the current\n  // Period is probably the initial one.\n  if (!this.canSwitchPeriod_[currentPeriodIndex]) {\n    this.setupPeriod_(currentPeriodIndex).then(function() {\n      if (this.destroyed_) {\n        return;\n      }\n\n      shaka.log.v1(logPrefix, 'calling onCanSwitch()...');\n      this.playerInterface_.onCanSwitch();\n    }.bind(this)).catch(Functional.noop);\n  }\n\n  // Now setup all known Periods.\n  for (let i = 0; i < this.manifest_.periods.length; ++i) {\n    this.setupPeriod_(i).catch(Functional.noop);\n  }\n\n  if (this.playerInterface_.onStartupComplete) {\n    shaka.log.v1(logPrefix, 'calling onStartupComplete()...');\n    this.playerInterface_.onStartupComplete();\n  }\n};\n\n\n/**\n * Calls onChooseStreams() when necessary.\n *\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState The last\n *   MediaState updated.\n * @private\n */\nshaka.media.StreamingEngine.prototype.handlePeriodTransition_ = function(\n  mediaState) {\n  const Functional = shaka.util.Functional;\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  let currentPeriodIndex = this.findPeriodContainingStream_(mediaState.stream);\n  if (mediaState.needPeriodIndex == currentPeriodIndex) {\n    return;\n  }\n\n  let needPeriodIndex = mediaState.needPeriodIndex;\n\n  const mediaStates = Array.from(this.mediaStates_.values());\n\n  // For a Period transition to work, all media states must need the same\n  // Period.  If a stream needs a different Period than the one it currently\n  // has, it will try to transition or stop updates assuming that another stream\n  // will handle it.  This only works when all streams either need the same\n  // Period or are still performing updates.\n  goog.asserts.assert(\n    mediaStates.every(function(ms) {\n      return ms.needPeriodIndex == needPeriodIndex || ms.hasError ||\n        !shaka.media.StreamingEngine.isIdle_(ms);\n    }),\n    'All MediaStates should need the same Period or be performing updates.');\n\n  // Only call onChooseStreams() when all MediaStates need the same Period.\n  let needSamePeriod = mediaStates.every(function(ms) {\n    return ms.needPeriodIndex == needPeriodIndex;\n  });\n  if (!needSamePeriod) {\n    shaka.log.debug(\n      logPrefix, 'not all MediaStates need Period ' + needPeriodIndex);\n    return;\n  }\n\n  // Only call onChooseStreams() once per Period transition.\n  let allAreIdle = mediaStates.every(shaka.media.StreamingEngine.isIdle_);\n  if (!allAreIdle) {\n    shaka.log.debug(\n      logPrefix,\n      'all MediaStates need Period ' + needPeriodIndex + ', ' +\n      'but not all MediaStates are idle');\n    return;\n  }\n\n  shaka.log.debug(logPrefix, 'all need Period ' + needPeriodIndex);\n\n  // Ensure the Period which we need to buffer is set up and then call\n  // onChooseStreams().\n  this.setupPeriod_(needPeriodIndex).then(function() {\n    if (this.destroyed_) return;\n\n    // If we seek during a Period transition, we can start another transition.\n    // So we need to verify that:\n    //  1. We are still in need of the same Period.\n    //  2. All streams are still idle.\n    //  3. The current stream is not in the needed Period (another transition\n    //     handled it).\n    let allReady = mediaStates.every(function(ms) {\n      let isIdle = shaka.media.StreamingEngine.isIdle_(ms);\n      let currentPeriodIndex = this.findPeriodContainingStream_(ms.stream);\n      return isIdle && ms.needPeriodIndex == needPeriodIndex &&\n        currentPeriodIndex != needPeriodIndex;\n    }.bind(this));\n    if (!allReady) {\n      // TODO: Write unit tests for this case.\n      shaka.log.debug(logPrefix, 'ignoring transition to Period',\n        needPeriodIndex, 'since another is happening');\n      return;\n    }\n\n    let needPeriod = this.manifest_.periods[needPeriodIndex];\n\n    shaka.log.v1(logPrefix, 'calling onChooseStreams()...');\n    let chosenStreams = this.playerInterface_.onChooseStreams(needPeriod);\n\n    /** @type {!Map.<!ContentType, shaka.extern.Stream>} */\n    const streamsByType = new Map();\n    if (chosenStreams.variant && chosenStreams.variant.video) {\n      streamsByType.set(ContentType.VIDEO, chosenStreams.variant.video);\n    }\n    if (chosenStreams.variant && chosenStreams.variant.audio) {\n      streamsByType.set(ContentType.AUDIO, chosenStreams.variant.audio);\n    }\n    if (chosenStreams.text) {\n      streamsByType.set(ContentType.TEXT, chosenStreams.text);\n    }\n\n    // Vet |streamsByType| before switching.\n    for (const type of this.mediaStates_.keys()) {\n      if (streamsByType.has(type) || type == ContentType.TEXT) continue;\n\n      shaka.log.error(logPrefix,\n        'invalid Streams chosen: missing ' + type + ' Stream');\n      this.playerInterface_.onError(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STREAMING,\n        shaka.util.Error.Code.INVALID_STREAMS_CHOSEN));\n      return;\n    }\n\n    // Because we are going to modify the map, we need to create a copy of the\n    // keys, so copy the iterable to an array first.\n    for (const type of Array.from(streamsByType.keys())) {\n      if (this.mediaStates_.has(type)) continue;\n\n      if (type == ContentType.TEXT) {\n        // initStreams_ will switch streams and schedule an update.\n        this.initStreams_(\n          {text: streamsByType.get(ContentType.TEXT)}, needPeriod.startTime);\n        streamsByType.delete(type);\n        continue;\n      }\n\n      shaka.log.error(logPrefix,\n        'invalid Streams chosen: unusable ' + type + ' Stream');\n      this.playerInterface_.onError(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STREAMING,\n        shaka.util.Error.Code.INVALID_STREAMS_CHOSEN));\n      return;\n    }\n\n    // Because we are going to modify the map, we need to create a copy of the\n    // keys, so copy the iterable to an array first.\n    for (const type of Array.from(this.mediaStates_.keys())) {\n      const stream = streamsByType.get(type);\n      if (stream) {\n        this.switchInternal_(stream, /* clearBuffer */ false, 0);\n        this.scheduleUpdate_(this.mediaStates_.get(type), 0);\n      } else {\n        goog.asserts.assert(type == ContentType.TEXT, 'Invalid streams chosen');\n        this.mediaStates_.delete(type);\n      }\n    }\n\n    // We've already set up the Period so call onCanSwitch() right now.\n    shaka.log.v1(logPrefix, 'calling onCanSwitch()...');\n    this.playerInterface_.onCanSwitch();\n  }.bind(this)).catch(Functional.noop);\n};\n\n\n/**\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @return {boolean} True if the given MediaState is idle; otherwise, return\n *   false.\n * @private\n */\nshaka.media.StreamingEngine.isIdle_ = function(mediaState) {\n  return !mediaState.performingUpdate &&\n    (mediaState.updateTimer == null) &&\n    !mediaState.waitingToClearBuffer &&\n    !mediaState.clearingBuffer;\n};\n\n\n/**\n * @param {number} time The time, in seconds, relative to the start of the\n *   presentation.\n * @return {number} The index of the Period which starts after |time|\n * @private\n */\nshaka.media.StreamingEngine.prototype.findPeriodContainingTime_ = function(\n  time) {\n  goog.asserts.assert(this.manifest_, 'Must not be destroyed');\n  return shaka.util.StreamUtils.findPeriodContainingTime(this.manifest_, time);\n};\n\n\n/**\n * @param {!shaka.extern.Stream} stream\n * @return {number} The index of the Period which contains |stream|, or -1 if\n *   no Period contains |stream|.\n * @private\n */\nshaka.media.StreamingEngine.prototype.findPeriodContainingStream_ = function(\n  stream) {\n  goog.asserts.assert(this.manifest_, 'Must not be destroyed');\n  return shaka.util.StreamUtils.findPeriodContainingStream(\n    this.manifest_, stream);\n};\n\n\n/**\n * Fetches the given segment.\n *\n * @param {(!shaka.media.InitSegmentReference|!shaka.media.SegmentReference)}\n *   reference\n *\n * @return {!Promise.<!ArrayBuffer>}\n * @private\n */\nshaka.media.StreamingEngine.prototype.fetch_ = function(reference) {\n  if (reference.initSegmentBytesFunc) {\n    let initSegmentBytes = reference.initSegmentBytesFunc();\n    shaka.log.v1(\n      'found vstub bytes: returning protovstub bytes directly (bytes): ' +\n      initSegmentBytes.byteLength);\n    return Promise.resolve(initSegmentBytes);\n  }\n\n  const requestType = shaka.net.NetworkingEngine.RequestType.SEGMENT;\n\n  let request = shaka.net.NetworkingEngine.makeRequest(\n    reference.getUris(), this.config_.retryParameters);\n\n  // Set the Range header. Note that some web servers don't accept Range\n  // headers, so don't set one if it's not strictly required.\n  if ((reference.startByte != 0) || (reference.endByte != null)) {\n    let range = 'bytes=' + reference.startByte + '-';\n    if (reference.endByte != null) range += reference.endByte;\n    request.headers['Range'] = range;\n  }\n  shaka.log.v2(`fetching: reference=${reference}`);\n  let op = this.playerInterface_.netEngine.request(requestType, request);\n\n  if (reference.byteRanges) {\n    return op.then((response) => {\n      shaka.log.v1(`\n        restoring linius vstub segment: \n        ${reference.startByte} ${reference.endByte}\n      `);\n\n      let segmentSize = reference.sixdmoofBytes.byteLength + reference.mdatSize;\n      let buffer = new ArrayBuffer(segmentSize);\n      let segmentArray = new Uint8Array(buffer);\n      segmentArray.set(reference.sixdmoofBytes, 0);\n      let offset = reference.sixdmoofBytes.byteLength;\n\n      let mdatHeader = lin.VstubSegmentList.buildMdatHeader(reference.mdatSize);\n      segmentArray.set(mdatHeader, offset);\n      offset = offset + mdatHeader.byteLength;\n\n      let responseArray = new Uint8Array(response.data);\n\n      reference.byteRanges.forEach((range) => {\n        let lo = range.from - reference.startByte;\n        let hi = range.to - reference.startByte;\n        let samplesData = responseArray.slice(lo, hi + 1);\n        segmentArray.set(samplesData, offset);\n        offset = offset + samplesData.byteLength;\n      });\n\n      return buffer;\n    });\n  } else {\n    return op.promise.then((response) => response.data);\n  }\n};\n\n\n/**\n * Clears the buffer and schedules another update.\n * The optional parameter safeMargin allows to retain a certain amount\n * of buffer, which can help avoiding rebuffering events.\n * The value of the safe margin should be provided by the ABR manager.\n *\n * @param {!shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {boolean} flush\n * @param {number} safeMargin\n * @return {!Promise}\n * @private\n */\nshaka.media.StreamingEngine.prototype.clearBuffer_ =\n  async function(mediaState, flush, safeMargin) {\n    let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n\n    goog.asserts.assert(\n      !mediaState.performingUpdate && (mediaState.updateTimer == null),\n      logPrefix + ' unexpected call to clearBuffer_()');\n\n    mediaState.waitingToClearBuffer = false;\n    mediaState.waitingToFlushBuffer = false;\n    mediaState.clearBufferSafeMargin = 0;\n    mediaState.clearingBuffer = true;\n\n    shaka.log.debug(logPrefix, 'clearing buffer');\n    let p;\n    if (safeMargin) {\n      let playheadTime = this.playerInterface_.playhead.getTime();\n      let duration = this.playerInterface_.mediaSourceEngine.getDuration();\n      p = this.playerInterface_.mediaSourceEngine.remove(\n        mediaState.type, playheadTime + safeMargin, duration);\n    } else {\n      p = this.playerInterface_.mediaSourceEngine.clear(mediaState.type).then(\n        function() {\n          if (!this.destroyed_ && flush) {\n            return this.playerInterface_.mediaSourceEngine.flush(\n              mediaState.type);\n          }\n        }.bind(this));\n    }\n\n    await p;\n    if (this.destroyed_) return;\n\n    shaka.log.debug(logPrefix, 'cleared buffer');\n    mediaState.lastStream = null;\n    mediaState.lastSegmentReference = null;\n    mediaState.clearingBuffer = false;\n    mediaState.endOfStream = false;\n    this.scheduleUpdate_(mediaState, 0);\n  };\n\n\n/**\n * Schedules |mediaState|'s next update.\n *\n * @param {!shaka.media.StreamingEngine.MediaState_} mediaState\n * @param {number} delay The delay in seconds.\n * @private\n */\nshaka.media.StreamingEngine.prototype.scheduleUpdate_ = function(\n  mediaState, delay) {\n  let logPrefix = shaka.media.StreamingEngine.logPrefix_(mediaState);\n  shaka.log.v2(logPrefix, 'updating in ' + delay + ' seconds');\n  goog.asserts.assert(mediaState.updateTimer == null,\n    logPrefix + ' did not expect update to be scheduled');\n  mediaState.updateTimer = window.setTimeout(\n    this.onUpdate_.bind(this, mediaState), delay * 1000);\n};\n\n\n/**\n * Cancels |mediaState|'s next update if one exists.\n *\n * @param {!shaka.media.StreamingEngine.MediaState_} mediaState\n * @private\n */\nshaka.media.StreamingEngine.prototype.cancelUpdate_ = function(mediaState) {\n  if (mediaState.updateTimer != null) {\n    window.clearTimeout(mediaState.updateTimer);\n    mediaState.updateTimer = null;\n  }\n};\n\n\n/**\n * Handle streaming errors by delaying, then notifying the application by error\n * callback and by streaming failure callback.\n *\n * @param {!shaka.util.Error} error\n * @private\n */\nshaka.media.StreamingEngine.prototype.handleStreamingError_ = function(error) {\n  // If we invoke the callback right away, the application could trigger a\n  // rapid retry cycle that could be very unkind to the server.  Instead,\n  // use the backoff system to delay and backoff the error handling.\n  this.failureCallbackBackoff_.attempt().then(function() {\n    if (this.destroyed_) {\n      return;\n    }\n\n    // First fire an error event.\n    this.playerInterface_.onError(error);\n\n    // If the error was not handled by the application, call the failure\n    // callback.\n    if (!error.handled) {\n      this.config_.failureCallback(error);\n    }\n  }.bind(this));\n};\n\n\n/**\n * @param {shaka.media.StreamingEngine.MediaState_} mediaState\n * @return {string} A log prefix of the form ($CONTENT_TYPE:$STREAM_ID), e.g.,\n *   \"(audio:5)\" or \"(video:hd)\".\n * @private\n */\nshaka.media.StreamingEngine.logPrefix_ = function(mediaState) {\n  return '(' + mediaState.type + ':' + mediaState.stream.id + ')';\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.net.HttpPluginUtils');\n\ngoog.require('shaka.log');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.StringUtils');\n\n\n/**\n * @namespace shaka.net.HttpPluginUtils\n * @summary A set of http networking utility functions.\n * @exportDoc\n */\n\n\n/**\n * @param {!Object.<string,string>} headers\n * @param {?ArrayBuffer} data\n * @param {number} status\n * @param {string} uri\n * @param {string} responseURL\n * @param {shaka.net.NetworkingEngine.RequestType} requestType\n * @return {!shaka.extern.Response}\n */\nshaka.net.HttpPluginUtils.makeResponse =\n    function(headers, data, status, uri, responseURL, requestType) {\n  if (status >= 200 && status <= 299 && status != 202) {\n    // Most 2xx HTTP codes are success cases.\n    if (responseURL) {\n      uri = responseURL;\n    }\n    /** @type {shaka.extern.Response} */\n    let response = {\n      uri: uri,\n      data: data,\n      headers: headers,\n      fromCache: !!headers['x-shaka-from-cache'],\n    };\n    return response;\n  } else {\n    let responseText = null;\n    try {\n      responseText = shaka.util.StringUtils.fromBytesAutoDetect(data);\n    } catch (exception) {}\n    shaka.log.debug('HTTP error text:', responseText);\n\n    let severity = status == 401 || status == 403 ?\n        shaka.util.Error.Severity.CRITICAL :\n        shaka.util.Error.Severity.RECOVERABLE;\n    throw new shaka.util.Error(\n        severity,\n        shaka.util.Error.Category.NETWORK,\n        shaka.util.Error.Code.BAD_HTTP_STATUS,\n        uri,\n        status,\n        responseText,\n        headers,\n        requestType);\n  }\n};\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.net.HttpFetchPlugin');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.net.HttpPluginUtils');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.util.AbortableOperation');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.MapUtils');\n\n\n/**\n * @namespace\n * @summary A networking plugin to handle http and https URIs via the Fetch API.\n * @param {string} uri\n * @param {shaka.extern.Request} request\n * @param {shaka.net.NetworkingEngine.RequestType} requestType\n * @param {function(number, number)=} progressUpdated Called when a progress\n *        event happened.\n * @return {!shaka.extern.IAbortableOperation.<shaka.extern.Response>}\n * @export\n */\nshaka.net.HttpFetchPlugin = function(\n    uri, request, requestType, progressUpdated) {\n  const headers = new shaka.net.HttpFetchPlugin.Headers_();\n  shaka.util.MapUtils.asMap(request.headers).forEach((value, key) => {\n    headers.append(key, value);\n  });\n\n  const controller = new shaka.net.HttpFetchPlugin.AbortController_();\n\n  /** @type {!RequestInit} */\n  const init = {\n    // Edge does not treat null as undefined for body; https://bit.ly/2luyE6x\n    body: request.body || undefined,\n    headers: headers,\n    method: request.method,\n    signal: controller.signal,\n    credentials: request.allowCrossSiteCredentials ? 'include' : undefined,\n  };\n\n  /** @type {shaka.net.HttpFetchPlugin.AbortStatus} */\n  const abortStatus = {\n    canceled: false,\n    timedOut: false,\n  };\n\n  // The fetch API does not timeout natively, so do a timeout manually using the\n  // AbortController.\n  let timeout;\n  if (request.retryParameters.timeout) {\n    let onTimeout = function() {\n      abortStatus.timedOut = true;\n      controller.abort();\n    };\n    timeout = setTimeout(onTimeout, request.retryParameters.timeout);\n  }\n\n  const promise = shaka.net.HttpFetchPlugin.request_(uri, requestType, init,\n      abortStatus, timeout, progressUpdated);\n\n  return new shaka.util.AbortableOperation(\n    promise,\n    () => {\n      abortStatus.canceled = true;\n      controller.abort();\n      return Promise.resolve();\n    });\n};\n\n/**\n * @param {string} uri\n * @param {shaka.net.NetworkingEngine.RequestType} requestType\n * @param {!RequestInit} init\n * @param {shaka.net.HttpFetchPlugin.AbortStatus} abortStatus\n * @param {number|undefined} timeoutId\n * @param {function(number, number)=} progressUpdated\n * @return {!Promise<!shaka.extern.Response>}\n * @private\n */\nshaka.net.HttpFetchPlugin.request_ = async function(uri, requestType, init,\n    abortStatus, timeoutId, progressUpdated) {\n  const fetch = shaka.net.HttpFetchPlugin.fetch_;\n  const ReadableStream = shaka.net.HttpFetchPlugin.ReadableStream_;\n  let response;\n  let arrayBuffer;\n  let loaded = 0;\n  let lastLoaded = 0;\n\n  // Last time stamp when we got a progress event.\n  let lastTime = Date.now();\n\n  try {\n    // The promise returned by fetch resolves as soon as the HTTP response\n    // headers are available. The download itself isn't done until the promise\n    // for retrieving the data (arrayBuffer, blob, etc) has resolved.\n    response = await fetch(uri, init);\n    // Getting the reader in this way allows us to observe the process of\n    // downloading the body, instead of just waiting for an opaque promise to\n    // resolve.\n    // We first clone the response because calling getReader locks the body\n    // stream; if we didn't clone it here, we would be unable to get the\n    // response's arrayBuffer later.\n    const reader = response.clone().body.getReader();\n    let start = (controller) => {\n      let push = async () => {\n        const readObj = await reader.read();\n\n        if (!readObj.done) {\n          loaded += readObj.value.byteLength;\n        }\n\n        let currentTime = Date.now();\n        // If the time between last time and this time we got progress event\n        // is long enough, or if a whole segment is downloaded, call\n        // progressUpdated().\n        if (currentTime - lastTime > 100 || readObj.done) {\n          progressUpdated(currentTime - lastTime, loaded - lastLoaded);\n          lastLoaded = loaded;\n          lastTime = currentTime;\n        }\n\n        if (readObj.done) {\n          goog.asserts.assert(!readObj.value,\n                              'readObj should be unset when \"done\" is true.');\n          controller.close();\n        } else {\n          controller.enqueue(readObj.value);\n          push();\n        }\n      };\n      push();\n    };\n    // Create a ReadableStream to use the reader. We don't need to use the\n    // actual stream for anything, though, as we are using the response's\n    // arrayBuffer method to get the body, so we don't store the ReadableStream.\n    new ReadableStream({start}); // eslint-disable-line no-new\n    arrayBuffer = await response.arrayBuffer();\n  } catch (error) {\n    if (abortStatus.canceled) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.RECOVERABLE,\n          shaka.util.Error.Category.NETWORK,\n          shaka.util.Error.Code.OPERATION_ABORTED,\n          uri, requestType);\n    } else if (abortStatus.timedOut) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.RECOVERABLE,\n          shaka.util.Error.Category.NETWORK,\n          shaka.util.Error.Code.TIMEOUT,\n          uri, requestType);\n    } else {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.RECOVERABLE,\n          shaka.util.Error.Category.NETWORK,\n          shaka.util.Error.Code.HTTP_ERROR,\n          uri, error, requestType);\n    }\n  } finally {\n    clearTimeout(timeoutId);\n  }\n\n  const headers = {};\n  /** @type {Headers} */\n  const responseHeaders = response.headers;\n  responseHeaders.forEach(function(value, key) {\n    // Since IE/Edge incorrectly return the header with a leading new line\n    // character ('\\n'), we trim the header here.\n    headers[key.trim()] = value;\n  });\n\n  return shaka.net.HttpPluginUtils.makeResponse(headers,\n      arrayBuffer, response.status, uri, response.url, requestType);\n};\n\n/**\n * @typedef {{\n *   canceled: boolean,\n *   timedOut: boolean\n * }}\n * @property {boolean} canceled\n *   Indicates if the request was canceled.\n * @property {boolean} timedOut\n *   Indicates if the request timed out.\n */\nshaka.net.HttpFetchPlugin.AbortStatus;\n\n\n/**\n * Determine if the Fetch API is supported in the browser. Note: this is\n * deliberately exposed as a method to allow the client app to use the same\n * logic as Shaka when determining support.\n * @return {boolean}\n * @export\n */\nshaka.net.HttpFetchPlugin.isSupported = function() {\n  // On Edge, ReadableStream exists, but attempting to construct it results in\n  // an error. See https://bit.ly/2zwaFLL\n  // So this has to check that ReadableStream is present AND usable.\n  if (window.ReadableStream) {\n    try {\n      new ReadableStream({}); // eslint-disable-line no-new\n    } catch (e) {\n      return false;\n    }\n  } else {\n    return false;\n  }\n  return !!(window.fetch && window.AbortController);\n};\n\n\n/**\n * Overridden in unit tests, but compiled out in production.\n *\n * @const {function(string, !RequestInit)}\n * @private\n */\nshaka.net.HttpFetchPlugin.fetch_ = window.fetch;\n\n\n/**\n * Overridden in unit tests, but compiled out in production.\n *\n * @const {function(new: AbortController)}\n * @private\n */\nshaka.net.HttpFetchPlugin.AbortController_ = window.AbortController;\n\n\n/**\n * Overridden in unit tests, but compiled out in production.\n *\n * @const {function(new: ReadableStream, !Object)}\n * @private\n */\nshaka.net.HttpFetchPlugin.ReadableStream_ = window.ReadableStream;\n\n\n/**\n * Overridden in unit tests, but compiled out in production.\n *\n * @const {function(new: Headers)}\n * @private\n */\nshaka.net.HttpFetchPlugin.Headers_ = window.Headers;\n\n\nif (shaka.net.HttpFetchPlugin.isSupported()) {\n  shaka.net.NetworkingEngine.registerScheme('http', shaka.net.HttpFetchPlugin,\n      shaka.net.NetworkingEngine.PluginPriority.PREFERRED);\n  shaka.net.NetworkingEngine.registerScheme('https', shaka.net.HttpFetchPlugin,\n      shaka.net.NetworkingEngine.PluginPriority.PREFERRED);\n}\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.net.HttpXHRPlugin');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.net.HttpPluginUtils');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.util.AbortableOperation');\ngoog.require('shaka.util.Error');\n\n\n/**\n * @namespace\n * @summary A networking plugin to handle http and https URIs via XHR.\n * @param {string} uri\n * @param {shaka.extern.Request} request\n * @param {shaka.net.NetworkingEngine.RequestType} requestType\n * @param {function(number, number)=} progressUpdated Called when a progress\n *        event happened.\n * @return {!shaka.extern.IAbortableOperation.<shaka.extern.Response>}\n * @export\n */\nshaka.net.HttpXHRPlugin = function(uri, request, requestType, progressUpdated) {\n  let xhr = new shaka.net.HttpXHRPlugin.Xhr_();\n\n  // Last time stamp when we got a progress event.\n  let lastTime = Date.now();\n  // Last number of bytes loaded, from progress event.\n  let lastLoaded = 0;\n\n  let promise = new Promise(function(resolve, reject) {\n    xhr.open(request.method, uri, true);\n    xhr.responseType = 'arraybuffer';\n    xhr.timeout = request.retryParameters.timeout;\n    xhr.withCredentials = request.allowCrossSiteCredentials;\n\n    xhr.onabort = function() {\n      reject(new shaka.util.Error(\n          shaka.util.Error.Severity.RECOVERABLE,\n          shaka.util.Error.Category.NETWORK,\n          shaka.util.Error.Code.OPERATION_ABORTED,\n          uri, requestType));\n    };\n    xhr.onload = function(event) {\n      let target = event.target;\n      goog.asserts.assert(target, 'XHR onload has no target!');\n      // Since IE and Edge incorrectly return the header with a leading new line\n      // character ('\\n'), we trim the header here.\n      const headerLines = target.getAllResponseHeaders().trim().split('\\r\\n');\n      const headers = {};\n      for (const header of headerLines) {\n        /** @type {!Array.<string>} */\n        const parts = header.split(': ');\n        headers[parts[0].toLowerCase()] = parts.slice(1).join(': ');\n      }\n\n      try {\n        let response = shaka.net.HttpPluginUtils.makeResponse(headers,\n          target.response, target.status, uri, target.responseURL,\n          requestType);\n        resolve(response);\n      } catch (error) {\n        goog.asserts.assert(error instanceof shaka.util.Error,\n            'Wrong error type!');\n        reject(error);\n      }\n    };\n    xhr.onerror = function(event) {\n      reject(new shaka.util.Error(\n          shaka.util.Error.Severity.RECOVERABLE,\n          shaka.util.Error.Category.NETWORK,\n          shaka.util.Error.Code.HTTP_ERROR,\n          uri, event, requestType));\n    };\n    xhr.ontimeout = function(event) {\n      reject(new shaka.util.Error(\n          shaka.util.Error.Severity.RECOVERABLE,\n          shaka.util.Error.Category.NETWORK,\n          shaka.util.Error.Code.TIMEOUT,\n          uri, requestType));\n    };\n    xhr.onprogress = function(event) {\n      let currentTime = Date.now();\n      // If the time between last time and this time we got progress event\n      // is long enough, or if a whole segment is downloaded, call\n      // progressUpdated().\n      if (currentTime - lastTime > 100 ||\n          (event.lengthComputable && event.loaded == event.total)) {\n        progressUpdated(currentTime - lastTime, event.loaded - lastLoaded);\n        lastLoaded = event.loaded;\n        lastTime = currentTime;\n      }\n    };\n\n    for (let key in request.headers) {\n      // The Fetch API automatically normalizes outgoing header keys to\n      // lowercase. For consistency's sake, do it here too.\n      let lowercasedKey = key.toLowerCase();\n      xhr.setRequestHeader(lowercasedKey, request.headers[key]);\n    }\n    xhr.send(request.body);\n  });\n\n  return new shaka.util.AbortableOperation(\n    promise,\n    () => {\n      xhr.abort();\n      return Promise.resolve();\n    });\n};\n\n\n/**\n * Overridden in unit tests, but compiled out in production.\n *\n * @const {function(new: XMLHttpRequest)}\n * @private\n */\nshaka.net.HttpXHRPlugin.Xhr_ = window.XMLHttpRequest;\n\n\nshaka.net.NetworkingEngine.registerScheme('http', shaka.net.HttpXHRPlugin,\n    shaka.net.NetworkingEngine.PluginPriority.FALLBACK);\nshaka.net.NetworkingEngine.registerScheme('https', shaka.net.HttpXHRPlugin,\n    shaka.net.NetworkingEngine.PluginPriority.FALLBACK);\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.DownloadManager');\n\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.IDestroyable');\n\n/**\n * @typedef {{\n *   request: shaka.extern.Request,\n *   estimatedByteLength: number,\n *   onDownloaded: function(!ArrayBuffer):!Promise\n * }}\n *\n * @property {shaka.extern.Request}\n *   The network request that will give us the bytes we want to download.\n * @property {number} estimatedByteLength\n *   The size of the segment as estimated by the bandwidth and segment duration.\n * @property {function(!ArrayBuffer):!Promise} onDownloaded\n *   A callback for when a request has been downloaded and can be used by\n *   the caller. Callback should return a promise so that downloading will\n *   not continue until we are done with the current response.\n */\nshaka.offline.DownloadRequest;\n\n\n/**\n * This manages downloading segments.\n *\n * @param {function(number, number)} onProgress\n *\n * @constructor\n * @implements {shaka.util.IDestroyable}\n */\nshaka.offline.DownloadManager = function(onProgress) {\n  /**\n   * We sill store download requests in groups. The groups will be downloaded in\n   * parallel but the segments in each group will be done serially.\n   *\n   * @private {!Map.<number, !Array.<shaka.offline.DownloadRequest>>}\n   */\n  this.groups_ = new Map();\n\n  /** @private {!Promise} */\n  this.promise_ = Promise.resolve();\n\n  /** @private {boolean} */\n  this.destroyed_ = false;\n\n  /**\n   * Callback for after a segment has been downloaded. The first parameter\n   * will be the progress of the download. It will be a number between 0.0\n   * (0% complete) and 1.0 (100% complete). The second parameter will be the\n   * the total number of bytes that have been downloaded.\n   *\n   * @private {function(number, number)}\n   */\n  this.onProgress_ = onProgress;\n\n  /**\n   * When a segment is downloaded, the estimated size of that segment will be\n   * added to this value. It will allow us to track how much progress we have\n   * made in downloading all segments.\n   *\n   * @private {number}\n   */\n  this.downloadedEstimatedBytes_ = 0;\n\n  /**\n   * When we queue a segment to be downloaded, the estimated size of that\n   * segment will be added to this value. This will allow us to estimate\n   * how many bytes of content we plan to download.\n   *\n   * @private {number}\n   */\n  this.expectedEstimatedBytes_ = 0;\n\n  /**\n   * When a segment is downloaded, the actual size of the segment will be added\n   * to this value so that we know exactly how many bytes we have downloaded.\n   *\n   * @private {number}\n   */\n  this.downloadedBytes_ = 0;\n};\n\n\n/** @override */\nshaka.offline.DownloadManager.prototype.destroy = function() {\n  this.destroyed_ = true;\n\n  const noop = () => {};\n  let wait = this.promise_.catch(noop);\n\n  this.promise_ = Promise.resolve();\n  this.requests_ = [];\n\n  return wait;\n};\n\n\n/**\n * Add a request to be downloaded as part of a group.\n *\n * @param {number} group The group to add this segment to. If the group does\n *                       not exists, a new group will be created.\n * @param {shaka.extern.Request} request\n * @param {number} estimatedByteLength\n * @param {function(!ArrayBuffer):!Promise} onDownloaded\n *   A callback for when a request has been downloaded and can be used by\n *   the caller. Callback should return a promise so that downloading will\n *   not continue until we are done with the current response.\n */\nshaka.offline.DownloadManager.prototype.queue = function(\n    group, request, estimatedByteLength, onDownloaded) {\n  const queue = this.groups_.get(group) || [];\n  queue.push({\n    request: request,\n    estimatedByteLength: estimatedByteLength,\n    onDownloaded: onDownloaded,\n  });\n  this.groups_.set(group, queue);\n};\n\n\n/**\n * @param {!shaka.net.NetworkingEngine} net\n * @return {!Promise}\n */\nshaka.offline.DownloadManager.prototype.download = function(net) {\n  const groups = Array.from(this.groups_.values());\n  this.groups_.clear();\n\n  // Create the full estimate first.\n  for (const group of groups) {\n    for (const segment of group) {\n      this.expectedEstimatedBytes_ += segment.estimatedByteLength;\n    }\n  }\n\n  /** @type {!Promise} */\n  const p = Promise.all(groups.map((group) => this.downloadGroup_(net, group)));\n\n  // Amend our new promise chain to our internal promise so that when we destroy\n  // the download manger we will wait for all the downloads to stop.\n  this.promise_ = this.promise_.then(() => p);\n\n  return p;\n};\n\n\n/**\n * @param {!shaka.net.NetworkingEngine} net\n * @param {!Array.<shaka.offline.DownloadRequest>} group\n * @return {!Promise}\n * @private\n */\nshaka.offline.DownloadManager.prototype.downloadGroup_ = function(net, group) {\n  let p = Promise.resolve();\n\n  group.forEach((segment) => {\n    p = p.then(() => {\n      this.checkDestroyed_();\n      return this.downloadSegment_(net, segment);\n    });\n  });\n\n  return p;\n};\n\n\n/**\n * @param {!shaka.net.NetworkingEngine} net\n * @param {shaka.offline.DownloadRequest} segment\n * @return {!Promise}\n * @private\n */\nshaka.offline.DownloadManager.prototype.downloadSegment_ = function(\n    net, segment) {\n  return Promise.resolve().then(() => {\n    this.checkDestroyed_();\n\n    let type = shaka.net.NetworkingEngine.RequestType.SEGMENT;\n    return net.request(type, segment.request).promise;\n  }).then((response) => {\n    this.checkDestroyed_();\n\n    // Update all our internal stats.\n    this.downloadedEstimatedBytes_ += segment.estimatedByteLength;\n    this.downloadedBytes_ += response.data.byteLength;\n\n    let progress =\n        this.expectedEstimatedBytes_ ?\n        this.downloadedEstimatedBytes_ / this.expectedEstimatedBytes_ :\n        0;\n\n    this.onProgress_(progress, this.downloadedBytes_);\n\n    return segment.onDownloaded(response.data);\n  });\n};\n\n\n/**\n * Check if the download manager has been destroyed. If so, throw an error to\n * kill the promise chain.\n * @private\n */\nshaka.offline.DownloadManager.prototype.checkDestroyed_ = function() {\n  if (this.destroyed_) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STORAGE,\n        shaka.util.Error.Code.OPERATION_ABORTED);\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.indexeddb.DBOperation');\n\n\ngoog.require('shaka.util.PublicPromise');\n\n\n/**\n * A DBOperation wraps an IndexedDB transaction in a promise.\n */\nshaka.offline.indexeddb.DBOperation = class {\n  /**\n   * @param {IDBTransaction} transaction\n   * @param {string} storeName\n   */\n  constructor(transaction, storeName) {\n    /** @private {IDBTransaction} */\n    this.transaction_ = transaction;\n    /** @private {IDBObjectStore} */\n    this.store_ = transaction.objectStore(storeName);\n    /** @private {!shaka.util.PublicPromise} */\n    this.promise_ = new shaka.util.PublicPromise();\n\n    // Connect the transaction and the promise together.\n    // |event.preventDefault()| is used on all non-successful callbacks to\n    // prevent Firefox from surfacing the error on the main thread.\n    transaction.onabort = (event) => {\n      event.preventDefault();\n      this.promise_.reject();\n    };\n    transaction.onerror = (event) => {\n      event.preventDefault();\n      this.promise_.reject();\n    };\n    transaction.oncomplete = (event) => {\n      this.promise_.resolve();\n    };\n  }\n\n  /**\n   * @return {!Promise}\n   */\n  abort() {\n    try {\n      this.transaction_.abort();\n    } catch (e) {\n      // Ignore any exceptions that may be thrown as a result of aborting\n      // the transaction.\n    }\n\n    // Wait for the promise to be rejected, but ignore the rejection error.\n    return this.promise_.catch(() => {});\n  }\n\n  /**\n   * Calls the given callback for each entry in the database.  The callback\n   * must be synchronous, but this operation happens asynchronously.\n   *\n   * @param {function(number, T, !IDBCursorWithValue=)} callback\n   * @return {!Promise}\n   * @template T\n   */\n  forEachEntry(callback) {\n    return new Promise((resolve, reject) => {\n      const req = this.store_.openCursor();\n      req.onerror = reject;\n      req.onsuccess = (event) => {\n        // When we reach the end of the data that the cursor is iterating\n        // over, |event.target.result| will be null to signal the end of the\n        // iteration.\n        // https://developer.mozilla.org/en-US/docs/Web/API/IDBCursor/continue\n        const cursor = event.target.result;\n        if (!cursor) {\n          return resolve();\n        }\n\n        callback(cursor.key, cursor.value, cursor);\n        cursor.continue();\n      };\n    });\n  }\n\n  /**\n   * Get the store that the operation can interact with. Requests can be made\n   * on the store. All requests made on the store will complete successfully\n   * before the operation's promise will resolve. If any request fails, the\n   * operation's promise will be rejected.\n   *\n   * @return {IDBObjectStore}\n   */\n  store() { return this.store_; }\n\n  /**\n   * Get the promise that wraps the transaction. This promise will resolve when\n   * all requests on the object store complete successfully and the transaction\n   * completes. If any request fails or the operation is aborted, the promise\n   * will be rejected.\n   *\n   * @return {!Promise}\n   */\n  promise() { return this.promise_; }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.indexeddb.DBConnection');\n\ngoog.require('shaka.offline.indexeddb.DBOperation');\ngoog.require('shaka.util.ArrayUtils');\n\n\n/**\n * DBConnection is used to manage an IndexedDB connection. It can create new\n * operations. If the connection is killed (via |destroy|) all pending\n * operations will be cancelled.\n */\nshaka.offline.indexeddb.DBConnection = class {\n  /**\n   * @param {IDBDatabase} connection A connection to an IndexedDB instance.\n   */\n  constructor(connection) {\n    /** @private {IDBDatabase} */\n    this.connection_ = connection;\n    /** @private {!Array.<shaka.offline.indexeddb.DBOperation>} */\n    this.pending_ = [];\n  }\n\n  /**\n   * @return {!Promise}\n   */\n  destroy() {\n    return Promise.all(this.pending_.map((op) => {\n      return op.abort();\n    }));\n  }\n\n  /**\n   * @param {string} store The name of the store that the operation should\n   *                       occur on.\n   * @return {!shaka.offline.indexeddb.DBOperation}\n   */\n  startReadOnlyOperation(store) {\n    return this.startOperation_(store, 'readonly');\n  }\n\n  /**\n   * @param {string} store The name of the store that the operation should\n   *                       occur on.\n   * @return {!shaka.offline.indexeddb.DBOperation}\n   */\n  startReadWriteOperation(store) {\n    return this.startOperation_(store, 'readwrite');\n  }\n\n  /**\n   * @param {string} store The name of the store that the operation should\n   *                       occur on.\n   * @param {string} type The type of operation being performed on the store.\n   *                      This determines what commands may be performed. This\n   *                      can either be \"readonly\" or \"readwrite\".\n   * @return {!shaka.offline.indexeddb.DBOperation}\n   * @private\n   */\n  startOperation_(store, type) {\n    let transaction = this.connection_.transaction([store], type);\n    let operation = new shaka.offline.indexeddb.DBOperation(transaction, store);\n\n    this.pending_.push(operation);\n\n    // Once the operation is done (regardless of outcome) stop tracking it.\n    operation.promise().then(\n        () => this.stopTracking_(operation),\n        () => this.stopTracking_(operation)\n    );\n\n    return operation;\n  }\n\n  /**\n   * @param {!shaka.offline.indexeddb.DBOperation} operation\n   * @private\n   */\n  stopTracking_(operation) {\n    shaka.util.ArrayUtils.remove(this.pending_, operation);\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.indexeddb.EmeSessionStorageCell');\n\ngoog.require('shaka.offline.indexeddb.DBConnection');\n\n\n/**\n * The implementation of the EME session storage cell.\n *\n * @implements {shaka.extern.EmeSessionStorageCell}\n */\nshaka.offline.indexeddb.EmeSessionStorageCell = class {\n  /**\n   * @param {IDBDatabase} connection\n   * @param {string} store\n   */\n  constructor(connection, store) {\n    /** @private {!shaka.offline.indexeddb.DBConnection} */\n    this.connection_ = new shaka.offline.indexeddb.DBConnection(connection);\n\n    /** @private {string} */\n    this.store_ = store;\n  }\n\n  /** @override */\n  destroy() { return this.connection_.destroy(); }\n\n  /** @override */\n  async getAll() {\n    /** @type {!shaka.offline.indexeddb.DBOperation} */\n    const op = this.connection_.startReadOnlyOperation(this.store_);\n    /** @type {!Array.<shaka.extern.EmeSessionDB>} */\n    const values = [];\n\n    await op.forEachEntry((key, value) => {\n      values.push(value);\n    });\n\n    await op.promise();\n    return values;\n  }\n\n  /** @override */\n  add(sessions) {\n    const op = this.connection_.startReadWriteOperation(this.store_);\n    const store = op.store();\n\n    for (const session of sessions) {\n      store.add(session);\n    }\n\n    return op.promise();\n  }\n\n  /** @override */\n  async remove(sessionIds) {\n    /** @type {!shaka.offline.indexeddb.DBOperation} */\n    const op = this.connection_.startReadWriteOperation(this.store_);\n\n    await op.forEachEntry((key, value, cursor) => {\n      if (sessionIds.indexOf(value.sessionId) >= 0) {\n        cursor.delete();\n      }\n    });\n\n    await op.promise();\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.StorageCellHandle');\ngoog.provide('shaka.offline.StorageCellPath');\ngoog.provide('shaka.offline.StorageMuxer');\n\ngoog.require('shaka.log');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.IDestroyable');\n\n/**\n * @typedef {{\n *  mechanism: string,\n *  cell: string\n * }}\n *\n * @property {string} mechanism\n *  The name of the mechanism that holds the cell.\n * @property {string} cell\n *  The name of the cell in the mechanism.\n */\nshaka.offline.StorageCellPath;\n\n\n/**\n * @typedef {{\n *   path: shaka.offline.StorageCellPath,\n *   cell: !shaka.extern.StorageCell\n * }}\n *\n * @property {shaka.offline.StorageCellPath} path\n *   The path that maps to the cell.\n * @property {shaka.extern.StorageCell} cell\n *   The storage cell that the path points to within the storage muxer.\n */\nshaka.offline.StorageCellHandle;\n\n\n/**\n * StorageMuxer is responsible for managing StorageMechanisms and addressing\n * cells. The primary purpose of the muxer is to give the caller the correct\n * cell for the operations they want to perform.\n *\n * |findActive| will be used when the caller wants a cell that supports\n * add-operations. This will be used when saving new content to storage.\n *\n * |findAll| will be used when the caller want to look at all the content\n * in storage.\n *\n * |resolvePath| will be used to convert a path (from |findActive| and\n * |findAll|) into a cell, which it then returns.\n *\n * @implements {shaka.util.IDestroyable}\n */\nshaka.offline.StorageMuxer = class {\n  constructor() {\n    /**\n     * A key in this map is the name given when registering a StorageMechanism.\n     *\n     * @private {!Map.<string, !shaka.extern.StorageMechanism>}\n     */\n    this.mechanisms_ = new Map();\n  }\n\n  /**\n   * Free all resources used by the muxer, mechanisms, and cells. This should\n   * not affect the stored content.\n   *\n   * @override\n   */\n  destroy() {\n    /** @type {!Array.<!Promise>} */\n    const destroys = [];\n    for (const mechanism of this.mechanisms_.values()) {\n      destroys.push(mechanism.destroy());\n    }\n\n    // Empty the map so that subsequent calls will be no-ops.\n    this.mechanisms_.clear();\n\n    return Promise.all(destroys);\n  }\n\n  /**\n   * Initialize the storage muxer. This must be called before any other calls.\n   * This will initialize the muxer to use all mechanisms that have been\n   * registered with |StorageMuxer.register|.\n   *\n   * @return {!Promise}\n   */\n  init() {\n    // Add the new instance of each mechanism to the muxer.\n    const registry = shaka.offline.StorageMuxer.getRegistry_();\n    registry.forEach((factory, name) => {\n      const mech = factory();\n      if (mech) {\n        this.mechanisms_.set(name, mech);\n      } else {\n        shaka.log.info(\n            'Skipping ' + name + ' as it is not supported on this platform');\n      }\n    });\n\n    /** @type {!Array.<!Promise>} */\n    const initPromises = [];\n    for (const mechanism of this.mechanisms_.values()) {\n      initPromises.push(mechanism.init());\n    }\n\n    return Promise.all(initPromises);\n  }\n\n  /**\n   * Get a promise that will resolve with a storage cell that supports\n   * add-operations. If no cell can be found, the promise will be rejected.\n   *\n   * @return {shaka.offline.StorageCellHandle}\n   */\n  getActive() {\n    /** @type {?shaka.offline.StorageCellHandle} */\n    let handle = null;\n\n    this.mechanisms_.forEach((mechanism, mechanismName) => {\n      mechanism.getCells().forEach((cell, cellName) => {\n        // If this cell is not useful to us or we already have a handle, then\n        // we don't need to make a new handle.\n        if (cell.hasFixedKeySpace() || handle) { return; }\n\n        const path = {\n          mechanism: mechanismName,\n          cell: cellName,\n        };\n\n        handle = {\n          path: path,\n          cell: cell,\n        };\n      });\n    });\n\n    if (handle) {\n      return /** @type {shaka.offline.StorageCellHandle} */(handle);\n    }\n\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STORAGE,\n        shaka.util.Error.Code.MISSING_STORAGE_CELL,\n        'Could not find a cell that supports add-operations');\n  }\n\n  /**\n   * @param {function(!shaka.offline.StorageCellPath,\n   *                  !shaka.extern.StorageCell)} callback\n   */\n  forEachCell(callback) {\n    this.mechanisms_.forEach((mechanism, mechanismName) => {\n      mechanism.getCells().forEach((cell, cellName) => {\n        const path = {\n          mechanism: mechanismName,\n          cell: cellName,\n        };\n\n        callback(path, cell);\n      });\n    });\n  }\n\n  /**\n   * Get a specific storage cell. The promise will resolve with the storage\n   * cell if it is found. If the storage cell is not found, the promise will\n   * be rejected.\n   *\n   * @param {string} mechanismName\n   * @param {string} cellName\n   * @return {!shaka.extern.StorageCell}\n   */\n  getCell(mechanismName, cellName) {\n    const mechanism = this.mechanisms_.get(mechanismName);\n    if (!mechanism) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.STORAGE,\n          shaka.util.Error.Code.MISSING_STORAGE_CELL,\n          'Could not find mechanism with name ' + mechanismName);\n    }\n\n    const cell = mechanism.getCells().get(cellName);\n    if (!cell) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.STORAGE,\n          shaka.util.Error.Code.MISSING_STORAGE_CELL,\n          'Could not find cell with name ' + cellName);\n    }\n\n    return cell;\n  }\n\n  /**\n   * @param {function(!shaka.extern.EmeSessionStorageCell)} callback\n   */\n  forEachEmeSessionCell(callback) {\n    this.mechanisms_.forEach((mechanism) => {\n      callback(mechanism.getEmeSessionCell());\n    });\n  }\n\n  /**\n   * Gets an arbitrary EME session cell that can be used for storing new session\n   * info.\n   *\n   * @return {!shaka.extern.EmeSessionStorageCell}\n   */\n  getEmeSessionCell() {\n    const mechanisms = Array.from(this.mechanisms_.keys());\n    if (!mechanisms.length) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.STORAGE,\n          shaka.util.Error.Code.STORAGE_NOT_SUPPORTED,\n          'No supported storage mechanisms found');\n    }\n\n    return this.mechanisms_.get(mechanisms[0]).getEmeSessionCell();\n  }\n\n  /**\n   * Find the cell that the path points to. A path is made up of a mount point\n   * and a cell id. If a cell can be found, the cell will be returned. If no\n   * cell is found, null will be returned.\n   *\n   * @param {shaka.offline.StorageCellPath} path\n   * @return {shaka.extern.StorageCell}\n   */\n  resolvePath(path) {\n    const mechanism = this.mechanisms_.get(path.mechanism);\n\n    if (!mechanism) { return null; }\n\n    return mechanism.getCells().get(path.cell);\n  }\n\n  /**\n   * This will erase all previous content from storage. Using paths obtained\n   * before calling |erase| is discouraged, as cells may have changed during a\n   * erase.\n   *\n   * @return {!Promise}\n   */\n  async erase() {\n    // If we have initialized, we will use the existing mechanism instances.\n    /** @type {!Array.<!shaka.extern.StorageMechanism>} */\n    const mechanisms = Array.from(this.mechanisms_.values());\n    const alreadyInitialized = mechanisms.length > 0;\n\n    // If we have not initialized, we should still be able to erase.  This is\n    // critical to our ability to wipe the DB in case of a version mismatch.\n    // If there are no instances, create temporary ones and destroy them later.\n    if (!alreadyInitialized) {\n      const registry = shaka.offline.StorageMuxer.getRegistry_();\n      registry.forEach((factory, name) => {\n        const mech = factory();\n        if (mech) {\n          mechanisms.push(mech);\n        }\n      });\n    }\n\n    // Erase all storage mechanisms.\n    await Promise.all(mechanisms.map((m) => m.erase()));\n\n    // If we were erasing temporary instances, destroy them, too.\n    if (!alreadyInitialized) {\n      await Promise.all(mechanisms.map((m) => m.destroy()));\n    }\n  }\n\n  /**\n   * Register a storage mechanism for use with the default storage muxer. This\n   * will have no effect on any storage muxer already in main memory.\n   *\n   * @param {string} name\n   * @param {function():shaka.extern.StorageMechanism} factory\n   * @export\n   */\n  static register(name, factory) {\n    shaka.offline.StorageMuxer.registry_.set(name, factory);\n  }\n\n\n  /**\n   * Unregister a storage mechanism for use with the default storage muxer. This\n   * will have no effect on any storage muxer already in main memory.\n   *\n   * @param {string} name The name that the storage mechanism was registered\n   *                      under.\n   * @export\n   */\n  static unregister(name) {\n    shaka.offline.StorageMuxer.registry_.delete(name);\n  }\n\n  /**\n   * Check if there is support for storage on this platform. It is assumed that\n   * if there are any mechanisms registered, it means that storage is supported\n   * on this platform. We do not check if the mechanisms have any cells.\n   *\n   * @return {boolean}\n   */\n  static support() {\n    const registry = shaka.offline.StorageMuxer.getRegistry_();\n    // Make sure that we will have SOME mechanisms created by creating a\n    // mechanism and immediately destroying it.\n    for (const create of registry.values()) {\n      const instance = create();\n\n      if (instance) {\n        instance.destroy();\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Replace the mechanism map used by the muxer. This should only be used\n   * in testing.\n   *\n   * @param {Map.<string, function():shaka.extern.StorageMechanism>} map\n   */\n  static overrideSupport(map) {\n    shaka.offline.StorageMuxer.override_ = map;\n  }\n\n  /**\n   * Undo a previous call to |overrideSupport|.\n   */\n  static clearOverride() {\n    shaka.offline.StorageMuxer.override_ = null;\n  }\n\n  /**\n   * Get the registry. If the support has been disabled, this will always\n   * an empty registry. Reading should always be done via |getRegistry_|.\n   *\n   * @return {!Map.<string, function():shaka.extern.StorageMechanism>}\n   * @private\n   */\n  static getRegistry_() {\n    const override = shaka.offline.StorageMuxer.override_;\n    const registry = shaka.offline.StorageMuxer.registry_;\n\n    if (COMPILED) {\n      return registry;\n    } else {\n      return override || registry;\n    }\n  }\n};\n\n\n/**\n * @private {Map.<string, function():shaka.extern.StorageMechanism>}\n */\nshaka.offline.StorageMuxer.override_ = null;\n\n\n/**\n * @private {!Map.<string, function():shaka.extern.StorageMechanism>}\n */\nshaka.offline.StorageMuxer.registry_ = new Map();\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.indexeddb.V1StorageCell');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.offline.indexeddb.DBConnection');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.PublicPromise');\n\n\n/**\n * The V1StorageCell is for all stores that follow the shaka.externs V2 offline\n * types. This storage cell will only work for version 1 indexed db database\n * schemes.\n *\n * @implements {shaka.extern.StorageCell}\n */\nshaka.offline.indexeddb.V1StorageCell = class {\n  /**\n   * @param {IDBDatabase} connection\n   * @param {string} segmentStore\n   * @param {string} manifestStore\n   */\n  constructor(connection, segmentStore, manifestStore) {\n    /** @private {!shaka.offline.indexeddb.DBConnection} */\n    this.connection_ = new shaka.offline.indexeddb.DBConnection(connection);\n\n    /** @private {string} */\n    this.segmentStore_ = segmentStore;\n    /** @private {string} */\n    this.manifestStore_ = manifestStore;\n  }\n\n  /**\n   * @override\n   */\n  destroy() { return this.connection_.destroy(); }\n\n  /**\n   * @override\n   */\n  hasFixedKeySpace() {\n    // We do not allow adding new values to V1 databases.\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  addSegments(segments) { return this.rejectAdd_(this.segmentStore_); }\n\n  /**\n   * @override\n   */\n  removeSegments(keys, onRemove) {\n    return this.remove_(this.segmentStore_, keys, onRemove);\n  }\n\n  /**\n   * @override\n   */\n  getSegments(keys) {\n    const convertSegmentData =\n        shaka.offline.indexeddb.V1StorageCell.convertSegmentData_;\n\n    return this.get_(this.segmentStore_, keys).then((segments) => {\n      return segments.map(convertSegmentData);\n    });\n  }\n\n  /**\n   * @override\n   */\n  addManifests(manifests) { return this.rejectAdd_(this.manifestStore_); }\n\n  /**\n   * @override\n   */\n  updateManifestExpiration(key, newExpiration) {\n    let op = this.connection_.startReadWriteOperation(this.manifestStore_);\n    let store = op.store();\n\n    let p = new shaka.util.PublicPromise();\n\n    store.get(key).onsuccess = (event) => {\n      // Make sure a defined value was found. Indexeddb treats \"no value found\"\n      // as a success with an undefined result.\n      let manifest = event.target.result;\n\n      // Indexeddb does not fail when you get a value that is not in the\n      // database. It will return an undefined value. However, we expect\n      // the value to never be null, so something is wrong if we get a\n      // falsey value.\n      if (manifest) {\n        // Since this store's scheme uses in-line keys, we don't need to specify\n        // the key with |put|.\n        goog.asserts.assert(\n            manifest.key == key,\n            'With in-line keys, the keys should match');\n\n        manifest.expiration = newExpiration;\n        store.put(manifest);\n\n        p.resolve();\n      } else {\n        p.reject(new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.STORAGE,\n            shaka.util.Error.Code.KEY_NOT_FOUND,\n            'Could not find values for ' + key));\n      }\n    };\n\n    // Only return our promise after the operation completes.\n    return op.promise().then(() => p);\n  }\n\n  /**\n   * @override\n   */\n  removeManifests(keys, onRemove) {\n    return this.remove_(this.manifestStore_, keys, onRemove);\n  }\n\n  /**\n   * @override\n   */\n  getManifests(keys) {\n    const convertManifest =\n        shaka.offline.indexeddb.V1StorageCell.convertManifest_;\n\n    return this.get_(this.manifestStore_, keys).then((manifests) => {\n      return manifests.map(convertManifest);\n    });\n  }\n\n  /**\n   * @override\n   */\n  async getAllManifests() {\n    const convertManifest =\n        shaka.offline.indexeddb.V1StorageCell.convertManifest_;\n\n    /** @type {!shaka.offline.indexeddb.DBOperation} */\n    const op = this.connection_.startReadOnlyOperation(this.manifestStore_);\n    /** @type {!Map.<number, shaka.extern.ManifestDB>} */\n    const values = new Map();\n\n    await op.forEachEntry((/** number */ key, /** !Object */ value) => {\n      values.set(key, convertManifest(value));\n    });\n\n    await op.promise();\n    return values;\n  }\n\n  /**\n   * @param {string} storeName\n   * @return {!Promise}\n   * @private\n   */\n  rejectAdd_(storeName) {\n    return Promise.reject(new shaka.util.Error(\n      shaka.util.Error.Severity.CRITICAL,\n      shaka.util.Error.Category.STORAGE,\n      shaka.util.Error.Code.NEW_KEY_OPERATION_NOT_SUPPORTED,\n      'Cannot add new value to ' + storeName));\n  }\n\n  /**\n   * @param {string} storeName\n   * @param {!Array.<number>} keys\n   * @param {function(number)} onRemove\n   * @return {!Promise}\n   * @private\n   */\n  remove_(storeName, keys, onRemove) {\n    let op = this.connection_.startReadWriteOperation(storeName);\n    let store = op.store();\n\n    keys.forEach((key) => {\n      store.delete(key).onsuccess = () => onRemove(key);\n    });\n\n    return op.promise();\n  }\n\n  /**\n   * @param {string} storeName\n   * @param {!Array.<number>} keys\n   * @return {!Promise.<!Array.<T>>}\n   * @template T\n   * @private\n   */\n  get_(storeName, keys) {\n    let op = this.connection_.startReadOnlyOperation(storeName);\n    let store = op.store();\n\n    let values = {};\n    let missing = [];\n\n    // Use a map to store the objects so that we can reorder the results to\n    // match the order of |keys|.\n    keys.forEach((key) => {\n      store.get(key).onsuccess = (event) => {\n        let value = event.target.result;\n        // Make sure a defined value was found. Indexeddb treats no-value found\n        // as a success with an undefined result.\n        if (value == undefined) {\n          missing.push(key);\n        }\n\n        values[key] = value;\n      };\n    });\n\n    // Wait until the operation completes or else values may be missing from\n    // |values|. Use the original key list to convert the map to a list so that\n    // the order will match.\n    return op.promise().then(() => {\n      if (missing.length) {\n        return Promise.reject(new shaka.util.Error(\n            shaka.util.Error.Severity.CRITICAL,\n            shaka.util.Error.Category.STORAGE,\n            shaka.util.Error.Code.KEY_NOT_FOUND,\n            'Could not find values for ' + missing\n        ));\n      }\n\n      return keys.map((key) => values[key]);\n    });\n  }\n\n  /**\n   * @param {!Object} old\n   * @return {shaka.extern.ManifestDB}\n   * @private\n   */\n  static convertManifest_(old) {\n    // Old Manifest Format:\n    // {\n    //   key: number,\n    //   originalManifestUri: string,\n    //   duration: number,\n    //   size: number,\n    //   expiration: number,\n    //   periods: !Array.<shaka.extern.PeriodDB>,\n    //   sessionIds: !Array.<string>,\n    //   drmInfo: ?shaka.extern.DrmInfo,\n    //   appMetadata: Object\n    //  }\n\n    goog.asserts.assert(\n        old.originalManifestUri != null,\n        'Old manifest format should have an originalManifestUri field');\n    goog.asserts.assert(\n        old.duration != null,\n        'Old manifest format should have a duration field');\n    goog.asserts.assert(\n        old.size != null,\n        'Old manifest format should have a size field');\n    goog.asserts.assert(\n        old.periods != null,\n        'Old manifest format should have a periods field');\n    goog.asserts.assert(\n        old.sessionIds != null,\n        'Old manifest format should have a session ids field');\n    goog.asserts.assert(\n        old.appMetadata != null,\n        'Old manifest format should have an app metadata field');\n\n    const convertPeriod = shaka.offline.indexeddb.V1StorageCell.convertPeriod_;\n\n    return {\n      originalManifestUri: old.originalManifestUri,\n      duration: old.duration,\n      size: old.size,\n      expiration: old.expiration == null ? Infinity : old.expiration,\n      periods: old.periods.map(convertPeriod),\n      sessionIds: old.sessionIds,\n      drmInfo: old.drmInfo,\n      appMetadata: old.appMetadata,\n    };\n  }\n\n  /**\n   * @param {!Object} old\n   * @return {shaka.extern.PeriodDB}\n   * @private\n   */\n  static convertPeriod_(old) {\n    // Old Period Format:\n    // {\n    //   startTime: number,\n    //   streams: !Array.<shaka.extern.StreamDB>\n    // }\n\n    goog.asserts.assert(\n      old.startTime != null,\n      'Old period format should have a start time field');\n    goog.asserts.assert(\n      old.streams != null,\n      'Old period format should have a streams field');\n\n    const convertStream = shaka.offline.indexeddb.V1StorageCell.convertStream_;\n    const fillMissingVariants =\n        shaka.offline.indexeddb.V1StorageCell.fillMissingVariants_;\n\n    // In the case that this is really old (like really old, like dinosaurs\n    // roaming the Earth old) there may be no variants, so we need to add those.\n    fillMissingVariants(old);\n\n    old.streams.forEach((stream) => {\n      const message = 'After filling in missing variants, ' +\n                      'each stream should have variant ids';\n      goog.asserts.assert(stream.variantIds, message);\n    });\n\n    return {\n      startTime: old.startTime,\n      streams: old.streams.map(convertStream),\n    };\n  }\n\n  /**\n   * @param {!Object} old\n   * @return {shaka.extern.StreamDB}\n   * @private\n   */\n  static convertStream_(old) {\n    // Old Stream Format\n    // {\n    //   id: number,\n    //   primary: boolean,\n    //   presentationTimeOffset: number,\n    //   contentType: string,\n    //   mimeType: string,\n    //   codecs: string,\n    //   frameRate: (number|undefined),\n    //   kind: (string|undefined),\n    //   language: string,\n    //   label: ?string,\n    //   width: ?number,\n    //   height: ?number,\n    //   initSegmentUri: ?string,\n    //   encrypted: boolean,\n    //   keyId: ?string,\n    //   segments: !Array.<shaka.extern.SegmentDB>,\n    //   variantIds: ?Array.<number>\n    // }\n\n    goog.asserts.assert(\n        old.id != null,\n        'Old stream format should have an id field');\n    goog.asserts.assert(\n        old.primary != null,\n        'Old stream format should have a primary field');\n    goog.asserts.assert(\n        old.presentationTimeOffset != null,\n        'Old stream format should have a presentation time offset field');\n    goog.asserts.assert(\n        old.contentType != null,\n        'Old stream format should have a content type field');\n    goog.asserts.assert(\n        old.mimeType != null,\n        'Old stream format should have a mime type field');\n    goog.asserts.assert(\n        old.codecs != null,\n        'Old stream format should have a codecs field');\n    goog.asserts.assert(\n        old.language != null,\n        'Old stream format should have a language field');\n    goog.asserts.assert(\n        old.encrypted != null,\n        'Old stream format should have an encrypted field');\n    goog.asserts.assert(\n        old.segments != null,\n        'Old stream format should have a segments field');\n\n\n    const getKeyFromUri =\n        shaka.offline.indexeddb.V1StorageCell.getKeyFromSegmentUri_;\n    const convertSegment =\n        shaka.offline.indexeddb.V1StorageCell.convertSegment_;\n\n    let initSegmentKey = old.initSegmentUri ?\n                      getKeyFromUri(old.initSegmentUri) :\n                      null;\n\n    return {\n      id: old.id,\n      originalId: null,\n      primary: old.primary,\n      presentationTimeOffset: old.presentationTimeOffset,\n      contentType: old.contentType,\n      mimeType: old.mimeType,\n      codecs: old.codecs,\n      frameRate: old.frameRate,\n      kind: old.kind,\n      language: old.language,\n      label: old.label,\n      width: old.width,\n      height: old.height,\n      initSegmentKey: initSegmentKey,\n      encrypted: old.encrypted,\n      keyId: old.keyId,\n      segments: old.segments.map(convertSegment),\n      variantIds: old.variantIds,\n    };\n  }\n\n  /**\n   * @param {!Object} old\n   * @return {shaka.extern.SegmentDB}\n   * @private\n   */\n  static convertSegment_(old) {\n    // Old Segment Format\n    // {\n    //   startTime: number,\n    //   endTime: number,\n    //   uri: string\n    // }\n\n    goog.asserts.assert(\n        old.startTime != null,\n        'The old segment format should have a start time field');\n    goog.asserts.assert(\n        old.endTime != null,\n        'The old segment format should have an end time field');\n    goog.asserts.assert(\n        old.uri != null,\n        'The old segment format should have a uri field');\n\n    const V1StorageCell = shaka.offline.indexeddb.V1StorageCell;\n    const getKeyFromUri = V1StorageCell.getKeyFromSegmentUri_;\n\n    // Since we don't want to use the uri anymore, we need to parse the key\n    // from it.\n    let dataKey = getKeyFromUri(old.uri);\n\n    return {\n      startTime: old.startTime,\n      endTime: old.endTime,\n      dataKey: dataKey,\n    };\n  }\n\n  /**\n   * @param {!Object} old\n   * @return {shaka.extern.SegmentDataDB}\n   * @private\n   */\n  static convertSegmentData_(old) {\n    // Old Segment Format:\n    // {\n    //   key: number,\n    //   data: ArrayBuffer\n    // }\n\n    goog.asserts.assert(\n        old.key != null,\n        'The old segment data format should have a key field');\n    goog.asserts.assert(\n        old.data != null,\n        'The old segment data format should have a data field');\n\n    return {data: old.data};\n  }\n\n  /**\n   * @param {string} uri\n   * @return {number}\n   * @private\n   */\n  static getKeyFromSegmentUri_(uri) {\n    let parts = null;\n\n    // Try parsing the uri as the original Shaka Player 2.0 uri.\n    parts = /^offline:[0-9]+\\/[0-9]+\\/([0-9]+)$/.exec(uri);\n    if (parts) {\n      return Number(parts[1]);\n    }\n\n    // Just before Shaka Player 2.3 the uri format was changed to remove some\n    // of the un-used information from the uri and make the segment uri and\n    // manifest uri follow a similar format. However the old storage system\n    // was still in place, so it is possible for Storage V1 Cells to have\n    // Storage V2 uris.\n    parts = /^offline:segment\\/([0-9]+)$/.exec(uri);\n    if (parts) {\n      return Number(parts[1]);\n    }\n\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STORAGE,\n        shaka.util.Error.Code.MALFORMED_OFFLINE_URI,\n        'Could not parse uri ' + uri);\n  }\n\n  /**\n   * Take a period and check if the streams need to have variants generated.\n   * Before Shaka Player moved to its variants model, there were no variants.\n   * This will fill missing variants into the given object.\n   *\n   * @param {!Object} period\n   * @private\n   */\n  static fillMissingVariants_(period) {\n    const AUDIO = shaka.util.ManifestParserUtils.ContentType.AUDIO;\n    const VIDEO = shaka.util.ManifestParserUtils.ContentType.VIDEO;\n\n    // There are three cases:\n    //  1. All streams' variant ids are null\n    //  2. All streams' variant ids are non-null\n    //  3. Some streams' variant ids are null and other are non-null\n    // Case 3 is invalid and should never happen in production.\n\n    let audio = period.streams.filter((s) => s.contentType == AUDIO);\n    let video = period.streams.filter((s) => s.contentType == VIDEO);\n\n    // Case 2 - There is nothing we need to do, so let's just get out of here.\n    if (audio.every((s) => s.variantIds) && video.every((s) => s.variantIds)) {\n      return;\n    }\n\n    // Case 3... We don't want to be in case three.\n    goog.asserts.assert(\n        audio.every((s) => !s.variantIds),\n        'Some audio streams have variant ids and some do not.');\n    goog.asserts.assert(\n        video.every((s) => !s.variantIds),\n        'Some video streams have variant ids and some do not.');\n\n    // Case 1 - Populate all the variant ids (putting us back to case 2).\n    // Since all the variant ids are null, we need to first make them into\n    // valid arrays.\n    audio.forEach((s) => { s.variantIds = []; });\n    video.forEach((s) => { s.variantIds = []; });\n\n    let nextId = 0;\n\n    // It is not possible in Shaka Player's pre-variant world to have audio-only\n    // and video-only content mixed in with audio-video content. So we can\n    // assume that there is only audio-only or video-only if one group is empty.\n\n    // Everything is video-only content - so each video stream gets to be its\n    // own variant.\n    if (video.length && !audio.length) {\n      shaka.log.debug('Found video-only content. Creating variants for video.');\n      let variantId = nextId++;\n      video.forEach((s) => { s.variantIds.push(variantId); });\n    }\n\n    // Everything is audio-only content - so each audio stream gets to be its\n    // own variant.\n    if (!video.length && audio.length) {\n      shaka.log.debug('Found audio-only content. Creating variants for audio.');\n      let variantId = nextId++;\n      audio.forEach((s) => { s.variantIds.push(variantId); });\n    }\n\n    // Everything is audio-video content.\n    if (video.length && audio.length) {\n      shaka.log.debug('Found audio-video content. Creating variants.');\n      audio.forEach((a) => {\n        video.forEach((v) => {\n          let variantId = nextId++;\n          a.variantIds.push(variantId);\n          v.variantIds.push(variantId);\n        });\n      });\n    }\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.indexeddb.V2StorageCell');\n\ngoog.require('shaka.offline.indexeddb.DBConnection');\ngoog.require('shaka.util.Error');\n\n\n/**\n * The V2StorageCell is for all stores that follow the shaka.externs V2 offline\n * types. This storage cell will work for both IndexedDB version 2 and 3 as\n * both used the shaka.externs V2 offline types.\n *\n * @implements {shaka.extern.StorageCell}\n */\nshaka.offline.indexeddb.V2StorageCell = class {\n  /**\n   * @param {IDBDatabase} connection\n   * @param {string} segmentStore\n   * @param {string} manifestStore\n   * @param {boolean} isFixedKey\n   */\n  constructor(connection,\n              segmentStore,\n              manifestStore,\n              isFixedKey) {\n    /** @private {!shaka.offline.indexeddb.DBConnection} */\n    this.connection_ = new shaka.offline.indexeddb.DBConnection(connection);\n\n    /** @private {string} */\n    this.segmentStore_ = segmentStore;\n    /** @private {string} */\n    this.manifestStore_ = manifestStore;\n\n    /** @private {boolean} */\n    this.isFixedKey_ = isFixedKey;\n  }\n\n  /**\n   * @override\n   */\n  destroy() { return this.connection_.destroy(); }\n\n  /**\n   * @override\n   */\n  hasFixedKeySpace() { return this.isFixedKey_; }\n\n  /**\n   * @override\n   */\n  addSegments(segments) { return this.add_(this.segmentStore_, segments); }\n\n  /**\n   * @override\n   */\n  removeSegments(keys, onRemove) {\n    return this.remove_(this.segmentStore_, keys, onRemove);\n  }\n\n  /**\n   * @override\n   */\n  getSegments(keys) { return this.get_(this.segmentStore_, keys); }\n\n  /**\n   * @override\n   */\n  addManifests(manifests) { return this.add_(this.manifestStore_, manifests); }\n\n  /**\n   * @override\n   */\n  updateManifestExpiration(key, newExpiration) {\n    let op = this.connection_.startReadWriteOperation(this.manifestStore_);\n    let store = op.store();\n    store.get(key).onsuccess = (e) => {\n      let found = e.target.result;\n      // If we can't find the value, then there is nothing for us to update.\n      if (found) {\n        found.expiration = newExpiration;\n        store.put(found, key);\n      }\n    };\n\n    return op.promise();\n  }\n\n  /**\n   * @override\n   */\n  removeManifests(keys, onRemove) {\n    return this.remove_(this.manifestStore_, keys, onRemove);\n  }\n\n  /**\n   * @override\n   */\n  getManifests(keys) { return this.get_(this.manifestStore_, keys); }\n\n  /**\n   * @override\n   */\n  async getAllManifests() {\n    /** @type {!shaka.offline.indexeddb.DBOperation} */\n    const op = this.connection_.startReadOnlyOperation(this.manifestStore_);\n    /** @type {!Map.<number, shaka.extern.ManifestDB>} */\n    const values = new Map();\n\n    await op.forEachEntry(\n        (/** number */ key, /** shaka.extern.ManifestDB */ value) => {\n          values.set(key, value);\n        });\n\n    await op.promise();\n    return values;\n  }\n\n  /**\n   * @param {string} storeName\n   * @param {!Array.<T>} values\n   * @return {!Promise.<!Array.<number>>}\n   * @template T\n   * @private\n   */\n  add_(storeName, values) {\n    // In the case that this storage cell does not support add-operations, just\n    // reject the request immediately instead of allowing it to try.\n    if (this.isFixedKey_) {\n      return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.RECOVERABLE,\n        shaka.util.Error.Category.STORAGE,\n        shaka.util.Error.Code.NEW_KEY_OPERATION_NOT_SUPPORTED,\n        'Cannot add new value to ' + storeName));\n    }\n\n    let op = this.connection_.startReadWriteOperation(storeName);\n    let store = op.store();\n\n    /** @type {!Array.<number>} */\n    let keys = [];\n\n    // Write each segment out. When each request completes, the key will\n    // be in |event.target.result| as can be seen in\n    // https://w3c.github.io/IndexedDB/#key-generator-construct.\n    values.forEach((value) => {\n      let request = store.add(value);\n      request.onsuccess = (event) => {\n        let key = event.target.result;\n        keys.push(key);\n      };\n    });\n\n    // Wait until the operation completes or else |keys| will not be fully\n    // populated.\n    return op.promise().then(() => keys);\n  }\n\n  /**\n   * @param {string} storeName\n   * @param {!Array.<number>} keys\n   * @param {function(number)} onRemove\n   * @return {!Promise}\n   * @private\n   */\n  remove_(storeName, keys, onRemove) {\n    let op = this.connection_.startReadWriteOperation(storeName);\n    let store = op.store();\n\n    keys.forEach((key) => {\n      store.delete(key).onsuccess = () => onRemove(key);\n    });\n\n    return op.promise();\n  }\n\n  /**\n   * @param {string} storeName\n   * @param {!Array.<number>} keys\n   * @return {!Promise.<!Array.<T>>}\n   * @template T\n   * @private\n   */\n  get_(storeName, keys) {\n    let op = this.connection_.startReadOnlyOperation(storeName);\n    let store = op.store();\n\n    let values = {};\n    let missing = [];\n\n    // Use a map to store the objects so that we can reorder the results to\n    // match the order of |keys|.\n    keys.forEach((key) => {\n      let request = store.get(key);\n      request.onsuccess = () => {\n        // Make sure a defined value was found. Indexeddb treats no-value found\n        // as a success with an undefined result.\n        if (request.result == undefined) {\n          missing.push(key);\n        }\n\n        values[key] = request.result;\n      };\n    });\n\n    // Wait until the operation completes or else values may be missing from\n    // |values|. Use the original key list to convert the map to a list so that\n    // the order will match.\n    return op.promise().then(() => {\n      if (missing.length) {\n        return Promise.reject(new shaka.util.Error(\n            shaka.util.Error.Severity.RECOVERABLE,\n            shaka.util.Error.Category.STORAGE,\n            shaka.util.Error.Code.KEY_NOT_FOUND,\n            'Could not find values for ' + missing\n        ));\n      }\n\n      return keys.map((key) => values[key]);\n    });\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.indexeddb.StorageMechanism');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.offline.StorageMuxer');\ngoog.require('shaka.offline.indexeddb.EmeSessionStorageCell');\ngoog.require('shaka.offline.indexeddb.V1StorageCell');\ngoog.require('shaka.offline.indexeddb.V2StorageCell');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.PublicPromise');\n\n\n/**\n * A storage mechanism to manage storage cells for an indexed db instance.\n * The cells are just for interacting with the stores that are found in the\n * database instance. The mechanism is responsible for creating new stores\n * when opening the database. If the database is too old of a version, a\n * cell will be added for the old stores but the cell won't support add\n * operations. The mechanism will create the new versions of the stores and\n * will allow add operations for those stores.\n *\n * @implements {shaka.extern.StorageMechanism}\n */\nshaka.offline.indexeddb.StorageMechanism = class {\n  constructor() {\n    /** @private {IDBDatabase} */\n    this.db_ = null;\n\n    /** @private {shaka.extern.StorageCell} */\n    this.v1_ = null;\n    /** @private {shaka.extern.StorageCell} */\n    this.v2_ = null;\n    /** @private {shaka.extern.StorageCell} */\n    this.v3_ = null;\n    /** @private {shaka.extern.EmeSessionStorageCell} */\n    this.sessions_ = null;\n  }\n\n  /**\n   * @override\n   */\n  init() {\n    const name = shaka.offline.indexeddb.StorageMechanism.DB_NAME;\n    const version = shaka.offline.indexeddb.StorageMechanism.VERSION;\n\n    let p = new shaka.util.PublicPromise();\n    let open = window.indexedDB.open(name, version);\n    open.onsuccess = (event) => {\n      let db = event.target.result;\n      this.db_ = db;\n      this.v1_ = shaka.offline.indexeddb.StorageMechanism.createV1_(db);\n      this.v2_ = shaka.offline.indexeddb.StorageMechanism.createV2_(db);\n      this.v3_ = shaka.offline.indexeddb.StorageMechanism.createV3_(db);\n      this.sessions_ =\n          shaka.offline.indexeddb.StorageMechanism.createEmeSession_(db);\n      p.resolve();\n    };\n    open.onupgradeneeded = (event) => {\n      // Add object stores for the latest version only.\n      this.createStores_(event.target.result);\n    };\n    open.onerror = (event) => {\n      p.reject(new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.STORAGE,\n          shaka.util.Error.Code.INDEXED_DB_ERROR,\n          open.error));\n\n      // Firefox will raise an error on the main thread unless we stop it here.\n      event.preventDefault();\n    };\n\n    return p;\n  }\n\n  /**\n   * @override\n   */\n  async destroy() {\n    if (this.v1_) { await this.v1_.destroy(); }\n    if (this.v2_) { await this.v2_.destroy(); }\n    if (this.v3_) { await this.v3_.destroy(); }\n    if (this.sessions_) { await this.sessions_.destroy(); }\n\n    // If we were never initialized, then |db_| will still be null.\n    if (this.db_) { this.db_.close(); }\n  }\n\n  /**\n   * @override\n   */\n  getCells() {\n    const map = new Map();\n\n    if (this.v1_) { map.set('v1', this.v1_); }\n    if (this.v2_) { map.set('v2', this.v2_); }\n    if (this.v3_) { map.set('v3', this.v3_); }\n\n    return map;\n  }\n\n  /**\n   * @override\n   */\n  getEmeSessionCell() {\n    goog.asserts.assert(this.sessions_, 'Cannot be destroyed.');\n    return this.sessions_;\n  }\n\n  /**\n   * @override\n   */\n  async erase() {\n    // Not all cells may have been created, so only destroy the ones that\n    // were created.\n    if (this.v1_) { await this.v1_.destroy(); }\n    if (this.v2_) { await this.v2_.destroy(); }\n    if (this.v3_) { await this.v3_.destroy(); }\n\n    // |db_| will only be null if the muxer was not initialized. We need to\n    // close the connection in order delete the database without it being\n    // blocked.\n    if (this.db_) { this.db_.close(); }\n\n    await shaka.offline.indexeddb.StorageMechanism.deleteAll_();\n\n    // Reset before initializing.\n    this.db_ = null;\n    this.v1_ = null;\n    this.v2_ = null;\n    this.v3_ = null;\n\n    await this.init();\n  }\n\n  /**\n   * @param {!IDBDatabase} db\n   * @return {shaka.extern.StorageCell}\n   * @private\n   */\n  static createV1_(db) {\n    const StorageMechanism = shaka.offline.indexeddb.StorageMechanism;\n    const segmentStore = StorageMechanism.V1_SEGMENT_STORE;\n    const manifestStore = StorageMechanism.V1_MANIFEST_STORE;\n    const stores = db.objectStoreNames;\n    if (stores.contains(manifestStore) && stores.contains(segmentStore)) {\n      shaka.log.debug('Mounting v1 idb storage cell');\n\n      return new shaka.offline.indexeddb.V1StorageCell(\n          db,\n          segmentStore,\n          manifestStore);\n    }\n    return null;\n  }\n\n  /**\n   * @param {!IDBDatabase} db\n   * @return {shaka.extern.StorageCell}\n   * @private\n   */\n  static createV2_(db) {\n    const StorageMechanism = shaka.offline.indexeddb.StorageMechanism;\n    const segmentStore = StorageMechanism.V2_SEGMENT_STORE;\n    const manifestStore = StorageMechanism.V2_MANIFEST_STORE;\n    const stores = db.objectStoreNames;\n    if (stores.contains(manifestStore) && stores.contains(segmentStore)) {\n      shaka.log.debug('Mounting v2 idb storage cell');\n\n      return new shaka.offline.indexeddb.V2StorageCell(\n          db,\n          segmentStore,\n          manifestStore,\n          true);  // Are keys locked? Yes, this means no new additions.\n    }\n    return null;\n  }\n\n  /**\n   * @param {!IDBDatabase} db\n   * @return {shaka.extern.StorageCell}\n   * @private\n   */\n  static createV3_(db) {\n    const StorageMechanism = shaka.offline.indexeddb.StorageMechanism;\n    const segmentStore = StorageMechanism.V3_SEGMENT_STORE;\n    const manifestStore = StorageMechanism.V3_MANIFEST_STORE;\n    const stores = db.objectStoreNames;\n    if (stores.contains(manifestStore) && stores.contains(segmentStore)) {\n      shaka.log.debug('Mounting v3 idb storage cell');\n\n      // Version 3 uses the same structure as version 2, so we can use the same\n      // cells but it can support new entries.\n      return new shaka.offline.indexeddb.V2StorageCell(\n          db,\n          segmentStore,\n          manifestStore,\n          false); // Are keys locked? No, this means we can add new entries.\n    }\n    return null;\n  }\n\n  /**\n   * @param {!IDBDatabase} db\n   * @return {shaka.extern.EmeSessionStorageCell}\n   * @private\n   */\n  static createEmeSession_(db) {\n    const StorageMechanism = shaka.offline.indexeddb.StorageMechanism;\n    const store = StorageMechanism.SESSION_ID_STORE;\n    if (db.objectStoreNames.contains(store)) {\n      shaka.log.debug('Mounting session ID idb storage cell');\n      return new shaka.offline.indexeddb.EmeSessionStorageCell(db, store);\n    }\n    return null;\n  }\n\n  /**\n   * @param {!IDBDatabase} db\n   * @private\n   */\n  createStores_(db) {\n    const storeNames = [\n      shaka.offline.indexeddb.StorageMechanism.V3_SEGMENT_STORE,\n      shaka.offline.indexeddb.StorageMechanism.V3_MANIFEST_STORE,\n      shaka.offline.indexeddb.StorageMechanism.SESSION_ID_STORE,\n    ];\n\n    for (const name of storeNames) {\n      if (!db.objectStoreNames.contains(name)) {\n        db.createObjectStore(name, {autoIncrement: true});\n      }\n    }\n  }\n\n  /**\n   * Delete the indexed db instance so that all stores are deleted and cleared.\n   * This will force the database to a like-new state next time it opens.\n   *\n   * @return {!Promise}\n   * @private\n   */\n  static deleteAll_() {\n    const name = shaka.offline.indexeddb.StorageMechanism.DB_NAME;\n\n    let p = new shaka.util.PublicPromise();\n\n    let del = window.indexedDB.deleteDatabase(name);\n    del.onblocked = (event) => {\n      shaka.log.warning('Deleting', name, 'is being blocked');\n    };\n    del.onsuccess = (event) => {\n      p.resolve();\n    };\n    del.onerror = (event) => {\n      p.reject(new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.STORAGE,\n          shaka.util.Error.Code.INDEXED_DB_ERROR,\n          del.error));\n\n      // Firefox will raise an error on the main thread unless we stop it here.\n      event.preventDefault();\n    };\n\n    return p;\n  }\n};\n\n/** @const {string} */\nshaka.offline.indexeddb.StorageMechanism.DB_NAME = 'shaka_offline_db';\n/** @const {number} */\nshaka.offline.indexeddb.StorageMechanism.VERSION = 4;\n/** @const {string} */\nshaka.offline.indexeddb.StorageMechanism.V1_SEGMENT_STORE = 'segment';\n/** @const {string} */\nshaka.offline.indexeddb.StorageMechanism.V2_SEGMENT_STORE = 'segment-v2';\n/** @const {string} */\nshaka.offline.indexeddb.StorageMechanism.V3_SEGMENT_STORE = 'segment-v3';\n/** @const {string} */\nshaka.offline.indexeddb.StorageMechanism.V1_MANIFEST_STORE = 'manifest';\n/** @const {string} */\nshaka.offline.indexeddb.StorageMechanism.V2_MANIFEST_STORE = 'manifest-v2';\n/** @const {string} */\nshaka.offline.indexeddb.StorageMechanism.V3_MANIFEST_STORE = 'manifest-v3';\n/** @const {string} */\nshaka.offline.indexeddb.StorageMechanism.SESSION_ID_STORE = 'session-ids';\n\n\n// Since this may be called before the polyfills remove indexeddb support from\n// some platforms (looking at you Chromecast), we need to check for support\n// when we create the mechanism.\n//\n// Thankfully the storage muxer api allows us to return a null mechanism\n// to indicate that the mechanism is not supported on this platform.\nshaka.offline.StorageMuxer.register(\n    'idb',\n    () => {\n      return window.indexedDB ?\n              new shaka.offline.indexeddb.StorageMechanism() :\n              null;\n    });\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.OfflineUri');\n\n\n/**\n * The OfflineUri class contains all the components that make up the offline\n * uri. The components are:\n *    TYPE: Used to know what type of data the uri points to. It can either\n *          be \"manifest\" or \"segment\".\n *    MECHANISM: The name of the mechanism that manages the storage cell that\n *               holds the data.\n *    CELL: The name of the cell that holds the data.\n *    KEY: The key that the data is stored under in the cell.\n */\nshaka.offline.OfflineUri = class {\n  /**\n   * @param {string} type\n   * @param {string} mechanism\n   * @param {string} cell\n   * @param {number} key\n   */\n  constructor(type, mechanism, cell, key) {\n    /**\n     * @private {string}\n     * @const\n     */\n    this.type_ = type;\n    /**\n     * @private {string}\n     * @const\n     */\n    this.mechanism_ = mechanism;\n    /**\n     * @private {string}\n     * @const\n     */\n    this.cell_ = cell;\n    /**\n     * @private {number}\n     * @const\n     */\n    this.key_ = key;\n\n    /**\n     * @private {string}\n     * @const\n     */\n    this.asString_ = [\n      'offline:', type, '/', mechanism, '/', cell, '/', key,\n    ].join('');\n  }\n\n  /** @return {boolean} */\n  isManifest() { return this.type_ == 'manifest'; }\n\n  /** @return {boolean} */\n  isSegment() { return this.type_ == 'segment'; }\n\n  /** @return {string} */\n  mechanism() { return this.mechanism_; }\n\n  /** @return {string} */\n  cell() { return this.cell_; }\n\n  /** @return {number} */\n  key() { return this.key_; }\n\n  /** @override */\n  toString() { return this.asString_; }\n\n  /**\n   * @param {string} uri\n   * @return {?shaka.offline.OfflineUri}\n   */\n  static parse(uri) {\n    let parts = /^offline:([a-z]+)\\/([^/]+)\\/([^/]+)\\/([0-9]+)$/.exec(uri);\n    if (parts == null) { return null; }\n\n    let type = parts[1];\n    if (type != 'manifest' && type != 'segment') { return null; }\n\n    let mechanism = parts[2];\n    if (!mechanism) { return null; }\n\n    let cell = parts[3];\n    if (!cell) { return null; }\n\n    let key = Number(parts[4]);\n    if (type == null) { return null; }\n\n    return new shaka.offline.OfflineUri(type, mechanism, cell, key);\n  }\n\n  /**\n   * @param {string} mechanism\n   * @param {string} cell\n   * @param {number} key\n   * @return {!shaka.offline.OfflineUri}\n   */\n  static manifest(mechanism, cell, key) {\n    return new shaka.offline.OfflineUri('manifest', mechanism, cell, key);\n  }\n\n  /**\n   * @param {string} mechanism\n   * @param {string} cell\n   * @param {number} key\n   * @return {!shaka.offline.OfflineUri}\n   */\n  static segment(mechanism, cell, key) {\n    return new shaka.offline.OfflineUri('segment', mechanism, cell, key);\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.ManifestConverter');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.media.InitSegmentReference');\ngoog.require('shaka.media.PresentationTimeline');\ngoog.require('shaka.media.SegmentIndex');\ngoog.require('shaka.media.SegmentReference');\ngoog.require('shaka.offline.OfflineUri');\ngoog.require('shaka.util.ManifestParserUtils');\n\n\n/**\n * Utility class for converting database manifest objects back to normal\n * player-ready objects. Used by the offline system to convert on-disk\n * objects back to the in-memory objects.\n */\nshaka.offline.ManifestConverter = class {\n  /**\n   * Create a new manifest converter. Need to know the mechanism and cell that\n   * the manifest is from so that all segments paths can be created.\n   *\n   * @param {string} mechanism\n   * @param {string} cell\n   */\n  constructor(mechanism, cell) {\n    /** @private {string} */\n    this.mechanism_ = mechanism;\n    /** @private {string} */\n    this.cell_ = cell;\n  }\n\n  /**\n   * Convert a |shaka.extern.ManifestDB| object to a |shaka.extern.Manifest|\n   * object.\n   *\n   * @param {shaka.extern.ManifestDB} manifestDB\n   * @return {shaka.extern.Manifest}\n   */\n  fromManifestDB(manifestDB) {\n    let timeline = new shaka.media.PresentationTimeline(null, 0);\n    timeline.setDuration(manifestDB.duration);\n\n    let periods = manifestDB.periods.map((period) =>\n        this.fromPeriodDB(period, timeline));\n\n    let drmInfos = manifestDB.drmInfo ? [manifestDB.drmInfo] : [];\n    if (manifestDB.drmInfo) {\n      periods.forEach((period) => {\n        period.variants.forEach((variant) => { variant.drmInfos = drmInfos; });\n      });\n    }\n\n    return {\n      presentationTimeline: timeline,\n      minBufferTime: 2,\n      offlineSessionIds: manifestDB.sessionIds,\n      periods: periods,\n    };\n  }\n\n  /**\n   * Create a period object from a database period.\n   *\n   * @param {shaka.extern.PeriodDB} period\n   * @param {shaka.media.PresentationTimeline} timeline\n   * @return {shaka.extern.Period}\n   */\n  fromPeriodDB(period, timeline) {\n    /** @type {!Array.<shaka.extern.StreamDB>} */\n    let audioStreams = period.streams.filter((stream) => this.isAudio_(stream));\n    /** @type {!Array.<shaka.extern.StreamDB>} */\n    let videoStreams = period.streams.filter((stream) => this.isVideo_(stream));\n\n    /** @type {!Map.<number, shaka.extern.Variant>} */\n    const variants = this.createVariants(audioStreams, videoStreams);\n\n    /** @type {!Array.<shaka.extern.Stream>} */\n    let textStreams = period.streams\n        .filter((stream) => this.isText_(stream))\n        .map((stream) => this.fromStreamDB_(stream));\n\n    period.streams.forEach((stream, i) => {\n      /** @type {!Array.<!shaka.media.SegmentReference>} */\n      let refs = stream.segments.map((segment, index) => {\n        return this.fromSegmentDB_(index, segment);\n      });\n\n      timeline.notifySegments(refs, period.startTime);\n    });\n\n    return {\n      startTime: period.startTime,\n      variants: Array.from(variants.values()),\n      textStreams: textStreams,\n    };\n  }\n\n  /**\n   * Recreates Variants from audio and video StreamDB collections.\n   *\n   * @param {!Array.<!shaka.extern.StreamDB>} audios\n   * @param {!Array.<!shaka.extern.StreamDB>} videos\n   * @return {!Map.<number, !shaka.extern.Variant>}\n   */\n  createVariants(audios, videos) {\n    // Get all the variant ids from all audio and video streams.\n    /** @type {!Set.<number>} */\n    const variantIds = new Set();\n    for (const stream of audios) {\n      for (const id of stream.variantIds) { variantIds.add(id); }\n    }\n    for (const stream of videos) {\n      for (const id of stream.variantIds) { variantIds.add(id); }\n    }\n\n    /** @type {!Map.<number, shaka.extern.Variant>} */\n    const variantMap = new Map();\n    for (const id of variantIds) {\n      variantMap.set(id, this.createEmptyVariant_(id));\n    }\n\n    // Assign each audio stream to its variants.\n    for (const audio of audios) {\n      /** @type {shaka.extern.Stream} */\n      const stream = this.fromStreamDB_(audio);\n\n      for (const variantId of audio.variantIds) {\n        const variant = variantMap.get(variantId);\n\n        goog.asserts.assert(\n            !variant.audio, 'A variant should only have one audio stream');\n\n        variant.language = stream.language;\n        variant.primary = variant.primary || stream.primary;\n        variant.audio = stream;\n      }\n    }\n\n    // Assign each video stream to its variants.\n    for (const video of videos) {\n      /** @type {shaka.extern.Stream} */\n      const stream = this.fromStreamDB_(video);\n\n      for (const variantId of video.variantIds) {\n        const variant = variantMap.get(variantId);\n\n        goog.asserts.assert(\n            !variant.video, 'A variant should only have one video stream');\n\n        variant.primary = variant.primary || stream.primary;\n        variant.video = stream;\n      }\n    }\n\n    return variantMap;\n  }\n\n  /**\n   * @param {shaka.extern.StreamDB} streamDB\n   * @return {shaka.extern.Stream}\n   * @private\n   */\n  fromStreamDB_(streamDB) {\n    /** @type {!Array.<!shaka.media.SegmentReference>} */\n    let segments = streamDB.segments.map((segment, index) =>\n        this.fromSegmentDB_(index, segment));\n\n    /** @type {!shaka.media.SegmentIndex} */\n    let segmentIndex = new shaka.media.SegmentIndex(segments);\n\n    /** @type {shaka.extern.Stream} */\n    let stream = {\n      id: streamDB.id,\n      originalId: streamDB.originalId,\n      createSegmentIndex: () => Promise.resolve(),\n      findSegmentPosition: (index) => segmentIndex.find(index),\n      getSegmentReference: (index) => segmentIndex.get(index),\n      initSegmentReference: null,\n      presentationTimeOffset: streamDB.presentationTimeOffset,\n      mimeType: streamDB.mimeType,\n      codecs: streamDB.codecs,\n      width: streamDB.width || undefined,\n      height: streamDB.height || undefined,\n      frameRate: streamDB.frameRate || undefined,\n      kind: streamDB.kind,\n      encrypted: streamDB.encrypted,\n      keyId: streamDB.keyId,\n      language: streamDB.language,\n      label: streamDB.label || null,\n      type: streamDB.contentType,\n      primary: streamDB.primary,\n      trickModeVideo: null,\n      // TODO(modmaker): Store offline?\n      emsgSchemeIdUris: null,\n      roles: [],\n      channelsCount: null,\n      closedCaptions: null,\n    };\n\n    if (streamDB.initSegmentKey != null) {\n      stream.initSegmentReference =\n          this.fromInitSegmentDB_(streamDB.initSegmentKey);\n    }\n\n    return stream;\n  }\n\n  /**\n   * @param {number} index\n   * @param {shaka.extern.SegmentDB} segmentDB\n   * @return {!shaka.media.SegmentReference}\n   * @private\n   */\n  fromSegmentDB_(index, segmentDB) {\n    /** @type {!shaka.offline.OfflineUri} */\n    let uri = shaka.offline.OfflineUri.segment(\n        this.mechanism_, this.cell_, segmentDB.dataKey);\n\n    return new shaka.media.SegmentReference(\n        index,\n        segmentDB.startTime,\n        segmentDB.endTime,\n        () => [uri.toString()],\n        0 /* startByte */,\n        null /*  endByte */);\n  }\n\n  /**\n   * @param {number} key\n   * @return {!shaka.media.InitSegmentReference}\n   * @private\n   */\n  fromInitSegmentDB_(key) {\n    /** @type {!shaka.offline.OfflineUri} */\n    let uri = shaka.offline.OfflineUri.segment(\n        this.mechanism_, this.cell_, key);\n\n    return new shaka.media.InitSegmentReference(\n        () => [uri.toString()],\n        0 /* startBytes*/,\n        null /* endBytes */);\n  }\n\n  /**\n   * @param {shaka.extern.StreamDB} stream\n   * @return {boolean}\n   * @private\n   */\n  isAudio_(stream) {\n    const ContentType = shaka.util.ManifestParserUtils.ContentType;\n    return stream.contentType == ContentType.AUDIO;\n  }\n\n  /**\n   * @param {shaka.extern.StreamDB} stream\n   * @return {boolean}\n   * @private\n   */\n  isVideo_(stream) {\n    const ContentType = shaka.util.ManifestParserUtils.ContentType;\n    return stream.contentType == ContentType.VIDEO;\n  }\n\n  /**\n   * @param {shaka.extern.StreamDB} stream\n   * @return {boolean}\n   * @private\n   */\n  isText_(stream) {\n    const ContentType = shaka.util.ManifestParserUtils.ContentType;\n    return stream.contentType == ContentType.TEXT;\n  }\n\n  /**\n   * Creates an empty Variant.\n   *\n   * @param {number} id\n   * @return {!shaka.extern.Variant}\n   * @private\n   */\n  createEmptyVariant_(id) {\n    return {\n      id: id,\n      language: '',\n      primary: false,\n      audio: null,\n      video: null,\n      bandwidth: 0,\n      drmInfos: [],\n      allowedByApplication: true,\n      allowedByKeySystem: true,\n    };\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.OfflineManifestParser');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.media.ManifestParser');\ngoog.require('shaka.offline.ManifestConverter');\ngoog.require('shaka.offline.OfflineUri');\ngoog.require('shaka.offline.StorageMuxer');\ngoog.require('shaka.util.Destroyer');\ngoog.require('shaka.util.Error');\n\n\n/**\n * Creates a new offline manifest parser.\n * @struct\n * @constructor\n * @implements {shaka.extern.ManifestParser}\n */\nshaka.offline.OfflineManifestParser = function() {\n  /** @private {shaka.offline.OfflineUri} */\n  this.uri_ = null;\n};\n\n\n/** @override */\nshaka.offline.OfflineManifestParser.prototype.configure = function(config) {\n  // No-op\n};\n\n\n/** @override */\nshaka.offline.OfflineManifestParser.prototype.start =\n    function(uriString, playerInterface) {\n  let uri = shaka.offline.OfflineUri.parse(uriString);\n  this.uri_ = uri;\n\n  if (uri == null || !uri.isManifest()) {\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.NETWORK,\n        shaka.util.Error.Code.MALFORMED_OFFLINE_URI,\n        uri));\n  }\n\n  let muxer = new shaka.offline.StorageMuxer();\n  return shaka.util.Destroyer.with([muxer], async () => {\n    await muxer.init();\n\n    let cell = await muxer.getCell(uri.mechanism(), uri.cell());\n\n    let manifests = await cell.getManifests([uri.key()]);\n    let manifest = manifests[0];\n\n    let converter = new shaka.offline.ManifestConverter(\n      uri.mechanism(), uri.cell());\n\n    return converter.fromManifestDB(manifest);\n  });\n};\n\n\n/** @override */\nshaka.offline.OfflineManifestParser.prototype.stop = function() {\n  return Promise.resolve();\n};\n\n\n/** @override */\nshaka.offline.OfflineManifestParser.prototype.update = function() {\n  // No-op\n};\n\n\n/** @override */\nshaka.offline.OfflineManifestParser.prototype.onExpirationUpdated = function(\n    sessionId, expiration) {\n  let uri = this.uri_;\n\n  goog.asserts.assert(\n      uri, 'Should not get update event before start has been called');\n\n  let muxer = new shaka.offline.StorageMuxer();\n  return shaka.util.Destroyer.with([muxer], async () => {\n    await muxer.init();\n\n    let cell = await muxer.getCell(uri.mechanism(), uri.cell());\n\n    let manifests = await cell.getManifests([uri.key()]);\n    let manifest = manifests[0];\n\n    let foundSession = manifest.sessionIds.includes(sessionId);\n    let newExpiration = manifest.expiration == undefined ||\n                        manifest.expiration > expiration;\n\n    if (foundSession && newExpiration) {\n      shaka.log.debug('Updating expiration for stored content');\n      await cell.updateManifestExpiration(uri.key(), expiration);\n    }\n  }).catch((e) => {\n    // Ignore errors with update.\n    shaka.log.error('There was an error updating', uri, e);\n  });\n};\n\n\nshaka.media.ManifestParser.registerParserByMime(\n    'application/x-offline-manifest', shaka.offline.OfflineManifestParser);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.OfflineScheme');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.offline.OfflineUri');\ngoog.require('shaka.offline.StorageMuxer');\ngoog.require('shaka.util.AbortableOperation');\ngoog.require('shaka.util.Destroyer');\ngoog.require('shaka.util.Error');\n\n\n/**\n * @namespace\n * @summary A plugin that handles requests for offline content.\n * @param {string} uri\n * @param {shaka.extern.Request} request\n * @param {shaka.net.NetworkingEngine.RequestType=} requestType\n * @return {!shaka.extern.IAbortableOperation.<shaka.extern.Response>}\n * @export\n */\nshaka.offline.OfflineScheme = function(uri, request, requestType) {\n  let offlineUri = shaka.offline.OfflineUri.parse(uri);\n\n  if (offlineUri && offlineUri.isManifest()) {\n    return shaka.offline.OfflineScheme.getManifest_(uri);\n  }\n\n  if (offlineUri && offlineUri.isSegment()) {\n    return shaka.offline.OfflineScheme.getSegment_(\n        offlineUri.key(), offlineUri);\n  }\n\n  return shaka.util.AbortableOperation.failed(\n      new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.NETWORK,\n          shaka.util.Error.Code.MALFORMED_OFFLINE_URI,\n          uri));\n};\n\n\n/**\n * @param {string} uri\n * @return {!shaka.extern.IAbortableOperation.<shaka.extern.Response>}\n * @private\n */\nshaka.offline.OfflineScheme.getManifest_ = function(uri) {\n  /** @type {shaka.extern.Response} */\n  let response = {\n    uri: uri,\n    data: new ArrayBuffer(0),\n    headers: {'content-type': 'application/x-offline-manifest'},\n  };\n\n  return shaka.util.AbortableOperation.completed(response);\n};\n\n\n/**\n * @param {number} id\n * @param {!shaka.offline.OfflineUri} uri\n * @return {!shaka.extern.IAbortableOperation.<shaka.extern.Response>}\n * @private\n */\nshaka.offline.OfflineScheme.getSegment_ = function(id, uri) {\n  goog.asserts.assert(\n      uri.isSegment(),\n      'Only segment uri\\'s should be given to getSegment');\n\n  let muxer = new shaka.offline.StorageMuxer();\n\n  let promise = shaka.util.Destroyer.with([muxer], async () => {\n    await muxer.init();\n    let cell = await muxer.getCell(uri.mechanism(), uri.cell());\n    let segments = await cell.getSegments([uri.key()]);\n    let segment = segments[0];\n    return {\n      uri: uri,\n      data: segment.data,\n      headers: {},\n    };\n  });\n\n  // TODO: Support abort() in OfflineScheme.\n  return shaka.util.AbortableOperation.notAbortable(promise);\n};\n\n\nshaka.net.NetworkingEngine.registerScheme(\n    'offline', shaka.offline.OfflineScheme);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.SessionDeleter');\n\n\ngoog.require('shaka.log');\ngoog.require('shaka.util.ArrayUtils');\n\n\n/**\n * Contains a utility method to delete persistent EME sessions.\n */\nshaka.offline.SessionDeleter = class {\n  /**\n   * Deletes the given sessions.  This never fails and instead logs the error.\n   *\n   * @param {shaka.extern.DrmConfiguration} config\n   * @param {!shaka.net.NetworkingEngine} netEngine\n   * @param {!Array.<shaka.extern.EmeSessionDB>} sessions\n   * @return {!Promise.<!Array.<string>>} The session IDs that were deleted.\n   */\n  static async delete(config, netEngine, sessions) {\n    const SessionDeleter = shaka.offline.SessionDeleter;\n    let deleted = [];\n    for (const bucket of SessionDeleter.createBuckets_(sessions)) {\n      // Run these sequentially to avoid creating multiple CDM instances at one\n      // time.  Some embedded platforms may not support multiples.\n      const p = SessionDeleter.doDelete_(config, netEngine, bucket);\n      const cur = await p;  // eslint-disable-line no-await-in-loop\n      deleted = deleted.concat(cur);\n    }\n    return deleted;\n  }\n\n\n  /**\n   * Performs the deletion of the given session IDs.\n   *\n   * @param {shaka.extern.DrmConfiguration} config\n   * @param {!shaka.net.NetworkingEngine} netEngine\n   * @param {shaka.offline.SessionDeleter.Bucket_} bucket\n   * @return {!Promise.<!Array.<string>>} The sessions that were deleted\n   * @private\n   */\n  static async doDelete_(config, netEngine, bucket) {\n    /** @type {!shaka.media.DrmEngine} */\n    const drmEngine = new shaka.media.DrmEngine({\n      netEngine: netEngine,\n      onError: () => {},\n      onKeyStatus: () => {},\n      onExpirationUpdated: () => {},\n      onEvent: () => {},\n    });\n\n    try {\n      drmEngine.configure(config);\n      await drmEngine.initForRemoval(\n          bucket.info.keySystem, bucket.info.licenseUri,\n          bucket.info.serverCertificate,\n          bucket.info.audioCapabilities, bucket.info.videoCapabilities);\n    } catch (e) {\n      shaka.log.warning('Error initializing EME', e);\n      await drmEngine.destroy();\n      return [];\n    }\n\n    try {\n      await drmEngine.setServerCertificate();\n    } catch (e) {\n      shaka.log.warning('Error setting server certificate', e);\n      await drmEngine.destroy();\n      return [];\n    }\n\n    /** @type {!Array.<string>} */\n    const sessionIds = [];\n    await Promise.all(bucket.sessionIds.map(async (sessionId) => {\n      // This method is in a .map(), so this starts multiple removes at once,\n      // so this removes the sessions in parallel.\n      try {\n        await drmEngine.removeSession(sessionId);\n        sessionIds.push(sessionId);\n      } catch (e) {\n        shaka.log.warning('Error deleting offline session', e);\n      }\n    }));\n    await drmEngine.destroy();\n    return sessionIds;\n  }\n\n\n  /**\n   * Collects the given sessions into buckets that can be done at the same time.\n   * Since querying with different parameters can give us back different CDMs,\n   * we can't just use one CDM instance to delete everything.\n   *\n   * @param {!Array.<shaka.extern.EmeSessionDB>} sessions\n   * @return {!Array.<shaka.offline.SessionDeleter.Bucket_>}\n   * @private\n   */\n  static createBuckets_(sessions) {\n    /** @type {!Array.<shaka.offline.SessionDeleter.Bucket_>} */\n    const ret = [];\n    for (const session of sessions) {\n      let found = false;\n      for (const bucket of ret) {\n        if (shaka.offline.SessionDeleter.isCompatible_(bucket.info, session)) {\n          bucket.sessionIds.push(session.sessionId);\n          found = true;\n          break;\n        }\n      }\n      if (!found) {\n        ret.push({info: session, sessionIds: [session.sessionId]});\n      }\n    }\n\n    return ret;\n  }\n\n\n  /**\n   * Returns whether the given session infos are compatible with each other.\n   * @param {shaka.extern.EmeSessionDB} a\n   * @param {shaka.extern.EmeSessionDB} b\n   * @return {boolean}\n   * @private\n   */\n  static isCompatible_(a, b) {\n    // TODO: Add a way to change the license server in DrmEngine to avoid\n    // resetting EME for different license servers.\n    const comp = (x, y) =>\n        x.robustness == y.robustness && x.contentType == y.contentType;\n    const hasSameElements = shaka.util.ArrayUtils.hasSameElements;\n    return a.keySystem == b.keySystem && a.licenseUri == b.licenseUri &&\n        hasSameElements(a.audioCapabilities, b.audioCapabilities, comp) &&\n        hasSameElements(a.videoCapabilities, b.videoCapabilities, comp);\n  }\n};\n\n\n/**\n * @typedef {{\n *   info: shaka.extern.EmeSessionDB,\n *   sessionIds: !Array.<string>\n * }}\n */\nshaka.offline.SessionDeleter.Bucket_;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.text.SimpleTextDisplayer');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.text.Cue');\n\n\n/**\n * <p>\n * This defines the default text displayer plugin. An instance of this\n * class is used when no custom displayer is given.\n * </p>\n * <p>\n * This class simply converts shaka.text.Cue objects to\n * TextTrackCues and feeds them to the browser.\n * </p>\n *\n * @param {HTMLMediaElement} video\n * @constructor\n * @struct\n * @implements {shaka.extern.TextDisplayer}\n * @export\n */\nshaka.text.SimpleTextDisplayer = function(video) {\n  /** @private {TextTrack} */\n  this.textTrack_ = null;\n\n  // TODO: Test that in all cases, the built-in CC controls in the video element\n  // are toggling our TextTrack.\n\n  // If the video element has TextTracks, disable them.  If we see one that\n  // was created by a previous instance of Shaka Player, reuse it.\n  for (let i = 0; i < video.textTracks.length; ++i) {\n    let track = video.textTracks[i];\n    track.mode = 'disabled';\n\n    if (track.label == shaka.text.SimpleTextDisplayer.TextTrackLabel_) {\n      this.textTrack_ = track;\n    }\n  }\n\n  if (!this.textTrack_) {\n    // As far as I can tell, there is no observable difference between setting\n    // kind to 'subtitles' or 'captions' when creating the TextTrack object.\n    // The individual text tracks from the manifest will still have their own\n    // kinds which can be displayed in the app's UI.\n    this.textTrack_ = video.addTextTrack(\n        'subtitles', shaka.text.SimpleTextDisplayer.TextTrackLabel_);\n  }\n  this.textTrack_.mode = 'hidden';\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.text.SimpleTextDisplayer.prototype.remove = function(start, end) {\n  // Check that the displayer hasn't been destroyed.\n  if (!this.textTrack_) return false;\n\n  let removeInRange = (cue) => {\n    const inside = cue.startTime < end && cue.endTime > start;\n    return inside;\n  };\n\n  shaka.text.SimpleTextDisplayer.removeWhere_(this.textTrack_, removeInRange);\n\n  return true;\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.text.SimpleTextDisplayer.prototype.append = function(cues) {\n  const convertToTextTrackCue =\n      shaka.text.SimpleTextDisplayer.convertToTextTrackCue_;\n\n  // Convert cues.\n  let textTrackCues = [];\n  for (let i = 0; i < cues.length; i++) {\n    let cue = convertToTextTrackCue(cues[i]);\n    if (cue) {\n      textTrackCues.push(cue);\n    }\n  }\n\n  // Sort the cues based on start/end times.  Make a copy of the array so\n  // we can get the index in the original ordering.  Out of order cues are\n  // rejected by IE/Edge.  See https://bit.ly/2K9VX3s\n  let sortedCues = textTrackCues.slice().sort(function(a, b) {\n    if (a.startTime != b.startTime) {\n      return a.startTime - b.startTime;\n    } else if (a.endTime != b.endTime) {\n      return a.endTime - b.startTime;\n    } else {\n      // The browser will display cues with identical time ranges from the\n      // bottom up.  Reversing the order of equal cues means the first one\n      // parsed will be at the top, as you would expect.\n      // See https://github.com/google/shaka-player/issues/848 for more info.\n      return textTrackCues.indexOf(b) - textTrackCues.indexOf(a);\n    }\n  });\n\n  sortedCues.forEach(function(cue) {\n    this.textTrack_.addCue(cue);\n  }.bind(this));\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.text.SimpleTextDisplayer.prototype.destroy = function() {\n  if (this.textTrack_) {\n    let removeIt = (cue) => true;\n    shaka.text.SimpleTextDisplayer.removeWhere_(this.textTrack_, removeIt);\n  }\n\n  this.textTrack_ = null;\n  return Promise.resolve();\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.text.SimpleTextDisplayer.prototype.isTextVisible = function() {\n  return this.textTrack_.mode == 'showing';\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.text.SimpleTextDisplayer.prototype.setTextVisibility = function(on) {\n  this.textTrack_.mode = on ? 'showing' : 'hidden';\n};\n\n\n/**\n * @param {!shaka.extern.Cue} shakaCue\n * @return {TextTrackCue}\n * @private\n */\nshaka.text.SimpleTextDisplayer.convertToTextTrackCue_ = function(shakaCue) {\n  if (shakaCue.startTime >= shakaCue.endTime) {\n    // IE/Edge will throw in this case.\n    // See issue #501\n    shaka.log.warning('Invalid cue times: ' + shakaCue.startTime +\n                      ' - ' + shakaCue.endTime);\n    return null;\n  }\n\n  const Cue = shaka.text.Cue;\n  /** @type {VTTCue} */\n  let vttCue = new VTTCue(shakaCue.startTime,\n                          shakaCue.endTime,\n                          shakaCue.payload);\n\n  // NOTE: positionAlign and lineAlign settings are not supported by Chrome\n  // at the moment, so setting them will have no effect.\n  // The bug on chromium to implement them:\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=633690\n\n  vttCue.lineAlign = shakaCue.lineAlign;\n  vttCue.positionAlign = shakaCue.positionAlign;\n  vttCue.size = shakaCue.size;\n  try {\n    // Safari 10 seems to throw on align='center'.\n    vttCue.align = shakaCue.textAlign;\n  } catch (exception) {}\n\n  if (shakaCue.textAlign == 'center' && vttCue.align != 'center') {\n    // We want vttCue.position = 'auto'. By default, |position| is set to\n    // \"auto\". If we set it to \"auto\" safari will throw an exception, so we\n    // must rely on the default value.\n    vttCue.align = 'middle';\n  }\n\n  if (shakaCue.writingDirection ==\n          Cue.writingDirection.VERTICAL_LEFT_TO_RIGHT) {\n    vttCue.vertical = 'lr';\n  } else if (shakaCue.writingDirection ==\n           Cue.writingDirection.VERTICAL_RIGHT_TO_LEFT) {\n    vttCue.vertical = 'rl';\n  }\n\n  // snapToLines flag is true by default\n  if (shakaCue.lineInterpretation == Cue.lineInterpretation.PERCENTAGE) {\n    vttCue.snapToLines = false;\n  }\n\n  if (shakaCue.line != null) {\n    vttCue.line = shakaCue.line;\n  }\n\n  if (shakaCue.position != null) {\n    vttCue.position = shakaCue.position;\n  }\n\n  return vttCue;\n};\n\n\n/**\n * Iterate over all the cues in a text track and remove all those for which\n * |predicate(cue)| returns true.\n *\n * @param {!TextTrack} track\n * @param {function(!TextTrackCue):boolean} predicate\n * @private\n */\nshaka.text.SimpleTextDisplayer.removeWhere_ = function(track, predicate) {\n  // Since |track.cues| can be null if |track.mode| is \"disabled\", force it to\n  // something other than \"disabled\".\n  //\n  // If the track is already showing, then we should keep it as showing. But if\n  // it something else, we will use hidden so that we don't \"flash\" cues on the\n  // screen.\n  let oldState = track.mode;\n  let tempState = oldState == 'showing' ? 'showing' : 'hidden';\n\n  track.mode = tempState;\n\n  goog.asserts.assert(\n      track.cues,\n      'Cues should be accessible when mode is set to \"' + tempState + '\".');\n\n  // Go backward so that if a removal is done, it should not cause problems\n  // with future indexing. In the case that the underlying implementation\n  // returns a copy (and not a shared instance) cache a copy of the tracks.\n  let cues = track.cues;\n  for (let i = cues.length - 1; i >= 0; i--) {\n    let cue = cues[i];\n    if (cue && predicate(cue)) {\n      track.removeCue(cue);\n    }\n  }\n\n  track.mode = oldState;\n};\n\n\n/**\n * @const {string}\n * @private\n */\nshaka.text.SimpleTextDisplayer.TextTrackLabel_ = 'Shaka Player TextTrack';\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.ConfigUtils');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\n\n\n/**\n * @param {!Object} destination\n * @param {!Object} source\n * @param {!Object} template supplies default values\n * @param {!Object} overrides\n *   Supplies override type checking.  When the current path matches the key in\n *   this object, each sub-value must match the type in this object.  If this\n *   contains an Object, it is used as the template.\n * @param {string} path to this part of the config\n * @return {boolean}\n * @export\n */\nshaka.util.ConfigUtils.mergeConfigObjects =\n    function(destination, source, template, overrides, path) {\n  goog.asserts.assert(destination, 'Destination config must not be null!');\n\n  /**\n   * @type {boolean}\n   * If true, don't validate the keys in the next level.\n   */\n  let ignoreKeys = path in overrides;\n\n  let isValid = true;\n\n  for (let k in source) {\n    let subPath = path + '.' + k;\n    let subTemplate = ignoreKeys ? overrides[path] : template[k];\n\n    // The order of these checks is important.\n    if (!ignoreKeys && !(k in template)) {\n      shaka.log.error('Invalid config, unrecognized key ' + subPath);\n      isValid = false;\n    } else if (source[k] === undefined) {\n      // An explicit 'undefined' value causes the key to be deleted from the\n      // destination config and replaced with a default from the template if\n      // possible.\n      if (subTemplate === undefined || ignoreKeys) {\n        // There is nothing in the template, so delete.\n        delete destination[k];\n      } else {\n        // There is something in the template, so go back to that.\n        destination[k] = shaka.util.ObjectUtils.cloneObject(subTemplate);\n      }\n    } else if (subTemplate.constructor == Object &&\n               source[k] &&\n               source[k].constructor == Object) {\n      // These are plain Objects with no other constructor.\n\n      if (!destination[k]) {\n        // Initialize the destination with the template so that normal merging\n        // and type-checking can happen.\n        destination[k] = shaka.util.ObjectUtils.cloneObject(subTemplate);\n      }\n\n      let subMergeValid = shaka.util.ConfigUtils.mergeConfigObjects(\n          destination[k], source[k], subTemplate, overrides, subPath);\n      isValid = isValid && subMergeValid;\n    } else if (typeof source[k] != typeof subTemplate ||\n               source[k] == null ||\n               source[k].constructor != subTemplate.constructor) {\n      // The source is the wrong type.  This check allows objects to be nulled,\n      // but does not allow null for any non-object fields.\n      shaka.log.error('Invalid config, wrong type for ' + subPath);\n      isValid = false;\n    } else if (typeof template[k] == 'function' &&\n               template[k].length != source[k].length) {\n      shaka.log.warning(\n          'Invalid config, wrong number of arguments for ' + subPath);\n      destination[k] = source[k];\n    } else {\n      destination[k] = source[k];\n    }\n  }\n\n  return isValid;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.PlayerConfiguration');\n\ngoog.require('shaka.abr.SimpleAbrManager');\ngoog.require('shaka.util.ConfigUtils');\n\n\n// TODO(vaage): Many times in our configs, we need to create an empty\n//  implementation of a method, but to avoid closure from removing unused\n//  parameters (and breaking our merge config code) we need to use each\n//  parameter. Is there a better solution to this problem than what we are\n//  doing now?\n//\n//  NOTE: Chrome App Content Security Policy prohibits usage of new Function()\n\n/**\n * @final\n */\nshaka.util.PlayerConfiguration = class {\n  /** @return {shaka.extern.PlayerConfiguration} */\n  static createDefault() {\n    // This is a relatively safe default, since 3G cell connections\n    // are faster than this.  For slower connections, such as 2G,\n    // the default estimate may be too high.\n    let bandwidthEstimate = 500e3; // 500kbps\n\n    let abrMaxHeight = Infinity;\n\n    // Some browsers implement the Network Information API, which allows\n    // retrieving information about a user's network connection.\n    //\n    // We are excluding connection.type == undefined to avoid getting bogus data\n    // on platforms where the implementation is incomplete.  Currently, desktop\n    // Chrome 64 returns connection type undefined and a bogus downlink value.\n    if (navigator.connection && navigator.connection.type) {\n      // If it's available, get the bandwidth estimate from the browser (in\n      // megabits per second) and use it as defaultBandwidthEstimate.\n      bandwidthEstimate = navigator.connection.downlink * 1e6;\n      // TODO: Move this into AbrManager, where changes to the estimate can be\n      // observed and absorbed.\n\n      // If the user has checked a box in the browser to ask it to use less\n      // data, the browser will expose this intent via connection.saveData.\n      // When that is true, we will default the max ABR height to 360p. Apps\n      // can override this if they wish.\n      //\n      // The decision to use 360p was somewhat arbitrary. We needed a default\n      // limit, and rather than restrict to a certain bandwidth, we decided to\n      // restrict resolution. This will implicitly restrict bandwidth and\n      // therefore save data. We (Shaka+Chrome) judged that:\n      //   - HD would be inappropriate\n      //   - If a user is asking their browser to save data, 360p it reasonable\n      //   - 360p would not look terrible on small mobile device screen\n      // We also found that:\n      //   - YouTube's website on mobile defaults to 360p (as of 2018)\n      //   - iPhone 6, in portrait mode, has a physical resolution big enough\n      //     for 360p widescreen, but a little smaller than 480p widescreen\n      //     (https://apple.co/2yze4es)\n      // If the content's lowest resolution is above 360p, AbrManager will use\n      // the lowest resolution.\n      if (navigator.connection.saveData) {\n        abrMaxHeight = 360;\n      }\n    }\n\n    const drm = {\n      retryParameters: shaka.net.NetworkingEngine.defaultRetryParameters(),\n      // These will all be verified by special cases in mergeConfigObjects_():\n      servers: {},    // key is arbitrary key system ID, value must be string\n      clearKeys: {},  // key is arbitrary key system ID, value must be string\n      advanced: {},    // key is arbitrary key system ID, value is a record type\n      delayLicenseRequestUntilPlayed: false,\n    };\n\n    const manifest = {\n      retryParameters: shaka.net.NetworkingEngine.defaultRetryParameters(),\n      availabilityWindowOverride: NaN,\n      dash: {\n        // Reference node to keep closure from removing it.\n        // If the argument is removed, it breaks our function length check\n        // in mergeConfigObjects_().\n        customScheme: (node) => {\n          if (node) return null;\n        },\n        clockSyncUri: '',\n        ignoreDrmInfo: false,\n        xlinkFailGracefully: false,\n        defaultPresentationDelay: 10,\n        ignoreMinBufferTime: false,\n      },\n    };\n\n    const streaming = {\n      retryParameters: shaka.net.NetworkingEngine.defaultRetryParameters(),\n      // Need some operation in the callback or else closure may remove calls\n      // to the function as it would be a no-op.\n      failureCallback: (error) => {\n        shaka.log.error('Unhandled streaming error', error);\n      },\n      rebufferingGoal: 2,\n      bufferingGoal: 10,\n      bufferBehind: 30,\n      ignoreTextStreamFailures: false,\n      alwaysStreamText: false,\n      startAtSegmentBoundary: false,\n      smallGapLimit: 0.5,\n      jumpLargeGaps: false,\n      durationBackoff: 1,\n      forceTransmuxTS: false,\n    };\n\n    const offline = {\n      // We need to set this to a throw-away implementation for now as our\n      // default implementation will need to reference other fields in the\n      // config. We will set it to our intended implementation after we have\n      // the top-level object created.\n      trackSelectionCallback: (tracks) => tracks,\n\n      // Need some operation in the callback or else closure may remove calls\n      // to the function as it would be a no-op.\n      progressCallback: (content, progress) => {\n        shaka.log.v2('Offline operation on',\n                     content.originalManifestUri,\n                     'progress at',\n                     progress);\n      },\n\n      // By default we use persistent licenses as forces errors to surface if\n      // a platform does not support offline licenses rather than causing\n      // unexpected behaviours when someone tries to plays downloaded content\n      // without a persistent license.\n      usePersistentLicense: true,\n    };\n\n    const abr = {\n      enabled: true,\n      defaultBandwidthEstimate: bandwidthEstimate,\n      switchInterval: 8,\n      bandwidthUpgradeTarget: 0.85,\n      bandwidthDowngradeTarget: 0.95,\n      restrictions: {\n        minWidth: 0,\n        maxWidth: Infinity,\n        minHeight: 0,\n        maxHeight: abrMaxHeight,\n        minPixels: 0,\n        maxPixels: Infinity,\n        minBandwidth: 0,\n        maxBandwidth: Infinity,\n      },\n    };\n\n    /** @type {shaka.extern.PlayerConfiguration} */\n    const config = {\n      drm: drm,\n      manifest: manifest,\n      streaming: streaming,\n      offline: offline,\n      abrFactory: shaka.abr.SimpleAbrManager,\n      abr: abr,\n      preferredAudioLanguage: '',\n      preferredTextLanguage: '',\n      preferredVariantRole: '',\n      preferredTextRole: '',\n      preferredAudioChannelCount: 2,\n      restrictions: {\n        minWidth: 0,\n        maxWidth: Infinity,\n        minHeight: 0,\n        maxHeight: Infinity,\n        minPixels: 0,\n        maxPixels: Infinity,\n        minBandwidth: 0,\n        maxBandwidth: Infinity,\n      },\n      playRangeStart: 0,\n      playRangeEnd: Infinity,\n      textDisplayFactory: () => null,\n    };\n\n    // Add this callback so that we can reference the preferred audio language\n    // through the config object so that if it gets updated, we have the\n    // updated value.\n    offline.trackSelectionCallback = (tracks) => {\n      return shaka.util.PlayerConfiguration.defaultTrackSelect(\n          tracks, config.preferredAudioLanguage);\n    };\n\n    return config;\n  }\n\n  /**\n   * Merges the given configuration changes into the given destination.  This\n   * uses the default Player configurations as the template.\n   *\n   * @param {shaka.extern.PlayerConfiguration} destination\n   * @param {!Object} updates\n   * @param {shaka.extern.PlayerConfiguration=} template\n   * @return {boolean}\n   */\n  static mergeConfigObjects(destination, updates, template) {\n    const overrides = {\n      '.drm.servers': '',\n      '.drm.clearKeys': '',\n      '.drm.advanced': {\n        distinctiveIdentifierRequired: false,\n        persistentStateRequired: false,\n        videoRobustness: '',\n        audioRobustness: '',\n        serverCertificate: new Uint8Array(0),\n        individualizationServer: '',\n      },\n    };\n    return shaka.util.ConfigUtils.mergeConfigObjects(\n        destination, updates,\n        template || shaka.util.PlayerConfiguration.createDefault(), overrides,\n        '');\n  }\n\n  /**\n   * @param {!Array.<shaka.extern.Track>} tracks\n   * @param {string} preferredAudioLanguage\n   * @return {!Array.<shaka.extern.Track>}\n   */\n  static defaultTrackSelect(tracks, preferredAudioLanguage) {\n    const ContentType = shaka.util.ManifestParserUtils.ContentType;\n    const LanguageUtils = shaka.util.LanguageUtils;\n\n    /** @type {!Array.<shaka.extern.Track>} */\n    const allVariants = tracks.filter((track) => track.type == 'variant');\n\n    /** @type {!Array.<shaka.extern.Track>} */\n    let selectedVariants = [];\n\n    // Find the locale that best matches our preferred audio locale.\n    const closestLocale = LanguageUtils.findClosestLocale(\n        preferredAudioLanguage,\n        allVariants.map((variant) => variant.language));\n    // If we found a locale that was close to our preference, then only use\n    // variants that use that locale.\n    if (closestLocale) {\n      selectedVariants = allVariants.filter((variant) => {\n        const locale = LanguageUtils.normalize(variant.language);\n        return locale == closestLocale;\n      });\n    }\n\n    // If we failed to get a language match, go with primary.\n    if (selectedVariants.length == 0) {\n      selectedVariants = allVariants.filter((variant) => {\n        return variant.primary;\n      });\n    }\n\n    // Otherwise, there is no good way to choose the language, so we don't\n    // choose a language at all.\n    if (selectedVariants.length == 0) {\n      // Issue a warning, but only if the content has multiple languages.\n      // Otherwise, this warning would just be noise.\n      const languages = new Set(allVariants.map((track) => {\n        return track.language;\n      }));\n\n      if (languages.size > 1) {\n        shaka.log.warning('Could not choose a good audio track based on ' +\n                          'language preferences or primary tracks.  An ' +\n                          'arbitrary language will be stored!');\n      }\n\n      // Default back to all variants.\n      selectedVariants = allVariants;\n    }\n\n    // From previously selected variants, choose the SD ones (height <= 480).\n    const tracksByHeight = selectedVariants.filter((track) => {\n      return track.height && track.height <= 480;\n    });\n\n    // If variants don't have video or no video with height <= 480 was\n    // found, proceed with the previously selected tracks.\n    if (tracksByHeight.length) {\n      // Sort by resolution, then select all variants which match the height\n      // of the highest SD res.  There may be multiple audio bitrates for the\n      // same video resolution.\n      tracksByHeight.sort((a, b) => b.height - a.height);\n      selectedVariants = tracksByHeight.filter((track) => {\n        return track.height == tracksByHeight[0].height;\n      });\n    }\n\n    /** @type {!Array.<shaka.extern.Track>} */\n    const selectedTracks = [];\n\n    // If there are multiple matches at different audio bitrates, select the\n    // middle bandwidth one.\n    if (selectedVariants.length) {\n      const middleIndex = Math.floor(selectedVariants.length / 2);\n      selectedVariants.sort((a, b) => a.bandwidth - b.bandwidth);\n      selectedTracks.push(selectedVariants[middleIndex]);\n    }\n\n    // Since this default callback is used primarily by our own demo app and by\n    // app developers who haven't thought about which tracks they want, we\n    // should select all text tracks, regardless of language.  This makes for a\n    // better demo for us, and does not rely on user preferences for the\n    // unconfigured app.\n    for (const track of tracks) {\n      if (track.type == ContentType.TEXT) { selectedTracks.push(track); }\n    }\n\n    return selectedTracks;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.Player');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.media.ActiveStreamMap');\ngoog.require('shaka.media.AdaptationSetCriteria');\ngoog.require('shaka.media.DrmEngine');\ngoog.require('shaka.media.ManifestParser');\ngoog.require('shaka.media.MediaSourceEngine');\ngoog.require('shaka.media.MediaSourcePlayheadObserver');\ngoog.require('shaka.media.Playhead');\ngoog.require('shaka.media.PlayheadObserver');\ngoog.require('shaka.media.PreferenceBasedCriteria');\ngoog.require('shaka.media.SegmentReference');\ngoog.require('shaka.media.StreamingEngine');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.text.SimpleTextDisplayer');\ngoog.require('shaka.util.ArrayUtils');\ngoog.require('shaka.util.Destroyer');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.FakeEventTarget');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.MimeUtils');\ngoog.require('shaka.util.MultiMap');\ngoog.require('shaka.util.ObjectUtils');\ngoog.require('shaka.util.PlayerConfiguration');\ngoog.require('shaka.util.PublicPromise');\ngoog.require('shaka.util.StreamUtils');\n\n\n/**\n * Construct a Player.\n *\n * @param {HTMLMediaElement=} mediaElem If provided, this is equivalent to\n *   calling attach(mediaElem, true) immediately after construction.\n * @param {function(shaka.Player)=} dependencyInjector Optional callback\n *   which is called to inject mocks into the Player.  Used for testing.\n *\n * @constructor\n * @struct\n * @implements {shaka.util.IDestroyable}\n * @extends {shaka.util.FakeEventTarget}\n * @export\n */\nshaka.Player = function(mediaElem, dependencyInjector) {\n  shaka.util.FakeEventTarget.call(this);\n\n  /** @private {HTMLMediaElement} */\n  this.video_ = null;\n\n  /**\n   * Only holds the visibility setting until a textDisplayer_ is created.\n   * @private {boolean}\n   */\n  this.textVisibility_ = false;\n\n  /** @private {shaka.extern.TextDisplayer} */\n  this.textDisplayer_ = null;\n\n  /** @private {shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  /** @private {shaka.net.NetworkingEngine} */\n  this.networkingEngine_ = null;\n\n  /** @private {shaka.media.DrmEngine} */\n  this.drmEngine_ = null;\n\n  /** @private {shaka.media.MediaSourceEngine} */\n  this.mediaSourceEngine_ = null;\n\n  /** @private {shaka.media.Playhead} */\n  this.playhead_ = null;\n\n  /** @private {shaka.media.PlayheadObserver} */\n  this.playheadObserver_ = null;\n\n  /** @private {shaka.media.StreamingEngine} */\n  this.streamingEngine_ = null;\n\n  /** @private {shaka.extern.ManifestParser} */\n  this.parser_ = null;\n\n  /** @private {?shaka.extern.Manifest} */\n  this.manifest_ = null;\n\n  /** @private {?string} */\n  this.assetUri_ = null;\n\n  /** @private {shaka.extern.AbrManager} */\n  this.abrManager_ = null;\n\n  /**\n   * The factory that was used to create the abrManager_ instance.\n   * @private {?shaka.extern.AbrManager.Factory}\n   */\n  this.abrManagerFactory_ = null;\n\n  /**\n   * Contains an ID for use with creating streams.  The manifest parser should\n   * start with small IDs, so this starts with a large one.\n   * @private {number}\n   */\n  this.nextExternalStreamId_ = 1e9;\n\n  /** @private {!Array.<number>} */\n  this.loadingTextStreamIds_ = [];\n\n  /** @private {boolean} */\n  this.buffering_ = false;\n\n  /** @private {boolean} */\n  this.switchingPeriods_ = true;\n\n  /** @private {?function()} */\n  this.onCancelLoad_ = null;\n\n  /** @private {Promise} */\n  this.unloadChain_ = null;\n\n  /** @private {?shaka.extern.Variant} */\n  this.deferredVariant_ = null;\n\n  /** @private {boolean} */\n  this.deferredVariantClearBuffer_ = false;\n\n  /** @private {number} */\n  this.deferredVariantClearBufferSafeMargin_ = 0;\n\n  /** @private {?shaka.extern.Stream} */\n  this.deferredTextStream_ = null;\n\n  /**\n   * If regions are added before we have a playhead observer, we need to cache\n   * them until the playhead observer has been created.\n   *\n   * @private {!Array.<shaka.extern.TimelineRegionInfo>}\n   */\n  this.pendingTimelineRegions_ = [];\n\n  /**\n   * A mapping of which streams are/were active in each period. Used when the\n   * current period (the one containing playhead) differs from the active\n   * period (the one being streamed in by streaming engine).\n   *\n   * @private {!shaka.media.ActiveStreamMap}\n   */\n  this.activeStreams_ = new shaka.media.ActiveStreamMap();\n\n  /** @private {?shaka.extern.PlayerConfiguration} */\n  this.config_ = this.defaultConfig_();\n\n  /** @private {{width: number, height: number}} */\n  this.maxHwRes_ = {width: Infinity, height: Infinity};\n\n  /** @private {shaka.extern.Stats} */\n  this.stats_ = this.getCleanStats_();\n\n  /** @private {number} */\n  this.lastTimeStatsUpdateTimestamp_ = 0;\n\n  /** @private {!shaka.media.AdaptationSetCriteria} */\n  this.currentAdaptationSetCriteria_ = new shaka.media.PreferenceBasedCriteria(\n      this.config_.preferredAudioLanguage,\n      this.config_.preferredVariantRole,\n      this.config_.preferredAudioChannelCount);\n\n  /** @private {string} */\n  this.currentTextLanguage_ = this.config_.preferredTextLanguage;\n\n  /** @private {string} */\n  this.currentTextRole_ = this.config_.preferredTextRole;\n\n  if (dependencyInjector) {\n    dependencyInjector(this);\n  }\n\n  this.networkingEngine_ = this.createNetworkingEngine();\n\n  if (mediaElem) {\n    this.attach(mediaElem, true /* initializeMediaSource */);\n  }\n\n  /** @private {!shaka.util.Destroyer} */\n  this.destroyer_ = new shaka.util.Destroyer(async () => {\n    // Then, destroy other components and clear fields.\n    let p = Promise.all([\n      this.eventManager_ ? this.eventManager_.destroy() : null,\n      this.networkingEngine_ ? this.networkingEngine_.destroy() : null,\n    ]);\n\n    this.textVisibility_ = false;\n    this.eventManager_ = null;\n    this.abrManager_ = null;\n    this.abrManagerFactory_ = null;\n    this.networkingEngine_ = null;\n    this.config_ = null;\n\n    await p;\n  });\n\n  // If the browser comes back online after being offline, then try to play\n  // again.\n  this.eventManager_.listen(window, 'online', () => {\n    this.retryStreaming();\n  });\n};\n\ngoog.inherits(shaka.Player, shaka.util.FakeEventTarget);\n\n\n/**\n * @return {!Promise}\n * @private\n */\nshaka.Player.prototype.cancelLoad_ = function() {\n  if (!this.onCancelLoad_) {\n    return Promise.resolve();\n  }\n\n  let stopParser = Promise.resolve();\n  if (this.parser_) {\n    // Stop the parser manually, to ensure that any network calls it may be\n    // making are stopped in a timely fashion.\n    // This happens in parallel with cancelling the load chain.\n    // Otherwise, destroying will wait for any failing network calls to run\n    // out of retries.\n    stopParser = this.parser_.stop();\n    this.parser_ = null;\n  }\n  return Promise.all([stopParser, this.onCancelLoad_()]);\n};\n\n\n/**\n * After destruction, a Player object cannot be used again.\n *\n * @override\n * @export\n */\nshaka.Player.prototype.destroy = async function() {\n  // First, detach from the media element.  This implies unloading content\n  // and canceling pending loads.  This must be called before the destroyer\n  // as it will indirectly check if the player has already been destroyed and\n  // won't execute as expected.  Calling detach multiple times is safe, so it\n  // is okay to be outside the protection of the destroyer.\n  await this.detach();\n  await this.destroyer_.destroy();\n};\n\n\n/**\n * @define {string} A version number taken from git at compile time.\n * @export\n */\nshaka.Player.version = 'v2.5.0-beta2-master-uncompiled';\n\n\n/**\n * @event shaka.Player.ErrorEvent\n * @description Fired when a playback error occurs.\n * @property {string} type\n *   'error'\n * @property {!shaka.util.Error} detail\n *   An object which contains details on the error.  The error's 'category' and\n *   'code' properties will identify the specific error that occurred.  In an\n *   uncompiled build, you can also use the 'message' and 'stack' properties\n *   to debug.\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.EmsgEvent\n * @description Fired when a non-typical emsg is found in a segment.\n * @property {string} type\n *   'emsg'\n * @property {shaka.extern.EmsgInfo} detail\n *   An object which contains the content of the emsg box.\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.DrmSessionUpdateEvent\n * @description Fired when the CDM has accepted the license response.\n * @property {string} type\n *   'drmsessionupdate'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.TimelineRegionAddedEvent\n * @description Fired when a media timeline region is added.\n * @property {string} type\n *   'timelineregionadded'\n * @property {shaka.extern.TimelineRegionInfo} detail\n *   An object which contains a description of the region.\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.TimelineRegionEnterEvent\n * @description Fired when the playhead enters a timeline region.\n * @property {string} type\n *   'timelineregionenter'\n * @property {shaka.extern.TimelineRegionInfo} detail\n *   An object which contains a description of the region.\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.TimelineRegionExitEvent\n * @description Fired when the playhead exits a timeline region.\n * @property {string} type\n *   'timelineregionexit'\n * @property {shaka.extern.TimelineRegionInfo} detail\n *   An object which contains a description of the region.\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.BufferingEvent\n * @description Fired when the player's buffering state changes.\n * @property {string} type\n *   'buffering'\n * @property {boolean} buffering\n *   True when the Player enters the buffering state.\n *   False when the Player leaves the buffering state.\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.LoadingEvent\n * @description Fired when the player begins loading.\n *   Used by the Cast receiver to determine idle state.\n * @property {string} type\n *   'loading'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.UnloadingEvent\n * @description Fired when the player unloads or fails to load.\n *   Used by the Cast receiver to determine idle state.\n * @property {string} type\n *   'unloading'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.TextTrackVisibilityEvent\n * @description Fired when text track visibility changes.\n * @property {string} type\n *   'texttrackvisibility'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.TracksChangedEvent\n * @description Fired when the list of tracks changes.  For example, this will\n *   happen when changing periods or when track restrictions change.\n * @property {string} type\n *   'trackschanged'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.AdaptationEvent\n * @description Fired when an automatic adaptation causes the active tracks\n *   to change.  Does not fire when the application calls selectVariantTrack()\n *   selectTextTrack(), selectAudioLanguage() or selectTextLanguage().\n * @property {string} type\n *   'adaptation'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.VariantChangedEvent\n * @description Fired when a call from the application caused a variant change.\n *  Can be triggered by calls to selectVariantTrack() or selectAudioLanguage().\n *  Does not fire when an automatic adaptation causes a variant change.\n * @property {string} type\n *   'variantchanged'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.TextChangedEvent\n * @description Fired when a call from the application caused a text stream\n *  change. Can be triggered by calls to selectTextTrack() or\n *  selectTextLanguage().\n * @property {string} type\n *   'textchanged'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.ExpirationUpdatedEvent\n * @description Fired when there is a change in the expiration times of an\n *   EME session.\n * @property {string} type\n *   'expirationupdated'\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.LargeGapEvent\n * @description Fired when the playhead enters a large gap.  If\n *   |config.streaming.jumpLargeGaps| is set, the default action of this event\n *   is to jump the gap; this can be prevented by calling preventDefault() on\n *   the event object.\n * @property {string} type\n *   'largegap'\n * @property {number} currentTime\n *   The current time of the playhead.\n * @property {number} gapSize\n *   The size of the gap, in seconds.\n * @exportDoc\n */\n\n\n/**\n * @event shaka.Player.StreamingEvent\n * @description Fired after the manifest has been parsed and track information\n *   is available, but before streams have been chosen and before any segments\n *   have been fetched.  You may use this event to configure the player based on\n *   information found in the manifest.\n * @property {string} type\n *   'streaming'\n * @exportDoc\n */\n\n\n/**\n * These are the EME key statuses that represent restricted playback.\n * 'usable', 'released', 'output-downscaled', 'status-pending' are statuses\n * of the usable keys.  'expired' status is being handled separately in\n * DrmEngine.\n *\n * @const {!Array.<string>}\n * @private\n */\nshaka.Player.restrictedStatuses_ = ['output-restricted', 'internal-error'];\n\n\n/** @private {!Object.<string, function():*>} */\nshaka.Player.supportPlugins_ = {};\n\n\n/**\n * Registers a plugin callback that will be called with support().  The\n * callback will return the value that will be stored in the return value from\n * support().\n *\n * @param {string} name\n * @param {function():*} callback\n * @export\n */\nshaka.Player.registerSupportPlugin = function(name, callback) {\n  shaka.Player.supportPlugins_[name] = callback;\n};\n\n\n/**\n * Return whether the browser provides basic support.  If this returns false,\n * Shaka Player cannot be used at all.  In this case, do not construct a Player\n * instance and do not use the library.\n *\n * @return {boolean}\n * @export\n */\nshaka.Player.isBrowserSupported = function() {\n  // Basic features needed for the library to be usable.\n  let basic = !!window.Promise && !!window.Uint8Array &&\n              !!Array.prototype.forEach;\n\n  return basic &&\n      shaka.media.MediaSourceEngine.isBrowserSupported() &&\n      shaka.media.DrmEngine.isBrowserSupported();\n};\n\n\n/**\n * Probes the browser to determine what features are supported.  This makes a\n * number of requests to EME/MSE/etc which may result in user prompts.  This\n * should only be used for diagnostics.\n *\n * NOTE: This may show a request to the user for permission.\n *\n * @see https://bit.ly/2ywccmH\n * @return {!Promise.<shaka.extern.SupportType>}\n * @export\n */\nshaka.Player.probeSupport = function() {\n  goog.asserts.assert(shaka.Player.isBrowserSupported(),\n                      'Must have basic support');\n  return shaka.media.DrmEngine.probeSupport().then(function(drm) {\n    let manifest = shaka.media.ManifestParser.probeSupport();\n    let media = shaka.media.MediaSourceEngine.probeSupport();\n    let ret = {\n      manifest: manifest,\n      media: media,\n      drm: drm,\n    };\n\n    let plugins = shaka.Player.supportPlugins_;\n    for (let name in plugins) {\n      ret[name] = plugins[name]();\n    }\n\n    return ret;\n  });\n};\n\n\n/**\n * Attach the Player to a media element (audio or video tag).\n *\n * If the Player is already attached to a media element, the previous element\n * will first be detached.\n *\n * After calling attach, the media element is owned by the Player and should not\n * be used for other purposes until detach or destroy() are called.\n *\n * @param {!HTMLMediaElement} mediaElem\n * @param {boolean=} initializeMediaSource If true, start initializing\n *   MediaSource right away.  This can improve load() latency for\n *   MediaSource-based playbacks.  Defaults to true.\n *\n * @return {!Promise} If initializeMediaSource is false, the Promise is resolved\n *   as soon as the Player has released any previous media element and taken\n *   ownership of the new one.  If initializeMediaSource is true, the Promise\n *   resolves after MediaSource has been subsequently initialized on the new\n *   media element.\n * @export\n */\nshaka.Player.prototype.attach =\n    async function(mediaElem, initializeMediaSource) {\n  if (initializeMediaSource === undefined) {\n    initializeMediaSource = true;\n  }\n\n  if (this.video_) {\n    await this.detach();\n  }\n\n  this.video_ = mediaElem;\n  goog.asserts.assert(mediaElem, 'Cannot attach to a null media element!');\n\n  // Listen for video errors.\n  this.eventManager_.listen(this.video_, 'error',\n      this.onVideoError_.bind(this));\n\n  if (initializeMediaSource) {\n    // Start the (potentially slow) process of opening MediaSource now.\n    this.mediaSourceEngine_ = this.createMediaSourceEngine();\n    await this.mediaSourceEngine_.open();\n  }\n};\n\n\n/**\n * Detaches the Player from the media element (audio or video tag).\n *\n * After calling detach and waiting for the Promise to be resolved, the media\n * element is no longer owned by the Player and may be used for other purposes.\n *\n * @return {!Promise} Resolved when the Player has released any previous media\n *   element.\n * @export\n */\nshaka.Player.prototype.detach = async function() {\n  if (!this.video_) {\n    return;\n  }\n\n  // Unload any loaded content.\n  await this.unload(false /* reinitializeMediaSource */);\n\n  // Stop listening for video errors.\n  this.eventManager_.unlisten(this.video_, 'error');\n\n  this.video_ = null;\n};\n\n\n/**\n * Get a parser for the asset located at |assetUri|.\n *\n * @param {string} assetUri\n * @param {?string} mimeType\n *    When not null, the mimeType will be used to find the best manifest parser\n *    for the given asset.\n * @return {!Promise.<shaka.extern.ManifestParser>}\n * @private\n */\nshaka.Player.prototype.getParser_ = async function(assetUri, mimeType) {\n  goog.asserts.assert(\n      this.networkingEngine_,\n      'Cannot call |getParser_| after calling |destroy|.');\n  goog.asserts.assert(\n      this.config_,\n      'Cannot call |getParser_| after calling |destroy|');\n\n  const Factory = await shaka.media.ManifestParser.getFactory(\n      assetUri,\n      this.networkingEngine_,\n      this.config_.manifest.retryParameters,\n      mimeType);\n\n  return new Factory();\n};\n\n\n/**\n * Use the current state of the player and load the asset as a manifest. This\n * requires that |this.networkingEngine_|, |this.assetUri_|, and |this.parser_|\n * to have already been set.\n *\n * @return {!Promise.<shaka.extern.Manifest>} Resolves with the manifest.\n * @private\n */\nshaka.Player.prototype.loadManifest_ = function() {\n  goog.asserts.assert(\n      this.networkingEngine_,\n      'Cannot call |loadManifest_| after calling |destroy|.');\n  goog.asserts.assert(\n      this.assetUri_,\n      'Cannot call |loadManifest_| after calling |destroy|.');\n  goog.asserts.assert(\n      this.parser_,\n      'Cannot call |loadManifest_| after calling |destroy|.');\n\n  let playerInterface = {\n    networkingEngine: this.networkingEngine_,\n    filterNewPeriod: this.filterNewPeriod_.bind(this),\n    filterAllPeriods: this.filterAllPeriods_.bind(this),\n\n    // Called when the parser finds a timeline region. This can be called\n    // before we start playback or during playback (live/in-progress manifest).\n    onTimelineRegionAdded: (region) => {\n      if (this.playheadObserver_) {\n        this.playheadObserver_.addTimelineRegion(region);\n      } else {\n        // Since there is no playhead observer right now, cache the regions so\n        // that they can be added to the playhead observer when it is created.\n        this.pendingTimelineRegions_.push(region);\n      }\n    },\n\n    onEvent: this.onEvent_.bind(this),\n    onError: this.onError_.bind(this),\n  };\n\n  return this.parser_.start(this.assetUri_, playerInterface);\n};\n\n\n/**\n * When there is a variant with video and audio, filter out all variants which\n * lack one or the other.\n * This is to avoid problems where we choose audio-only variants because they\n * have lower bandwidth, when there are variants with video available.\n *\n * @private\n */\nshaka.Player.prototype.filterManifestForAVVariants_ = function() {\n  const isAVVariant = (variant) => {\n    // Audio-video variants may include both streams separately or may be single\n    // multiplexed streams with multiple codecs.\n    return (variant.video && variant.audio) ||\n           (variant.video && variant.video.codecs.includes(','));\n  };\n  const hasAVVariant = this.manifest_.periods.some((period) => {\n    return period.variants.some(isAVVariant);\n  });\n  if (hasAVVariant) {\n    shaka.log.debug('Found variant with audio and video content, ' +\n        'so filtering out audio-only content in all periods.');\n    this.manifest_.periods.forEach((period) => {\n      period.variants = period.variants.filter(isAVVariant);\n    });\n  }\n\n  if (this.manifest_.periods.length == 0) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.NO_PERIODS);\n  }\n};\n\n\n/**\n * Load a manifest.\n *\n * @param {string} assetUri\n * @param {?number=} startTime Optional start time, in seconds, to begin\n *   playback.\n *   Defaults to 0 for VOD and to the live edge for live.\n *   Set a positive number to start with a certain offset the beginning.\n *   Set a negative number to start with a certain offset from the end.  This is\n *   intended for use with live streams, to start at a fixed offset from the\n *   live edge.\n * @param {string|shaka.extern.ManifestParser.Factory=} mimeType\n *   The mime type for the content |manifestUri| points to or a manifest parser\n *   factory to override auto-detection or use an unregistered parser. Passing\n *   a manifest parser factory is deprecated and will be removed.\n * @return {!Promise} Resolved when the manifest has been loaded and playback\n *   has begun; rejected when an error occurs or the call was interrupted by\n *   destroy(), unload() or another call to load().\n * @export\n */\nshaka.Player.prototype.load = async function(\n    assetUri, startTime = null, mimeType) {\n  if (!this.video_) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.PLAYER,\n        shaka.util.Error.Code.NO_VIDEO_ELEMENT);\n  }\n\n  let cancelValue;\n  /** @type {!shaka.util.PublicPromise} */\n  const cancelPromise = new shaka.util.PublicPromise();\n  const cancelCallback = () => {\n    cancelValue = new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.PLAYER,\n        shaka.util.Error.Code.LOAD_INTERRUPTED);\n    return cancelPromise;\n  };\n\n  this.dispatchEvent(new shaka.util.FakeEvent('loading'));\n  let loadStartTime = Date.now();\n\n  try {\n    const video = this.video_;\n\n    const unloadPromise = this.unload();\n    this.onCancelLoad_ = cancelCallback;\n    await unloadPromise;\n\n    // Not tracked in stats because it should be insignificant.\n    // Logged in case it is not.\n    shaka.log.debug('Unload latency:', (Date.now() - loadStartTime) / 1000);\n\n    this.stats_ = this.getCleanStats_();\n\n    this.eventManager_.listen(video, 'playing', () => this.updateState_());\n    this.eventManager_.listen(video, 'pause', () => this.updateState_());\n    this.eventManager_.listen(video, 'ended', () => this.updateState_());\n\n    const AbrManagerFactory = this.config_.abrFactory;\n    if (!this.abrManager_ || this.abrManagerFactory_ != AbrManagerFactory) {\n      this.abrManagerFactory_ = AbrManagerFactory;\n      this.abrManager_ = new AbrManagerFactory();\n      this.abrManager_.configure(this.config_.abr);\n    }\n\n    const TextDisplayerFactory = this.config_.textDisplayFactory;\n    this.textDisplayer_ = new TextDisplayerFactory();\n    this.textDisplayer_.setTextVisibility(this.textVisibility_);\n\n    if (cancelValue) throw cancelValue;\n\n    /** @type {?shaka.extern.ManifestParser.Factory} */\n    let Factory = null;\n    /** @type {?string} */\n    let contentMimeType = null;\n\n\n    // TODO(vaage) : Remove the code that supports manifest parser factories\n    //               in v2.6.\n    if (mimeType) {\n      if (typeof mimeType == 'string') {\n        contentMimeType = /** @type {string} */(mimeType);\n      } else {\n        shaka.log.alwaysWarn(\n            'Loading with a manifest parser factory is deprecated. Instead ' +\n                'please register a manifest parser and pass in the mime type.');\n        Factory = /** @type {shaka.extern.ManifestParser.Factory} */(mimeType);\n      }\n    }\n\n    this.parser_ = Factory ?\n                   new Factory() :\n                   await this.getParser_(assetUri, contentMimeType);\n\n    this.parser_.configure(this.config_.manifest);\n\n    this.assetUri_ = assetUri;\n\n    const manifest = await this.loadManifest_();\n    this.manifest_ = manifest;\n\n    if (cancelValue) throw cancelValue;\n\n    this.filterManifestForAVVariants_();\n\n    this.drmEngine_ = await this.createDrmEngine(manifest);\n\n    if (cancelValue) throw cancelValue;\n\n    // Re-filter the manifest after DRM has been initialized.\n    this.filterAllPeriods_(this.manifest_.periods);\n\n    // TODO: When a manifest update adds a new period, that period's closed\n    // captions should also be turned into text streams. This should be called\n    // for each new period as well.\n    this.createTextStreamsForClosedCaptions_(this.manifest_.periods);\n\n    this.lastTimeStatsUpdateTimestamp_ = Date.now() / 1000;\n\n    // Copy preferred languages from the config again, in case the config was\n    // changed between construction and playback.\n    this.currentAdaptationSetCriteria_ =\n        new shaka.media.PreferenceBasedCriteria(\n            this.config_.preferredAudioLanguage,\n            this.config_.preferredVariantRole,\n            this.config_.preferredAudioChannelCount);\n\n    this.currentTextLanguage_ = this.config_.preferredTextLanguage;\n\n    shaka.Player.applyPlayRange_(this.manifest_.presentationTimeline,\n                                 this.config_.playRangeStart,\n                                 this.config_.playRangeEnd,\n                                 this.isLive());\n\n    await this.drmEngine_.attach(video);\n\n    if (cancelValue) throw cancelValue;\n\n    this.abrManager_.init((variant, clearBuffer, safeMargin) => {\n      return this.switch_(variant, clearBuffer, safeMargin);\n    });\n\n    if (!this.mediaSourceEngine_) {\n      this.mediaSourceEngine_ = this.createMediaSourceEngine();\n    }\n\n    this.mediaSourceEngine_.setTextDisplayer(this.textDisplayer_);\n\n    // TODO: If there's a default value in the function definition, startTime\n    // can never be undefined.  Even if the caller explicitly passes undefined,\n    // it will be assigned the default value.  So there is no reason for the\n    // compiler to continue treating startTime as (number|null|undefined) when\n    // the default value is null.  File a bug on the Closure compiler.\n    goog.asserts.assert(startTime !== undefined, 'Cannot be undefined!');\n\n    this.playhead_ = this.createPlayhead(startTime);\n    this.playheadObserver_ = this.createPlayheadObserver();\n\n    this.streamingEngine_ = this.createStreamingEngine();\n    this.streamingEngine_.configure(this.config_.streaming);\n\n    // If the content is multi-codec and the browser can play more than one of\n    // them, choose codecs now before we initialize streaming.\n    this.chooseCodecsAndFilterManifest_();\n\n    this.dispatchEvent(new shaka.util.FakeEvent('streaming'));\n\n    await this.streamingEngine_.init();\n\n    if (cancelValue) throw cancelValue;\n\n    if (this.config_.streaming.startAtSegmentBoundary) {\n      let time = this.adjustStartTime_(this.playhead_.getTime());\n      this.playhead_.setStartTime(time);\n    }\n\n    // Re-filter the manifest after streams have been chosen.\n    this.manifest_.periods.forEach(this.filterNewPeriod_.bind(this));\n    // Dispatch a 'trackschanged' event now that all initial filtering is done.\n    this.onTracksChanged_();\n    // Since the first streams just became active, send an adaptation event.\n    this.onAdaptation_();\n\n    // Now that we've filtered out variants that aren't compatible with the\n    // active one, update abr manager with filtered variants for the current\n    // period.\n    const currentPeriod = this.streamingEngine_.getCurrentPeriod();\n    const hasPrimary = currentPeriod.variants.some((v) => v.primary);\n\n    if (!this.config_.preferredAudioLanguage && !hasPrimary) {\n      shaka.log.warning('No preferred audio language set.  We will choose an ' +\n                        'arbitrary language initially');\n    }\n\n    this.chooseVariant_(currentPeriod.variants);\n\n    for (const region of this.pendingTimelineRegions_) {\n      this.playheadObserver_.addTimelineRegion(region);\n    }\n    this.pendingTimelineRegions_ = [];\n\n    // Wait for the 'loadeddata' event to measure load() latency.\n    this.eventManager_.listenOnce(video, 'loadeddata', () => {\n      // Compute latency in seconds (Date.now() gives ms):\n      let latency = (Date.now() - loadStartTime) / 1000;\n      this.stats_.loadLatency = latency;\n      shaka.log.debug('Load latency:', latency);\n    });\n\n    if (cancelValue) throw cancelValue;\n    this.onCancelLoad_ = null;\n  } catch (error) {\n    goog.asserts.assert(error instanceof shaka.util.Error,\n                        'Wrong error type!');\n    shaka.log.debug('load() failed:', error,\n        error ? error.message : null, error ? error.stack : null);\n\n    // If we haven't started another load, clear the onCancelLoad_.\n    cancelPromise.resolve();\n    if (this.onCancelLoad_ == cancelCallback) {\n      this.onCancelLoad_ = null;\n      this.dispatchEvent(new shaka.util.FakeEvent('unloading'));\n    }\n\n    // If part of the load chain was aborted, that async call may have thrown.\n    // In those cases, we want the cancelation error, not the thrown error.\n    if (cancelValue) {\n      return Promise.reject(cancelValue);\n    }\n    return Promise.reject(error);\n  }\n};\n\n\n/**\n * In case of multiple usable codecs, choose one based on lowest average\n * bandwidth and filter out the rest.\n * @private\n */\nshaka.Player.prototype.chooseCodecsAndFilterManifest_ = function() {\n  // Collect a list of variants for all periods.\n  /** @type {!Array.<shaka.extern.Variant>} */\n  let variants = this.manifest_.periods.reduce(\n      (variants, period) => variants.concat(period.variants), []);\n\n  // To start, consider a subset of variants based on audio channel preferences.\n  // For some content (#1013), surround-sound variants will use a different\n  // codec than stereo variants, so it is important to choose codecs **after**\n  // considering the audio channel config.\n  variants = shaka.util.StreamUtils.filterVariantsByAudioChannelCount(\n      variants, this.config_.preferredAudioChannelCount);\n\n  function variantCodecs(variant) {\n    // Only consider the base of the codec string.  For example, these should\n    // both be considered the same codec: avc1.42c01e, avc1.4d401f\n    let baseVideoCodec = '';\n    if (variant.video) {\n      baseVideoCodec = shaka.util.MimeUtils.getCodecBase(variant.video.codecs);\n    }\n\n    let baseAudioCodec = '';\n    if (variant.audio) {\n      baseAudioCodec = shaka.util.MimeUtils.getCodecBase(variant.audio.codecs);\n    }\n\n    return baseVideoCodec + '-' + baseAudioCodec;\n  }\n\n  // Now organize variants into buckets by codecs.\n  /** @type {!shaka.util.MultiMap.<shaka.extern.Variant>} */\n  const variantsByCodecs = new shaka.util.MultiMap();\n  variants.forEach((variant) => {\n    const group = variantCodecs(variant);\n    variantsByCodecs.push(group, variant);\n  });\n\n  // Compute the average bandwidth for each group of variants.\n  // Choose the lowest-bandwidth codecs.\n  let bestCodecs = null;\n  let lowestAverageBandwidth = Infinity;\n  variantsByCodecs.forEach((codecs, variants) => {\n    let sum = 0;\n    let num = 0;\n    variants.forEach(function(variant) {\n      sum += variant.bandwidth || 0;\n      ++num;\n    });\n    let averageBandwidth = sum / num;\n    shaka.log.debug('codecs', codecs, 'avg bandwidth', averageBandwidth);\n\n    if (averageBandwidth < lowestAverageBandwidth) {\n      bestCodecs = codecs;\n      lowestAverageBandwidth = averageBandwidth;\n    }\n  });\n  goog.asserts.assert(bestCodecs != null, 'Should have chosen codecs!');\n  goog.asserts.assert(!isNaN(lowestAverageBandwidth),\n      'Bandwidth should be a number!');\n\n  // Filter out any variants that don't match, forcing AbrManager to choose from\n  // the most efficient variants possible.\n  this.manifest_.periods.forEach(function(period) {\n    period.variants = period.variants.filter(function(variant) {\n      let codecs = variantCodecs(variant);\n      if (codecs == bestCodecs) return true;\n\n      shaka.log.debug('Dropping Variant (better codec available)', variant);\n      return false;\n    });\n  });\n};\n\n\n/**\n * Create, configure, and initialize a new DrmEngine instance. This may be\n * replaced by tests to create fake instances instead.\n *\n * @param {shaka.extern.Manifest} manifest\n * @return {!Promise.<!shaka.media.DrmEngine>}\n */\nshaka.Player.prototype.createDrmEngine = async function(manifest) {\n  goog.asserts.assert(\n      this.networkingEngine_,\n      'Should not call |createDrmEngine| after |destroy|.');\n\n  const playerInterface = {\n    netEngine: this.networkingEngine_,\n    onError: (e) => {\n      this.onError_(e);\n    },\n    onKeyStatus: (map) => {\n      this.onKeyStatus_(map);\n    },\n    onExpirationUpdated: (id, expiration) => {\n      this.onExpirationUpdated_(id, expiration);\n    },\n    onEvent: (e) => {\n      this.onEvent_(e);\n    },\n  };\n\n  /** @type {!shaka.media.DrmEngine} */\n  const drmEngine = new shaka.media.DrmEngine(playerInterface);\n  drmEngine.configure(this.config_.drm);\n\n  /** @type {!Array.<shaka.extern.Variant>} */\n  const variants = shaka.util.StreamUtils.getAllVariants(manifest);\n  await drmEngine.initForPlayback(variants, manifest.offlineSessionIds);\n\n  return drmEngine;\n};\n\n\n/**\n * Creates a new instance of NetworkingEngine.  This can be replaced by tests\n * to create fake instances instead.\n *\n * @return {!shaka.net.NetworkingEngine}\n */\nshaka.Player.prototype.createNetworkingEngine = function() {\n  /** @type {function(number, number)} */\n  const onProgressUpdated_ = (deltaTimeMs, numBytes) => {\n    // In some situations, such as during offline storage, the abr manager might\n    // not yet exist. Therefore, we need to check if abr manager has been\n    // initialized before using it.\n    if (this.abrManager_) {\n      this.abrManager_.segmentDownloaded(deltaTimeMs, numBytes);\n    }\n  };\n\n  return new shaka.net.NetworkingEngine(onProgressUpdated_);\n};\n\n\n/**\n * Creates a new instance of Playhead.  This can be replaced by tests to create\n * fake instances instead.\n *\n * @param {?number} startTime\n * @return {!shaka.media.Playhead}\n */\nshaka.Player.prototype.createPlayhead = function(startTime) {\n  goog.asserts.assert(this.manifest_, 'Must have manifest');\n  goog.asserts.assert(this.video_, 'Must have video');\n  return new shaka.media.Playhead(\n      this.video_,\n      this.manifest_.presentationTimeline,\n      this.manifest_.minBufferTime || 0,\n      this.config_.streaming,\n      startTime,\n      this.onSeek_.bind(this),\n      this.onEvent_.bind(this));\n};\n\n\n/**\n * Creates a new instance of PlayheadOvserver.  This can be replaced by tests to\n * create fake instances instead.\n *\n * @return {!shaka.media.PlayheadObserver}\n */\nshaka.Player.prototype.createPlayheadObserver = function() {\n  goog.asserts.assert(this.video_, 'Must have video element');\n  goog.asserts.assert(this.manifest_, 'Must have manifest');\n  goog.asserts.assert(this.mediaSourceEngine_, 'Must have media source engine');\n\n  let impl = new shaka.media.MediaSourcePlayheadObserver(\n      this.video_,\n      this.mediaSourceEngine_,\n      this.manifest_);\n\n  return new shaka.media.PlayheadObserver(\n      this.video_,\n      this.manifest_.minBufferTime,\n      this.config_.streaming,\n      this.onBuffering_.bind(this),\n      this.onEvent_.bind(this),\n      this.onChangePeriod_.bind(this),\n      impl);\n};\n\n\n/**\n * Creates a new instance of MediaSourceEngine.  This can be replaced by tests\n * to create fake instances instead.\n *\n * @return {!shaka.media.MediaSourceEngine}\n */\nshaka.Player.prototype.createMediaSourceEngine = function() {\n  return new shaka.media.MediaSourceEngine(this.video_);\n};\n\n\n/**\n * Creates a new instance of StreamingEngine.  This can be replaced by tests\n * to create fake instances instead.\n *\n * @return {!shaka.media.StreamingEngine}\n */\nshaka.Player.prototype.createStreamingEngine = function() {\n  goog.asserts.assert(\n      this.playhead_ && this.playheadObserver_ && this.mediaSourceEngine_ &&\n          this.manifest_,\n      'Must not be destroyed');\n\n  /** @type {shaka.media.StreamingEngine.PlayerInterface} */\n  let playerInterface = {\n    playhead: this.playhead_,\n    mediaSourceEngine: this.mediaSourceEngine_,\n    netEngine: this.networkingEngine_,\n    onChooseStreams: this.onChooseStreams_.bind(this),\n    onCanSwitch: this.canSwitch_.bind(this),\n    onError: this.onError_.bind(this),\n    onEvent: this.onEvent_.bind(this),\n    onManifestUpdate: this.onManifestUpdate_.bind(this),\n    onSegmentAppended: this.onSegmentAppended_.bind(this),\n  };\n\n  return new shaka.media.StreamingEngine(this.manifest_, playerInterface);\n};\n\n\n/**\n * Configure the Player instance.\n *\n * The config object passed in need not be complete.  It will be merged with\n * the existing Player configuration.\n *\n * Config keys and types will be checked.  If any problems with the config\n * object are found, errors will be reported through logs and this returns\n * false.  If there are errors, valid config objects are still set.\n *\n * @param {string|!Object} config This should either be a field name or an\n *   object following the form of {@link shaka.extern.PlayerConfiguration},\n *   where you may omit any field you do not wish to change.\n * @param {*=} value This should be provided if the previous parameter\n *   was a string field name.\n * @return {boolean} True if the passed config object was valid, false if there\n *   were invalid entries.\n * @export\n */\nshaka.Player.prototype.configure = function(config, value) {\n  goog.asserts.assert(this.config_, 'Config must not be null!');\n  goog.asserts.assert(typeof(config) == 'object' || arguments.length == 2,\n                      'String configs should have values!');\n\n  // ('fieldName', value) format\n  if (arguments.length == 2 && typeof(config) == 'string') {\n    config = this.convertToConfigObject_(config, value);\n  }\n\n  goog.asserts.assert(typeof(config) == 'object', 'Should be an object!');\n\n  let ret = shaka.util.PlayerConfiguration.mergeConfigObjects(\n      this.config_, config, this.defaultConfig_());\n\n  this.applyConfig_();\n  return ret;\n};\n\n\n/**\n * Convert config from ('fieldName', value) format to a partial\n * shaka.extern.PlayerConfiguration object.\n * E. g. from ('manifest.retryParameters.maxAttempts', 1) to\n * { manifest: { retryParameters: { maxAttempts: 1 }}}.\n *\n * @param {string} fieldName\n * @param {*} value\n * @return {!Object}\n * @private\n */\nshaka.Player.prototype.convertToConfigObject_ = function(fieldName, value) {\n  let configObject = {};\n  let last = configObject;\n  let searchIndex = 0;\n  let nameStart = 0;\n  while (true) {  // eslint-disable-line no-constant-condition\n    let idx = fieldName.indexOf('.', searchIndex);\n    if (idx < 0) {\n      break;\n    }\n    if (idx == 0 || fieldName[idx - 1] != '\\\\') {\n      let part = fieldName.substring(nameStart, idx).replace(/\\\\\\./g, '.');\n      last[part] = {};\n      last = last[part];\n      nameStart = idx + 1;\n    }\n    searchIndex = idx + 1;\n  }\n\n  last[fieldName.substring(nameStart).replace(/\\\\\\./g, '.')] = value;\n  return configObject;\n};\n\n\n/**\n * Apply config changes.\n * @private\n */\nshaka.Player.prototype.applyConfig_ = function() {\n  if (this.parser_) {\n    this.parser_.configure(this.config_.manifest);\n  }\n  if (this.drmEngine_) {\n    this.drmEngine_.configure(this.config_.drm);\n  }\n  if (this.streamingEngine_) {\n    this.streamingEngine_.configure(this.config_.streaming);\n\n    // Need to apply the restrictions to every period.\n    try {\n      // this.filterNewPeriod_() may throw.\n      this.manifest_.periods.forEach(this.filterNewPeriod_.bind(this));\n    } catch (error) {\n      this.onError_(error);\n    }\n\n    // If the stream we are playing is restricted, we need to switch.\n    let activeAudio = this.streamingEngine_.getActiveAudio();\n    let activeVideo = this.streamingEngine_.getActiveVideo();\n    let period = this.streamingEngine_.getCurrentPeriod();\n    let activeVariant = shaka.util.StreamUtils.getVariantByStreams(\n        activeAudio, activeVideo, period.variants);\n    if (this.abrManager_ && activeVariant &&\n        activeVariant.allowedByApplication &&\n        activeVariant.allowedByKeySystem) {\n      // Update AbrManager variants to match these new settings.\n      this.chooseVariant_(period.variants);\n    } else {\n      shaka.log.debug('Choosing new streams after changing configuration');\n      this.chooseStreamsAndSwitch_(period);\n    }\n  }\n\n  if (this.abrManager_) {\n    this.abrManager_.configure(this.config_.abr);\n    // Simply enable/disable ABR with each call, since multiple calls to these\n    // methods have no effect.\n    if (this.config_.abr.enabled && !this.switchingPeriods_) {\n      this.abrManager_.enable();\n    } else {\n      this.abrManager_.disable();\n    }\n  }\n};\n\n\n/**\n * Return a copy of the current configuration.  Modifications of the returned\n * value will not affect the Player's active configuration.  You must call\n * player.configure() to make changes.\n *\n * @return {shaka.extern.PlayerConfiguration}\n * @export\n */\nshaka.Player.prototype.getConfiguration = function() {\n  goog.asserts.assert(this.config_, 'Config must not be null!');\n\n  let ret = this.defaultConfig_();\n  shaka.util.PlayerConfiguration.mergeConfigObjects(\n      ret, this.config_, this.defaultConfig_());\n  return ret;\n};\n\n\n/**\n * Return a reference to the current configuration. Modifications to the\n * returned value will affect the Player's active configuration. This method\n * is not exported as sharing configuration with external objects is not\n * supported.\n *\n * @return {shaka.extern.PlayerConfiguration}\n */\nshaka.Player.prototype.getSharedConfiguration = function() {\n  goog.asserts.assert(\n      this.config_, 'Cannot call getSharedConfiguration after call destroy!');\n  return this.config_;\n};\n\n\n/**\n * Reset configuration to default.\n * @export\n */\nshaka.Player.prototype.resetConfiguration = function() {\n  goog.asserts.assert(this.config_, 'Cannot be destroyed');\n  // Remove the old keys so we remove open-ended dictionaries like drm.servers\n  // but keeps the same object reference.\n  for (const key in this.config_) {\n    delete this.config_[key];\n  }\n\n  shaka.util.PlayerConfiguration.mergeConfigObjects(\n      this.config_, this.defaultConfig_(), this.defaultConfig_());\n  this.applyConfig_();\n};\n\n\n/**\n * @return {HTMLMediaElement} A reference to the HTML Media Element passed\n *     to the constructor or to attach().\n * @export\n */\nshaka.Player.prototype.getMediaElement = function() {\n  return this.video_;\n};\n\n\n/**\n * @return {shaka.net.NetworkingEngine} A reference to the Player's networking\n *     engine.  Applications may use this to make requests through Shaka's\n *     networking plugins.\n * @export\n */\nshaka.Player.prototype.getNetworkingEngine = function() {\n  return this.networkingEngine_;\n};\n\n\n/**\n * @return {?string} If an asset is loaded, returns the asset URI given in\n *   the last call to load().  Otherwise, returns null.\n * @export\n */\nshaka.Player.prototype.getAssetUri = function() {\n  return this.assetUri_;\n};\n\n\n/**\n * @return {?string} If a manifest is loaded, returns the manifest URI given in\n *   the last call to load().  Otherwise, returns null.\n * @export\n */\nshaka.Player.prototype.getManifestUri = function() {\n  shaka.log.alwaysWarn(\n      '\"getManifestUri\" is deprecated and will be removed in v2.6. ' +\n          'Please use \"getAssetUri\" instead.');\n  return this.assetUri_;\n};\n\n\n/**\n * @return {boolean} True if the current stream is live.  False otherwise.\n * @export\n */\nshaka.Player.prototype.isLive = function() {\n  return this.manifest_ ?\n         this.manifest_.presentationTimeline.isLive() :\n         false;\n};\n\n\n/**\n * @return {boolean} True if the current stream is in-progress VOD.\n *   False otherwise.\n * @export\n */\nshaka.Player.prototype.isInProgress = function() {\n  return this.manifest_ ?\n         this.manifest_.presentationTimeline.isInProgress() :\n         false;\n};\n\n\n/**\n * @return {boolean} True for audio-only content.  False otherwise.\n * @export\n */\nshaka.Player.prototype.isAudioOnly = function() {\n  if (!this.manifest_ || !this.manifest_.periods.length) {\n    return false;\n  }\n\n  let variants = this.manifest_.periods[0].variants;\n  if (!variants.length) {\n    return false;\n  }\n\n  // Note that if there are some audio-only variants and some audio-video\n  // variants, the audio-only variants are removed during filtering.\n  // Therefore if the first variant has no video, that's sufficient to say it\n  // is audio-only content.\n  return !variants[0].video;\n};\n\n\n/**\n * Get the seekable range for the current stream.\n * @return {{start: number, end: number}}\n * @export\n */\nshaka.Player.prototype.seekRange = function() {\n  let start = 0;\n  let end = 0;\n  if (this.manifest_) {\n    let timeline = this.manifest_.presentationTimeline;\n    start = timeline.getSeekRangeStart();\n    end = timeline.getSeekRangeEnd();\n  }\n  return {'start': start, 'end': end};\n};\n\n\n/**\n * Get the key system currently being used by EME.  This returns the empty\n * string if not using EME.\n *\n * @return {string}\n * @export\n */\nshaka.Player.prototype.keySystem = function() {\n  return this.drmEngine_ ? this.drmEngine_.keySystem() : '';\n};\n\n\n/**\n * Get the DrmInfo used to initialize EME.  This returns null when not using\n * EME.\n *\n * @return {?shaka.extern.DrmInfo}\n * @export\n */\nshaka.Player.prototype.drmInfo = function() {\n  return this.drmEngine_ ? this.drmEngine_.getDrmInfo() : null;\n};\n\n\n/**\n * The next known expiration time for any EME session.  If the sessions never\n * expire, or there are no EME sessions, this returns Infinity.\n *\n * @return {number}\n * @export\n */\nshaka.Player.prototype.getExpiration = function() {\n  return this.drmEngine_ ? this.drmEngine_.getExpiration() : Infinity;\n};\n\n\n/**\n * @return {boolean} True if the Player is in a buffering state.\n * @export\n */\nshaka.Player.prototype.isBuffering = function() {\n  return this.buffering_;\n};\n\n\n/**\n * Unload the current manifest and make the Player available for re-use.\n *\n * @param {boolean=} reinitializeMediaSource If true, start reinitializing\n *   MediaSource right away.  This can improve load() latency for\n *   MediaSource-based playbacks.  Defaults to true.\n * @return {!Promise} If reinitializeMediaSource is false, the Promise is\n *   resolved as soon as streaming has stopped and the previous content, if any,\n *   has been unloaded.  If reinitializeMediaSource is true or undefined, the\n *   Promise resolves after MediaSource has been subsequently reinitialized.\n * @export\n */\nshaka.Player.prototype.unload = async function(reinitializeMediaSource) {\n  if (this.destroyer_.destroyed()) {\n    return;\n  }\n\n  if (reinitializeMediaSource === undefined) {\n    reinitializeMediaSource = true;\n  }\n\n  this.dispatchEvent(new shaka.util.FakeEvent('unloading'));\n\n  await this.cancelLoad_();\n\n  // If there is an existing unload operation, use that.\n  if (!this.unloadChain_) {\n    this.unloadChain_ = this.destroyStreaming_().then(() => {\n      // Force an exit from the buffering state.\n      this.onBuffering_(false);\n      this.unloadChain_ = null;\n    });\n  }\n  await this.unloadChain_;\n\n  if (reinitializeMediaSource) {\n    // Start the (potentially slow) process of opening MediaSource now.\n    this.mediaSourceEngine_ = this.createMediaSourceEngine();\n    await this.mediaSourceEngine_.open();\n  }\n};\n\n\n/**\n * Gets the current effective playback rate.  If using trick play, it will\n * return the current trick play rate; otherwise, it will return the video\n * playback rate.\n * @return {number}\n * @export\n */\nshaka.Player.prototype.getPlaybackRate = function() {\n  return this.playhead_ ? this.playhead_.getPlaybackRate() : 0;\n};\n\n\n/**\n * Skip through the content without playing.  Simulated using repeated seeks.\n *\n * Trick play will be canceled automatically if the playhead hits the beginning\n * or end of the seekable range for the content.\n *\n * @param {number} rate The playback rate to simulate.  For example, a rate of\n *     2.5 would result in 2.5 seconds of content being skipped every second.\n *     To trick-play backward, use a negative rate.\n * @export\n */\nshaka.Player.prototype.trickPlay = function(rate) {\n  shaka.log.debug('Trick play rate', rate);\n  if (this.playhead_) {\n    this.playhead_.setPlaybackRate(rate);\n  }\n\n  if (this.streamingEngine_) {\n    this.streamingEngine_.setTrickPlay(rate != 1);\n  }\n};\n\n\n/**\n * Cancel trick-play.\n * @export\n */\nshaka.Player.prototype.cancelTrickPlay = function() {\n  shaka.log.debug('Trick play canceled');\n  if (this.playhead_) {\n    this.playhead_.setPlaybackRate(1);\n  }\n\n  if (this.streamingEngine_) {\n    this.streamingEngine_.setTrickPlay(false);\n  }\n};\n\n\n/**\n * Return a list of variant tracks available for the current\n * Period.  If there are multiple Periods, then you must seek to the Period\n * before being able to switch.\n *\n * @return {!Array.<shaka.extern.Track>}\n * @export\n */\nshaka.Player.prototype.getVariantTracks = function() {\n  if (!this.manifest_ || !this.playhead_) {\n    return [];\n  }\n  this.assertCorrectActiveStreams_();\n\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  let currentPeriod = shaka.util.StreamUtils.findPeriodContainingTime(\n      this.manifest_, this.playhead_.getTime());\n  return shaka.util.StreamUtils.getVariantTracks(\n      this.manifest_.periods[currentPeriod],\n      this.activeStreams_.get(currentPeriod, ContentType.AUDIO),\n      this.activeStreams_.get(currentPeriod, ContentType.VIDEO));\n};\n\n\n/**\n * Return a list of text tracks available for the current\n * Period.  If there are multiple Periods, then you must seek to the Period\n * before being able to switch.\n *\n * @return {!Array.<shaka.extern.Track>}\n * @export\n */\nshaka.Player.prototype.getTextTracks = function() {\n  if (!this.manifest_ || !this.playhead_) {\n    return [];\n  }\n  this.assertCorrectActiveStreams_();\n\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n  let currentPeriod = shaka.util.StreamUtils.findPeriodContainingTime(\n      this.manifest_, this.playhead_.getTime());\n  if (!this.activeStreams_.get(currentPeriod, ContentType.TEXT)) {\n    // This is a workaround for the demo page to be able to display the\n    // list of text tracks. If no text track is currently active, pick\n    // the one that's going to be streamed when captions are enabled\n    // and mark it as active.\n    let textStreams = shaka.util.StreamUtils.filterStreamsByLanguageAndRole(\n        this.manifest_.periods[currentPeriod].textStreams,\n        this.currentTextLanguage_,\n        this.currentTextRole_);\n    if (textStreams.length) {\n      this.activeStreams_.update(\n          currentPeriod, ContentType.TEXT, textStreams[0].id);\n    }\n  }\n  return shaka.util.StreamUtils\n      .getTextTracks(\n          this.manifest_.periods[currentPeriod],\n          this.activeStreams_.get(currentPeriod, ContentType.TEXT))\n      .filter(function(track) {\n        // Don't show any tracks that are being loaded still.\n        return !this.loadingTextStreamIds_.includes(track.id);\n      }.bind(this));\n};\n\n\n/**\n * Select a specific text track.  Note that AdaptationEvents are not\n * fired for manual track selections.\n *\n * @param {shaka.extern.Track} track\n * @export\n */\nshaka.Player.prototype.selectTextTrack = function(track) {\n  if (!this.streamingEngine_) {\n    return;\n  }\n\n  const StreamUtils = shaka.util.StreamUtils;\n\n  let period = this.streamingEngine_.getCurrentPeriod();\n  let stream = StreamUtils.findTextStreamForTrack(period, track);\n\n  if (!stream) {\n    shaka.log.error('Unable to find the track with id \"' + track.id +\n                    '\"; did we change Periods?');\n    return;\n  }\n\n  this.mediaSourceEngine_.setUseEmbeddedText(false);\n  // Add entries to the history.\n  this.addTextStreamToSwitchHistory_(stream, /* fromAdaptation */ false);\n  this.switchTextStream_(stream);\n\n  // Workaround for https://github.com/google/shaka-player/issues/1299\n  // When track is selected, back-propogate the language to\n  // currentTextLanguage_.\n  this.currentTextLanguage_ = stream.language;\n};\n\n\n/**\n * Use the embedded text for the current stream, if present.\n *\n * CEA 608/708 captions data is embedded inside the video stream.\n *\n * @export\n */\nshaka.Player.prototype.selectEmbeddedTextTrack = function() {\n  this.mediaSourceEngine_.setUseEmbeddedText(true);\n  this.streamingEngine_.unloadTextStream();\n};\n\n\n/**\n * @return {boolean} True if we are using any embedded text tracks present.\n * @export\n */\nshaka.Player.prototype.usingEmbeddedTextTrack = function() {\n  return this.mediaSourceEngine_ ?\n      this.mediaSourceEngine_.getUseEmbeddedText() : false;\n};\n\n\n/**\n * Select a specific track.  Note that AdaptationEvents are not fired for manual\n * track selections.\n *\n * @param {shaka.extern.Track} track\n * @param {boolean=} clearBuffer\n * @param {number=} safeMargin Optional amount of buffer (in seconds) to retain\n *   when clearing the buffer. Useful for switching variant quickly without\n *   causing a buffering event.\n *   Defaults to 0 if not provided. Ignored if clearBuffer is false.\n *   Can cause hiccups on some browsers if chosen too small, e.g. The amount of\n *   two segments is a fair minimum to consider as safeMargin value.\n * @export\n */\nshaka.Player.prototype.selectVariantTrack = function(\n    track, clearBuffer, safeMargin = 0) {\n  if (!this.streamingEngine_) {\n    return;\n  }\n\n  if (this.config_.abr.enabled) {\n    shaka.log.alwaysWarn('Changing tracks while abr manager is enabled will ' +\n                         'likely result in the selected track being ' +\n                         'overriden. Consider disabling abr before calling ' +\n                         'selectVariantTrack().');\n  }\n\n  const StreamUtils = shaka.util.StreamUtils;\n\n  const period = this.streamingEngine_.getCurrentPeriod();\n  let variant = StreamUtils.findVariantForTrack(period, track);\n  if (!variant) {\n    shaka.log.error('Unable to locate track with id \"' + track.id + '\".');\n    return;\n  }\n\n  // Double check that the track is allowed to be played.\n  // The track list should only contain playable variants,\n  // but if restrictions change and selectVariantTrack()\n  // is called before the track list is updated, we could\n  // get a now-restricted variant.\n  let variantIsPlayable = StreamUtils.isPlayable(variant);\n  if (!variantIsPlayable) {\n    shaka.log.error('Unable to switch to track with id \"' + track.id +\n                    '\" because it is restricted.');\n    return;\n  }\n\n  // Add entries to the history.\n  this.addVariantToSwitchHistory_(variant, /* fromAdaptation */ false);\n  this.switchVariant_(variant, clearBuffer, safeMargin);\n\n  // Workaround for https://github.com/google/shaka-player/issues/1299\n  // When track is selected, back-propogate the language to\n  // currentAudioLanguage_.\n  this.currentAdaptationSetCriteria_ = new shaka.media.ExampleBasedCriteria(\n      variant);\n\n  // Update AbrManager variants to match these new settings.\n  this.chooseVariant_(period.variants);\n};\n\n\n/**\n * Return a list of audio language-role combinations available for the current\n * Period.\n *\n * @return {!Array.<shaka.extern.LanguageRole>}\n * @export\n */\nshaka.Player.prototype.getAudioLanguagesAndRoles = function() {\n  return shaka.Player.getLanguageAndRolesFromTracks_(this.getVariantTracks());\n};\n\n\n/**\n * Return a list of text language-role combinations available for the current\n * Period.\n *\n * @return {!Array.<shaka.extern.LanguageRole>}\n * @export\n */\nshaka.Player.prototype.getTextLanguagesAndRoles = function() {\n  return shaka.Player.getLanguageAndRolesFromTracks_(this.getTextTracks());\n};\n\n\n/**\n * Return a list of audio languages available for the current Period.\n *\n * @return {!Array.<string>}\n * @export\n */\nshaka.Player.prototype.getAudioLanguages = function() {\n  const tracks = this.getVariantTracks();\n  return Array.from(shaka.Player.getLanguagesFromTracks_(tracks));\n};\n\n\n/**\n * Return a list of text languages available for the current Period.\n *\n * @return {!Array.<string>}\n * @export\n */\nshaka.Player.prototype.getTextLanguages = function() {\n  const tracks = this.getTextTracks();\n  return Array.from(shaka.Player.getLanguagesFromTracks_(tracks));\n};\n\n\n/**\n * Sets currentAudioLanguage and currentVariantRole to the selected\n * language and role, and chooses a new variant if need be.\n *\n * @param {string} language\n * @param {string=} role\n * @export\n */\nshaka.Player.prototype.selectAudioLanguage =\n    function(language, role) {\n  if (!this.streamingEngine_) return;\n\n  this.currentAdaptationSetCriteria_ = new shaka.media.PreferenceBasedCriteria(\n      language, role || '', 0);\n\n  // TODO: Refactor to only change audio and not affect text.\n  const period = this.streamingEngine_.getCurrentPeriod();\n  this.chooseStreamsAndSwitch_(period);\n};\n\n\n/**\n * Sets currentTextLanguage and currentTextRole to the selected\n * language and role, and chooses a new text stream if need be.\n *\n * @param {string} language\n * @param {string=} role\n * @export\n */\nshaka.Player.prototype.selectTextLanguage =\n    function(language, role) {\n  if (!this.streamingEngine_) return;\n  let period = this.streamingEngine_.getCurrentPeriod();\n  this.currentTextLanguage_ = language;\n  this.currentTextRole_ = role || '';\n  // TODO: Refactor to only change text and not affect audio.\n  this.chooseStreamsAndSwitch_(period);\n};\n\n\n/**\n * @return {boolean} True if the current text track is visible.\n * @export\n */\nshaka.Player.prototype.isTextTrackVisible = function() {\n  if (this.textDisplayer_) {\n    return this.textDisplayer_.isTextVisible();\n  } else {\n    return this.textVisibility_;\n  }\n};\n\n\n/**\n * Set the visibility of the current text track, if any.\n *\n * @param {boolean} on\n * @return {!Promise}\n * @export\n */\nshaka.Player.prototype.setTextTrackVisibility = async function(on) {\n  if (on == this.textVisibility_) {\n    return;\n  }\n\n  if (this.textDisplayer_) {\n    this.textDisplayer_.setTextVisibility(on);\n  }\n  this.textVisibility_ = on;\n  this.onTextTrackVisibility_();\n\n  // If we always stream text, don't do anything special to StreamingEngine.\n  if (this.config_.streaming.alwaysStreamText) {\n    return;\n  }\n\n  // Load text stream when the user chooses to show the caption, and pause\n  // loading text stream when the user chooses to hide the caption.\n  if (!this.streamingEngine_) {\n    return;\n  }\n\n  const StreamUtils = shaka.util.StreamUtils;\n\n  if (on) {\n    let period = this.streamingEngine_.getCurrentPeriod();\n    let textStreams = StreamUtils.filterStreamsByLanguageAndRole(\n        period.textStreams,\n        this.currentTextLanguage_,\n        this.currentTextRole_);\n    let stream = textStreams[0];\n    if (stream) {\n      await this.streamingEngine_.loadNewTextStream(stream);\n    }\n  } else {\n    this.streamingEngine_.unloadTextStream();\n  }\n};\n\n\n/**\n * Returns current playhead time as a Date.\n *\n * @return {Date}\n * @export\n */\nshaka.Player.prototype.getPlayheadTimeAsDate = function() {\n  if (!this.manifest_) return null;\n\n  goog.asserts.assert(this.isLive(),\n      'getPlayheadTimeAsDate should be called on a live stream!');\n\n  let time =\n      this.manifest_.presentationTimeline.getPresentationStartTime() * 1000 +\n      this.video_.currentTime * 1000;\n\n  return new Date(time);\n};\n\n\n/**\n * Returns the presentation start time as a Date.\n *\n * @return {Date}\n * @export\n */\nshaka.Player.prototype.getPresentationStartTimeAsDate = function() {\n  if (!this.manifest_) return null;\n\n  goog.asserts.assert(this.isLive(),\n      'getPresentationStartTimeAsDate should be called on a live stream!');\n\n  let time =\n      this.manifest_.presentationTimeline.getPresentationStartTime() * 1000;\n\n  return new Date(time);\n};\n\n\n/**\n * Return the information about the current buffered ranges.\n *\n * @return {shaka.extern.BufferedInfo}\n * @export\n */\nshaka.Player.prototype.getBufferedInfo = function() {\n  if (!this.mediaSourceEngine_) {\n    return {\n      total: [],\n      audio: [],\n      video: [],\n      text: [],\n    };\n  }\n\n  return this.mediaSourceEngine_.getBufferedInfo();\n};\n\n\n/**\n * Return playback and adaptation stats.\n *\n * @return {shaka.extern.Stats}\n * @export\n */\nshaka.Player.prototype.getStats = function() {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  this.updateTimeStats_();\n  this.updateState_();\n\n  let video = null;\n  let variant = null;\n\n  let videoElem = /** @type {!HTMLVideoElement} */ (this.video_);\n  let videoInfo = videoElem && videoElem.getVideoPlaybackQuality ?\n      videoElem.getVideoPlaybackQuality() : {};\n\n  if (this.playhead_ && this.manifest_) {\n    let periodIdx = shaka.util.StreamUtils.findPeriodContainingTime(\n        this.manifest_, this.playhead_.getTime());\n    let period = this.manifest_.periods[periodIdx];\n\n    if (this.activeStreams_.hasPeriod(periodIdx)) {\n      variant = shaka.util.StreamUtils.getVariantByStreamIds(\n          this.activeStreams_.get(periodIdx, ContentType.AUDIO),\n          this.activeStreams_.get(periodIdx, ContentType.VIDEO),\n          period.variants);\n\n      video = variant.video || {};\n    }\n  }\n\n  if (!video) video = {};\n  if (!variant) variant = {};\n\n  // Clone the internal object so our state cannot be tampered with.\n  const cloneObject = shaka.util.ObjectUtils.cloneObject;\n  return {\n    // Not tracked in this.stats_:\n    width: video.width || 0,\n    height: video.height || 0,\n    streamBandwidth: variant.bandwidth || 0,\n    decodedFrames: Number(videoInfo.totalVideoFrames),\n    droppedFrames: Number(videoInfo.droppedVideoFrames),\n    estimatedBandwidth: this.abrManager_ ?\n        this.abrManager_.getBandwidthEstimate() : NaN,\n\n    loadLatency: this.stats_.loadLatency,\n    playTime: this.stats_.playTime,\n    bufferingTime: this.stats_.bufferingTime,\n    // Deep-clone the objects as well as the arrays that contain them:\n    switchHistory: cloneObject(this.stats_.switchHistory),\n    stateHistory: cloneObject(this.stats_.stateHistory),\n  };\n};\n\n\n/**\n * Adds the given text track to the current Period.  load() must resolve before\n * calling.  The current Period or the presentation must have a duration.  This\n * returns a Promise that will resolve with the track that was created, when\n * that track can be switched to.\n *\n * @param {string} uri\n * @param {string} language\n * @param {string} kind\n * @param {string} mime\n * @param {string=} codec\n * @param {string=} label\n * @return {!Promise.<shaka.extern.Track>}\n * @export\n */\nshaka.Player.prototype.addTextTrack = function(\n    uri, language, kind, mime, codec, label) {\n  if (!this.streamingEngine_) {\n    shaka.log.error(\n        'Must call load() and wait for it to resolve before adding text ' +\n        'tracks.');\n    return Promise.reject();\n  }\n\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  // Get the Period duration.\n  /** @type {shaka.extern.Period} */\n  const period = this.streamingEngine_.getCurrentPeriod();\n  /** @type {number} */\n  const periodIndex = this.manifest_.periods.indexOf(period);\n  /** @type {number} */\n  const nextPeriodIndex = periodIndex + 1;\n  /** @type {number} */\n  const nextPeriodStart = nextPeriodIndex >= this.manifest_.periods.length ?\n                          this.manifest_.presentationTimeline.getDuration() :\n                          this.manifest_.periods[nextPeriodIndex].startTime;\n  /** @type {number} */\n  const periodDuration = nextPeriodStart - period.startTime;\n  if (periodDuration == Infinity) {\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.RECOVERABLE,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.CANNOT_ADD_EXTERNAL_TEXT_TO_LIVE_STREAM));\n  }\n\n  /** @type {shaka.extern.Stream} */\n  let stream = {\n    id: this.nextExternalStreamId_++,\n    originalId: null,\n    createSegmentIndex: Promise.resolve.bind(Promise),\n    findSegmentPosition: function(time) { return 1; },\n    getSegmentReference: function(ref) {\n      if (ref != 1) return null;\n      return new shaka.media.SegmentReference(\n          1, 0, periodDuration, function() { return [uri]; }, 0, null);\n    },\n    initSegmentReference: null,\n    presentationTimeOffset: 0,\n    mimeType: mime,\n    codecs: codec || '',\n    kind: kind,\n    encrypted: false,\n    keyId: null,\n    language: language,\n    label: label || null,\n    type: ContentType.TEXT,\n    primary: false,\n    trickModeVideo: null,\n    emsgSchemeIdUris: null,\n    roles: [],\n    channelsCount: null,\n    closedCaptions: null,\n  };\n\n  // Add the stream to the loading list to ensure it isn't switched to while it\n  // is initializing.\n  this.loadingTextStreamIds_.push(stream.id);\n  period.textStreams.push(stream);\n\n  return this.streamingEngine_.loadNewTextStream(stream)\n          .then(function() {\n    if (this.destroyer_.destroyed()) {\n      return;\n    }\n\n    let curPeriodIdx = this.manifest_.periods.indexOf(period);\n    let activeText = this.streamingEngine_.getActiveText();\n    if (activeText) {\n      // If this was the first text stream, StreamingEngine will start streaming\n      // it in loadNewTextStream.  To reflect this, update the active stream.\n      this.activeStreams_.update(curPeriodIdx, ContentType.TEXT, activeText.id);\n    }\n    // Remove the stream from the loading list.\n    shaka.util.ArrayUtils.remove(this.loadingTextStreamIds_, stream.id);\n\n    shaka.log.debug('Choosing new streams after adding a text stream');\n    this.chooseStreamsAndSwitch_(period);\n    this.onTracksChanged_();\n\n    return {\n      id: stream.id,\n      active: false,\n      type: ContentType.TEXT,\n      bandwidth: 0,\n      language: language,\n      label: label || null,\n      kind: kind,\n      width: null,\n      height: null,\n    };\n  }.bind(this));\n};\n\n\n/**\n * Set the maximum resolution that the platform's hardware can handle.\n * This will be called automatically by shaka.cast.CastReceiver to enforce\n * limitations of the Chromecast hardware.\n *\n * @param {number} width\n * @param {number} height\n * @export\n */\nshaka.Player.prototype.setMaxHardwareResolution = function(width, height) {\n  this.maxHwRes_.width = width;\n  this.maxHwRes_.height = height;\n};\n\n\n/**\n * Retry streaming after a failure.  Does nothing if not in a failure state.\n * @return {boolean} False if unable to retry.\n * @export\n */\nshaka.Player.prototype.retryStreaming = function() {\n  return this.streamingEngine_ ? this.streamingEngine_.retry() : false;\n};\n\n\n/**\n * Return the manifest information if it's loaded. Otherwise, return null.\n * @return {?shaka.extern.Manifest}\n * @export\n */\nshaka.Player.prototype.getManifest = function() {\n  return this.manifest_;\n};\n\n\n/**\n * @param {shaka.extern.Variant} variant\n * @param {boolean} fromAdaptation\n * @private\n */\nshaka.Player.prototype.addVariantToSwitchHistory_ = function(\n    variant, fromAdaptation) {\n  if (variant.video) {\n    this.updateActiveStreams_(variant.video);\n  }\n  if (variant.audio) {\n    this.updateActiveStreams_(variant.audio);\n  }\n\n  // TODO: Get StreamingEngine to track variants and create getActiveVariant()\n  let activePeriod = this.streamingEngine_.getActivePeriod();\n  let activeVariant = shaka.util.StreamUtils.getVariantByStreams(\n      this.streamingEngine_.getActiveAudio(),\n      this.streamingEngine_.getActiveVideo(),\n      activePeriod ? activePeriod.variants : []);\n\n  // Only log the switch if the variant changes. For the initial decision,\n  // activeVariant is null and variant != activeVariant.\n  // This allows us to avoid onAdaptation_() when nothing has changed.\n  if (variant != activeVariant) {\n    this.stats_.switchHistory.push({\n      timestamp: Date.now() / 1000,\n      id: variant.id,\n      type: 'variant',\n      fromAdaptation: fromAdaptation,\n      bandwidth: variant.bandwidth,\n    });\n  }\n};\n\n\n/**\n * @param {shaka.extern.Stream} textStream\n * @param {boolean} fromAdaptation\n * @private\n */\nshaka.Player.prototype.addTextStreamToSwitchHistory_ =\n    function(textStream, fromAdaptation) {\n  this.updateActiveStreams_(textStream);\n\n  this.stats_.switchHistory.push({\n    timestamp: Date.now() / 1000,\n    id: textStream.id,\n    type: 'text',\n    fromAdaptation: fromAdaptation,\n    bandwidth: null,\n  });\n};\n\n\n/**\n * @param {!shaka.extern.Stream} stream\n * @private\n */\nshaka.Player.prototype.updateActiveStreams_ = function(stream) {\n  goog.asserts.assert(this.manifest_, 'Must not be destroyed');\n  let periodIndex =\n      shaka.util.StreamUtils.findPeriodContainingStream(this.manifest_, stream);\n  this.activeStreams_.update(periodIndex, stream.type, stream.id);\n};\n\n\n/**\n * Destroy members responsible for streaming.\n *\n * @return {!Promise}\n * @private\n */\nshaka.Player.prototype.destroyStreaming_ = function() {\n  if (this.eventManager_) {\n    this.eventManager_.unlisten(this.video_, 'loadeddata');\n    this.eventManager_.unlisten(this.video_, 'playing');\n    this.eventManager_.unlisten(this.video_, 'pause');\n    this.eventManager_.unlisten(this.video_, 'ended');\n  }\n\n  const drmEngine = this.drmEngine_;\n  let p = Promise.all([\n    this.abrManager_ ? this.abrManager_.stop() : null,\n    this.mediaSourceEngine_ ? this.mediaSourceEngine_.destroy() : null,\n    this.playhead_ ? this.playhead_.destroy() : null,\n    this.playheadObserver_ ? this.playheadObserver_.destroy() : null,\n    this.streamingEngine_ ? this.streamingEngine_.destroy() : null,\n    this.parser_ ? this.parser_.stop() : null,\n    this.textDisplayer_ ? this.textDisplayer_.destroy() : null,\n  ]).then(() => {\n    // MediaSourceEngine must be destroyed before DrmEngine, so that DrmEngine\n    // can detach MediaKeys from the media element.\n    return drmEngine ? drmEngine.destroy() : null;\n  });\n\n  this.switchingPeriods_ = true;\n  this.drmEngine_ = null;\n  this.mediaSourceEngine_ = null;\n  this.playhead_ = null;\n  this.playheadObserver_ = null;\n  this.streamingEngine_ = null;\n  this.parser_ = null;\n  this.textDisplayer_ = null;\n  this.manifest_ = null;\n  this.assetUri_ = null;\n  this.pendingTimelineRegions_ = [];\n  this.activeStreams_ = new shaka.media.ActiveStreamMap();\n  this.stats_ = this.getCleanStats_();\n\n  return p;\n};\n\n\n/**\n * @return {shaka.extern.PlayerConfiguration}\n * @private\n */\nshaka.Player.prototype.defaultConfig_ = function() {\n  const config = shaka.util.PlayerConfiguration.createDefault();\n\n  config.streaming.failureCallback = (error) => {\n    this.defaultStreamingFailureCallback_(error);\n  };\n\n  // Because this.video_ may not be set when the config is built, the default\n  // TextDisplay factory must capture a reference to \"this\" as \"self\" to use at\n  // the time we call the factory.  Bind can't be used here because we call the\n  // factory with \"new\", effectively removing any binding to \"this\".\n  const self = this;\n  config.textDisplayFactory = function() {\n    return new shaka.text.SimpleTextDisplayer(self.video_);\n  };\n\n  return config;\n};\n\n\n/**\n * @param {!shaka.util.Error} error\n * @private\n */\nshaka.Player.prototype.defaultStreamingFailureCallback_ = function(error) {\n  let retryErrorCodes = [\n    shaka.util.Error.Code.BAD_HTTP_STATUS,\n    shaka.util.Error.Code.HTTP_ERROR,\n    shaka.util.Error.Code.TIMEOUT,\n  ];\n\n  if (this.isLive() && retryErrorCodes.includes(error.code)) {\n    error.severity = shaka.util.Error.Severity.RECOVERABLE;\n\n    shaka.log.warning('Live streaming error.  Retrying automatically...');\n    this.retryStreaming();\n  }\n};\n\n\n/**\n * @return {shaka.extern.Stats}\n * @private\n */\nshaka.Player.prototype.getCleanStats_ = function() {\n  return {\n    // These are not tracked in the private stats structure and are only here to\n    // satisfy the compiler.\n    width: NaN,\n    height: NaN,\n    streamBandwidth: NaN,\n    decodedFrames: NaN,\n    droppedFrames: NaN,\n    estimatedBandwidth: NaN,\n\n    // These are tracked in the private stats structure to avoid the need for\n    // many private member variables.\n    loadLatency: NaN,\n    playTime: 0,\n    bufferingTime: 0,\n    switchHistory: [],\n    stateHistory: [],\n  };\n};\n\n\n/**\n * For CEA closed captions embedded in the video streams, create dummy text\n * stream.\n * @param {!Array.<!shaka.extern.Period>} periods\n * @private\n */\nshaka.Player.prototype.createTextStreamsForClosedCaptions_ = function(periods) {\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  for (let periodIndex = 0; periodIndex < periods.length; periodIndex++) {\n    const period = periods[periodIndex];\n    // A map of the closed captions id and the new dummy text stream.\n    let closedCaptionsMap = new Map();\n    for (let variant of period.variants) {\n      if (variant.video && variant.video.closedCaptions) {\n        let video = variant.video;\n        for (const id of video.closedCaptions.keys()) {\n          if (!closedCaptionsMap.has(id)) {\n            let textStream = {\n              id: this.nextExternalStreamId_++,  // A globally unique ID.\n              originalId: id, // The CC ID string, like 'CC1', 'CC3', etc.\n              createSegmentIndex: Promise.resolve.bind(Promise),\n              findSegmentPosition: (time) => { return null; },\n              getSegmentReference: (ref) => { return null; },\n              initSegmentReference: null,\n              presentationTimeOffset: 0,\n              mimeType: shaka.util.MimeUtils.CLOSED_CAPTION_MIMETYPE,\n              codecs: '',\n              kind:\n                  shaka.util.ManifestParserUtils.TextStreamKind.CLOSED_CAPTION,\n              encrypted: false,\n              keyId: null,\n              language: video.closedCaptions.get(id),\n              label: null,\n              type: ContentType.TEXT,\n              primary: false,\n              trickModeVideo: null,\n              emsgSchemeIdUris: null,\n              roles: video.roles,\n              channelsCount: null,\n              closedCaptions: {},\n            };\n            closedCaptionsMap.set(id, textStream);\n          }\n        }\n      }\n    }\n    for (const textStream of closedCaptionsMap.values()) {\n      period.textStreams.push(textStream);\n    }\n  }\n};\n\n\n/**\n * Filters a list of periods.\n * @param {!Array.<!shaka.extern.Period>} periods\n * @private\n */\nshaka.Player.prototype.filterAllPeriods_ = function(periods) {\n  goog.asserts.assert(this.video_, 'Must not be destroyed');\n  const ArrayUtils = shaka.util.ArrayUtils;\n  const StreamUtils = shaka.util.StreamUtils;\n\n  /** @type {?shaka.extern.Stream} */\n  let activeAudio =\n      this.streamingEngine_ ? this.streamingEngine_.getActiveAudio() : null;\n  /** @type {?shaka.extern.Stream} */\n  let activeVideo =\n      this.streamingEngine_ ? this.streamingEngine_.getActiveVideo() : null;\n\n  let filterPeriod = StreamUtils.filterNewPeriod.bind(\n      null, this.drmEngine_, activeAudio, activeVideo);\n  periods.forEach(filterPeriod);\n\n  let validPeriodsCount = ArrayUtils.count(periods, function(period) {\n    return period.variants.some(StreamUtils.isPlayable);\n  });\n\n  // If none of the periods are playable, throw CONTENT_UNSUPPORTED_BY_BROWSER.\n  if (validPeriodsCount == 0) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.CONTENT_UNSUPPORTED_BY_BROWSER);\n  }\n\n  // If only some of the periods are playable, throw UNPLAYABLE_PERIOD.\n  if (validPeriodsCount < periods.length) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.UNPLAYABLE_PERIOD);\n  }\n\n  periods.forEach(function(period) {\n    let tracksChanged = shaka.util.StreamUtils.applyRestrictions(\n        period.variants, this.config_.restrictions, this.maxHwRes_);\n    if (tracksChanged && this.streamingEngine_ &&\n        this.streamingEngine_.getCurrentPeriod() == period) {\n      this.onTracksChanged_();\n    }\n\n    this.checkRestrictedVariants_(period.variants);\n  }.bind(this));\n};\n\n\n/**\n * Filters a new period.\n * @param {shaka.extern.Period} period\n * @private\n */\nshaka.Player.prototype.filterNewPeriod_ = function(period) {\n  goog.asserts.assert(this.video_, 'Must not be destroyed');\n  const StreamUtils = shaka.util.StreamUtils;\n\n  /** @type {?shaka.extern.Stream} */\n  let activeAudio =\n      this.streamingEngine_ ? this.streamingEngine_.getActiveAudio() : null;\n  /** @type {?shaka.extern.Stream} */\n  let activeVideo =\n      this.streamingEngine_ ? this.streamingEngine_.getActiveVideo() : null;\n\n  StreamUtils.filterNewPeriod(\n      this.drmEngine_, activeAudio, activeVideo, period);\n\n  /** @type {!Array.<shaka.extern.Variant>} */\n  let variants = period.variants;\n\n  // Check for playable variants before restrictions, so that we can give a\n  // special error when there were tracks but they were all filtered.\n  const hasPlayableVariant = variants.some(StreamUtils.isPlayable);\n  if (!hasPlayableVariant) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.UNPLAYABLE_PERIOD);\n  }\n\n  this.checkRestrictedVariants_(period.variants);\n\n  const tracksChanged = shaka.util.StreamUtils.applyRestrictions(\n      variants, this.config_.restrictions, this.maxHwRes_);\n\n  // Trigger the track change event if the restrictions now prevent use from\n  // using a variant that we previously thought we could use.\n  if (tracksChanged && this.streamingEngine_ &&\n      this.streamingEngine_.getCurrentPeriod() == period) {\n    this.onTracksChanged_();\n  }\n\n  // For new Periods, we may need to create new sessions for any new init data.\n  const curDrmInfo = this.drmEngine_ ? this.drmEngine_.getDrmInfo() : null;\n  if (curDrmInfo) {\n    for (const variant of variants) {\n      for (const drmInfo of variant.drmInfos) {\n        // Ignore any data for different key systems.\n        if (drmInfo.keySystem == curDrmInfo.keySystem) {\n          for (const initData of (drmInfo.initData || [])) {\n            this.drmEngine_.newInitData(\n                initData.initDataType, initData.initData);\n          }\n        }\n      }\n    }\n  }\n};\n\n\n/**\n * Switches to the given variant, deferring if needed.\n * @param {shaka.extern.Variant} variant\n * @param {boolean=} clearBuffer\n * @param {number=} safeMargin\n * @private\n */\nshaka.Player.prototype.switchVariant_ =\n    function(variant, clearBuffer = false, safeMargin = 0) {\n  if (this.switchingPeriods_) {\n    // Store this action for later.\n    this.deferredVariant_ = variant;\n    this.deferredVariantClearBuffer_ = clearBuffer;\n    this.deferredVariantClearBufferSafeMargin_ = safeMargin;\n  } else {\n    // Act now.\n    this.streamingEngine_.switchVariant(variant, clearBuffer, safeMargin);\n    // Dispatch a 'variantchanged' event\n    this.onVariantChanged_();\n  }\n};\n\n\n/**\n * Switches to the given text stream, deferring if needed.\n * @param {shaka.extern.Stream} textStream\n * @private\n */\nshaka.Player.prototype.switchTextStream_ = function(textStream) {\n  if (this.switchingPeriods_) {\n    // Store this action for later.\n    this.deferredTextStream_ = textStream;\n  } else {\n    // Act now.\n    this.streamingEngine_.switchTextStream(textStream);\n    this.onTextChanged_();\n  }\n};\n\n\n/**\n * Verifies that the active streams according to the player match those in\n * StreamingEngine.\n * @private\n */\nshaka.Player.prototype.assertCorrectActiveStreams_ = function() {\n  if (!this.streamingEngine_ || !this.manifest_ || !goog.DEBUG) return;\n  const StreamUtils = shaka.util.StreamUtils;\n  const ContentType = shaka.util.ManifestParserUtils.ContentType;\n\n  let activeAudio = this.streamingEngine_.getActiveAudio();\n  let activeVideo = this.streamingEngine_.getActiveVideo();\n  let activeText = this.streamingEngine_.getActiveText();\n\n  /** @type {?shaka.extern.Stream} */\n  let mainStream = activeVideo || activeAudio;\n  if (!mainStream) {\n    return;\n  }\n\n  let streamingPeriodIndex =\n      StreamUtils.findPeriodContainingStream(this.manifest_, mainStream);\n  let currentPeriodIndex =\n      this.manifest_.periods.indexOf(this.streamingEngine_.getCurrentPeriod());\n  if (streamingPeriodIndex < 0 || streamingPeriodIndex != currentPeriodIndex) {\n    return;\n  }\n\n  let activeStreams = [activeAudio, activeVideo, activeText];\n  activeStreams.filter((stream) => stream).forEach((stream) => {\n    const type = stream.type;\n    let id = stream.id;\n\n    if (type == ContentType.TEXT && this.deferredTextStream_) {\n      id = this.deferredTextStream_.id;\n    }\n\n    if (type == ContentType.AUDIO && this.deferredVariant_) {\n      id = this.deferredVariant_.audio.id;\n    }\n\n    if (type == ContentType.VIDEO && this.deferredVariant_) {\n      id = this.deferredVariant_.video.id;\n    }\n\n    goog.asserts.assert(\n        this.activeStreams_.get(currentPeriodIndex, type) == id,\n        'Inconsistent active stream');\n  });\n};\n\n\n/** @private */\nshaka.Player.prototype.updateTimeStats_ = function() {\n  // Only count while we're loaded.\n  if (!this.manifest_) {\n    return;\n  }\n\n  let now = Date.now() / 1000;\n  if (this.buffering_) {\n    this.stats_.bufferingTime += (now - this.lastTimeStatsUpdateTimestamp_);\n  } else {\n    this.stats_.playTime += (now - this.lastTimeStatsUpdateTimestamp_);\n  }\n\n  this.lastTimeStatsUpdateTimestamp_ = now;\n};\n\n\n/**\n * @param {number} time\n * @return {number}\n * @private\n */\nshaka.Player.prototype.adjustStartTime_ = function(time) {\n  /** @type {?shaka.extern.Stream} */\n  let activeAudio = this.streamingEngine_.getActiveAudio();\n  /** @type {?shaka.extern.Stream} */\n  let activeVideo = this.streamingEngine_.getActiveVideo();\n  /** @type {shaka.extern.Period} */\n  let period = this.streamingEngine_.getCurrentPeriod();\n\n  // This method is called after StreamingEngine.init resolves, which means that\n  // all the active streams have had createSegmentIndex called.\n  function getAdjustedTime(stream, time) {\n    if (!stream) return null;\n    let idx = stream.findSegmentPosition(time - period.startTime);\n    if (idx == null) return null;\n    let ref = stream.getSegmentReference(idx);\n    if (!ref) return null;\n    let refTime = ref.startTime + period.startTime;\n    goog.asserts.assert(refTime <= time, 'Segment should start before time');\n    return refTime;\n  }\n\n  let audioStartTime = getAdjustedTime(activeAudio, time);\n  let videoStartTime = getAdjustedTime(activeVideo, time);\n\n  // If we have both video and audio times, pick the larger one.  If we picked\n  // the smaller one, that one will download an entire segment to buffer the\n  // difference.\n  if (videoStartTime != null && audioStartTime != null) {\n    return Math.max(videoStartTime, audioStartTime);\n  } else if (videoStartTime != null) {\n    return videoStartTime;\n  } else if (audioStartTime != null) {\n    return audioStartTime;\n  } else {\n    return time;\n  }\n};\n\n\n/**\n * Callback from PlayheadObserver.\n *\n * @param {boolean} buffering\n * @private\n */\nshaka.Player.prototype.onBuffering_ = function(buffering) {\n  // Before setting |buffering_|, update the time spent in the previous state.\n  this.updateTimeStats_();\n  this.buffering_ = buffering;\n  this.updateState_();\n\n  if (this.playhead_) {\n    this.playhead_.setBuffering(buffering);\n  }\n\n  let event = new shaka.util.FakeEvent('buffering', {'buffering': buffering});\n  this.dispatchEvent(event);\n};\n\n\n/**\n * Callback from PlayheadObserver.\n * @private\n */\nshaka.Player.prototype.onChangePeriod_ = function() {\n  this.onTracksChanged_();\n};\n\n\n/**\n * Called from potential initiators of state changes, or before returning stats\n * to the user.\n *\n * This method decides if state has actually changed, updates the last entry,\n * and adds a new one if needed.\n *\n * @private\n */\nshaka.Player.prototype.updateState_ = function() {\n  if (this.destroyer_.destroyed()) {\n    return;\n  }\n\n  let newState;\n  if (this.buffering_) {\n    newState = 'buffering';\n  } else if (this.video_.ended) {\n    newState = 'ended';\n  } else if (this.video_.paused) {\n    newState = 'paused';\n  } else {\n    newState = 'playing';\n  }\n\n  let now = Date.now() / 1000;\n  if (this.stats_.stateHistory.length) {\n    let lastIndex = this.stats_.stateHistory.length - 1;\n    let lastEntry = this.stats_.stateHistory[lastIndex];\n    lastEntry.duration = now - lastEntry.timestamp;\n\n    if (newState == lastEntry.state) {\n      // The state has not changed, so do not add anything to the history.\n      return;\n    }\n  }\n\n  this.stats_.stateHistory.push({\n    timestamp: now,\n    state: newState,\n    duration: 0,\n  });\n};\n\n\n/**\n * Callback from Playhead.\n *\n * @private\n */\nshaka.Player.prototype.onSeek_ = function() {\n  if (this.playheadObserver_) {\n    this.playheadObserver_.seeked();\n  }\n  if (this.streamingEngine_) {\n    this.streamingEngine_.seeked();\n  }\n};\n\n\n/**\n * Chooses a variant from all possible variants while taking into account\n * restrictions, preferences, and ABR.\n *\n * On error, this dispatches an error event and returns null.\n *\n * @param {!Array.<shaka.extern.Variant>} allVariants\n * @return {?shaka.extern.Variant}\n * @private\n */\nshaka.Player.prototype.chooseVariant_ = function(allVariants) {\n  goog.asserts.assert(this.config_, 'Must not be destroyed');\n\n  try {\n    // |variants| are the filtered variants, use |period.variants| so we know\n    // why they we restricted.\n    this.checkRestrictedVariants_(allVariants);\n  } catch (e) {\n    this.onError_(e);\n    return null;\n  }\n\n  goog.asserts.assert(\n      allVariants.length, 'Should have thrown for no Variants.');\n\n  const playableVariants = allVariants.filter((variant) => {\n    return shaka.util.StreamUtils.isPlayable(variant);\n  });\n\n  // Update the abr manager with newly filtered variants.\n  const adaptationSet = this.currentAdaptationSetCriteria_.create(\n      playableVariants);\n  this.abrManager_.setVariants(Array.from(adaptationSet.values()));\n  return this.abrManager_.chooseVariant();\n};\n\n\n/**\n * Choose a text stream from all possible text streams while taking into\n * account user preference.\n *\n * @param {!Array.<shaka.extern.Stream>} textStreams\n * @return {?shaka.extern.Stream}\n * @private\n */\nshaka.Player.prototype.chooseTextStream_ = function(textStreams) {\n  const subset = shaka.util.StreamUtils.filterStreamsByLanguageAndRole(\n      textStreams,\n      this.currentTextLanguage_,\n      this.currentTextRole_);\n\n  return subset[0] || null;\n};\n\n\n/**\n * Chooses streams from the given Period and switches to them.\n * Called after a config change, a new text stream, a key status event, or an\n * explicit language change.\n *\n * @param {!shaka.extern.Period} period\n * @private\n */\nshaka.Player.prototype.chooseStreamsAndSwitch_ = function(period) {\n  goog.asserts.assert(this.config_, 'Must not be destroyed');\n\n  // Because we're running this after a config change (manual language change),\n  // a new text stream, or a key status event, and because switching to an\n  // active stream is a no-op, it is always okay to clear the buffer here.\n  const chosenVariant = this.chooseVariant_(period.variants);\n  if (chosenVariant) {\n    this.addVariantToSwitchHistory_(chosenVariant, /* fromAdaptation */ true);\n    this.switchVariant_(chosenVariant, /* clearBuffers */ true);\n  }\n\n  // Only switch text if we should be streaming text right now.\n  const chosenText = this.chooseTextStream_(period.textStreams);\n  if (chosenText && this.shouldStreamText_()) {\n    this.addTextStreamToSwitchHistory_(chosenText, /* fromAdaptation */ true);\n    this.switchTextStream_(chosenText);\n  }\n\n  // Send an adaptation event so that the UI can show the new language/tracks.\n  this.onAdaptation_();\n};\n\n\n/**\n * Callback from StreamingEngine, invoked when a period starts. This method\n * must always \"succeed\" so it may not throw an error. Any errors must be\n * routed to |onError|.\n *\n * @param {!shaka.extern.Period} period\n * @return {shaka.media.StreamingEngine.ChosenStreams}\n *    An object containing the chosen variant and text stream.\n * @private\n */\nshaka.Player.prototype.onChooseStreams_ = function(period) {\n  shaka.log.debug('onChooseStreams_', period);\n\n  goog.asserts.assert(this.config_, 'Must not be destroyed');\n  goog.asserts.assert(this.manifest_, '|manifest_| should not be null');\n\n  try {\n    shaka.log.v2('onChooseStreams_, choosing variant from ', period.variants);\n    shaka.log.v2('onChooseStreams_, choosing text from ', period.textStreams);\n\n    const chosen = this.chooseStreams_(this.manifest_, period);\n\n    shaka.log.v2('onChooseStreams_, chose variant ', chosen.variant);\n    shaka.log.v2('onChooseStreams_, chose text ', chosen.text);\n\n    return chosen;\n  } catch (e) {\n    this.onError_(e);\n    return {variant: null, text: null};\n  }\n};\n\n\n/**\n * This is the internal logic for |onChooseStreams_|. This separation is done\n * to allow this implementation to throw errors without consequence.\n *\n * @param {shaka.extern.Manifest} manifest\n *    The manifest that contains the period. This is mainly done to avoid\n *    needing to do null checks in this method.\n * @param {shaka.extern.Period} period\n *    The period that we are selecting streams from.\n * @return {shaka.media.StreamingEngine.ChosenStreams}\n *    An object containing the chosen variant and text stream.\n * @private\n */\nshaka.Player.prototype.chooseStreams_ = function(manifest, period) {\n  const StreamUtils = shaka.util.StreamUtils;\n\n  goog.asserts.assert(\n      manifest.periods.includes(period),\n      'The period should be part of the manifest.');\n\n  // We are switching Periods, so the AbrManager will be disabled.  But if we\n  // want to abr.enabled, we do not want to call AbrManager.enable before\n  // canSwitch_ is called.\n  this.switchingPeriods_ = true;\n  this.abrManager_.disable();\n\n  shaka.log.debug('Choosing new streams after period changed');\n\n  let chosenVariant = this.chooseVariant_(period.variants);\n  let chosenText = this.chooseTextStream_(period.textStreams);\n\n  // Ignore deferred variant or text streams only if we are starting a new\n  // period.  In this case, any deferred switches were from an older period, so\n  // they do not apply.  We can still have deferred switches from the current\n  // period in the case of an early call to select*Track while we are setting up\n  // the first period.  This can happen with the 'streaming' event.\n  if (this.deferredVariant_) {\n    const deferredPeriodIndex = StreamUtils.findPeriodContainingVariant(\n        manifest, this.deferredVariant_);\n    const deferredPeriod = manifest.periods[deferredPeriodIndex];\n    if (deferredPeriod == period) {\n      chosenVariant = this.deferredVariant_;\n    }\n    this.deferredVariant_ = null;\n  }\n\n  if (this.deferredTextStream_) {\n    const deferredPeriodIndex = StreamUtils.findPeriodContainingStream(\n        manifest, this.deferredTextStream_);\n    const deferredPeriod = manifest.periods[deferredPeriodIndex];\n    if (deferredPeriod == period) {\n      chosenText = this.deferredTextStream_;\n    }\n    this.deferredTextStream_ = null;\n  }\n\n  if (chosenVariant) {\n    this.addVariantToSwitchHistory_(chosenVariant, /* fromAdaptation */ true);\n  }\n\n  if (chosenText) {\n    this.addTextStreamToSwitchHistory_(chosenText, /* fromAdaptation */ true);\n  }\n\n  // Check if we should show text (based on difference between audio and text\n  // languages). Only check this during startup so we don't \"pop-up\" captions\n  // mid playback.\n  const startingUp = !this.streamingEngine_.getActivePeriod();\n  const chosenAudio = chosenVariant ? chosenVariant.audio : null;\n  if (startingUp && chosenAudio && chosenText) {\n    if (this.shouldShowText_(chosenAudio, chosenText)) {\n      this.setTextTrackVisibility(true);\n      this.onTextTrackVisibility_();\n    }\n  }\n\n  // Don't fire a tracks-changed event since we aren't inside the new Period\n  // yet.\n  // Don't initialize with a text stream unless we should be streaming text.\n  if (this.shouldStreamText_()) {\n    return {variant: chosenVariant, text: chosenText};\n  } else {\n    return {variant: chosenVariant, text: null};\n  }\n};\n\n\n/**\n * Check if we should show text on screen.\n *\n * The text should automatically be shown if the audio language is not\n * language-compatible with the user's preference but the text is\n * language-compatible with the user's preference.\n *\n * For example:\n *   user  | audio | text  | show\n *  ------------------------------\n *   en-CA | jp    | en    | true\n *   en    | fr    | en-US | true\n *   fr-CA | jp    | en-US | false\n *   en-CA | en-US | en-US | false\n *\n * @param {shaka.extern.Stream} audioStream\n * @param {shaka.extern.Stream} textStream\n * @return {boolean}\n * @private\n */\nshaka.Player.prototype.shouldShowText_ = function(audioStream, textStream) {\n  const areLanguageCompatible = shaka.util.LanguageUtils.areLanguageCompatible;\n  const normalize = shaka.util.LanguageUtils.normalize;\n\n  /** @type {string} */\n  const preferredLocale = normalize(this.config_.preferredTextLanguage);\n  /** @type {string} */\n  const audioLocale = normalize(audioStream.language);\n  /** @type {string} */\n  const textLocale = normalize(textStream.language);\n\n  return areLanguageCompatible(textLocale, preferredLocale) &&\n         !areLanguageCompatible(audioLocale, preferredLocale);\n};\n\n\n/**\n * Callback from StreamingEngine, invoked when the period is set up.\n *\n * @private\n */\nshaka.Player.prototype.canSwitch_ = function() {\n  shaka.log.debug('canSwitch_');\n  goog.asserts.assert(this.config_, 'Must not be destroyed');\n\n  this.switchingPeriods_ = false;\n\n  if (this.config_.abr.enabled) {\n    this.abrManager_.enable();\n  }\n\n  // If we still have deferred switches, switch now.\n  if (this.deferredVariant_) {\n    this.streamingEngine_.switchVariant(\n        this.deferredVariant_, this.deferredVariantClearBuffer_,\n        this.deferredVariantClearBufferSafeMargin_);\n    this.deferredVariant_ = null;\n  }\n  if (this.deferredTextStream_) {\n    this.streamingEngine_.switchTextStream(this.deferredTextStream_);\n    this.deferredTextStream_ = null;\n  }\n};\n\n\n/**\n * Callback from StreamingEngine.\n *\n * @private\n */\nshaka.Player.prototype.onManifestUpdate_ = function() {\n  if (this.parser_ && this.parser_.update) {\n    this.parser_.update();\n  }\n};\n\n\n/**\n * Callback from StreamingEngine.\n *\n * @private\n */\nshaka.Player.prototype.onSegmentAppended_ = function() {\n  if (this.playhead_) {\n    this.playhead_.onSegmentAppended();\n  }\n};\n\n\n/**\n * Callback from AbrManager.\n *\n * @param {shaka.extern.Variant} variant\n * @param {boolean=} clearBuffer\n * @param {number=} safeMargin Optional amount of buffer (in seconds) to retain\n *   when clearing the buffer.\n *   Defaults to 0 if not provided. Ignored if clearBuffer is false.\n * @private\n */\nshaka.Player.prototype.switch_ = function(\n    variant, clearBuffer = false, safeMargin = 0) {\n  shaka.log.debug('switch_');\n  goog.asserts.assert(this.config_.abr.enabled,\n      'AbrManager should not call switch while disabled!');\n  goog.asserts.assert(!this.switchingPeriods_,\n      'AbrManager should not call switch while transitioning between Periods!');\n\n  this.addVariantToSwitchHistory_(variant, /* fromAdaptation */ true);\n\n  if (!this.streamingEngine_) {\n    // There's no way to change it.\n    return;\n  }\n\n  this.streamingEngine_.switchVariant(variant, clearBuffer, safeMargin);\n  this.onAdaptation_();\n};\n\n\n/**\n * Dispatches an 'adaptation' event.\n * @return {!Promise}\n * @private\n */\nshaka.Player.prototype.onAdaptation_ = async function() {\n  // Dispatch an 'adaptation' event next interpreter cycle. This gives\n  // StreamingEngine time to absorb the changes before the user tries to query\n  // them.\n  await this.waitNextTick_();\n\n  if (this.destroyer_.destroyed()) {\n    return;\n  }\n\n  let event = new shaka.util.FakeEvent('adaptation');\n  this.dispatchEvent(event);\n};\n\n\n/**\n * Dispatches a 'trackschanged' event.\n * @return {!Promise}\n * @private\n */\nshaka.Player.prototype.onTracksChanged_ = async function() {\n  // Dispatch a 'trackschanged' event next interpreter cycle. This gives\n  // StreamingEngine time to absorb the changes before the user tries to query\n  // them.\n  await this.waitNextTick_();\n\n  if (this.destroyer_.destroyed()) {\n      return;\n  }\n\n  let event = new shaka.util.FakeEvent('trackschanged');\n  this.dispatchEvent(event);\n};\n\n\n/**\n * Dispatches a 'variantchanged' event.\n * @return {!Promise}\n * @private\n */\nshaka.Player.prototype.onVariantChanged_ = async function() {\n  // Dispatch a 'trackschanged' event next interpreter cycle. This gives\n  // StreamingEngine time to absorb the changes before the user tries to query\n  // them.\n  await this.waitNextTick_();\n\n  if (this.destroyer_.destroyed()) {\n    return;\n  }\n\n  let event = new shaka.util.FakeEvent('variantchanged');\n  this.dispatchEvent(event);\n};\n\n\n/**\n * Dispatches a 'textchanged' event.\n * @return {!Promise}\n * @private\n */\nshaka.Player.prototype.onTextChanged_ = async function() {\n  // Dispatch a 'textchanged' event next interpreter cycle. This gives\n  // StreamingEngine time to absorb the changes before the user tries to query\n  // them.\n  await this.waitNextTick_();\n\n  if (this.destroyer_.destroyed()) {\n    return;\n  }\n\n  let event = new shaka.util.FakeEvent('trackschanged');\n  this.dispatchEvent(event);\n};\n\n\n/** @private */\nshaka.Player.prototype.onTextTrackVisibility_ = function() {\n  let event = new shaka.util.FakeEvent('texttrackvisibility');\n  this.dispatchEvent(event);\n};\n\n\n/**\n * @param {!shaka.util.Error} error\n * @private\n */\nshaka.Player.prototype.onError_ = function(error) {\n  // Errors dispatched after destroy is called are irrelevant.\n  if (this.destroyer_.destroyed()) {\n    return;\n  }\n\n  goog.asserts.assert(error instanceof shaka.util.Error, 'Wrong error type!');\n\n  let event = new shaka.util.FakeEvent('error', {'detail': error});\n  this.dispatchEvent(event);\n  if (event.defaultPrevented) {\n    error.handled = true;\n  }\n};\n\n\n/**\n * @param {!Event} event\n * @private\n */\nshaka.Player.prototype.onEvent_ = function(event) {\n  this.dispatchEvent(event);\n};\n\n\n/**\n * @param {!Event} event\n * @private\n */\nshaka.Player.prototype.onVideoError_ = function(event) {\n  if (!this.video_.error) return;\n\n  let code = this.video_.error.code;\n  if (code == 1 /* MEDIA_ERR_ABORTED */) {\n    // Ignore this error code, which should only occur when navigating away or\n    // deliberately stopping playback of HTTP content.\n    return;\n  }\n\n  // Extra error information from MS Edge and IE11:\n  let extended = this.video_.error.msExtendedCode;\n  if (extended) {\n    // Convert to unsigned:\n    if (extended < 0) {\n      extended += Math.pow(2, 32);\n    }\n    // Format as hex:\n    extended = extended.toString(16);\n  }\n\n  // Extra error information from Chrome:\n  let message = this.video_.error.message;\n\n  this.onError_(new shaka.util.Error(\n      shaka.util.Error.Severity.CRITICAL,\n      shaka.util.Error.Category.MEDIA,\n      shaka.util.Error.Code.VIDEO_ERROR,\n      code, extended, message));\n};\n\n\n/**\n * @param {!Object.<string, string>} keyStatusMap A map of hex key IDs to\n *   statuses.\n * @private\n */\nshaka.Player.prototype.onKeyStatus_ = function(keyStatusMap) {\n  goog.asserts.assert(this.streamingEngine_, 'Should have been initialized.');\n  const restrictedStatuses = shaka.Player.restrictedStatuses_;\n\n  const period = this.streamingEngine_.getCurrentPeriod();\n  let tracksChanged = false;\n\n  let keyIds = Object.keys(keyStatusMap);\n  if (keyIds.length == 0) {\n    shaka.log.warning(\n        'Got a key status event without any key statuses, so we don\\'t know ' +\n        'the real key statuses. If we don\\'t have all the keys, you\\'ll need ' +\n        'to set restrictions so we don\\'t select those tracks.');\n  }\n\n  // If EME is using a synthetic key ID, the only key ID is '00' (a single 0\n  // byte).  In this case, it is only used to report global success/failure.\n  // See note about old platforms in: https://bit.ly/2tpez5Z\n  let isGlobalStatus = keyIds.length == 1 && keyIds[0] == '00';\n\n  if (isGlobalStatus) {\n    shaka.log.warning(\n        'Got a synthetic key status event, so we don\\'t know the real key ' +\n        'statuses. If we don\\'t have all the keys, you\\'ll need to set ' +\n        'restrictions so we don\\'t select those tracks.');\n  }\n\n  // Only filter tracks for keys if we have some key statuses to look at.\n  if (keyIds.length) {\n    period.variants.forEach(function(variant) {\n      const streams = shaka.util.StreamUtils.getVariantStreams(variant);\n\n      streams.forEach(function(stream) {\n        let originalAllowed = variant.allowedByKeySystem;\n\n        // Only update if we have a key ID for the stream.\n        // If the key isn't present, then we don't have that key and the track\n        // should be restricted.\n        if (stream.keyId) {\n          let keyStatus = keyStatusMap[isGlobalStatus ? '00' : stream.keyId];\n          variant.allowedByKeySystem =\n              !!keyStatus && !restrictedStatuses.includes(keyStatus);\n        }\n\n        if (originalAllowed != variant.allowedByKeySystem) {\n          tracksChanged = true;\n        }\n      });  // streams.forEach\n    });  // period.variants.forEach\n  }  // if (keyIds.length)\n\n  // TODO: Get StreamingEngine to track variants and create getActiveVariant()\n  let activeAudio = this.streamingEngine_.getActiveAudio();\n  let activeVideo = this.streamingEngine_.getActiveVideo();\n  let activeVariant = shaka.util.StreamUtils.getVariantByStreams(\n      activeAudio, activeVideo, period.variants);\n\n  if (activeVariant && !activeVariant.allowedByKeySystem) {\n    shaka.log.debug('Choosing new streams after key status changed');\n    this.chooseStreamsAndSwitch_(period);\n  }\n\n  if (tracksChanged) {\n    this.onTracksChanged_();\n    this.chooseVariant_(period.variants);\n  }\n};\n\n\n/**\n * Callback from DrmEngine\n * @param {string} keyId\n * @param {number} expiration\n * @private\n */\nshaka.Player.prototype.onExpirationUpdated_ = function(keyId, expiration) {\n  if (this.parser_ && this.parser_.onExpirationUpdated) {\n    this.parser_.onExpirationUpdated(keyId, expiration);\n  }\n\n  let event = new shaka.util.FakeEvent('expirationupdated');\n  this.dispatchEvent(event);\n};\n\n/**\n * @return {boolean} true if we should stream text right now.\n * @private\n */\nshaka.Player.prototype.shouldStreamText_ = function() {\n  return this.config_.streaming.alwaysStreamText || this.isTextTrackVisible();\n};\n\n\n/**\n * Applys playRangeStart and playRangeEnd to the given timeline.\n *\n * @param {shaka.media.PresentationTimeline} timeline\n * @param {number} playRangeStart\n * @param {number} playRangeEnd\n * @param {boolean} isLive\n *\n * @private\n */\nshaka.Player.applyPlayRange_ = function(timeline,\n                                        playRangeStart,\n                                        playRangeEnd,\n                                        isLive) {\n  if (playRangeStart > 0) {\n    if (isLive) {\n      shaka.log.warning(\n          '|playRangeStart| has been configured for live content. ' +\n          'Ignoring the setting.');\n    } else {\n      timeline.setUserSeekStart(playRangeStart);\n    }\n  }\n\n  // If the playback has been configured to end before the end of the\n  // presentation, update the duration unless it's live content.\n  const fullDuration = timeline.getDuration();\n  if (playRangeEnd < fullDuration) {\n    if (isLive) {\n      shaka.log.warning(\n          '|playRangeEnd| has been configured for live content. ' +\n          'Ignoring the setting.');\n    } else {\n      timeline.setDuration(playRangeEnd);\n    }\n  }\n};\n\n\n/**\n * Checks the given variants and if they are all restricted, throw an\n * appropriate exception.\n *\n * @param {!Array.<shaka.extern.Variant>} variants\n * @private\n */\nshaka.Player.prototype.checkRestrictedVariants_ = function(variants) {\n  const restrictedStatuses = shaka.Player.restrictedStatuses_;\n  const keyStatusMap = this.drmEngine_ ? this.drmEngine_.getKeyStatuses() : {};\n  const keyIds = Object.keys(keyStatusMap);\n  const isGlobalStatus = keyIds.length && keyIds[0] == '00';\n\n  let hasPlayable = false;\n  let hasAppRestrict = false;\n  let missingKeys = [];\n  let badKeyStatuses = [];\n\n  for (let variant of variants) {\n    // TODO: Combine with onKeyStatus_.\n    let streams = [];\n    if (variant.audio) streams.push(variant.audio);\n    if (variant.video) streams.push(variant.video);\n\n    for (let stream of streams) {\n      if (stream.keyId) {\n        let keyStatus = keyStatusMap[isGlobalStatus ? '00' : stream.keyId];\n        if (!keyStatus) {\n          if (!missingKeys.includes(stream.keyId)) {\n            missingKeys.push(stream.keyId);\n          }\n        } else if (restrictedStatuses.includes(keyStatus)) {\n          if (!badKeyStatuses.includes(keyStatus)) {\n            badKeyStatuses.push(keyStatus);\n          }\n        }\n      }\n    }\n\n    if (!variant.allowedByApplication) {\n      hasAppRestrict = true;\n    } else if (variant.allowedByKeySystem) {\n      hasPlayable = true;\n    }\n  }\n\n  if (!hasPlayable) {\n    /** @type {shaka.extern.RestrictionInfo} */\n    let data = {\n      hasAppRestrictions: hasAppRestrict,\n      missingKeys: missingKeys,\n      restrictedKeyStatuses: badKeyStatuses,\n    };\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.RESTRICTIONS_CANNOT_BE_MET,\n        data);\n  }\n};\n\n/**\n * Return a promise that will delay the next next action to the next\n * interpreter cycle.\n *\n * @return {!Promise}\n * @private\n */\nshaka.Player.prototype.waitNextTick_ = function() {\n  return Promise.resolve();\n};\n\n/**\n * Return a list of text language-role combinations available for the given\n * tracks.\n *\n * @param {!Iterable.<shaka.extern.Track>} tracks\n * @return {!Array.<shaka.extern.LanguageRole>}\n * @private\n */\nshaka.Player.getLanguageAndRolesFromTracks_ = function(tracks) {\n  /**\n   * Group together all the roles that are used with each language. Use a set\n   * for the roles so that we don't track duplicates.\n   *\n   * @type {!Map.<string, !Set.<string>>}\n   **/\n  const rolesByLanguage = new Map();\n\n  for (const track of tracks) {\n    /** @type {string} */\n    const language = shaka.util.LanguageUtils.normalize(track.language);\n    /** @type {!Set.<string>} */\n    const roles = rolesByLanguage.get(language) || new Set();\n\n    for (const role of track.roles) {\n      roles.add(role);\n    }\n\n    rolesByLanguage.set(language, roles);\n  }\n\n  // If there are no roles, add an empty one so that combos will still be\n  // made.\n  rolesByLanguage.forEach((roles, language) => {\n    if (roles.size == 0) {\n      roles.add('');\n    }\n  });\n\n  /** @type {!Array.<shaka.extern.LanguageRole>} */\n  const combos = [];\n  rolesByLanguage.forEach((roles, language) => {\n    for (const role of roles) {\n      combos.push({\n        language: language,\n        role: role,\n      });\n    }\n  });\n\n  return combos;\n};\n\n\n/**\n * @param {!Iterable.<shaka.extern.Track>} tracks\n * @return {!Set.<string>}\n * @private\n */\nshaka.Player.getLanguagesFromTracks_ = function(tracks) {\n  /** @type {!Set.<string>} */\n  const languages = new Set();\n\n  for (const track of tracks) {\n    const language = shaka.util.LanguageUtils.normalize(track.language);\n    languages.add(language);\n  }\n\n  return languages;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.StoredContentUtils');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.media.PresentationTimeline');\ngoog.require('shaka.offline.ManifestConverter');\ngoog.require('shaka.offline.OfflineUri');\ngoog.require('shaka.util.StreamUtils');\n\n\n/**\n * A utility class used to create |shaka.extern.StoredContent| from different\n * types of input.\n */\nshaka.offline.StoredContentUtils = class {\n  /**\n   * @param {string} originalUri\n   * @param {shaka.extern.Manifest} manifest\n   * @param {number} size\n   * @param {!Object} metadata\n   * @return {shaka.extern.StoredContent}\n   */\n  static fromManifest(originalUri, manifest, size, metadata) {\n    goog.asserts.assert(\n        manifest.periods.length,\n        'Cannot create stored content from manifest with no periods.');\n\n    /** @type {number} */\n    let expiration = manifest.expiration == undefined ?\n                     Infinity :\n                     manifest.expiration;\n\n    /** @type {number} */\n    let duration = manifest.presentationTimeline.getDuration();\n\n    /** @type {shaka.extern.Period} */\n    let firstPeriod = manifest.periods[0];\n\n    /** @type {!Array.<shaka.extern.Track>} */\n    let tracks = shaka.offline.StoredContentUtils.getTracks_(firstPeriod);\n\n    /** @type {shaka.extern.StoredContent} */\n    let content = {\n      offlineUri: null,\n      originalManifestUri: originalUri,\n      duration: duration,\n      size: size,\n      expiration: expiration,\n      tracks: tracks,\n      appMetadata: metadata,\n    };\n\n    return content;\n  }\n\n\n  /**\n   * @param {!shaka.offline.OfflineUri} offlineUri\n   * @param {shaka.extern.ManifestDB} manifestDB\n   * @return {shaka.extern.StoredContent}\n   */\n  static fromManifestDB(offlineUri, manifestDB) {\n    goog.asserts.assert(\n        manifestDB.periods.length,\n        'Cannot create stored content from manifestDB with no periods.');\n\n    let converter = new shaka.offline.ManifestConverter(\n        offlineUri.mechanism(), offlineUri.cell());\n\n    /** @type {shaka.extern.PeriodDB} */\n    let firstPeriodDB = manifestDB.periods[0];\n    /** @type {!shaka.media.PresentationTimeline} */\n    let timeline = new shaka.media.PresentationTimeline(null, 0);\n\n\n    /** @type {shaka.extern.Period} */\n    let firstPeriod = converter.fromPeriodDB(firstPeriodDB, timeline);\n\n    /** @type {!Object} */\n    let metadata = manifestDB.appMetadata || {};\n\n    /** @type {!Array.<shaka.extern.Track>} */\n    let tracks = shaka.offline.StoredContentUtils.getTracks_(firstPeriod);\n\n    /** @type {shaka.extern.StoredContent} */\n    let content = {\n      offlineUri: offlineUri.toString(),\n      originalManifestUri: manifestDB.originalManifestUri,\n      duration: manifestDB.duration,\n      size: manifestDB.size,\n      expiration: manifestDB.expiration,\n      tracks: tracks,\n      appMetadata: metadata,\n    };\n\n    return content;\n  }\n\n\n  /**\n   * Gets track representations of all playable variants and all text streams.\n   *\n   * @param {shaka.extern.Period} period\n   * @return {!Array.<shaka.extern.Track>}\n   * @private\n   */\n  static getTracks_(period) {\n    const StreamUtils = shaka.util.StreamUtils;\n\n    const tracks = [];\n\n    const variants = StreamUtils.getPlayableVariants(period.variants);\n    for (const variant of variants) {\n      tracks.push(StreamUtils.variantToTrack(variant));\n    }\n\n    const textStreams = period.textStreams;\n    for (const stream of textStreams) {\n      tracks.push(StreamUtils.textStreamToTrack(stream));\n    }\n\n    return tracks;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.StreamBandwidthEstimator');\n\ngoog.require('shaka.log');\n\n\n/**\n * A utility class to help estimate the size of streams based on stream and\n * variant bandwidths. This class's main purpose is to isolate the logic in\n * creating non-zero bandwidth estimates for all streams so that each stream\n * will have some influence over the progress of the download.\n */\nshaka.offline.StreamBandwidthEstimator = class {\n  constructor() {\n    /** @private {!Object.<number, number>} */\n    this.estimateByStreamId_ = {};\n  }\n\n  /**\n   * Add a new variant to the estimator. This will update the estimates for all\n   * streams in the variant.\n   *\n   * @param {shaka.extern.Variant} variant\n   */\n  addVariant(variant) {\n    // Three cases:\n    //  1 - Only Audio\n    //  2 - Only Video\n    //  3 - Audio and Video\n\n    let audio = variant.audio;\n    let video = variant.video;\n\n    // Case 1\n    if (audio && !video) {\n      let audioBitRate = audio.bandwidth || variant.bandwidth;\n      this.setBitrate_(audio.id, audioBitRate);\n    }\n\n    // Case 2\n    if (!audio && video) {\n      let videoBitRate = video.bandwidth || variant.bandwidth;\n      this.setBitrate_(video.id, videoBitRate);\n    }\n\n    // Case 3\n    if (audio && video) {\n      // Get the audio's bandwidth. If it is missing, default to our default\n      // audio bandwidth.\n      let audioBitRate =\n          audio.bandwidth ||\n          shaka.offline.StreamBandwidthEstimator.DEFAULT_AUDIO_BITRATE_;\n\n      // Get the video's bandwidth. If it is missing, use the variant bandwidth\n      // less the audio. If we get a negative bit rate, fall back to our\n      // default video bandwidth.\n      let videoBitRate = video.bandwidth || (variant.bandwidth - audioBitRate);\n      if (videoBitRate <= 0) {\n        shaka.log.warning(\n            'Audio bit rate consumes variants bandwidth. Setting video ' +\n            'bandwidth to match variant\\'s bandwidth.');\n        videoBitRate = variant.bandwidth;\n      }\n\n      this.setBitrate_(audio.id, audioBitRate);\n      this.setBitrate_(video.id, videoBitRate);\n    }\n  }\n\n  /**\n   * @param {number} stream\n   * @param {number} bitRate\n   * @private\n   */\n  setBitrate_(stream, bitRate) {\n    this.estimateByStreamId_[stream] = bitRate;\n  }\n\n  /**\n   * Create an estimate for the text stream.\n   *\n   * @param {shaka.extern.Stream} text\n   */\n  addText(text) {\n    this.estimateByStreamId_[text.id] =\n        shaka.offline.StreamBandwidthEstimator.DEFAULT_TEXT_BITRATE_;\n  }\n\n  /**\n   * Get the estimate for a segment that is part of a stream that has already\n   * added to the estimator.\n   *\n   * @param {number} id\n   * @param {!shaka.media.SegmentReference} segment\n   * @return {number}\n   */\n  getSegmentEstimate(id, segment) {\n    let duration = segment.endTime - segment.startTime;\n    return this.getEstimate_(id) * duration;\n  }\n\n  /**\n   * Get the estimate for an init segment for a stream that has already\n   * added to the estimator.\n   *\n   * @param {number} id\n   * @return {number}\n   */\n  getInitSegmentEstimate(id) {\n    // Assume that the init segment is worth approximately half a second of\n    // content.\n    let duration = 0.5;\n    return this.getEstimate_(id) * duration;\n  }\n\n  /**\n   * @param {number} id\n   * @return {number}\n   * @private\n   */\n  getEstimate_(id) {\n    let bitRate = this.estimateByStreamId_[id];\n\n    if (bitRate == null) {\n      bitRate = 0;\n      shaka.log.error(\n          'Asking for bitrate of stream not given to the estimator');\n    }\n\n    if (bitRate == 0) {\n      shaka.log.warning(\n          'Using bitrate of 0, this stream won\\'t affect progress');\n    }\n\n    return bitRate;\n  }\n};\n\n\n/**\n * Since audio bandwidth does not vary much, we are going to use a constant\n * approximation for audio bit rate allowing use to more accurately guess at\n * the video bitrate.\n *\n * YouTube's suggested bitrate for stereo audio is 384 kbps so we are going to\n * assume that: https://support.google.com/youtube/answer/1722171?hl=en\n *\n * @const {number}\n * @private\n */\nshaka.offline.StreamBandwidthEstimator.DEFAULT_AUDIO_BITRATE_ = 393216;\n\n\n/**\n * Since we don't normally get the bitrate for text, we still want to create\n * some approximation so that it can influence progress. This will use the\n * bitrate from \"Tears of Steal\" to give some kind of data-driven result.\n *\n * The file size for English subtitles is 4.7 KB. The video is 12:14 long,\n * which means that the text's bit rate is around 52 bps.\n *\n * @const {number}\n * @private\n */\nshaka.offline.StreamBandwidthEstimator.DEFAULT_TEXT_BITRATE_ = 52;\n\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.ManifestFilter');\n\ngoog.require('goog.asserts');\n\n\n/**\n * This utility class contains all the functions used to filter manifests\n * before playback and before storage.\n */\nshaka.util.ManifestFilter = class {\n  /**\n   * Filter the variants in |manifest| to only include the variants that meet\n   * the given restrictions.\n   *\n   * @param {shaka.extern.Manifest} manifest\n   * @param {shaka.extern.Restrictions} restrictions\n   * @param {{width: number, height:number}} maxHwResolution\n   */\n  static filterByRestrictions(manifest, restrictions, maxHwResolution) {\n    for (const period of manifest.periods) {\n      period.variants = period.variants.filter((variant) => {\n        return shaka.util.StreamUtils.meetsRestrictions(\n            variant, restrictions, maxHwResolution);\n      });\n    }\n  }\n\n\n  /**\n   * Filter the variants in the |manifest| to only include those that are\n   * supported by media source.\n   *\n   * @param {shaka.extern.Manifest} manifest\n   */\n  static filterByMediaSourceSupport(manifest) {\n    const isStreamSupported = shaka.media.MediaSourceEngine.isStreamSupported;\n\n    for (const period of manifest.periods) {\n      period.variants = period.variants.filter((variant) => {\n        let supported = true;\n        if (variant.audio) {\n          supported = supported && isStreamSupported(variant.audio);\n        }\n        if (variant.video) {\n          supported = supported && isStreamSupported(variant.video);\n        }\n        return supported;\n      });\n    }\n  }\n\n  /**\n   * Filter the variants in |manifest| to only include those that are supported\n   * by |drm|.\n   *\n   * @param {shaka.extern.Manifest} manifest\n   * @param {!shaka.media.DrmEngine} drmEngine\n   */\n  static filterByDrmSupport(manifest, drmEngine) {\n    for (const period of manifest.periods) {\n      period.variants = period.variants.filter((variant) => {\n        return drmEngine.supportsVariant(variant);\n      });\n    }\n  }\n\n  /**\n   * Filter the variants in |manifest| to only include those that use codecs\n   * that will be supported in each variant. This ensures playback from the\n   * first period to the last period by \"jumping between\" compatible variants.\n   *\n   * @param {shaka.extern.Manifest} manifest\n   */\n  static filterByCommonCodecs(manifest) {\n    goog.asserts.assert(manifest.periods.length > 0,\n                        'There should be at least be one period');\n\n    const ManifestFilter = shaka.util.ManifestFilter;\n\n    // Create a set of summaries that occur in each period.\n    /** @type {!shaka.util.ManifestFilter.VariantCodecSummarySet} */\n    const common = new shaka.util.ManifestFilter.VariantCodecSummarySet();\n\n    manifest.periods.forEach((period, index) => {\n      /** @type {!shaka.util.ManifestFilter.VariantCodecSummarySet} */\n      const next = ManifestFilter.VariantCodecSummarySet.fromVariants(\n          period.variants);\n\n      if (index == 0) {\n        common.includeAll(next);\n      } else {\n        common.onlyKeep(next);\n      }\n    });\n\n    // Filter the variants in the period by whether they match a summary that\n    // occurs in every period.\n    for (const period of manifest.periods) {\n      period.variants = period.variants.filter((variant) => {\n        const summary = new ManifestFilter.VariantCodecSummary(variant);\n        return common.contains(summary);\n      });\n    }\n  }\n\n  /**\n   * Go through each period and apply the filter to the set of variants.\n   * |filter| will only be given the set of variants in the current period that\n   * are compatible with at least one variant in the previous period.\n   *\n   * @param {shaka.extern.Manifest} manifest\n   * @param {function(shaka.extern.Period)} filter\n   */\n  static rollingFilter(manifest, filter) {\n    const ManifestFilter = shaka.util.ManifestFilter;\n\n    // Store a reference to the variants so that the next period can easily\n    // reference them too.\n    /** @type {!shaka.util.ManifestFilter.VariantCodecSummarySet} */\n    let previous = new ManifestFilter.VariantCodecSummarySet();\n\n    manifest.periods.forEach((period, index) => {\n      // Remove all variants that don't have a compatible variant in the\n      // previous period. If we were to only use the first variant, we would\n      // risk a variant being removed from a later period that would break that\n      // path across all periods.\n      if (index > 0) {\n        period.variants = period.variants.filter((variant) => {\n          const summary = new ManifestFilter.VariantCodecSummary(variant);\n          return previous.contains(summary);\n        });\n      }\n\n      filter(period);\n\n      // Use the results of filtering this period as the \"previous\" for the\n      // next period.\n      previous =\n          ManifestFilter.VariantCodecSummarySet.fromVariants(period.variants);\n    });\n  }\n};\n\n\n/**\n * The variant codec summary is a summary of the codec information for a given\n * codec. This can be used to test the compatibility between variants by\n * checking that their summaries contain the same information.\n *\n * @final\n */\nshaka.util.ManifestFilter.VariantCodecSummary = class {\n  /**\n   * @param {shaka.extern.Variant} variant\n   */\n  constructor(variant) {\n    // We summarize a variant based on the basic mime type and the basic\n    // codec because they must match for two variants to be compatible. For\n    // example, we can't adapt between WebM and MP4, nor can we adapt between\n    // mp4a.* to ec-3.\n\n    const audio = variant.audio;\n    const video = variant.video;\n\n    /** @private {?string} */\n    this.audioMime_ = audio ? audio.mimeType : null;\n    /** @private {?string} */\n    this.audioCodec_ = audio ? audio.codecs.split('.')[0] : null;\n    /** @private {?string} */\n    this.videoMime_ = video ? video.mimeType : null;\n    /** @private {?string} */\n    this.videoCodec_ = video ? video.codecs.split('.')[0] : null;\n  }\n\n  /**\n   * Check if this summaries is equal to another.\n   *\n   * @param {!shaka.util.ManifestFilter.VariantCodecSummary} other\n   * @return {boolean}\n   */\n  equals(other) {\n    return this.audioMime_ == other.audioMime_ &&\n           this.audioCodec_ == other.audioCodec_ &&\n           this.videoMime_ == other.videoMime_ &&\n           this.videoCodec_ == other.videoCodec_;\n  }\n};\n\n\n/**\n * @final\n */\nshaka.util.ManifestFilter.VariantCodecSummarySet = class {\n  constructor() {\n    /** @private {!Array.<!shaka.util.ManifestFilter.VariantCodecSummary>} */\n    this.all_ = [];\n  }\n\n  /**\n   * @param {!shaka.util.ManifestFilter.VariantCodecSummary} summary\n   */\n  add(summary) {\n    if (!this.contains(summary)) {\n      this.all_.push(summary);\n    }\n  }\n\n  /**\n   * Add all items from |other| to |this|.\n   * @param {!shaka.util.ManifestFilter.VariantCodecSummarySet} other\n   */\n  includeAll(other) {\n    for (const item of other.all_) {\n      this.add(item);\n    }\n  }\n\n  /**\n   * Remove all items from |this| that are not in |other|.\n   * @param {!shaka.util.ManifestFilter.VariantCodecSummarySet} other\n   */\n  onlyKeep(other) {\n    this.all_ = this.all_.filter((x) => other.contains(x));\n  }\n\n  /**\n   * @param {!shaka.util.ManifestFilter.VariantCodecSummary} summary\n   * @return {boolean}\n   */\n  contains(summary) {\n    return this.all_.some((x) => summary.equals(x));\n  }\n\n  /**\n   * Create a set of variant codec summaries for a list of variants. The set\n   * may have fewer elements than the list if there are variants with similar\n   * codecs.\n   *\n   * @param {!Array.<shaka.extern.Variant>} variants\n   * @return {!shaka.util.ManifestFilter.VariantCodecSummarySet}\n   */\n  static fromVariants(variants) {\n    const set = new shaka.util.ManifestFilter.VariantCodecSummarySet();\n    for (const variant of variants) {\n      set.add(new shaka.util.ManifestFilter.VariantCodecSummary(variant));\n    }\n    return set;\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.offline.Storage');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.Player');\ngoog.require('shaka.log');\ngoog.require('shaka.media.DrmEngine');\ngoog.require('shaka.media.ManifestParser');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.offline.DownloadManager');\ngoog.require('shaka.offline.OfflineUri');\ngoog.require('shaka.offline.SessionDeleter');\ngoog.require('shaka.offline.StorageCellPath');\ngoog.require('shaka.offline.StorageMuxer');\ngoog.require('shaka.offline.StoredContentUtils');\ngoog.require('shaka.offline.StreamBandwidthEstimator');\ngoog.require('shaka.util.ArrayUtils');\ngoog.require('shaka.util.Destroyer');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.IDestroyable');\ngoog.require('shaka.util.ManifestFilter');\ngoog.require('shaka.util.PlayerConfiguration');\ngoog.require('shaka.util.StreamUtils');\n\n\n/**\n * This manages persistent offline data including storage, listing, and deleting\n * stored manifests.  Playback of offline manifests are done through the Player\n * using a special URI (see shaka.offline.OfflineUri).\n *\n * First, check support() to see if offline is supported by the platform.\n * Second, configure() the storage object with callbacks to your application.\n * Third, call store(), remove(), or list() as needed.\n * When done, call destroy().\n *\n * @param {!shaka.Player=} player\n *    A player instance to share a networking engine and configuration with.\n *    When initializing with a player, storage is only valid as long as\n *    |destroy| has not been called on the player instance. When omitted,\n *    storage will manage its own networking engine and configuration.\n *\n * @struct\n * @constructor\n * @implements {shaka.util.IDestroyable}\n * @export\n */\nshaka.offline.Storage = function(player) {\n  // It is an easy mistake to make to pass a Player proxy from CastProxy.\n  // Rather than throw a vague exception later, throw an explicit and clear one\n  // now.\n  //\n  // TODO(vaage): After we decide whether or not we want to support\n  //  initializing storage with a player proxy, we should either remove\n  //  this error or rename the error.\n  if (player && player.constructor != shaka.Player) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STORAGE,\n        shaka.util.Error.Code.LOCAL_PLAYER_INSTANCE_REQUIRED);\n  }\n\n  /** @private {?shaka.extern.PlayerConfiguration} */\n  this.config_ = null;\n\n  /** @private {shaka.net.NetworkingEngine} */\n  this.networkingEngine_ = null;\n\n  // Initialize |config_| and |networkingEngine_| based on whether or not\n  // we were given a player instance.\n  if (player) {\n    this.config_ = player.getSharedConfiguration();\n    this.networkingEngine_ = player.getNetworkingEngine();\n\n    goog.asserts.assert(\n        this.networkingEngine_,\n        'Storage should not be initialized with a player that had |destroy| ' +\n            'called on it.');\n  } else {\n    this.config_ = shaka.util.PlayerConfiguration.createDefault();\n    this.networkingEngine_ = new shaka.net.NetworkingEngine();\n  }\n\n  /** @private {boolean} */\n  this.storeInProgress_ = false;\n\n  /**\n   * A list of segment ids for all the segments that were added during the\n   * current store. If the store fails or is aborted, these need to be\n   * removed from storage.\n   * @private {!Array.<number>}\n   */\n  this.segmentsFromStore_ = [];\n\n  /**\n   * A list of open operations that are being performed by this instance of\n   * |shaka.offline.Storage|.\n   *\n   * @private {!Array.<!Promise>}\n   */\n  this.openOperations_ = [];\n\n  /**\n   * Storage should only destroy the networking engine if it was initialized\n   * without a player instance. Store this as a flag here to avoid including\n   * the player object in the destoyer's closure.\n   *\n   * @type {boolean}\n   */\n  const destroyNetworkingEngine = !player;\n\n  /** @private {!shaka.util.Destroyer} */\n  this.destroyer_ = new shaka.util.Destroyer(async () => {\n    // Wait for all the open operations to end. Wrap each operations so that a\n    // single rejected promise won't cause |Promise.all| to return early or to\n    // return a rejected Promise.\n    const noop = () => {};\n    await Promise.all(this.openOperations_.map((op) => op.then(noop, noop)));\n\n    // Wait until after all the operations have finished before we destroy\n    // the networking engine to avoid any unexpected errors.\n    if (destroyNetworkingEngine) {\n      await this.networkingEngine_.destroy();\n    }\n\n    // Drop all references to internal objects to help with GC.\n    this.config_ = null;\n    this.networkingEngine_ = null;\n  });\n};\n\n\n/**\n * Gets whether offline storage is supported.  Returns true if offline storage\n * is supported for clear content.  Support for offline storage of encrypted\n * content will not be determined until storage is attempted.\n *\n * @return {boolean}\n * @export\n */\nshaka.offline.Storage.support = function() {\n  return shaka.offline.StorageMuxer.support();\n};\n\n\n/**\n * @override\n * @export\n */\nshaka.offline.Storage.prototype.destroy = function() {\n  return this.destroyer_.destroy();\n};\n\n\n/**\n * Sets configuration values for Storage.  This is associated with\n * Player.configure and will change the player instance given at\n * initialization.\n *\n * @param {!Object} config This should follow the form of\n *   {@link shaka.extern.PlayerConfiguration}, but you may omit any field\n *   you do not wish to change.\n * @return {boolean}\n * @export\n */\nshaka.offline.Storage.prototype.configure = function(config) {\n  shaka.offline.Storage.verifyConfig_(config);\n\n  goog.asserts.assert(\n      this.config_, 'Cannot reconfigure stroage after calling destroy.');\n  return shaka.util.PlayerConfiguration.mergeConfigObjects(\n      this.config_ /* destination */, config /* updates */);\n};\n\n\n/**\n * Return the networking engine that storage is using. If storage was\n * initialized with a player instance, then the networking engine returned\n * will be the same as |player.getNetworkingEngine()|.\n *\n * The returned value will only be null if |destroy| was called before\n * |getNetworkingEngine|.\n *\n * @return {shaka.net.NetworkingEngine}\n * @export\n */\nshaka.offline.Storage.prototype.getNetworkingEngine = function() {\n  return this.networkingEngine_;\n};\n\n\n/**\n * Stores the given manifest.  If the content is encrypted, and encrypted\n * content cannot be stored on this platform, the Promise will be rejected with\n * error code 6001, REQUESTED_KEY_SYSTEM_CONFIG_UNAVAILABLE.\n *\n * @param {string} uri The URI of the manifest to store.\n * @param {!Object=} appMetadata An arbitrary object from the application\n *   that will be stored along-side the offline content.  Use this for any\n *   application-specific metadata you need associated with the stored content.\n *   For details on the data types that can be stored here, please refer to\n *   {@link https://bit.ly/StructClone}\n * @param {string|shaka.extern.ManifestParser.Factory=} mimeType\n *   The mime type for the content |manifestUri| points to or a manifest parser\n *   factory to override auto-detection or use an unregistered parser. Passing\n *   a manifest parser factory is deprecated and will be removed.\n * @return {!Promise.<shaka.extern.StoredContent>}  A Promise to a structure\n *   representing what was stored.  The \"offlineUri\" member is the URI that\n *   should be given to Player.load() to play this piece of content offline.\n *   The \"appMetadata\" member is the appMetadata argument you passed to store().\n * @export\n */\nshaka.offline.Storage.prototype.store = function(uri, appMetadata, mimeType) {\n  const getParser = async () => {\n    let Factory;\n\n    // TODO(vaage): Remove this branch when we remove support for passing\n    //  in factory overrides in v2.6.\n    if (mimeType && typeof mimeType != 'string') {\n      shaka.log.alwaysWarn(\n          'Loading with a manifest parser factory is deprecated. Instead ' +\n              'please register a manifest parser and pass in the mime type.');\n      Factory = /** @type {shaka.extern.ManifestParser.Factory} */(mimeType);\n    } else {\n      goog.asserts.assert(\n        this.networkingEngine_,\n        'Should not call |store| after |destroy|');\n\n      // TODO(vaage): Move this into |store_| when we remove support for passing\n      //  in factory overrides in v2.6.\n      Factory = await shaka.media.ManifestParser.getFactory(\n          uri,\n          this.networkingEngine_,\n          this.config_.manifest.retryParameters,\n          /** @type {?string} */ (mimeType));\n    }\n\n    return new Factory();\n  };\n\n  return this.startOperation_(this.store_(uri, appMetadata || {}, getParser));\n};\n\n\n/**\n * See |shaka.offline.Storage.store| for details.\n *\n * @param {string} uri\n * @param {!Object} appMetadata\n * @param {function():!Promise.<shaka.extern.ManifestParser>} getParser\n * @return {!Promise.<shaka.extern.StoredContent>}\n * @private\n */\nshaka.offline.Storage.prototype.store_ = async function(\n    uri, appMetadata, getParser) {\n  // TODO: Create a way for a download to be canceled while being downloaded.\n  this.requireSupport_();\n\n  if (this.storeInProgress_) {\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STORAGE,\n        shaka.util.Error.Code.STORE_ALREADY_IN_PROGRESS));\n  }\n  this.storeInProgress_ = true;\n\n  const manifest = await this.parseManifest(uri, getParser);\n\n  // Check if we were asked to destroy ourselves while we were \"away\"\n  // downloading the manifest.\n  this.checkDestroyed_();\n\n  // Check if we can even download this type of manifest before trying to\n  // create the drm engine.\n  const canDownload = !manifest.presentationTimeline.isLive() &&\n                      !manifest.presentationTimeline.isInProgress();\n  if (!canDownload) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STORAGE,\n        shaka.util.Error.Code.CANNOT_STORE_LIVE_OFFLINE,\n        uri);\n  }\n\n\n  // Since we will need to use |drmEngine|, |activeHandle|, and |muxer| in the\n  // catch/finally blocks, we need to define them out here. Since they may not\n  // get initialized when we enter the catch/finally block, we need to assume\n  // that they may be null/undefined when we get there.\n  /** @type {?shaka.media.DrmEngine} */\n  let drmEngine = null;\n  /** @type {shaka.offline.StorageMuxer} */\n  let muxer = new shaka.offline.StorageMuxer();\n  /** @type {?shaka.offline.StorageCellHandle} */\n  let activeHandle = null;\n\n  // This will be used to store any errors from drm engine. Whenever drm engine\n  // is passed to another function to do work, we should check if this was\n  // set.\n  let drmError = null;\n\n  try {\n    drmEngine = await this.createDrmEngine(\n        manifest,\n        (e) => { drmError = drmError || e; });\n\n    // We could have been asked to destroy ourselves while we were \"away\"\n    // creating the drm engine.\n    this.checkDestroyed_();\n    if (drmError) { throw drmError; }\n\n    this.filterManifest_(manifest, drmEngine);\n\n    await muxer.init();\n    this.checkDestroyed_();\n\n    // Get the cell that we are saving the manifest to. Once we get a cell\n    // we will only reference the cell and not the muxer so that the manifest\n    // and segments will all be saved to the same cell.\n    activeHandle = await muxer.getActive();\n    this.checkDestroyed_();\n\n    goog.asserts.assert(drmEngine, 'drmEngine should be non-null here.');\n\n    const manifestDB = await this.downloadManifest_(\n        activeHandle.cell, drmEngine, manifest, uri, appMetadata);\n    this.checkDestroyed_();\n    if (drmError) { throw drmError; }\n\n    const ids = await activeHandle.cell.addManifests([manifestDB]);\n    this.checkDestroyed_();\n\n    const offlineUri = shaka.offline.OfflineUri.manifest(\n        activeHandle.path.mechanism, activeHandle.path.cell, ids[0]);\n\n    return shaka.offline.StoredContentUtils.fromManifestDB(\n        offlineUri, manifestDB);\n  } catch (e) {\n    // If we did start saving some data, we need to remove it all to avoid\n    // wasting storage. However if the muxer did not manage to initialize, then\n    // we won't have an active cell to remove the segments from.\n    if (activeHandle) {\n      await activeHandle.cell.removeSegments(this.segmentsFromStore_, () => {});\n    }\n\n    // If we already had an error, ignore this error to avoid hiding\n    // the original error.\n    throw drmError || e;\n  } finally {\n    this.storeInProgress_ = false;\n    this.segmentsFromStore_ = [];\n\n    await muxer.destroy();\n    if (drmEngine) {\n      await drmEngine.destroy();\n    }\n  }\n};\n\n\n/**\n * Filter |manifest| such that it will only contain the variants and text\n * streams that we want to store and can actually play.\n *\n * @param {shaka.extern.Manifest} manifest\n * @param {!shaka.media.DrmEngine} drmEngine\n * @private\n */\nshaka.offline.Storage.prototype.filterManifest_ = function(\n    manifest, drmEngine) {\n  // Filter the manifest based on the restrictions given in the player\n  // configuration.\n  const maxHwRes = {width: Infinity, height: Infinity};\n  shaka.util.ManifestFilter.filterByRestrictions(\n      manifest, this.config_.restrictions, maxHwRes);\n\n  // Filter the manifest based on what we know media source will be able to\n  // play later (no point storing something we can't play).\n  shaka.util.ManifestFilter.filterByMediaSourceSupport(manifest);\n\n  // Filter the manifest based on what we know our drm system will support\n  // playing later.\n  shaka.util.ManifestFilter.filterByDrmSupport(manifest, drmEngine);\n\n  // Filter the manifest so that it will only use codecs that are available in\n  // all periods.\n  shaka.util.ManifestFilter.filterByCommonCodecs(manifest);\n\n  // Filter each variant based on what the app says they want to store. The app\n  // will only be given variants that are compatible with all previous\n  // post-filtered periods.\n  shaka.util.ManifestFilter.rollingFilter(manifest, (period) => {\n    const StreamUtils = shaka.util.StreamUtils;\n    let tracks = [];\n    tracks = tracks.concat(StreamUtils.getVariantTracks(period, null, null));\n    tracks = tracks.concat(StreamUtils.getTextTracks(period, null));\n\n    const chosenTracks = this.config_.offline.trackSelectionCallback(tracks);\n\n    /** @type {!Set.<number>} */\n    const variantIds = new Set();\n    /** @type {!Set.<number>} */\n    const textIds = new Set();\n\n    for (const track of chosenTracks) {\n      if (track.type == 'variant') { variantIds.add(track.id); }\n      if (track.type == 'text') { textIds.add(track.id); }\n    }\n\n    period.variants =\n        period.variants.filter((variant) => variantIds.has(variant.id));\n    period.textStreams =\n        period.textStreams.filter((stream) => textIds.has(stream.id));\n  });\n\n  // Check the post-filtered manifest for characteristics that may indicate\n  // issues with how the app selected tracks.\n  shaka.offline.Storage.validateManifest_(manifest);\n};\n\n\n/**\n * Create a download manager and download the manifest.\n *\n * @param {shaka.extern.StorageCell} storage\n * @param {!shaka.media.DrmEngine} drmEngine\n * @param {shaka.extern.Manifest} manifest\n * @param {string} uri\n * @param {!Object} metadata\n * @return {!Promise.<shaka.extern.ManifestDB>}\n * @private\n */\nshaka.offline.Storage.prototype.downloadManifest_ = async function(\n    storage, drmEngine, manifest, uri, metadata) {\n  goog.asserts.assert(\n      this.networkingEngine_,\n      'Cannot call |downloadManifest_| after calling |destroy|.');\n\n  const pendingContent = shaka.offline.StoredContentUtils.fromManifest(\n      uri, manifest, /* size */ 0, metadata);\n\n  /** @type {!shaka.offline.DownloadManager} */\n  const downloader = new shaka.offline.DownloadManager((progress, size) => {\n    // Update the size of the stored content before issuing a progress update.\n    pendingContent.size = size;\n    this.config_.offline.progressCallback(pendingContent, progress);\n  });\n\n  try {\n    const manifestDB = this.createOfflineManifest_(\n        downloader, storage, drmEngine, manifest, uri, metadata);\n\n    // Downloader should now be populated with all the download requests needed\n    // to download the manifest. Wait for them all the finish.\n    await downloader.download(this.networkingEngine_);\n\n    // Now that we have downloaded all the streams, we can save the actual size\n    // of the content.\n    manifestDB.size = pendingContent.size;\n\n    return manifestDB;\n  } finally {\n    await downloader.destroy();\n  }\n};\n\n\n/**\n * Removes the given stored content.  This will also attempt to release the\n * licenses, if any.\n *\n * @param {string} contentUri\n * @return {!Promise}\n * @export\n */\nshaka.offline.Storage.prototype.remove = function(contentUri) {\n  return this.startOperation_(this.remove_(contentUri));\n};\n\n\n/**\n * See |shaka.offline.Storage.remove| for details.\n *\n * @param {string} contentUri\n * @return {!Promise}\n * @private\n */\nshaka.offline.Storage.prototype.remove_ = function(contentUri) {\n  this.requireSupport_();\n\n  let nullableUri = shaka.offline.OfflineUri.parse(contentUri);\n  if (nullableUri == null || !nullableUri.isManifest()) {\n    return Promise.reject(new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STORAGE,\n        shaka.util.Error.Code.MALFORMED_OFFLINE_URI,\n        contentUri));\n  }\n\n  let uri = /** @type {!shaka.offline.OfflineUri} */ (nullableUri);\n\n  let muxer = new shaka.offline.StorageMuxer();\n  return shaka.util.Destroyer.with([muxer], async () => {\n    await muxer.init();\n\n    let cell = await muxer.getCell(uri.mechanism(), uri.cell());\n    let manifests = await cell.getManifests([uri.key()]);\n    let manifest = manifests[0];\n\n    await Promise.all([\n      this.removeFromDRM_(uri, manifest, muxer),\n      this.removeFromStorage_(cell, uri, manifest),\n    ]);\n  });\n};\n\n\n/**\n * @param {shaka.extern.ManifestDB} manifestDb\n * @param {boolean} isVideo\n * @return {!Array.<MediaKeySystemMediaCapability>}\n * @private\n */\nshaka.offline.Storage.getCapabilities_ = function(manifestDb, isVideo) {\n  const getFullType = shaka.util.MimeUtils.getFullType;\n\n  const ret = [];\n  for (const period of manifestDb.periods) {\n    for (const stream of period.streams) {\n      if (isVideo && stream.contentType == 'video') {\n        ret.push({\n          contentType: getFullType(stream.mimeType, stream.codecs),\n          robustness: manifestDb.drmInfo.videoRobustness,\n        });\n      } else if (!isVideo && stream.contentType == 'audio') {\n        ret.push({\n          contentType: getFullType(stream.mimeType, stream.codecs),\n          robustness: manifestDb.drmInfo.audioRobustness,\n        });\n      }\n    }\n  }\n  return ret;\n};\n\n\n/**\n * @param {!shaka.offline.OfflineUri} uri\n * @param {shaka.extern.ManifestDB} manifestDb\n * @param {!shaka.offline.StorageMuxer} muxer\n * @return {!Promise}\n * @private\n */\nshaka.offline.Storage.prototype.removeFromDRM_ = async function(\n    uri, manifestDb, muxer) {\n  goog.asserts.assert(this.networkingEngine_, 'Cannot be destroyed');\n  await shaka.offline.Storage.deleteLicenseFor_(\n      this.networkingEngine_, this.config_.drm, muxer, manifestDb);\n};\n\n\n/**\n * @param {shaka.extern.StorageCell} storage\n * @param {!shaka.offline.OfflineUri} uri\n * @param {shaka.extern.ManifestDB} manifest\n * @return {!Promise}\n * @private\n */\nshaka.offline.Storage.prototype.removeFromStorage_ = function(\n    storage, uri, manifest) {\n  /** @type {!Array.<number>} */\n  let segmentIds = shaka.offline.Storage.getAllSegmentIds_(manifest);\n\n  // Count(segments) + Count(manifests)\n  let toRemove = segmentIds.length + 1;\n  let removed = 0;\n\n  let pendingContent = shaka.offline.StoredContentUtils.fromManifestDB(\n      uri, manifest);\n\n  let onRemove = (key) => {\n    removed += 1;\n    this.config_.offline.progressCallback(pendingContent, removed / toRemove);\n  };\n\n  return Promise.all([\n    storage.removeSegments(segmentIds, onRemove),\n    storage.removeManifests([uri.key()], onRemove),\n  ]);\n};\n\n\n/**\n * Removes any EME sessions that were not successfully removed before.  This\n * returns whether all the sessions were successfully removed.\n *\n * @return {!Promise.<boolean>}\n * @export\n */\nshaka.offline.Storage.prototype.removeEmeSessions = function() {\n  return this.startOperation_(this.removeEmeSessions_());\n};\n\n/**\n * @return {!Promise.<boolean>}\n * @private\n */\nshaka.offline.Storage.prototype.removeEmeSessions_ = function() {\n  this.requireSupport_();\n\n  goog.asserts.assert(this.networkingEngine_, 'Cannot be destroyed');\n  const net = this.networkingEngine_;\n  const config = this.config_.drm;\n\n  const muxer = new shaka.offline.StorageMuxer();\n  return shaka.util.Destroyer.with([muxer], async () => {\n    await muxer.init();\n\n    let hasRemaining = false;\n    /** @type {!Array.<shaka.extern.EmeSessionStorageCell>} */\n    const cells = [];\n    muxer.forEachEmeSessionCell((c) => cells.push(c));\n    for (const sessionIdCell of cells) {\n      // Run these sequentially to avoid creating too many DrmEngine instances\n      // and having multiple CDMs alive at once.  Some embedded platforms may\n      // not support that.\n      /* eslint-disable no-await-in-loop */\n      const sessions = await sessionIdCell.getAll();\n      const deletedSessionIds =\n          await shaka.offline.SessionDeleter.delete(config, net, sessions);\n      await sessionIdCell.remove(deletedSessionIds);\n\n      if (deletedSessionIds.length != sessions.length) {\n        hasRemaining = true;\n      }\n      /* eslint-enable no-await-in-loop */\n    }\n\n    return !hasRemaining;\n  });\n};\n\n\n/**\n * Lists all the stored content available.\n *\n * @return {!Promise.<!Array.<shaka.extern.StoredContent>>}  A Promise to an\n *   array of structures representing all stored content.  The \"offlineUri\"\n *   member of the structure is the URI that should be given to Player.load()\n *   to play this piece of content offline.  The \"appMetadata\" member is the\n *   appMetadata argument you passed to store().\n * @export\n */\nshaka.offline.Storage.prototype.list = function() {\n  return this.startOperation_(this.list_());\n};\n\n\n/**\n * See |shaka.offline.Storage.list| for details.\n *\n * @return {!Promise.<!Array.<shaka.extern.StoredContent>>}\n * @private\n */\nshaka.offline.Storage.prototype.list_ = function() {\n  this.requireSupport_();\n\n  /** @type {!Array.<shaka.extern.StoredContent>} */\n  let result = [];\n\n  /**\n   * @param {!shaka.offline.StorageCellPath} path\n   * @param {shaka.extern.StorageCell} cell\n   */\n  async function onCell(path, cell) {\n    const manifests = await cell.getAllManifests();\n    manifests.forEach((manifest, key) => {\n      const uri = shaka.offline.OfflineUri.manifest(\n          path.mechanism, path.cell, key);\n      const content = shaka.offline.StoredContentUtils.fromManifestDB(\n          uri, manifest);\n\n      result.push(content);\n    });\n  }\n\n  // Go over each storage cell and call |onCell| to create our list of\n  // stored content.\n  let muxer = new shaka.offline.StorageMuxer();\n  return shaka.util.Destroyer.with([muxer], async () => {\n    await muxer.init();\n\n    let p = Promise.resolve();\n    muxer.forEachCell((path, cell) => {\n      p = p.then(() => onCell(path, cell));\n    });\n\n    await p;\n  }).then(() => result);\n};\n\n\n/**\n * This method is public so that it can be overridden in testing.\n *\n * @param {string} uri\n * @param {function():!Promise.<shaka.extern.ManifestParser>} getParser\n * @return {!Promise.<shaka.extern.Manifest>}\n */\nshaka.offline.Storage.prototype.parseManifest = async function(\n    uri, getParser) {\n  let error = null;\n\n  const networkingEngine = this.networkingEngine_;\n  goog.asserts.assert(networkingEngine, 'Should be initialized!');\n\n  /** @type {shaka.extern.ManifestParser.PlayerInterface} */\n  const playerInterface = {\n    networkingEngine: networkingEngine,\n\n    // Don't bother filtering now. We will do that later when we have all the\n    // information we need to filter.\n    filterAllPeriods: () => {},\n    filterNewPeriod: () => {},\n\n    onTimelineRegionAdded: () => {},\n    onEvent: () => {},\n\n    // Used to capture an error from the manifest parser. We will check the\n    // error before returning.\n    onError: (e) => {\n      error = e;\n    },\n  };\n\n  const parser = await getParser();\n  parser.configure(this.config_.manifest);\n\n  // We may have been destroyed while we were waiting on |getParser| to\n  // resolve.\n  this.checkDestroyed_();\n\n  try {\n    const manifest = await parser.start(uri, playerInterface);\n\n    // We may have been destroyed while we were waiting on |start| to\n    // resolve.\n    this.checkDestroyed_();\n\n    // Get all the streams that are used in the manifest.\n    const streams = new Set();\n    for (const period of manifest.periods) {\n      for (const variant of period.variants) {\n        if (variant.audio) { streams.add(variant.audio); }\n        if (variant.video) { streams.add(variant.video); }\n      }\n      for (const text of period.textStreams) {\n        streams.add(text);\n      }\n    }\n\n    // Wait for each stream to create their segment indexes.\n    await Promise.all(Array.from(streams).map((stream) => {\n      return stream.createSegmentIndex();\n    }));\n\n    // We may have been destroyed while we were waiting on |createSegmentIndex|\n    // to resolve for each stream.\n    this.checkDestroyed_();\n\n    // If we saw an error while parsing, surface the error.\n    if (error) {\n      throw error;\n    }\n\n    return manifest;\n  } finally {\n    await parser.stop();\n  }\n};\n\n\n/**\n * This method is public so that it can be override in testing.\n *\n * @param {shaka.extern.Manifest} manifest\n * @param {function(shaka.util.Error)} onError\n * @return {!Promise.<!shaka.media.DrmEngine>}\n */\nshaka.offline.Storage.prototype.createDrmEngine = async function(\n    manifest, onError) {\n  goog.asserts.assert(\n      this.networkingEngine_, 'Cannot call |createDrmEngine| after |destroy|');\n\n  /** @type {!shaka.media.DrmEngine} */\n  const drmEngine = new shaka.media.DrmEngine({\n    netEngine: this.networkingEngine_,\n    onError: onError,\n    onKeyStatus: () => {},\n    onExpirationUpdated: () => {},\n    onEvent: () => {},\n  });\n\n  const variants = shaka.util.StreamUtils.getAllVariants(manifest);\n\n  const config = this.config_;\n  drmEngine.configure(config.drm);\n  await drmEngine.initForStorage(variants, config.offline.usePersistentLicense);\n  await drmEngine.setServerCertificate();\n  await drmEngine.createOrLoad();\n\n  return drmEngine;\n};\n\n\n/**\n * Creates an offline 'manifest' for the real manifest.  This does not store the\n * segments yet, only adds them to the download manager through createPeriod_.\n *\n * @param {!shaka.offline.DownloadManager} downloader\n * @param {shaka.extern.StorageCell} storage\n * @param {!shaka.media.DrmEngine} drmEngine\n * @param {shaka.extern.Manifest} manifest\n * @param {string} originalManifestUri\n * @param {!Object} metadata\n * @return {shaka.extern.ManifestDB}\n * @private\n */\nshaka.offline.Storage.prototype.createOfflineManifest_ = function(\n    downloader, storage, drmEngine, manifest, originalManifestUri, metadata) {\n  let estimator = new shaka.offline.StreamBandwidthEstimator();\n\n  let periods = manifest.periods.map((period) => {\n    return this.createPeriod_(\n        downloader, storage, estimator, drmEngine, manifest, period);\n  });\n\n  let drmInfo = drmEngine.getDrmInfo();\n  let sessions = drmEngine.getSessionIds();\n\n  if (drmInfo && this.config_.offline.usePersistentLicense) {\n    if (!sessions.length) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL, shaka.util.Error.Category.STORAGE,\n          shaka.util.Error.Code.NO_INIT_DATA_FOR_OFFLINE, originalManifestUri);\n    }\n    // Don't store init data, since we have stored sessions.\n    drmInfo.initData = [];\n  }\n\n  return {\n    originalManifestUri: originalManifestUri,\n    duration: manifest.presentationTimeline.getDuration(),\n    size: 0,\n    expiration: drmEngine.getExpiration(),\n    periods: periods,\n    sessionIds: this.config_.offline.usePersistentLicense ? sessions : [],\n    drmInfo: drmInfo,\n    appMetadata: metadata,\n  };\n};\n\n\n/**\n * Converts a manifest Period to a database Period.  This will use the current\n * configuration to get the tracks to use, then it will search each segment\n * index and add all the segments to the download manager through createStream_.\n *\n * @param {!shaka.offline.DownloadManager} downloader\n * @param {shaka.extern.StorageCell} storage\n * @param {shaka.offline.StreamBandwidthEstimator} estimator\n * @param {!shaka.media.DrmEngine} drmEngine\n * @param {shaka.extern.Manifest} manifest\n * @param {shaka.extern.Period} period\n * @return {shaka.extern.PeriodDB}\n * @private\n */\nshaka.offline.Storage.prototype.createPeriod_ = function(\n    downloader, storage, estimator, drmEngine, manifest, period) {\n  // Pass all variants and text streams to the estimator so that we can\n  // get the best estimate for each stream later.\n  manifest.periods.forEach((period) => {\n    period.variants.forEach((variant) => { estimator.addVariant(variant); });\n    period.textStreams.forEach((text) => { estimator.addText(text); });\n  });\n\n  // Find the streams we want to download and create a stream db instance\n  // for each of them.\n  const streamSet = shaka.offline.Storage.getStreamSet_(manifest);\n  const streamDBs = new Map();\n\n  for (const stream of streamSet) {\n    const streamDB = this.createStream_(\n        downloader, storage, estimator, manifest, period, stream);\n    streamDBs.set(stream.id, streamDB);\n  }\n\n  // Connect streams and variants together.\n  period.variants.forEach((variant) => {\n    if (variant.audio) {\n      streamDBs.get(variant.audio.id).variantIds.push(variant.id);\n    }\n    if (variant.video) {\n      streamDBs.get(variant.video.id).variantIds.push(variant.id);\n    }\n  });\n\n  return {\n    startTime: period.startTime,\n    streams: Array.from(streamDBs.values()),\n  };\n};\n\n\n/**\n * Converts a manifest stream to a database stream.  This will search the\n * segment index and add all the segments to the download manager.\n *\n * @param {!shaka.offline.DownloadManager} downloader\n * @param {shaka.extern.StorageCell} storage\n * @param {shaka.offline.StreamBandwidthEstimator} estimator\n * @param {shaka.extern.Manifest} manifest\n * @param {shaka.extern.Period} period\n * @param {shaka.extern.Stream} stream\n * @return {shaka.extern.StreamDB}\n * @private\n */\nshaka.offline.Storage.prototype.createStream_ = function(\n    downloader, storage, estimator, manifest, period, stream) {\n  /** @type {shaka.extern.StreamDB} */\n  let streamDb = {\n    id: stream.id,\n    originalId: stream.originalId,\n    primary: stream.primary,\n    presentationTimeOffset: stream.presentationTimeOffset || 0,\n    contentType: stream.type,\n    mimeType: stream.mimeType,\n    codecs: stream.codecs,\n    frameRate: stream.frameRate,\n    kind: stream.kind,\n    language: stream.language,\n    label: stream.label,\n    width: stream.width || null,\n    height: stream.height || null,\n    initSegmentKey: null,\n    encrypted: stream.encrypted,\n    keyId: stream.keyId,\n    segments: [],\n    variantIds: [],\n  };\n\n  /** @type {number} */\n  let startTime =\n      manifest.presentationTimeline.getSegmentAvailabilityStart();\n\n  // Download each stream in parallel.\n  let downloadGroup = stream.id;\n\n  shaka.offline.Storage.forEachSegment_(stream, startTime, (segment) => {\n    downloader.queue(\n        downloadGroup,\n        this.createRequest_(segment),\n        estimator.getSegmentEstimate(stream.id, segment),\n        (data) => {\n          return storage.addSegments([{data: data}]).then((ids) => {\n            this.segmentsFromStore_.push(ids[0]);\n\n            streamDb.segments.push({\n              startTime: segment.startTime,\n              endTime: segment.endTime,\n              dataKey: ids[0],\n            });\n          });\n        });\n  });\n\n  let initSegment = stream.initSegmentReference;\n  if (initSegment) {\n    downloader.queue(\n        downloadGroup,\n        this.createRequest_(initSegment),\n        estimator.getInitSegmentEstimate(stream.id),\n        (data) => {\n          return storage.addSegments([{data: data}]).then((ids) => {\n            this.segmentsFromStore_.push(ids[0]);\n            streamDb.initSegmentKey = ids[0];\n          });\n        });\n  }\n\n  return streamDb;\n};\n\n\n/**\n * @param {shaka.extern.Stream} stream\n * @param {number} startTime\n * @param {function(!shaka.media.SegmentReference)} callback\n * @private\n */\nshaka.offline.Storage.forEachSegment_ = function(stream, startTime, callback) {\n  /** @type {?number} */\n  let i = stream.findSegmentPosition(startTime);\n  /** @type {?shaka.media.SegmentReference} */\n  let ref = i == null ? null : stream.getSegmentReference(i);\n\n  while (ref) {\n    callback(ref);\n    ref = stream.getSegmentReference(++i);\n  }\n};\n\n\n/**\n * Throws an error if the object is destroyed.\n * @private\n */\nshaka.offline.Storage.prototype.checkDestroyed_ = function() {\n  if (this.destroyer_.destroyed()) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STORAGE,\n        shaka.util.Error.Code.OPERATION_ABORTED);\n  }\n};\n\n\n/**\n * Used by functions that need storage support to ensure that the current\n * platform has storage support before continuing. This should only be\n * needed to be used at the start of public methods.\n *\n * @private\n */\nshaka.offline.Storage.prototype.requireSupport_ = function() {\n  if (!shaka.offline.Storage.support()) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.STORAGE,\n        shaka.util.Error.Code.STORAGE_NOT_SUPPORTED);\n  }\n};\n\n\n/**\n * @param {!shaka.media.SegmentReference|\n *         !shaka.media.InitSegmentReference} segment\n * @return {shaka.extern.Request}\n * @private\n */\nshaka.offline.Storage.prototype.createRequest_ = function(segment) {\n  const retryParams = this.config_.streaming.retryParameters;\n  let request = shaka.net.NetworkingEngine.makeRequest(\n      segment.getUris(), retryParams);\n\n  if (segment.startByte != 0 || segment.endByte != null) {\n    let end = segment.endByte == null ? '' : segment.endByte;\n    request.headers['Range'] = 'bytes=' + segment.startByte + '-' + end;\n  }\n\n  return request;\n};\n\n\n/**\n * Perform an action. Track the action's progress so that when we destroy\n * we will wait until all the actions have completed before allowing destroy\n * to resolve.\n *\n * @param {!Promise<T>} action\n * @return {!Promise<T>}\n * @template T\n * @private\n */\nshaka.offline.Storage.prototype.startOperation_ = async function(action) {\n  this.openOperations_.push(action);\n\n  try {\n    // Await |action| so we can use the finally statement to remove |action|\n    // from |openOperations_| when we still have a reference to |action|.\n    return await action;\n  } finally {\n    shaka.util.ArrayUtils.remove(this.openOperations_, action);\n  }\n};\n\n\n/**\n * @param {shaka.extern.ManifestDB} manifest\n * @return {!Array.<number>}\n * @private\n */\nshaka.offline.Storage.getAllSegmentIds_ = function(manifest) {\n  /** @type {!Array.<number>} */\n  let ids = [];\n\n  // Get every segment for every stream in the manifest.\n  manifest.periods.forEach(function(period) {\n    period.streams.forEach(function(stream) {\n      if (stream.initSegmentKey != null) {\n        ids.push(stream.initSegmentKey);\n      }\n\n      stream.segments.forEach(function(segment) {\n        ids.push(segment.dataKey);\n      });\n    });\n  });\n\n  return ids;\n};\n\n\n/**\n * Delete the on-disk storage and all the content it contains. This should not\n * be done in normal circumstances. Only do it when storage is rendered\n * unusable, such as by a version mismatch. No business logic will be run, and\n * licenses will not be released.\n *\n * @return {!Promise}\n * @export\n */\nshaka.offline.Storage.deleteAll = async function() {\n  /** @type {!shaka.offline.StorageMuxer} */\n  const muxer = new shaka.offline.StorageMuxer();\n  try {\n    // Wipe all content from all storage mechanisms.\n    await muxer.erase();\n  } finally {\n    // Destroy the muxer, whether or not erase() succeeded.\n    await muxer.destroy();\n  }\n};\n\n\n/**\n * @param {!shaka.net.NetworkingEngine} net\n * @param {!shaka.extern.DrmConfiguration} drmConfig\n * @param {!shaka.offline.StorageMuxer} muxer\n * @param {shaka.extern.ManifestDB} manifestDb\n * @return {!Promise}\n * @private\n */\nshaka.offline.Storage.deleteLicenseFor_ = async function(\n    net, drmConfig, muxer, manifestDb) {\n  if (!manifestDb.drmInfo) {\n    return;\n  }\n\n  const sessionIdCell = muxer.getEmeSessionCell();\n\n  /** @type {!Array.<shaka.extern.EmeSessionDB>} */\n  const sessions = manifestDb.sessionIds.map((sessionId) => {\n    return {\n      sessionId: sessionId,\n      keySystem: manifestDb.drmInfo.keySystem,\n      licenseUri: manifestDb.drmInfo.licenseServerUri,\n      serverCertificate: manifestDb.drmInfo.serverCertificate,\n      audioCapabilities: shaka.offline.Storage.getCapabilities_(\n          manifestDb,\n          /* isVideo */ false),\n      videoCapabilities: shaka.offline.Storage.getCapabilities_(\n          manifestDb,\n          /* isVideo */ true),\n    };\n  });\n  // Try to delete the sessions; any sessions that weren't deleted get stored\n  // in the database so we can try to remove them again later.  This allows us\n  // to still delete the stored content but not \"forget\" about these sessions.\n  // Later, we can remove the sessions to free up space.\n  const deletedSessionIds =\n      await shaka.offline.SessionDeleter.delete(drmConfig, net, sessions);\n  await sessionIdCell.remove(deletedSessionIds);\n  await sessionIdCell.add(sessions.filter(\n      (session) => deletedSessionIds.indexOf(session.sessionId) == -1));\n};\n\n\n/**\n * Get the set of all streams in |manifest|.\n *\n * @param {shaka.extern.Manifest} manifest\n * @return {!Set.<shaka.extern.Stream>}\n * @private\n */\nshaka.offline.Storage.getStreamSet_ = function(manifest) {\n  /** @type {!Set.<shaka.extern.Stream>} */\n  const set = new Set();\n\n  manifest.periods.forEach((period) => {\n    period.textStreams.forEach((text) => { set.add(text); });\n    period.variants.forEach((variant) => {\n      if (variant.audio) { set.add(variant.audio); }\n      if (variant.video) { set.add(variant.video); }\n    });\n  });\n\n  return set;\n};\n\n\n/**\n * Make sure that the given configuration object follows the correct structure\n * expected by |configure|. This function should be removed in v2.6 when\n * backward-compatibility is no longer needed.\n *\n * @param {!Object} config\n *    The config fields that the app wants to update. This object will be\n *    change by this function.\n * @private\n */\nshaka.offline.Storage.verifyConfig_ = function(config) {\n  // To avoid printing a deprecated warning multiple times, track all\n  // infractions and then print it once at the end.\n  let usedLegacyConfig = false;\n\n  // For each field in the legacy config structure\n  // (shaka.extern.OfflineConfiguration), move any occurances to the correct\n  // location in the player configuration.\n  if (config.trackSelectionCallback != null) {\n    usedLegacyConfig = true;\n    config.offline = config.offline || {};\n    config.offline.trackSelectionCallback = config.trackSelectionCallback;\n  }\n\n  if (config.progressCallback != null) {\n    usedLegacyConfig = true;\n    config.offline = config.offline || {};\n    config.offline.progressCallback = config.progressCallback;\n  }\n\n  if (config.usePersistentLicense != null) {\n    usedLegacyConfig = true;\n    config.offline = config.offline || {};\n    config.offline.usePersistentLicense = config.usePersistentLicense;\n  }\n\n  if (usedLegacyConfig) {\n    shaka.log.alwaysWarn(\n        'Storage.configure should now be passed a player configuration ' +\n            'structure. Using a non-player configuration will be deprecated ' +\n            'in v2.6.');\n  }\n};\n\n\n/**\n * Go over a manifest and issue warnings for any suspicious properties.\n *\n * @param {shaka.extern.Manifest} manifest\n * @private\n */\nshaka.offline.Storage.validateManifest_ = function(manifest) {\n  // Make sure that the period has not been reduced to nothing.\n  if (manifest.periods.length == 0) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.MANIFEST,\n        shaka.util.Error.Code.NO_PERIODS);\n  }\n\n  for (const period of manifest.periods) {\n    shaka.offline.Storage.validatePeriod_(period);\n  }\n};\n\n\n/**\n * Go over a period and issue warnings for any suspicious properties.\n *\n * @param {shaka.extern.Period} period\n * @private\n */\nshaka.offline.Storage.validatePeriod_ = function(period) {\n  const videos = new Set(period.variants.map((v) => v.video));\n  const audios = new Set(period.variants.map((v) => v.audio));\n  const texts = period.textStreams;\n\n  if (videos.size > 1) {\n    shaka.log.warning('Multiple video tracks selected to be stored');\n  }\n\n  for (const audio1 of audios) {\n    for (const audio2 of audios) {\n      if (audio1 != audio2 && audio1.language == audio2.language) {\n        shaka.log.warning(\n            'Similar audio tracks were selected to be stored',\n            audio1.id,\n            audio2.id);\n      }\n    }\n  }\n\n  for (const text1 of texts) {\n    for (const text2 of texts) {\n      if (text1 != text2 && text1.language == text2.language) {\n        shaka.log.warning(\n            'Similar text tracks were selected to be stored',\n            text1.id,\n            text2.id);\n      }\n    }\n  }\n};\n\nshaka.Player.registerSupportPlugin('offline', shaka.offline.Storage.support);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.installAll');\ngoog.provide('shaka.polyfill.register');\n\n\n/**\n * @namespace shaka.polyfill\n * @summary A one-stop installer for all polyfills.\n * @see http://enwp.org/polyfill\n * @exportDoc\n */\n\n\n/**\n * Install all polyfills.\n * @export\n */\nshaka.polyfill.installAll = function() {\n  for (let i = 0; i < shaka.polyfill.polyfills_.length; ++i) {\n    shaka.polyfill.polyfills_[i].callback();\n  }\n};\n\n\n/**\n * Contains the polyfills that will be installed.\n * @private {!Array.<{priority: number, callback: function()}>}\n */\nshaka.polyfill.polyfills_ = [];\n\n\n/**\n * Registers a new polyfill to be installed.\n *\n * @param {function()} polyfill\n * @param {number=} priority An optional number priority.  Higher priorities\n *   will be executed before lower priority ones.  Default is 0.\n * @export\n */\nshaka.polyfill.register = function(polyfill, priority) {\n  priority = priority || 0;\n  const item = {priority: priority, callback: polyfill};\n  for (let i = 0; i < shaka.polyfill.polyfills_.length; i++) {\n    if (shaka.polyfill.polyfills_[i].priority < priority) {\n      shaka.polyfill.polyfills_.splice(i, 0, item);\n      return;\n    }\n  }\n  shaka.polyfill.polyfills_.push(item);\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.Fullscreen');\n\ngoog.require('shaka.polyfill.register');\n\n\n/**\n * @namespace shaka.polyfill.Fullscreen\n *\n * @summary A polyfill to unify fullscreen APIs across browsers.\n * Many browsers have prefixed fullscreen methods on Element and document.\n * See {@link https://mzl.la/2K0xcHo Using fullscreen mode} on MDN for more\n * information.\n */\n\n\n/**\n * Install the polyfill if needed.\n */\nshaka.polyfill.Fullscreen.install = function() {\n  if (!window.Document) {\n    // Avoid errors on very old browsers.\n    return;\n  }\n\n  let proto = Element.prototype;\n  proto.requestFullscreen = proto.requestFullscreen ||\n                            proto.mozRequestFullScreen ||\n                            proto.msRequestFullscreen ||\n                            proto.webkitRequestFullscreen;\n\n  proto = Document.prototype;\n  proto.exitFullscreen = proto.exitFullscreen ||\n                         proto.mozCancelFullScreen ||\n                         proto.msExitFullscreen ||\n                         proto.webkitExitFullscreen;\n\n  if (!('fullscreenElement' in document)) {\n    Object.defineProperty(document, 'fullscreenElement', {\n      get: function() {\n        return document.mozFullScreenElement ||\n               document.msFullscreenElement ||\n               document.webkitFullscreenElement;\n      },\n    });\n    Object.defineProperty(document, 'fullscreenEnabled', {\n      get: function() {\n        return document.mozFullScreenEnabled ||\n               document.msFullscreenEnabled ||\n               document.webkitFullscreenEnabled;\n      },\n    });\n  }\n\n  let proxy = shaka.polyfill.Fullscreen.proxyEvent_;\n  document.addEventListener('webkitfullscreenchange', proxy);\n  document.addEventListener('webkitfullscreenerror', proxy);\n  document.addEventListener('mozfullscreenchange', proxy);\n  document.addEventListener('mozfullscreenerror', proxy);\n  document.addEventListener('MSFullscreenChange', proxy);\n  document.addEventListener('MSFullscreenError', proxy);\n};\n\n\n/**\n * Proxy fullscreen events after changing their name.\n * @param {!Event} event\n * @private\n */\nshaka.polyfill.Fullscreen.proxyEvent_ = function(event) {\n  let eventType = event.type.replace(/^(webkit|moz|MS)/, '').toLowerCase();\n\n  let newEvent;\n  // IE 11 does not have an Event constructor\n  if (typeof(Event) === 'function') {\n    newEvent = new Event(eventType, /** @type {EventInit} */(event));\n  } else {\n    newEvent = document.createEvent('Event');\n    newEvent.initEvent(eventType, event.bubbles, event.cancelable);\n  }\n\n  event.target.dispatchEvent(newEvent);\n};\n\n\nshaka.polyfill.register(shaka.polyfill.Fullscreen.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.IndexedDB');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\n\n\n/**\n * @namespace shaka.polyfill.IndexedDB\n *\n * @summary A polyfill to patch IndexedDB bugs.\n */\n\n\n/**\n * Install the polyfill if needed.\n */\nshaka.polyfill.IndexedDB.install = function() {\n  shaka.log.debug('IndexedDB.install');\n\n  let agent = navigator.userAgent;\n  if (agent && agent.includes('CrKey')) {\n    shaka.log.debug('Removing IndexedDB from ChromeCast');\n    delete window.indexedDB;\n    goog.asserts.assert(\n        !window.indexedDB, 'Failed to override window.indexedDB');\n  }\n};\n\nshaka.polyfill.register(shaka.polyfill.IndexedDB.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.InputEvent');\n\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\n\n\n/**\n * @namespace shaka.polyfill.InputEvent\n *\n * @summary A polyfill to patch 'input' event support in IE11.\n */\n\n\n/**\n * Install the polyfill if needed.\n */\nshaka.polyfill.InputEvent.install = function() {\n  shaka.log.debug('InputEvent.install');\n\n  // IE11 doesn't treat the 'input' event correctly.\n  // https://bit.ly/2loLsuX\n  // If you know a better way than a userAgent check to detect this, please\n  // send a patch.\n\n  // This matches IE11, but not Edge.  Edge does not have this problem.\n  if (!navigator.userAgent.includes('Trident/')) {\n    // Not IE, so don't patch anything.\n    return;\n  }\n\n  if (HTMLInputElement.prototype.addEventListener ==\n      shaka.polyfill.InputEvent.addEventListener_) {\n    // The polyfill was already installed.\n    return;\n  }\n\n  shaka.log.info('Patching input event support on IE.');\n\n  shaka.polyfill.InputEvent.originalAddEventListener_ =\n      HTMLInputElement.prototype.addEventListener;\n\n  HTMLInputElement.prototype['addEventListener'] =\n      shaka.polyfill.InputEvent.addEventListener_;\n};\n\n\n/**\n * The original addEventListener from HTMLInputElement.\n * @private Function\n */\nshaka.polyfill.InputEvent.originalAddEventListener_;\n\n\n/**\n * Add an event listener to this object and translate the event types to those\n * that work on IE11.\n *\n * @param {string} type\n * @param {EventListener|function(!Event):(boolean|undefined)} listener\n * @param {(!AddEventListenerOptions|boolean)=} options\n * @this {HTMLInputElement}\n * @private\n */\nshaka.polyfill.InputEvent.addEventListener_ =\n    function(type, listener, options) {\n  if (type == 'input') {\n    // Based on the type of input element, translate the HTML5 'input' event to\n    // one that IE11 will actually dispatch.\n\n    switch (this.type) {\n      // For range inputs, we use the 'change' event.\n      case 'range':\n        type = 'change';\n        break;\n    }\n  }\n\n  shaka.polyfill.InputEvent.originalAddEventListener_.call(\n      this, type, listener, options);\n};\n\n\nshaka.polyfill.register(shaka.polyfill.InputEvent.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\ngoog.provide('shaka.polyfill.MathRound');\n\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\n\n/**\n * @namespace shaka.polyfill.MathRound\n *\n * @summary A polyfill to patch math round bug on some browsers.\n * @see https://stackoverflow.com/q/12830742\n */\n\n\n/**\n @const {number}\n @private\n */\nshaka.polyfill.MathRound.MAX_ACCURATE_INPUT_ = 0x10000000000000;\n\n\n/**\n * Install the polyfill if needed.\n */\nshaka.polyfill.MathRound.install = function() {\n  shaka.log.debug('mathRound.install');\n\n  let testNumber = shaka.polyfill.MathRound.MAX_ACCURATE_INPUT_ + 1;\n  if (Math.round(testNumber) != testNumber) {\n    shaka.log.debug('polyfill Math.round');\n    let originalMathRound = Math.round;\n    Math.round = function(number) {\n      let result = number;\n      // Due to the precision of JavaScript numbers, the number must be integer.\n      if (number <= shaka.polyfill.MathRound.MAX_ACCURATE_INPUT_) {\n        result = originalMathRound(number);\n      }\n      return result;\n    };\n  }\n};\n\nshaka.polyfill.register(shaka.polyfill.MathRound.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.MediaSource');\n\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\n\n\n/**\n * @namespace shaka.polyfill.MediaSource\n *\n * @summary A polyfill to patch MSE bugs.\n */\n\n\n/**\n * Install the polyfill if needed.\n */\nshaka.polyfill.MediaSource.install = function() {\n  shaka.log.debug('MediaSource.install');\n\n  // MediaSource bugs are difficult to detect without checking for the affected\n  // platform.  SourceBuffer is not always exposed on window, for example, and\n  // instances are only accessible after setting up MediaSource on a video\n  // element.  Because of this, we use UA detection and other platform detection\n  // tricks to decide which patches to install.\n\n  if (!window.MediaSource) {\n    shaka.log.info('No MSE implementation available.');\n  } else if (window.cast && cast.__platform__ &&\n             cast.__platform__.canDisplayType) {\n    shaka.log.info('Patching Chromecast MSE bugs.');\n    // Chromecast cannot make accurate determinations via isTypeSupported.\n    shaka.polyfill.MediaSource.patchCastIsTypeSupported_();\n  } else if (navigator.vendor && navigator.vendor.includes('Apple')) {\n    let version = navigator.appVersion;\n\n    // TS content is broken on Safari in general.\n    // See https://github.com/google/shaka-player/issues/743\n    // and https://bugs.webkit.org/show_bug.cgi?id=165342\n    shaka.polyfill.MediaSource.rejectTsContent_();\n\n    if (version.includes('Version/8')) {\n      // Safari 8 does not implement appendWindowEnd.  If we ignore the\n      // incomplete MSE implementation, some content (especially multi-period)\n      // will fail to play correctly.  The best we can do is blacklist Safari 8.\n      shaka.log.info('Blacklisting Safari 8 MSE.');\n      shaka.polyfill.MediaSource.blacklist_();\n    } else if (version.includes('Version/9')) {\n      shaka.log.info('Patching Safari 9 MSE bugs.');\n      // Safari 9 does not correctly implement abort() on SourceBuffer.\n      // Calling abort() causes a decoder failure, rather than resetting the\n      // decode timestamp as called for by the spec.\n      // Bug filed: https://bugs.webkit.org/show_bug.cgi?id=160316\n      shaka.polyfill.MediaSource.stubAbort_();\n    } else if (version.includes('Version/10')) {\n      shaka.log.info('Patching Safari 10 MSE bugs.');\n      // Safari 10 does not correctly implement abort() on SourceBuffer.\n      // Calling abort() before appending a segment causes that segment to be\n      // incomplete in buffer.\n      // Bug filed: https://bugs.webkit.org/show_bug.cgi?id=165342\n      shaka.polyfill.MediaSource.stubAbort_();\n      // Safari 10 fires spurious 'updateend' events after endOfStream().\n      // Bug filed: https://bugs.webkit.org/show_bug.cgi?id=165336\n      shaka.polyfill.MediaSource.patchEndOfStreamEvents_();\n    } else if (version.includes('Version/11')) {\n      shaka.log.info('Patching Safari 11 MSE bugs.');\n      // Safari 11 does not correctly implement abort() on SourceBuffer.\n      // Calling abort() before appending a segment causes that segment to be\n      // incomplete in the buffer.\n      // Bug filed: https://bugs.webkit.org/show_bug.cgi?id=165342\n      shaka.polyfill.MediaSource.stubAbort_();\n      // If you remove up to a keyframe, Safari 11 incorrectly will also remove\n      // that keyframe and the content up to the next.\n      // Offsetting the end of the removal range seems to help.\n      // Bug filed: https://bugs.webkit.org/show_bug.cgi?id=177884\n      shaka.polyfill.MediaSource.patchRemovalRange_();\n    }\n  } else {\n    shaka.log.info('Using native MSE as-is.');\n  }\n};\n\n\n/**\n * Blacklist the current browser by making MediaSourceEngine.isBrowserSupported\n * fail later.\n *\n * @private\n */\nshaka.polyfill.MediaSource.blacklist_ = function() {\n  window['MediaSource'] = null;\n};\n\n\n/**\n * Stub out abort().  On some buggy MSE implementations, calling abort() causes\n * various problems.\n *\n * @private\n */\nshaka.polyfill.MediaSource.stubAbort_ = function() {\n  const addSourceBuffer = MediaSource.prototype.addSourceBuffer;\n  MediaSource.prototype.addSourceBuffer = function(...varArgs) {\n    let sourceBuffer = addSourceBuffer.apply(this, varArgs);\n    sourceBuffer.abort = function() {};  // Stub out for buggy implementations.\n    return sourceBuffer;\n  };\n};\n\n\n/**\n * Patch remove().  On Safari 11, if you call remove() to remove the content up\n * to a keyframe, Safari will also remove the keyframe and all of the data up to\n * the next one. For example, if the keyframes are at 0s, 5s, and 10s, and you\n * tried to remove 0s-5s, it would instead remove 0s-10s.\n *\n * Offsetting the end of the range seems to be a usable workaround.\n *\n * @private\n */\nshaka.polyfill.MediaSource.patchRemovalRange_ = function() {\n  const originalRemove = SourceBuffer.prototype.remove;\n\n  SourceBuffer.prototype.remove = function(startTime, endTime) {\n    return originalRemove.call(this, startTime, endTime - 0.001);\n  };\n};\n\n\n/**\n * Patch endOfStream() to get rid of 'updateend' events that should not fire.\n * These extra events confuse MediaSourceEngine, which relies on correct events\n * to manage SourceBuffer state.\n *\n * @private\n */\nshaka.polyfill.MediaSource.patchEndOfStreamEvents_ = function() {\n  const endOfStream = MediaSource.prototype.endOfStream;\n  MediaSource.prototype.endOfStream = function(...varArgs) {\n    // This bug manifests only when endOfStream() results in the truncation\n    // of the MediaSource's duration.  So first we must calculate what the\n    // new duration will be.\n    let newDuration = 0;\n    for (let i = 0; i < this.sourceBuffers.length; ++i) {\n      let buffer = this.sourceBuffers[i];\n      let bufferEnd = buffer.buffered.end(buffer.buffered.length - 1);\n      newDuration = Math.max(newDuration, bufferEnd);\n    }\n\n    // If the duration is going to be reduced, suppress the next 'updateend'\n    // event on each SourceBuffer.\n    if (!isNaN(this.duration) &&\n        newDuration < this.duration) {\n      this.ignoreUpdateEnd_ = true;\n      for (let i = 0; i < this.sourceBuffers.length; ++i) {\n        let buffer = this.sourceBuffers[i];\n        buffer.eventSuppressed_ = false;\n      }\n    }\n\n    return endOfStream.apply(this, varArgs);\n  };\n\n  let cleanUpHandlerInstalled = false;\n  let addSourceBuffer = MediaSource.prototype.addSourceBuffer;\n  MediaSource.prototype.addSourceBuffer = function(...varArgs) {\n    // After adding a new source buffer, add an event listener to allow us to\n    // suppress events.\n    let sourceBuffer = addSourceBuffer.apply(this, varArgs);\n    sourceBuffer['mediaSource_'] = this;\n    sourceBuffer.addEventListener('updateend',\n        shaka.polyfill.MediaSource.ignoreUpdateEnd_, false);\n\n    if (!cleanUpHandlerInstalled) {\n      // If we haven't already, install an event listener to allow us to clean\n      // up listeners when MediaSource is torn down.\n      this.addEventListener('sourceclose',\n          shaka.polyfill.MediaSource.cleanUpListeners_, false);\n      cleanUpHandlerInstalled = true;\n    }\n    return sourceBuffer;\n  };\n};\n\n\n/**\n * An event listener for 'updateend' which selectively suppresses the events.\n *\n * @see shaka.polyfill.MediaSource.patchEndOfStreamEvents_\n *\n * @param {Event} event\n * @private\n */\nshaka.polyfill.MediaSource.ignoreUpdateEnd_ = function(event) {\n  let sourceBuffer = event.target;\n  let mediaSource = sourceBuffer['mediaSource_'];\n\n  if (mediaSource.ignoreUpdateEnd_) {\n    event.preventDefault();\n    event.stopPropagation();\n    event.stopImmediatePropagation();\n    sourceBuffer.eventSuppressed_ = true;\n\n    for (let i = 0; i < mediaSource.sourceBuffers.length; ++i) {\n      let buffer = mediaSource.sourceBuffers[i];\n      if (buffer.eventSuppressed_ == false) {\n        // More events need to be suppressed.\n        return;\n      }\n    }\n\n    // All events have been suppressed, all buffers are out of 'updating'\n    // mode.  Stop suppressing events.\n    mediaSource.ignoreUpdateEnd_ = false;\n  }\n};\n\n\n/**\n * An event listener for 'sourceclose' which cleans up listeners for 'updateend'\n * to avoid memory leaks.\n *\n * @see shaka.polyfill.MediaSource.patchEndOfStreamEvents_\n * @see shaka.polyfill.MediaSource.ignoreUpdateEnd_\n *\n * @param {Event} event\n * @private\n */\nshaka.polyfill.MediaSource.cleanUpListeners_ = function(event) {\n  let mediaSource = /** @type {!MediaSource} */ (event.target);\n  for (let i = 0; i < mediaSource.sourceBuffers.length; ++i) {\n    let buffer = mediaSource.sourceBuffers[i];\n    buffer.removeEventListener('updateend',\n        shaka.polyfill.MediaSource.ignoreUpdateEnd_, false);\n  }\n  mediaSource.removeEventListener('sourceclose',\n      shaka.polyfill.MediaSource.cleanUpListeners_, false);\n};\n\n\n/**\n * Patch isTypeSupported() to reject TS content.  Used to avoid TS-related MSE\n * bugs on Safari.\n *\n * @private\n */\nshaka.polyfill.MediaSource.rejectTsContent_ = function() {\n  const originalIsTypeSupported = MediaSource.isTypeSupported;\n\n  MediaSource.isTypeSupported = function(mimeType) {\n    // Parse the basic MIME type from its parameters.\n    let pieces = mimeType.split(/ *; */);\n    let basicMimeType = pieces[0];\n    let container = basicMimeType.split('/')[1];\n\n    if (container == 'mp2t') {\n      return false;\n    }\n\n    return originalIsTypeSupported(mimeType);\n  };\n};\n\n\n/**\n * Patch isTypeSupported() to parse for HDR-related clues and chain to a private\n * API on the Chromecast which can query for support.\n *\n * @private\n */\nshaka.polyfill.MediaSource.patchCastIsTypeSupported_ = function() {\n  const originalIsTypeSupported = MediaSource.isTypeSupported;\n\n  // Docs from Dolby detailing profile names: https://bit.ly/2MfV72y\n  let dolbyVisionRegex = /^dv(?:he|av)\\./;\n\n  MediaSource.isTypeSupported = function(mimeType) {\n    // Parse the basic MIME type from its parameters.\n    let pieces = mimeType.split(/ *; */);\n    let basicMimeType = pieces[0];\n\n    // Parse the parameters into key-value pairs.\n    /** @type {Object.<string, string>} */\n    let parameters = {};\n    for (let i = 1; i < pieces.length; ++i) {\n      let kv = pieces[i].split('=');\n      let k = kv[0];\n      let v = kv[1].replace(/\"(.*)\"/, '$1');\n      parameters[k] = v;\n    }\n\n    let codecs = parameters['codecs'];\n    if (!codecs) {\n      return originalIsTypeSupported(mimeType);\n    }\n\n    let isHDR = false;\n    let isDolbyVision = false;\n\n    let codecList = codecs.split(',').filter(function(codec) {\n      // Remove Dolby Vision codec strings.  These are not understood on\n      // Chromecast, even though the content can still be played.\n      if (dolbyVisionRegex.test(codec)) {\n        isDolbyVision = true;\n        // Return false to remove this string from the list.\n        return false;\n      }\n\n      // We take this string as a signal for HDR, but don't remove it.\n      if (/^(hev|hvc)1\\.2/.test(codec)) {\n        isHDR = true;\n      }\n\n      // Keep all other strings in the list.\n      return true;\n    });\n\n    // If the content uses Dolby Vision, we take this as a sign that the content\n    // is not HDR after all.\n    if (isDolbyVision) isHDR = false;\n\n    // Reconstruct the \"codecs\" parameter from the results of the filter.\n    parameters['codecs'] = codecList.join(',');\n\n    // If the content is HDR, we add this additional parameter so that the Cast\n    // platform will check for HDR support.\n    if (isHDR) {\n      parameters['eotf'] = 'smpte2084';\n    }\n\n    // Reconstruct the MIME type, possibly with additional parameters.\n    let extendedMimeType = basicMimeType;\n    for (let k in parameters) {\n      let v = parameters[k];\n      extendedMimeType += '; ' + k + '=\"' + v + '\"';\n    }\n    return cast.__platform__.canDisplayType(extendedMimeType);\n  };\n};\n\n\nshaka.polyfill.register(shaka.polyfill.MediaSource.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.util.Pssh');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.util.Mp4Parser');\ngoog.require('shaka.util.Uint8ArrayUtils');\n\n\n/**\n * Parse a PSSH box and extract the system IDs.\n *\n * @param {!Uint8Array} psshBox\n * @constructor\n * @struct\n * @throws {shaka.util.Error} if a PSSH box is truncated or contains a size\n *   field over 53 bits.\n */\nshaka.util.Pssh = function(psshBox) {\n  /**\n   * In hex.\n   * @type {!Array.<string>}\n   */\n  this.systemIds = [];\n\n  /**\n   * In hex.\n   * @type {!Array.<string>}\n   */\n  this.cencKeyIds = [];\n\n  /*\n  * Array of tuples that define the startIndex + size for each\n  * discrete pssh within |psshBox|\n  * */\n  this.dataBoundaries = [];\n\n  new shaka.util.Mp4Parser()\n      .fullBox('pssh', this.parseBox_.bind(this)).parse(psshBox.buffer);\n\n  if (this.dataBoundaries.length == 0) {\n    shaka.log.warning('No pssh box found!');\n  }\n};\n\n\n/**\n * @param {!shaka.extern.ParsedBox} box\n * @private\n */\nshaka.util.Pssh.prototype.parseBox_ = function(box) {\n  goog.asserts.assert(\n      box.version != null,\n      'PSSH boxes are full boxes and must have a valid version');\n\n  goog.asserts.assert(\n      box.flags != null,\n      'PSSH boxes are full boxes and must have a valid flag');\n\n  if (box.version > 1) {\n    shaka.log.warning('Unrecognized PSSH version found!');\n    return;\n  }\n\n  let systemId = shaka.util.Uint8ArrayUtils.toHex(box.reader.readBytes(16));\n  let keyIds = [];\n  if (box.version > 0) {\n    let numKeyIds = box.reader.readUint32();\n    for (let i = 0; i < numKeyIds; ++i) {\n      let keyId = shaka.util.Uint8ArrayUtils.toHex(box.reader.readBytes(16));\n      keyIds.push(keyId);\n    }\n  }\n\n  let dataSize = box.reader.readUint32();\n  box.reader.skip(dataSize);  // Ignore the data section.\n\n  // Now that everything has been succesfully parsed from this box,\n  // update member variables.\n  this.cencKeyIds.push.apply(this.cencKeyIds, keyIds);\n  this.systemIds.push(systemId);\n  this.dataBoundaries.push({\n    start: box.start,\n    end: box.start + box.size - 1,\n  });\n\n  if (box.reader.getPosition() != box.reader.getLength()) {\n    shaka.log.warning('Mismatch between box size and data size!');\n  }\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.PatchedMediaKeysMs');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.FakeEventTarget');\ngoog.require('shaka.util.Pssh');\ngoog.require('shaka.util.PublicPromise');\ngoog.require('shaka.util.Uint8ArrayUtils');\n\n\n/**\n * @namespace shaka.polyfill.PatchedMediaKeysMs\n *\n * @summary A polyfill to implement\n * {@link https://bit.ly/EmeMar15 EME draft 12 March 2015}\n * on top of ms-prefixed\n * {@link https://www.w3.org/TR/2014/WD-encrypted-media-20140218/ EME v20140218}\n */\n\n\n/**\n * Installs the polyfill if needed.\n */\nshaka.polyfill.PatchedMediaKeysMs.install = function() {\n  if (!window.HTMLVideoElement || !window.MSMediaKeys ||\n      (navigator.requestMediaKeySystemAccess &&\n       MediaKeySystemAccess.prototype.getConfiguration)) {\n    return;\n  }\n  shaka.log.info('Using ms-prefixed EME v20140218');\n\n  // Alias\n  const PatchedMediaKeysMs = shaka.polyfill.PatchedMediaKeysMs;\n\n  // Construct a fake key ID.  This is not done at load-time to avoid exceptions\n  // on unsupported browsers.  This particular fake key ID was suggested in\n  // w3c/encrypted-media#32.\n  PatchedMediaKeysMs.MediaKeyStatusMap.KEY_ID_ = (new Uint8Array([0])).buffer;\n\n  // Delete mediaKeys to work around strict mode compatibility issues.\n  delete HTMLMediaElement.prototype['mediaKeys'];\n  // Work around read-only declaration for mediaKeys by using a string.\n  HTMLMediaElement.prototype['mediaKeys'] = null;\n  HTMLMediaElement.prototype.setMediaKeys = PatchedMediaKeysMs.setMediaKeys;\n\n  // Install patches\n  window.MediaKeys = PatchedMediaKeysMs.MediaKeys;\n  window.MediaKeySystemAccess = PatchedMediaKeysMs.MediaKeySystemAccess;\n  navigator.requestMediaKeySystemAccess =\n      PatchedMediaKeysMs.requestMediaKeySystemAccess;\n};\n\n\n/**\n * An implementation of navigator.requestMediaKeySystemAccess.\n * Retrieves a MediaKeySystemAccess object.\n *\n * @this {!Navigator}\n * @param {string} keySystem\n * @param {!Array.<!MediaKeySystemConfiguration>} supportedConfigurations\n * @return {!Promise.<!MediaKeySystemAccess>}\n */\nshaka.polyfill.PatchedMediaKeysMs.requestMediaKeySystemAccess =\n    function(keySystem, supportedConfigurations) {\n  shaka.log.debug('PatchedMediaKeysMs.requestMediaKeySystemAccess');\n  goog.asserts.assert(this == navigator,\n                      'bad \"this\" for requestMediaKeySystemAccess');\n\n  // Alias.\n  const PatchedMediaKeysMs = shaka.polyfill.PatchedMediaKeysMs;\n  try {\n    let access = new PatchedMediaKeysMs.MediaKeySystemAccess(\n        keySystem, supportedConfigurations);\n    return Promise.resolve(/** @type {!MediaKeySystemAccess} */ (access));\n  } catch (exception) {\n    return Promise.reject(exception);\n  }\n};\n\n\n/**\n * An implementation of MediaKeySystemAccess.\n *\n * @constructor\n * @struct\n * @param {string} keySystem\n * @param {!Array.<!MediaKeySystemConfiguration>} supportedConfigurations\n * @implements {MediaKeySystemAccess}\n * @throws {Error} if the key system is not supported.\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySystemAccess =\n    function(keySystem, supportedConfigurations) {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeySystemAccess');\n\n  /** @type {string} */\n  this.keySystem = keySystem;\n\n  /** @private {!MediaKeySystemConfiguration} */\n  this.configuration_;\n\n  let allowPersistentState = false;\n\n  let success = false;\n  for (let i = 0; i < supportedConfigurations.length; ++i) {\n    let cfg = supportedConfigurations[i];\n\n    // Create a new config object and start adding in the pieces which we\n    // find support for.  We will return this from getConfiguration() if asked.\n    /** @type {!MediaKeySystemConfiguration} */\n    let newCfg = {\n      'audioCapabilities': [],\n      'videoCapabilities': [],\n      // It is technically against spec to return these as optional, but we\n      // don't truly know their values from the prefixed API:\n      'persistentState': 'optional',\n      'distinctiveIdentifier': 'optional',\n      // Pretend the requested init data types are supported, since we don't\n      // really know that either:\n      'initDataTypes': cfg.initDataTypes,\n      'sessionTypes': ['temporary'],\n      'label': cfg.label,\n    };\n\n    // PatchedMediaKeysMs tests for key system availability through\n    // MSMediaKeys.isTypeSupported\n    let ranAnyTests = false;\n    if (cfg.audioCapabilities) {\n      for (let j = 0; j < cfg.audioCapabilities.length; ++j) {\n        let cap = cfg.audioCapabilities[j];\n        if (cap.contentType) {\n          ranAnyTests = true;\n          let contentType = cap.contentType.split(';')[0];\n          if (MSMediaKeys.isTypeSupported(this.keySystem, contentType)) {\n            newCfg.audioCapabilities.push(cap);\n            success = true;\n          }\n        }\n      }\n    }\n    if (cfg.videoCapabilities) {\n      for (let j = 0; j < cfg.videoCapabilities.length; ++j) {\n        let cap = cfg.videoCapabilities[j];\n        if (cap.contentType) {\n          ranAnyTests = true;\n          let contentType = cap.contentType.split(';')[0];\n          if (MSMediaKeys.isTypeSupported(this.keySystem, contentType)) {\n            newCfg.videoCapabilities.push(cap);\n            success = true;\n          }\n        }\n      }\n    }\n\n    if (!ranAnyTests) {\n      // If no specific types were requested, we check all common types to find\n      // out if the key system is present at all.\n      success = MSMediaKeys.isTypeSupported(this.keySystem, 'video/mp4');\n    }\n    if (cfg.persistentState == 'required') {\n      if (allowPersistentState) {\n        newCfg.persistentState = 'required';\n        newCfg.sessionTypes = ['persistent-license'];\n      } else {\n        success = false;\n      }\n    }\n\n    if (success) {\n      this.configuration_ = newCfg;\n      return;\n    }\n  }  // for each cfg in supportedConfigurations\n\n  // As per the spec, this should be a DOMException, but there is not a public\n  // constructor for this.\n  let unsupportedKeySystemError = new Error('Unsupported keySystem');\n  unsupportedKeySystemError.name = 'NotSupportedError';\n  unsupportedKeySystemError.code = DOMException.NOT_SUPPORTED_ERR;\n  throw unsupportedKeySystemError;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySystemAccess.prototype.\n    createMediaKeys = function() {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeySystemAccess.createMediaKeys');\n\n  // Alias\n  const PatchedMediaKeysMs = shaka.polyfill.PatchedMediaKeysMs;\n\n  let mediaKeys = new PatchedMediaKeysMs.MediaKeys(this.keySystem);\n  return Promise.resolve(/** @type {!MediaKeys} */ (mediaKeys));\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySystemAccess.prototype.\n    getConfiguration = function() {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeySystemAccess.getConfiguration');\n  return this.configuration_;\n};\n\n\n/**\n * An implementation of HTMLMediaElement.prototype.setMediaKeys.\n * Attaches a MediaKeys object to the media element.\n *\n * @this {!HTMLMediaElement}\n * @param {MediaKeys} mediaKeys\n * @return {!Promise}\n */\nshaka.polyfill.PatchedMediaKeysMs.setMediaKeys = function(mediaKeys) {\n  shaka.log.debug('PatchedMediaKeysMs.setMediaKeys');\n  goog.asserts.assert(this instanceof HTMLMediaElement,\n                      'bad \"this\" for setMediaKeys');\n\n  // Alias\n  const PatchedMediaKeysMs = shaka.polyfill.PatchedMediaKeysMs;\n\n  let newMediaKeys =\n      /** @type {shaka.polyfill.PatchedMediaKeysMs.MediaKeys} */ (\n      mediaKeys);\n  let oldMediaKeys =\n      /** @type {shaka.polyfill.PatchedMediaKeysMs.MediaKeys} */ (\n      this.mediaKeys);\n\n  if (oldMediaKeys && oldMediaKeys != newMediaKeys) {\n    goog.asserts.assert(oldMediaKeys instanceof PatchedMediaKeysMs.MediaKeys,\n                        'non-polyfill instance of oldMediaKeys');\n    // Have the old MediaKeys stop listening to events on the video tag.\n    oldMediaKeys.setMedia(null);\n  }\n\n  delete this['mediaKeys'];  // in case there is an existing getter\n  this['mediaKeys'] = mediaKeys;  // work around read-only declaration\n\n  if (newMediaKeys) {\n    goog.asserts.assert(newMediaKeys instanceof PatchedMediaKeysMs.MediaKeys,\n                        'non-polyfill instance of newMediaKeys');\n    return newMediaKeys.setMedia(this);\n  }\n\n  return Promise.resolve();\n};\n\n\n/**\n * An implementation of MediaKeys.\n *\n * @constructor\n * @struct\n * @param {string} keySystem\n * @implements {MediaKeys}\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeys = function(keySystem) {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeys');\n\n  /** @private {!MSMediaKeys} */\n  this.nativeMediaKeys_ = new MSMediaKeys(keySystem);\n\n  /** @private {!shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeys.prototype.\n    createSession = function(sessionType) {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeys.createSession');\n\n  sessionType = sessionType || 'temporary';\n  // For now, only the 'temporary' type is supported.\n  if (sessionType != 'temporary') {\n    throw new TypeError('Session type ' + sessionType +\n        ' is unsupported on this platform.');\n  }\n\n  // Alias\n  const PatchedMediaKeysMs = shaka.polyfill.PatchedMediaKeysMs;\n\n  return new PatchedMediaKeysMs.MediaKeySession(\n      this.nativeMediaKeys_, sessionType);\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeys.prototype.\n    setServerCertificate = function(serverCertificate) {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeys.setServerCertificate');\n\n  // There is no equivalent in PatchedMediaKeysMs, so return failure.\n  return Promise.resolve(false);\n};\n\n\n/**\n * @param {HTMLMediaElement} media\n * @protected\n * @return {!Promise}\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeys.prototype.\n    setMedia = function(media) {\n  // Alias\n  const PatchedMediaKeysMs = shaka.polyfill.PatchedMediaKeysMs;\n\n  // Remove any old listeners.\n  this.eventManager_.removeAll();\n\n  // It is valid for media to be null; null is used to flag that event handlers\n  // need to be cleaned up.\n  if (!media) {\n    return Promise.resolve();\n  }\n\n  // Intercept and translate these prefixed EME events.\n  this.eventManager_.listen(media, 'msneedkey',\n      /** @type {shaka.util.EventManager.ListenerType} */\n      (PatchedMediaKeysMs.onMsNeedKey_));\n\n  let self = this;\n  function setMediaKeysDeferred() {\n    media.msSetMediaKeys(self.nativeMediaKeys_);\n    media.removeEventListener('loadedmetadata', setMediaKeysDeferred);\n  }\n\n  // Wrap native HTMLMediaElement.msSetMediaKeys with a Promise.\n  try {\n    // IE11/Edge requires that readyState >=1 before mediaKeys can be set, so\n    // check this and wait for loadedmetadata if we are not in the correct state\n    if (media.readyState >= 1) {\n      media.msSetMediaKeys(this.nativeMediaKeys_);\n    } else {\n      media.addEventListener('loadedmetadata', setMediaKeysDeferred);\n    }\n\n    return Promise.resolve();\n  } catch (exception) {\n    return Promise.reject(exception);\n  }\n};\n\n\n/**\n * An implementation of MediaKeySession.\n *\n * @constructor\n * @struct\n * @param {MSMediaKeys} nativeMediaKeys\n * @param {string} sessionType\n * @implements {MediaKeySession}\n * @extends {shaka.util.FakeEventTarget}\n */\nshaka.polyfill.PatchedMediaKeysMs.\n    MediaKeySession = function(nativeMediaKeys, sessionType) {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeySession');\n  shaka.util.FakeEventTarget.call(this);\n\n  // The native MediaKeySession, which will be created in generateRequest.\n  /** @private {MSMediaKeySession} */\n  this.nativeMediaKeySession_ = null;\n\n  /** @private {MSMediaKeys} */\n  this.nativeMediaKeys_ = nativeMediaKeys;\n\n  // Promises that are resolved later\n  /** @private {shaka.util.PublicPromise} */\n  this.generateRequestPromise_ = null;\n\n  /** @private {shaka.util.PublicPromise} */\n  this.updatePromise_ = null;\n\n  /** @private {!shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  /** @type {string} */\n  this.sessionId = '';\n\n  /** @type {number} */\n  this.expiration = NaN;\n\n  /** @type {!shaka.util.PublicPromise} */\n  this.closed = new shaka.util.PublicPromise();\n\n  /** @type {!shaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap} */\n  this.keyStatuses =\n      new shaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap();\n};\ngoog.inherits(shaka.polyfill.PatchedMediaKeysMs.MediaKeySession,\n    shaka.util.FakeEventTarget);\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.\n    generateRequest = function(initDataType, initData) {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeySession.generateRequest');\n\n  this.generateRequestPromise_ = new shaka.util.PublicPromise();\n\n  try {\n    // This EME spec version requires a MIME content type as the 1st param\n    // to createSession, but doesn't seem to matter what the value is.\n\n    // NOTE: IE11 takes either Uint8Array or ArrayBuffer, but Edge 12 only\n    // accepts Uint8Array.\n    this.nativeMediaKeySession_ = this.nativeMediaKeys_\n        .createSession('video/mp4', new Uint8Array(initData), null);\n\n    // Attach session event handlers here.\n    this.eventManager_.listen(this.nativeMediaKeySession_, 'mskeymessage',\n        /** @type {shaka.util.EventManager.ListenerType} */\n        (this.onMsKeyMessage_.bind(this)));\n    this.eventManager_.listen(this.nativeMediaKeySession_, 'mskeyadded',\n        /** @type {shaka.util.EventManager.ListenerType} */\n        (this.onMsKeyAdded_.bind(this)));\n    this.eventManager_.listen(this.nativeMediaKeySession_, 'mskeyerror',\n        /** @type {shaka.util.EventManager.ListenerType} */\n        (this.onMsKeyError_.bind(this)));\n\n    this.updateKeyStatus_('status-pending');\n  } catch (exception) {\n    this.generateRequestPromise_.reject(exception);\n  }\n\n  return this.generateRequestPromise_;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.\n    load = function() {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeySession.load');\n\n  return Promise.reject(new Error('MediaKeySession.load not yet supported'));\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.\n    update = function(response) {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeySession.update');\n\n  this.updatePromise_ = new shaka.util.PublicPromise();\n\n  try {\n    // Pass through to the native session.\n    // NOTE: IE11 takes either Uint8Array or ArrayBuffer, but Edge 12 only\n    // accepts Uint8Array.\n    this.nativeMediaKeySession_.update(new Uint8Array(response));\n  } catch (exception) {\n    this.updatePromise_.reject(exception);\n  }\n\n  return this.updatePromise_;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.\n    close = function() {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeySession.close');\n\n  try {\n    // Pass through to the native session.\n    // NOTE: IE seems to have a spec discrepancy here - v2010218 should have\n    // MediaKeySession.release, but actually uses \"close\". The next version\n    // of the spec is the initial Promise based one, so it's not the target spec\n    // either.\n    this.nativeMediaKeySession_.close();\n\n    this.closed.resolve();\n    this.eventManager_.removeAll();\n  } catch (exception) {\n    this.closed.reject(exception);\n  }\n\n  return this.closed;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.\n    remove = function() {\n  shaka.log.debug('PatchedMediaKeysMs.MediaKeySession.remove');\n\n  return Promise.reject(new Error('MediaKeySession.remove is only ' +\n      'applicable for persistent licenses, which are not supported on ' +\n      'this platform'));\n};\n\n\n/**\n * Handler for the native media elements msNeedKey event.\n *\n * @this {!HTMLMediaElement}\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysMs.onMsNeedKey_ = function(event) {\n  shaka.log.debug('PatchedMediaKeysMs.onMsNeedKey_', event);\n\n  // Alias\n  const PatchedMediaKeysMs = shaka.polyfill.PatchedMediaKeysMs;\n\n  // NOTE: Because \"this\" is a real EventTarget, on IE, the event we dispatch\n  // here must also be a real Event.\n  let event2 = /** @type {!CustomEvent} */(document.createEvent('CustomEvent'));\n  event2.initCustomEvent('encrypted', false, false, null);\n  event2.initDataType = 'cenc';\n  event2.initData = PatchedMediaKeysMs.normaliseInitData_(event.initData);\n\n  this.dispatchEvent(event2);\n};\n\n\n/**\n * Normalise the initData array. This is to apply browser specific work-arounds,\n * e.g. removing duplicates which appears to occur intermittently when the\n * native msneedkey event fires (i.e. event.initData contains dupes).\n *\n * @param {?Uint8Array} initData\n * @private\n * @return {?Uint8Array}\n */\nshaka.polyfill.PatchedMediaKeysMs.normaliseInitData_ = function(initData) {\n  if (!initData) {\n    return initData;\n  }\n\n  let pssh = new shaka.util.Pssh(initData);\n\n  // If there is only a single pssh, return the original array.\n  if (pssh.dataBoundaries.length <= 1) {\n    return initData;\n  }\n\n  let unfilteredInitDatas = [];\n  for (let i = 0; i < pssh.dataBoundaries.length; i++) {\n    let currPssh = initData.subarray(\n        pssh.dataBoundaries[i].start,\n        pssh.dataBoundaries[i].end + 1); // End is exclusive, hence the +1.\n\n    unfilteredInitDatas.push(currPssh);\n  }\n\n  // Dedupe psshData.\n  const dedupedInitDatas = [];\n  for (const initData of unfilteredInitDatas) {\n    const found = dedupedInitDatas.some((x) => {\n      return shaka.util.Uint8ArrayUtils.equal(x, initData);\n    });\n\n    if (!found) {\n      dedupedInitDatas.push(initData);\n    }\n  }\n\n  let targetLength = 0;\n  for (const initData of dedupedInitDatas) {\n    targetLength += initData.length;\n  }\n\n  // Flatten the array of Uint8Arrays back into a single Uint8Array.\n  const normalisedInitData = new Uint8Array(targetLength);\n  let offset = 0;\n  for (const initData of dedupedInitDatas) {\n    normalisedInitData.set(initData, offset);\n    offset += initData.length;\n  }\n\n  return normalisedInitData;\n};\n\n\n/**\n * Handler for the native keymessage event on MSMediaKeySession.\n *\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.\n    onMsKeyMessage_ = function(event) {\n  shaka.log.debug('PatchedMediaKeysMs.onMsKeyMessage_', event);\n\n  // We can now resolve this.generateRequestPromise, which should be non-null.\n  goog.asserts.assert(this.generateRequestPromise_,\n                      'generateRequestPromise_ not set in onMsKeyMessage_');\n  if (this.generateRequestPromise_) {\n    this.generateRequestPromise_.resolve();\n    this.generateRequestPromise_ = null;\n  }\n\n  let isNew = this.keyStatuses.getStatus() == undefined;\n\n  let event2 = new shaka.util.FakeEvent('message', {\n    messageType: isNew ? 'licenserequest' : 'licenserenewal',\n    message: event.message.buffer,\n  });\n\n  this.dispatchEvent(event2);\n};\n\n\n/**\n * Handler for the native keyadded event on MSMediaKeySession.\n *\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.\n    onMsKeyAdded_ = function(event) {\n  shaka.log.debug('PatchedMediaKeysMs.onMsKeyAdded_', event);\n\n  // PlayReady's concept of persistent licenses makes emulation difficult here.\n  // A license policy can say that the license persists, which causes the CDM to\n  // store it for use in a later session.  The result is that in IE11, the CDM\n  // fires 'mskeyadded' without ever firing 'mskeymessage'.\n  if (this.generateRequestPromise_) {\n    shaka.log.debug('Simulating completion for a PR persistent license.');\n    goog.asserts.assert(!this.updatePromise_,\n        'updatePromise_ and generateRequestPromise_ set in onMsKeyAdded_');\n    this.updateKeyStatus_('usable');\n    this.generateRequestPromise_.resolve();\n    this.generateRequestPromise_ = null;\n    return;\n  }\n\n  // We can now resolve this.updatePromise, which should be non-null.\n  goog.asserts.assert(this.updatePromise_,\n                      'updatePromise_ not set in onMsKeyAdded_');\n  if (this.updatePromise_) {\n    this.updateKeyStatus_('usable');\n    this.updatePromise_.resolve();\n    this.updatePromise_ = null;\n  }\n};\n\n\n/**\n * Handler for the native keyerror event on MSMediaKeySession.\n *\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.\n    onMsKeyError_ = function(event) {\n  shaka.log.debug('PatchedMediaKeysMs.onMsKeyError_', event);\n\n  let error = new Error('EME PatchedMediaKeysMs key error');\n  error.errorCode = this.nativeMediaKeySession_.error;\n\n  if (this.generateRequestPromise_ != null) {\n    this.generateRequestPromise_.reject(error);\n    this.generateRequestPromise_ = null;\n  } else if (this.updatePromise_ != null) {\n    this.updatePromise_.reject(error);\n    this.updatePromise_ = null;\n  } else {\n    // Unexpected error - map native codes to standardised key statuses.\n    // Possible values of this.nativeMediaKeySession_.error.code:\n    // MS_MEDIA_KEYERR_UNKNOWN        = 1\n    // MS_MEDIA_KEYERR_CLIENT         = 2\n    // MS_MEDIA_KEYERR_SERVICE        = 3\n    // MS_MEDIA_KEYERR_OUTPUT         = 4\n    // MS_MEDIA_KEYERR_HARDWARECHANGE = 5\n    // MS_MEDIA_KEYERR_DOMAIN         = 6\n\n    switch (this.nativeMediaKeySession_.error.code) {\n      case MSMediaKeyError.MS_MEDIA_KEYERR_OUTPUT:\n      case MSMediaKeyError.MS_MEDIA_KEYERR_HARDWARECHANGE:\n        this.updateKeyStatus_('output-not-allowed');\n        break;\n      default:\n        this.updateKeyStatus_('internal-error');\n        break;\n    }\n  }\n};\n\n\n/**\n * Updates key status and dispatch a 'keystatuseschange' event.\n *\n * @param {string} status\n * @private\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.\n    updateKeyStatus_ = function(status) {\n  this.keyStatuses.setStatus(status);\n  let event = new shaka.util.FakeEvent('keystatuseschange');\n  this.dispatchEvent(event);\n};\n\n\n/**\n * An implementation of MediaKeyStatusMap.\n * This fakes a map with a single key ID.\n *\n * @constructor\n * @struct\n * @implements {MediaKeyStatusMap}\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap = function() {\n  /**\n   * @type {number}\n   */\n  this.size = 0;\n\n  /**\n   * @private {string|undefined}\n   */\n  this.status_ = undefined;\n};\n\n\n/**\n * @const {!ArrayBuffer}\n * @private\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.KEY_ID_;\n\n\n/**\n * An internal method used by the session to set key status.\n * @param {string|undefined} status\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.\n    setStatus = function(status) {\n  this.size = status == undefined ? 0 : 1;\n  this.status_ = status;\n};\n\n\n/**\n * An internal method used by the session to get key status.\n * @return {string|undefined}\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.\n    getStatus = function() {\n  return this.status_;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.\n    forEach = function(fn) {\n  if (this.status_) {\n    let fakeKeyId =\n        shaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.KEY_ID_;\n    fn(this.status_, fakeKeyId);\n  }\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.\n    get = function(keyId) {\n  if (this.has(keyId)) {\n    return this.status_;\n  }\n  return undefined;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.\n    has = function(keyId) {\n  let fakeKeyId =\n      shaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.KEY_ID_;\n  if (this.status_ &&\n      shaka.util.Uint8ArrayUtils.equal(\n          new Uint8Array(keyId), new Uint8Array(fakeKeyId))) {\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @suppress {missingReturn}\n * @override\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.\n    entries = function() {\n  goog.asserts.assert(false, 'Not used!  Provided only for the compiler.');\n};\n\n\n/**\n * @suppress {missingReturn}\n * @override\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.\n    keys = function() {\n  goog.asserts.assert(false, 'Not used!  Provided only for the compiler.');\n};\n\n\n/**\n * @suppress {missingReturn}\n * @override\n */\nshaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.\n    values = function() {\n  goog.asserts.assert(false, 'Not used!  Provided only for the compiler.');\n};\n\n\nshaka.polyfill.register(shaka.polyfill.PatchedMediaKeysMs.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.PatchedMediaKeysNop');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\n\n\n/**\n * @namespace shaka.polyfill.PatchedMediaKeysNop\n *\n * @summary A polyfill to stub out\n * {@link https://bit.ly/EmeMar15 EME draft 12 March 2015} on browsers without\n * EME.\n * All methods will fail.\n */\n\n\n/**\n * Installs the polyfill if needed.\n */\nshaka.polyfill.PatchedMediaKeysNop.install = function() {\n  if (!window.HTMLVideoElement ||\n      (navigator.requestMediaKeySystemAccess &&\n       MediaKeySystemAccess.prototype.getConfiguration)) {\n    return;\n  }\n  shaka.log.info('EME not available.');\n\n  // Alias.\n  const PatchedMediaKeysNop = shaka.polyfill.PatchedMediaKeysNop;\n\n  // Install patches.\n  navigator.requestMediaKeySystemAccess =\n      PatchedMediaKeysNop.requestMediaKeySystemAccess;\n  // Delete mediaKeys to work around strict mode compatibility issues.\n  delete HTMLMediaElement.prototype['mediaKeys'];\n  // Work around read-only declaration for mediaKeys by using a string.\n  HTMLMediaElement.prototype['mediaKeys'] = null;\n  HTMLMediaElement.prototype.setMediaKeys = PatchedMediaKeysNop.setMediaKeys;\n  // These are not usable, but allow Player.isBrowserSupported to pass.\n  window.MediaKeys = PatchedMediaKeysNop.MediaKeys;\n  window.MediaKeySystemAccess = PatchedMediaKeysNop.MediaKeySystemAccess;\n};\n\n\n/**\n * An implementation of navigator.requestMediaKeySystemAccess.\n * Retrieves a MediaKeySystemAccess object.\n *\n * @this {!Navigator}\n * @param {string} keySystem\n * @param {!Array.<!MediaKeySystemConfiguration>} supportedConfigurations\n * @return {!Promise.<!MediaKeySystemAccess>}\n */\nshaka.polyfill.PatchedMediaKeysNop.requestMediaKeySystemAccess =\n    function(keySystem, supportedConfigurations) {\n  shaka.log.debug('PatchedMediaKeysNop.requestMediaKeySystemAccess');\n  goog.asserts.assert(this == navigator,\n                      'bad \"this\" for requestMediaKeySystemAccess');\n\n\n  return Promise.reject(new Error(\n      'The key system specified is not supported.'));\n};\n\n\n/**\n * An implementation of HTMLMediaElement.prototype.setMediaKeys.\n * Attaches a MediaKeys object to the media element.\n *\n * @this {!HTMLMediaElement}\n * @param {MediaKeys} mediaKeys\n * @return {!Promise}\n */\nshaka.polyfill.PatchedMediaKeysNop.setMediaKeys = function(mediaKeys) {\n  shaka.log.debug('PatchedMediaKeysNop.setMediaKeys');\n  goog.asserts.assert(this instanceof HTMLMediaElement,\n                      'bad \"this\" for setMediaKeys');\n\n  if (mediaKeys == null) {\n    return Promise.resolve();\n  }\n\n  return Promise.reject(new Error('MediaKeys not supported.'));\n};\n\n\n/**\n * An unusable constructor for MediaKeys.\n * @constructor\n * @struct\n * @implements {MediaKeys}\n */\nshaka.polyfill.PatchedMediaKeysNop.MediaKeys = function() {\n  throw new TypeError('Illegal constructor.');\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysNop.MediaKeys.prototype.createSession =\n    function() {};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysNop.MediaKeys.prototype.setServerCertificate =\n    function() {};\n\n\n/**\n * An unusable constructor for MediaKeySystemAccess.\n * @constructor\n * @struct\n * @implements {MediaKeySystemAccess}\n */\nshaka.polyfill.PatchedMediaKeysNop.MediaKeySystemAccess = function() {\n  throw new TypeError('Illegal constructor.');\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysNop.MediaKeySystemAccess.prototype.\n    getConfiguration = function() {};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysNop.MediaKeySystemAccess.prototype.\n    createMediaKeys = function() {};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysNop.MediaKeySystemAccess.prototype.\n    keySystem;\n\n\n// A low priority ensures this is the last and acts as a fallback.\nshaka.polyfill.register(shaka.polyfill.PatchedMediaKeysNop.install, -10);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.PatchedMediaKeysWebkit');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.FakeEventTarget');\ngoog.require('shaka.util.PublicPromise');\ngoog.require('shaka.util.StringUtils');\ngoog.require('shaka.util.Uint8ArrayUtils');\n\n\n/**\n * @namespace shaka.polyfill.PatchedMediaKeysWebkit\n *\n * @summary A polyfill to implement\n * {@link https://bit.ly/EmeMar15 EME draft 12 March 2015} on top of\n * webkit-prefixed {@link https://bit.ly/Eme01b EME v0.1b}.\n */\n\n\n/**\n * Store api prefix.\n *\n * @private {string}\n */\nshaka.polyfill.PatchedMediaKeysWebkit.prefix_ = '';\n\n\n/**\n * Installs the polyfill if needed.\n */\nshaka.polyfill.PatchedMediaKeysWebkit.install = function() {\n  // Alias.\n  const PatchedMediaKeysWebkit = shaka.polyfill.PatchedMediaKeysWebkit;\n  const prefixApi = PatchedMediaKeysWebkit.prefixApi_;\n\n  if (!window.HTMLVideoElement ||\n      (navigator.requestMediaKeySystemAccess &&\n       MediaKeySystemAccess.prototype.getConfiguration)) {\n    return;\n  }\n  if (HTMLMediaElement.prototype.webkitGenerateKeyRequest) {\n    shaka.log.info('Using webkit-prefixed EME v0.1b');\n    PatchedMediaKeysWebkit.prefix_ = 'webkit';\n  } else if (HTMLMediaElement.prototype.generateKeyRequest) {\n    shaka.log.info('Using nonprefixed EME v0.1b');\n  } else {\n    return;\n  }\n\n  goog.asserts.assert(\n      HTMLMediaElement.prototype[prefixApi('generateKeyRequest')],\n                      'PatchedMediaKeysWebkit APIs not available!');\n\n  // Construct a fake key ID.  This is not done at load-time to avoid exceptions\n  // on unsupported browsers.  This particular fake key ID was suggested in\n  // w3c/encrypted-media#32.\n  PatchedMediaKeysWebkit.MediaKeyStatusMap.KEY_ID_ =\n      (new Uint8Array([0])).buffer;\n\n  // Install patches.\n  navigator.requestMediaKeySystemAccess =\n      PatchedMediaKeysWebkit.requestMediaKeySystemAccess;\n  // Delete mediaKeys to work around strict mode compatibility issues.\n  delete HTMLMediaElement.prototype['mediaKeys'];\n  // Work around read-only declaration for mediaKeys by using a string.\n  HTMLMediaElement.prototype['mediaKeys'] = null;\n  HTMLMediaElement.prototype.setMediaKeys = PatchedMediaKeysWebkit.setMediaKeys;\n  window.MediaKeys = PatchedMediaKeysWebkit.MediaKeys;\n  window.MediaKeySystemAccess = PatchedMediaKeysWebkit.MediaKeySystemAccess;\n};\n\n\n/**\n * Prefix the api with the stored prefix.\n *\n * @param {string} api\n * @return {string}\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.prefixApi_ = function(api) {\n  let prefix = shaka.polyfill.PatchedMediaKeysWebkit.prefix_;\n  if (prefix) {\n    return prefix + api.charAt(0).toUpperCase() + api.slice(1);\n  }\n  return api;\n};\n\n\n/**\n * An implementation of navigator.requestMediaKeySystemAccess.\n * Retrieves a MediaKeySystemAccess object.\n *\n * @this {!Navigator}\n * @param {string} keySystem\n * @param {!Array.<!MediaKeySystemConfiguration>} supportedConfigurations\n * @return {!Promise.<!MediaKeySystemAccess>}\n */\nshaka.polyfill.PatchedMediaKeysWebkit.requestMediaKeySystemAccess =\n    function(keySystem, supportedConfigurations) {\n  shaka.log.debug('PatchedMediaKeysWebkit.requestMediaKeySystemAccess');\n  goog.asserts.assert(this == navigator,\n                      'bad \"this\" for requestMediaKeySystemAccess');\n\n  // Alias.\n  const PatchedMediaKeysWebkit = shaka.polyfill.PatchedMediaKeysWebkit;\n  try {\n    let access = new PatchedMediaKeysWebkit.MediaKeySystemAccess(\n        keySystem, supportedConfigurations);\n    return Promise.resolve(/** @type {!MediaKeySystemAccess} */ (access));\n  } catch (exception) {\n    return Promise.reject(exception);\n  }\n};\n\n\n/**\n * An implementation of HTMLMediaElement.prototype.setMediaKeys.\n * Attaches a MediaKeys object to the media element.\n *\n * @this {!HTMLMediaElement}\n * @param {MediaKeys} mediaKeys\n * @return {!Promise}\n */\nshaka.polyfill.PatchedMediaKeysWebkit.setMediaKeys = function(mediaKeys) {\n  shaka.log.debug('PatchedMediaKeysWebkit.setMediaKeys');\n  goog.asserts.assert(this instanceof HTMLMediaElement,\n                      'bad \"this\" for setMediaKeys');\n\n  // Alias.\n  const PatchedMediaKeysWebkit = shaka.polyfill.PatchedMediaKeysWebkit;\n\n  let newMediaKeys =\n      /** @type {shaka.polyfill.PatchedMediaKeysWebkit.MediaKeys} */ (\n          mediaKeys);\n  let oldMediaKeys =\n      /** @type {shaka.polyfill.PatchedMediaKeysWebkit.MediaKeys} */ (\n          this.mediaKeys);\n\n  if (oldMediaKeys && oldMediaKeys != newMediaKeys) {\n    goog.asserts.assert(\n        oldMediaKeys instanceof PatchedMediaKeysWebkit.MediaKeys,\n        'non-polyfill instance of oldMediaKeys');\n    // Have the old MediaKeys stop listening to events on the video tag.\n    oldMediaKeys.setMedia(null);\n  }\n\n  delete this['mediaKeys'];  // In case there is an existing getter.\n  this['mediaKeys'] = mediaKeys;  // Work around the read-only declaration.\n\n  if (newMediaKeys) {\n    goog.asserts.assert(\n        newMediaKeys instanceof PatchedMediaKeysWebkit.MediaKeys,\n        'non-polyfill instance of newMediaKeys');\n    newMediaKeys.setMedia(this);\n  }\n\n  return Promise.resolve();\n};\n\n\n/**\n * For some of this polyfill's implementation, we need to query a video element.\n * But for some embedded systems, it is memory-expensive to create multiple\n * video elements.  Therefore, we check the document to see if we can borrow one\n * to query before we fall back to creating one temporarily.\n *\n * @return {!HTMLVideoElement}\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.getVideoElement_ = function() {\n  let videos = document.getElementsByTagName('video');\n  let tmpVideo = videos.length ? videos[0] : document.createElement('video');\n  return /** @type {!HTMLVideoElement} */(tmpVideo);\n};\n\n\n/**\n * An implementation of MediaKeySystemAccess.\n *\n * @constructor\n * @struct\n * @param {string} keySystem\n * @param {!Array.<!MediaKeySystemConfiguration>} supportedConfigurations\n * @implements {MediaKeySystemAccess}\n * @throws {Error} if the key system is not supported.\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySystemAccess =\n    function(keySystem, supportedConfigurations) {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySystemAccess');\n\n  /** @type {string} */\n  this.keySystem = keySystem;\n\n  /** @private {string} */\n  this.internalKeySystem_ = keySystem;\n\n  /** @private {!MediaKeySystemConfiguration} */\n  this.configuration_;\n\n  // This is only a guess, since we don't really know from the prefixed API.\n  let allowPersistentState = false;\n\n  if (keySystem == 'org.w3.clearkey') {\n    // ClearKey's string must be prefixed in v0.1b.\n    this.internalKeySystem_ = 'webkit-org.w3.clearkey';\n    // ClearKey doesn't support persistence.\n    allowPersistentState = false;\n  }\n\n  let success = false;\n  let tmpVideo = shaka.polyfill.PatchedMediaKeysWebkit.getVideoElement_();\n  for (let i = 0; i < supportedConfigurations.length; ++i) {\n    let cfg = supportedConfigurations[i];\n\n    // Create a new config object and start adding in the pieces which we\n    // find support for.  We will return this from getConfiguration() if asked.\n    /** @type {!MediaKeySystemConfiguration} */\n    let newCfg = {\n      'audioCapabilities': [],\n      'videoCapabilities': [],\n      // It is technically against spec to return these as optional, but we\n      // don't truly know their values from the prefixed API:\n      'persistentState': 'optional',\n      'distinctiveIdentifier': 'optional',\n      // Pretend the requested init data types are supported, since we don't\n      // really know that either:\n      'initDataTypes': cfg.initDataTypes,\n      'sessionTypes': ['temporary'],\n      'label': cfg.label,\n    };\n\n    // v0.1b tests for key system availability with an extra argument on\n    // canPlayType.\n    let ranAnyTests = false;\n    if (cfg.audioCapabilities) {\n      for (let j = 0; j < cfg.audioCapabilities.length; ++j) {\n        let cap = cfg.audioCapabilities[j];\n        if (cap.contentType) {\n          ranAnyTests = true;\n          // In Chrome <= 40, if you ask about Widevine-encrypted audio support,\n          // you get a false-negative when you specify codec information.\n          // Work around this by stripping codec info for audio types.\n          let contentType = cap.contentType.split(';')[0];\n          if (tmpVideo.canPlayType(contentType, this.internalKeySystem_)) {\n            newCfg.audioCapabilities.push(cap);\n            success = true;\n          }\n        }\n      }\n    }\n    if (cfg.videoCapabilities) {\n      for (let j = 0; j < cfg.videoCapabilities.length; ++j) {\n        let cap = cfg.videoCapabilities[j];\n        if (cap.contentType) {\n          ranAnyTests = true;\n          if (tmpVideo.canPlayType(cap.contentType, this.internalKeySystem_)) {\n            newCfg.videoCapabilities.push(cap);\n            success = true;\n          }\n        }\n      }\n    }\n\n    if (!ranAnyTests) {\n      // If no specific types were requested, we check all common types to find\n      // out if the key system is present at all.\n      success = tmpVideo.canPlayType('video/mp4', this.internalKeySystem_) ||\n                tmpVideo.canPlayType('video/webm', this.internalKeySystem_);\n    }\n    if (cfg.persistentState == 'required') {\n      if (allowPersistentState) {\n        newCfg.persistentState = 'required';\n        newCfg.sessionTypes = ['persistent-license'];\n      } else {\n        success = false;\n      }\n    }\n\n    if (success) {\n      this.configuration_ = newCfg;\n      return;\n    }\n  }  // for each cfg in supportedConfigurations\n\n  let message = 'Unsupported keySystem';\n  if (keySystem == 'org.w3.clearkey' || keySystem == 'com.widevine.alpha') {\n    message = 'None of the requested configurations were supported.';\n  }\n  let unsupportedError = new Error(message);\n  unsupportedError.name = 'NotSupportedError';\n  unsupportedError.code = DOMException.NOT_SUPPORTED_ERR;\n  throw unsupportedError;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySystemAccess.prototype.\n    createMediaKeys = function() {\n  shaka.log.debug(\n      'PatchedMediaKeysWebkit.MediaKeySystemAccess.createMediaKeys');\n\n  // Alias.\n  const PatchedMediaKeysWebkit = shaka.polyfill.PatchedMediaKeysWebkit;\n  let mediaKeys = new PatchedMediaKeysWebkit.MediaKeys(this.internalKeySystem_);\n  return Promise.resolve(/** @type {!MediaKeys} */ (mediaKeys));\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySystemAccess.prototype.\n    getConfiguration = function() {\n  shaka.log.debug(\n      'PatchedMediaKeysWebkit.MediaKeySystemAccess.getConfiguration');\n  return this.configuration_;\n};\n\n\n/**\n * An implementation of MediaKeys.\n *\n * @constructor\n * @struct\n * @param {string} keySystem\n * @implements {MediaKeys}\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeys = function(keySystem) {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeys');\n\n  /** @private {string} */\n  this.keySystem_ = keySystem;\n\n  /** @private {HTMLMediaElement} */\n  this.media_ = null;\n\n  /** @private {!shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  /**\n   * @private {!Array.<!shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession>}\n   */\n  this.newSessions_ = [];\n\n  /**\n   * @private {!Object.<string,\n   *                    !shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession>}\n   */\n  this.sessionMap_ = {};\n};\n\n\n/**\n * @param {HTMLMediaElement} media\n * @protected\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.setMedia =\n    function(media) {\n  this.media_ = media;\n\n  // Remove any old listeners.\n  this.eventManager_.removeAll();\n\n  let prefix = shaka.polyfill.PatchedMediaKeysWebkit.prefix_;\n  if (media) {\n    // Intercept and translate these prefixed EME events.\n    this.eventManager_.listen(media, prefix + 'needkey',\n        /** @type {shaka.util.EventManager.ListenerType} */ (\n            this.onWebkitNeedKey_.bind(this)));\n\n    this.eventManager_.listen(media, prefix + 'keymessage',\n        /** @type {shaka.util.EventManager.ListenerType} */ (\n            this.onWebkitKeyMessage_.bind(this)));\n\n    this.eventManager_.listen(media, prefix + 'keyadded',\n        /** @type {shaka.util.EventManager.ListenerType} */ (\n            this.onWebkitKeyAdded_.bind(this)));\n\n    this.eventManager_.listen(media, prefix + 'keyerror',\n        /** @type {shaka.util.EventManager.ListenerType} */ (\n            this.onWebkitKeyError_.bind(this)));\n  }\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.createSession =\n    function(sessionType) {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeys.createSession');\n\n  sessionType = sessionType || 'temporary';\n  if (sessionType != 'temporary' && sessionType != 'persistent-license') {\n    throw new TypeError('Session type ' + sessionType +\n                        ' is unsupported on this platform.');\n  }\n\n  // Alias.\n  const PatchedMediaKeysWebkit = shaka.polyfill.PatchedMediaKeysWebkit;\n\n  // Unprefixed EME allows for session creation without a video tag or src.\n  // Prefixed EME requires both a valid HTMLMediaElement and a src.\n  let media = this.media_ || /** @type {!HTMLMediaElement} */(\n      document.createElement('video'));\n  if (!media.src) media.src = 'about:blank';\n\n  let session = new PatchedMediaKeysWebkit.MediaKeySession(\n      media, this.keySystem_, sessionType);\n  this.newSessions_.push(session);\n  return session;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.setServerCertificate =\n    function(serverCertificate) {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeys.setServerCertificate');\n\n  // There is no equivalent in v0.1b, so return failure.\n  return Promise.resolve(false);\n};\n\n\n/**\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.onWebkitNeedKey_ =\n    function(event) {\n  shaka.log.debug('PatchedMediaKeysWebkit.onWebkitNeedKey_', event);\n  goog.asserts.assert(this.media_, 'media_ not set in onWebkitNeedKey_');\n\n  let event2 =\n      /** @type {!CustomEvent} */ (document.createEvent('CustomEvent'));\n  event2.initCustomEvent('encrypted', false, false, null);\n\n  // not used by v0.1b EME, but given a valid value\n  event2.initDataType = 'webm';\n  event2.initData = event.initData;\n\n  this.media_.dispatchEvent(event2);\n};\n\n\n/**\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.onWebkitKeyMessage_ =\n    function(event) {\n  shaka.log.debug('PatchedMediaKeysWebkit.onWebkitKeyMessage_', event);\n\n  let session = this.findSession_(event.sessionId);\n  if (!session) {\n    shaka.log.error('Session not found', event.sessionId);\n    return;\n  }\n\n  let isNew = session.keyStatuses.getStatus() == undefined;\n\n  let event2 = new shaka.util.FakeEvent('message', {\n    messageType: isNew ? 'licenserequest' : 'licenserenewal',\n    message: event.message,\n  });\n\n  session.generated();\n  session.dispatchEvent(event2);\n};\n\n\n/**\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.onWebkitKeyAdded_ =\n    function(event) {\n  shaka.log.debug('PatchedMediaKeysWebkit.onWebkitKeyAdded_', event);\n\n  let session = this.findSession_(event.sessionId);\n  goog.asserts.assert(session, 'unable to find session in onWebkitKeyAdded_');\n  if (session) {\n    session.ready();\n  }\n};\n\n\n/**\n * @param {!MediaKeyEvent} event\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.onWebkitKeyError_ =\n    function(event) {\n  shaka.log.debug('PatchedMediaKeysWebkit.onWebkitKeyError_', event);\n\n  let session = this.findSession_(event.sessionId);\n  goog.asserts.assert(session, 'unable to find session in onWebkitKeyError_');\n  if (session) {\n    session.handleError(event);\n  }\n};\n\n\n/**\n * @param {string} sessionId\n * @return {shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession}\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.findSession_ =\n    function(sessionId) {\n  let session = this.sessionMap_[sessionId];\n  if (session) {\n    shaka.log.debug('PatchedMediaKeysWebkit.MediaKeys.findSession_', session);\n    return session;\n  }\n\n  session = this.newSessions_.shift();\n  if (session) {\n    session.sessionId = sessionId;\n    this.sessionMap_[sessionId] = session;\n    shaka.log.debug('PatchedMediaKeysWebkit.MediaKeys.findSession_', session);\n    return session;\n  }\n\n  return null;\n};\n\n\n/**\n * An implementation of MediaKeySession.\n *\n * @param {!HTMLMediaElement} media\n * @param {string} keySystem\n * @param {string} sessionType\n *\n * @constructor\n * @struct\n * @implements {MediaKeySession}\n * @extends {shaka.util.FakeEventTarget}\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession =\n    function(media, keySystem, sessionType) {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySession');\n  shaka.util.FakeEventTarget.call(this);\n\n  /** @private {!HTMLMediaElement} */\n  this.media_ = media;\n\n  /** @private {boolean} */\n  this.initialized_ = false;\n\n  /** @private {shaka.util.PublicPromise} */\n  this.generatePromise_ = null;\n\n  /** @private {shaka.util.PublicPromise} */\n  this.updatePromise_ = null;\n\n  /** @private {string} */\n  this.keySystem_ = keySystem;\n\n  /** @private {string} */\n  this.type_ = sessionType;\n\n  /** @type {string} */\n  this.sessionId = '';\n\n  /** @type {number} */\n  this.expiration = NaN;\n\n  /** @type {!shaka.util.PublicPromise} */\n  this.closed = new shaka.util.PublicPromise();\n\n  /** @type {!shaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap} */\n  this.keyStatuses =\n      new shaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap();\n};\ngoog.inherits(shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession,\n              shaka.util.FakeEventTarget);\n\n\n/**\n * Signals that the license request has been generated.  This resolves the\n * 'generateRequest' promise.\n *\n * @protected\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.generated =\n    function() {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySession.generated');\n\n  if (this.generatePromise_) {\n    this.generatePromise_.resolve();\n    this.generatePromise_ = null;\n  }\n};\n\n\n/**\n * Signals that the session is 'ready', which is the terminology used in older\n * versions of EME.  The new signal is to resolve the 'update' promise.  This\n * translates between the two.\n *\n * @protected\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.ready =\n    function() {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySession.ready');\n\n  this.updateKeyStatus_('usable');\n\n  if (this.updatePromise_) {\n    this.updatePromise_.resolve();\n  }\n  this.updatePromise_ = null;\n};\n\n\n/**\n * Either rejects a promise, or dispatches an error event, as appropriate.\n *\n * @param {!MediaKeyEvent} event\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.handleError =\n    function(event) {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySession.handleError', event);\n\n  // This does not match the DOMException we get in current WD EME, but it will\n  // at least provide some information which can be used to look into the\n  // problem.\n  let error = new Error('EME v0.1b key error');\n  error.errorCode = event.errorCode;\n  error.errorCode.systemCode = event.systemCode;\n\n  // The presence or absence of sessionId indicates whether this corresponds to\n  // generateRequest() or update().\n  if (!event.sessionId && this.generatePromise_) {\n    error.method = 'generateRequest';\n    if (event.systemCode == 45) {\n      error.message = 'Unsupported session type.';\n    }\n    this.generatePromise_.reject(error);\n    this.generatePromise_ = null;\n  } else if (event.sessionId && this.updatePromise_) {\n    error.method = 'update';\n    this.updatePromise_.reject(error);\n    this.updatePromise_ = null;\n  } else {\n    // This mapping of key statuses is imperfect at best.\n    let code = event.errorCode.code;\n    let systemCode = event.systemCode;\n    if (code == MediaKeyError['MEDIA_KEYERR_OUTPUT']) {\n      this.updateKeyStatus_('output-restricted');\n    } else if (systemCode == 1) {\n      this.updateKeyStatus_('expired');\n    } else {\n      this.updateKeyStatus_('internal-error');\n    }\n  }\n};\n\n\n/**\n * Logic which is shared between generateRequest() and load(), both of which\n * are ultimately implemented with webkitGenerateKeyRequest in prefixed EME.\n *\n * @param {?BufferSource} initData\n * @param {?string} offlineSessionId\n * @return {!Promise}\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.generate_ =\n    function(initData, offlineSessionId) {\n  if (this.initialized_) {\n    return Promise.reject(new Error('The session is already initialized.'));\n  }\n\n  this.initialized_ = true;\n\n  /** @type {!Uint8Array} */\n  let mangledInitData;\n\n  try {\n    if (this.type_ == 'persistent-license') {\n      const StringUtils = shaka.util.StringUtils;\n      if (!offlineSessionId) {\n        // Persisting the initial license.\n        // Prefix the init data with a tag to indicate persistence.\n        let prefix = StringUtils.toUTF8('PERSISTENT|');\n        let result = new Uint8Array(prefix.byteLength + initData.byteLength);\n        result.set(new Uint8Array(prefix), 0);\n        result.set(new Uint8Array(initData), prefix.byteLength);\n        mangledInitData = result;\n      } else {\n        // Loading a stored license.\n        // Prefix the init data (which is really a session ID) with a tag to\n        // indicate that we are loading a persisted session.\n        mangledInitData = new Uint8Array(\n            StringUtils.toUTF8('LOAD_SESSION|' + offlineSessionId));\n      }\n    } else {\n      // Streaming.\n      goog.asserts.assert(this.type_ == 'temporary',\n                          'expected temporary session');\n      goog.asserts.assert(!offlineSessionId,\n                          'unexpected offline session ID');\n      mangledInitData = new Uint8Array(initData);\n    }\n\n    goog.asserts.assert(mangledInitData,\n                        'init data not set!');\n  } catch (exception) {\n    return Promise.reject(exception);\n  }\n\n  goog.asserts.assert(this.generatePromise_ == null,\n                      'generatePromise_ should be null');\n  this.generatePromise_ = new shaka.util.PublicPromise();\n\n  // Because we are hacking media.src in createSession to better emulate\n  // unprefixed EME's ability to create sessions and license requests without a\n  // video tag, we can get ourselves into trouble.  It seems that sometimes,\n  // the setting of media.src hasn't been processed by some other thread, and\n  // GKR can throw an exception.  If this occurs, wait 10 ms and try again at\n  // most once.  This situation should only occur when init data is available\n  // ahead of the 'needkey' event.\n\n  let prefixApi = shaka.polyfill.PatchedMediaKeysWebkit.prefixApi_;\n  let generateKeyRequestName = prefixApi('generateKeyRequest');\n  try {\n    this.media_[generateKeyRequestName](this.keySystem_, mangledInitData);\n  } catch (exception) {\n    if (exception.name != 'InvalidStateError') {\n      this.generatePromise_ = null;\n      return Promise.reject(exception);\n    }\n\n    setTimeout(function() {\n      try {\n        this.media_[generateKeyRequestName](this.keySystem_, mangledInitData);\n      } catch (exception2) {\n        this.generatePromise_.reject(exception2);\n        this.generatePromise_ = null;\n      }\n    }.bind(this), 10);\n  }\n\n  return this.generatePromise_;\n};\n\n\n/**\n * An internal version of update which defers new calls while old ones are in\n * progress.\n *\n * @param {!shaka.util.PublicPromise} promise  The promise associated with this\n *   call.\n * @param {?BufferSource} response\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.update_ =\n    function(promise, response) {\n  if (this.updatePromise_) {\n    // We already have an update in-progress, so defer this one until after the\n    // old one is resolved.  Execute this whether the original one succeeds or\n    // fails.\n    this.updatePromise_.then(\n        this.update_.bind(this, promise, response)\n    ).catch(\n        this.update_.bind(this, promise, response)\n    );\n    return;\n  }\n\n  this.updatePromise_ = promise;\n\n  let key;\n  let keyId;\n\n  if (this.keySystem_ == 'webkit-org.w3.clearkey') {\n    // The current EME version of clearkey wants a structured JSON response.\n    // The v0.1b version wants just a raw key.  Parse the JSON response and\n    // extract the key and key ID.\n    const StringUtils = shaka.util.StringUtils;\n    const Uint8ArrayUtils = shaka.util.Uint8ArrayUtils;\n    let licenseString = StringUtils.fromUTF8(response);\n    let jwkSet = /** @type {JWKSet} */ (JSON.parse(licenseString));\n    let kty = jwkSet.keys[0].kty;\n    if (kty != 'oct') {\n      // Reject the promise.\n      let error = new Error('Response is not a valid JSON Web Key Set.');\n      this.updatePromise_.reject(error);\n      this.updatePromise_ = null;\n    }\n    key = Uint8ArrayUtils.fromBase64(jwkSet.keys[0].k);\n    keyId = Uint8ArrayUtils.fromBase64(jwkSet.keys[0].kid);\n  } else {\n    // The key ID is not required.\n    key = new Uint8Array(response);\n    keyId = null;\n  }\n\n  let prefixApi = shaka.polyfill.PatchedMediaKeysWebkit.prefixApi_;\n  let addKeyName = prefixApi('addKey');\n  try {\n    this.media_[addKeyName](this.keySystem_, key, keyId, this.sessionId);\n  } catch (exception) {\n    // Reject the promise.\n    this.updatePromise_.reject(exception);\n    this.updatePromise_ = null;\n  }\n};\n\n\n/**\n * Update key status and dispatch a 'keystatuseschange' event.\n *\n * @param {string} status\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.\n    updateKeyStatus_ = function(status) {\n  this.keyStatuses.setStatus(status);\n  let event = new shaka.util.FakeEvent('keystatuseschange');\n  this.dispatchEvent(event);\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.\n    generateRequest = function(initDataType, initData) {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySession.generateRequest');\n  return this.generate_(initData, null);\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.load =\n    function(sessionId) {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySession.load');\n  if (this.type_ == 'persistent-license') {\n    return this.generate_(null, sessionId);\n  } else {\n    return Promise.reject(new Error('Not a persistent session.'));\n  }\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.update =\n    function(response) {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySession.update', response);\n  goog.asserts.assert(this.sessionId, 'update without session ID');\n\n  let nextUpdatePromise = new shaka.util.PublicPromise();\n  this.update_(nextUpdatePromise, response);\n  return nextUpdatePromise;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.close =\n    function() {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySession.close');\n\n  // This will remove a persistent session, but it's also the only way to\n  // free CDM resources on v0.1b.\n  if (this.type_ != 'persistent-license') {\n    // sessionId may reasonably be null if no key request has been generated\n    // yet.  Unprefixed EME will return a rejected promise in this case.\n    // We will use the same error message that Chrome 41 uses in its EME\n    // implementation.\n    if (!this.sessionId) {\n      this.closed.reject(new Error('The session is not callable.'));\n      return this.closed;\n    }\n\n    // This may throw an exception, but we ignore it because we are only using\n    // it to clean up resources in v0.1b.  We still consider the session closed.\n    // We can't let the exception propagate because MediaKeySession.close()\n    // should not throw.\n    let prefixApi = shaka.polyfill.PatchedMediaKeysWebkit.prefixApi_;\n    let cancelKeyRequestName = prefixApi('cancelKeyRequest');\n    try {\n      this.media_[cancelKeyRequestName](this.keySystem_, this.sessionId);\n    } catch (exception) {}\n  }\n\n  // Resolve the 'closed' promise and return it.\n  this.closed.resolve();\n  return this.closed;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.remove =\n    function() {\n  shaka.log.debug('PatchedMediaKeysWebkit.MediaKeySession.remove');\n\n  if (this.type_ != 'persistent-license') {\n    return Promise.reject(new Error('Not a persistent session.'));\n  }\n\n  return this.close();\n};\n\n\n/**\n * An implementation of MediaKeyStatusMap.\n * This fakes a map with a single key ID.\n *\n * @constructor\n * @struct\n * @implements {MediaKeyStatusMap}\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap = function() {\n  /**\n   * @type {number}\n   */\n  this.size = 0;\n\n  /**\n   * @private {string|undefined}\n   */\n  this.status_ = undefined;\n};\n\n\n/**\n * @const {!ArrayBuffer}\n * @private\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.KEY_ID_;\n\n\n/**\n * An internal method used by the session to set key status.\n * @param {string|undefined} status\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.setStatus =\n    function(status) {\n  this.size = status == undefined ? 0 : 1;\n  this.status_ = status;\n};\n\n\n/**\n * An internal method used by the session to get key status.\n * @return {string|undefined}\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.getStatus =\n    function() {\n  return this.status_;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.forEach =\n    function(fn) {\n  if (this.status_) {\n    let fakeKeyId =\n        shaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.KEY_ID_;\n    fn(this.status_, fakeKeyId);\n  }\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.get =\n    function(keyId) {\n  if (this.has(keyId)) {\n    return this.status_;\n  }\n  return undefined;\n};\n\n\n/** @override */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.has =\n    function(keyId) {\n  let fakeKeyId =\n      shaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.KEY_ID_;\n  if (this.status_ &&\n      shaka.util.Uint8ArrayUtils.equal(\n          new Uint8Array(keyId), new Uint8Array(fakeKeyId))) {\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @suppress {missingReturn}\n * @override\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.\n    entries = function() {\n  goog.asserts.assert(false, 'Not used!  Provided only for compiler.');\n};\n\n\n/**\n * @suppress {missingReturn}\n * @override\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.\n    keys = function() {\n  goog.asserts.assert(false, 'Not used!  Provided only for compiler.');\n};\n\n\n/**\n * @suppress {missingReturn}\n * @override\n */\nshaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.\n    values = function() {\n  goog.asserts.assert(false, 'Not used!  Provided only for compiler.');\n};\n\n\nshaka.polyfill.register(shaka.polyfill.PatchedMediaKeysWebkit.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.VideoPlayPromise');\n\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\n\n\n/**\n * @namespace shaka.polyfill.VideoPlayPromise\n *\n * @summary A polyfill to silence the play() Promise in HTML5 video.\n */\n\n\n/**\n * Install the polyfill if needed.\n */\nshaka.polyfill.VideoPlayPromise.install = function() {\n  shaka.log.debug('VideoPlayPromise.install');\n\n  if (window.HTMLMediaElement) {\n    const originalPlay = HTMLMediaElement.prototype.play;\n    HTMLMediaElement.prototype.play = function() {\n      let p = originalPlay.apply(this);\n      if (p) {\n        // This browser is returning a Promise from play().\n        // If the play() call fails or is interrupted, the Promise will be\n        // rejected.  Some apps, however, don't listen to this Promise,\n        // especially since it is not available cross-browser.  If the Promise\n        // is rejected without anyone listening for the failure, an error will\n        // appear in the JS console.\n        // To avoid confusion over this innocuous \"error\", we will install a\n        // catch handler on the Promise.  This does not prevent the app from\n        // also catching failures and handling them.  It only prevents the\n        // console message.\n        p.catch(function() {});\n      }\n      return p;\n    };\n  }\n};\n\nshaka.polyfill.register(shaka.polyfill.VideoPlayPromise.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.VideoPlaybackQuality');\n\ngoog.require('shaka.polyfill.register');\n\n\n/**\n * @namespace shaka.polyfill.VideoPlaybackQuality\n *\n * @summary A polyfill to provide MSE VideoPlaybackQuality metrics.\n * Many browsers do not yet provide this API, and Chrome currently provides\n * similar data through individual prefixed attributes on HTMLVideoElement.\n */\n\n\n/**\n * Install the polyfill if needed.\n */\nshaka.polyfill.VideoPlaybackQuality.install = function() {\n  if (!window.HTMLVideoElement) {\n    // Avoid errors on very old browsers.\n    return;\n  }\n\n  let proto = HTMLVideoElement.prototype;\n  if (proto.getVideoPlaybackQuality) {\n    // No polyfill needed.\n    return;\n  }\n\n  if ('webkitDroppedFrameCount' in proto) {\n    proto.getVideoPlaybackQuality =\n        shaka.polyfill.VideoPlaybackQuality.webkit_;\n  }\n};\n\n\n/**\n * @this {HTMLVideoElement}\n * @return {!VideoPlaybackQuality}\n * @private\n */\nshaka.polyfill.VideoPlaybackQuality.webkit_ = function() {\n  return {\n    'droppedVideoFrames': this.webkitDroppedFrameCount,\n    'totalVideoFrames': this.webkitDecodedFrameCount,\n    // Not provided by this polyfill:\n    'corruptedVideoFrames': 0,\n    'creationTime': NaN,\n    'totalFrameDelay': 0,\n  };\n};\n\n\nshaka.polyfill.register(shaka.polyfill.VideoPlaybackQuality.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.polyfill.VTTCue');\n\ngoog.require('shaka.log');\ngoog.require('shaka.polyfill.register');\n\n\n/**\n * @namespace shaka.polyfill.VTTCue\n *\n * @summary A polyfill to provide VTTCue.\n */\n\n\n/**\n * Install the polyfill if needed.\n */\nshaka.polyfill.VTTCue.install = function() {\n  if (window.VTTCue) {\n    shaka.log.info('Using native VTTCue.');\n    return;\n  }\n\n  if (!window.TextTrackCue) {\n    shaka.log.error('VTTCue not available.');\n    return;\n  }\n\n  let constructorLength = TextTrackCue.length;\n  if (constructorLength == 3) {\n    shaka.log.info('Using VTTCue polyfill from 3 argument TextTrackCue.');\n    window.VTTCue = shaka.polyfill.VTTCue.from3ArgsTextTrackCue_;\n  } else if (constructorLength == 6) {\n    shaka.log.info('Using VTTCue polyfill from 6 argument TextTrackCue.');\n    window.VTTCue = shaka.polyfill.VTTCue.from6ArgsTextTrackCue_;\n  } else if (shaka.polyfill.VTTCue.canUse3ArgsTextTrackCue_()) {\n    shaka.log.info('Using VTTCue polyfill from 3 argument TextTrackCue.');\n    window.VTTCue = shaka.polyfill.VTTCue.from3ArgsTextTrackCue_;\n  }\n};\n\n\n/**\n * Draft spec TextTrackCue with 3 constructor arguments.\n * @see {@link https://bit.ly/2IdyKbA W3C Working Draft 25 October 2012}.\n *\n * @param {number} startTime\n * @param {number} endTime\n * @param {string} text\n * @return {TextTrackCue}\n * @private\n */\nshaka.polyfill.VTTCue.from3ArgsTextTrackCue_ = function(startTime, endTime,\n    text) {\n  return new window.TextTrackCue(startTime, endTime, text);\n};\n\n\n/**\n * Draft spec TextTrackCue with 6 constructor arguments (5th & 6th are\n * optional).\n * @see {@link https://bit.ly/2KaGSP2 W3C Working Draft 29 March 2012}.\n *\n * @param {number} startTime\n * @param {number} endTime\n * @param {string} text\n * @return {TextTrackCue}\n * @private\n */\nshaka.polyfill.VTTCue.from6ArgsTextTrackCue_ = function(startTime, endTime,\n    text) {\n  let id = startTime + '-' + endTime + '-' + text;\n  // Quoting the access to the TextTrackCue object to satisfy the compiler.\n  return new window['TextTrackCue'](id, startTime, endTime, text);\n};\n\n\n/**\n * IE10, IE11 and Edge return TextTrackCue.length = 0, although they accept 3\n * constructor arguments.\n *\n * @return {boolean}\n * @private\n */\nshaka.polyfill.VTTCue.canUse3ArgsTextTrackCue_ = function() {\n  try {\n    return !!shaka.polyfill.VTTCue.from3ArgsTextTrackCue_(1, 2, '');\n  } catch (error) {\n    return false;\n  }\n};\n\n\nshaka.polyfill.register(shaka.polyfill.VTTCue.install);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.text.TtmlTextParser');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.text.Cue');\ngoog.require('shaka.text.CueRegion');\ngoog.require('shaka.text.TextEngine');\ngoog.require('shaka.util.ArrayUtils');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.StringUtils');\ngoog.require('shaka.util.XmlUtils');\n\n\n/**\n * @constructor\n * @implements {shaka.extern.TextParser}\n */\nshaka.text.TtmlTextParser = function() {};\n\n\n/**\n * @const {string}\n * @private\n */\nshaka.text.TtmlTextParser.parameterNs_ = 'http://www.w3.org/ns/ttml#parameter';\n\n\n/**\n * @const {string}\n * @private\n */\nshaka.text.TtmlTextParser.styleNs_ = 'http://www.w3.org/ns/ttml#styling';\n\n\n/** @override */\nshaka.text.TtmlTextParser.prototype.parseInit = function(data) {\n  goog.asserts.assert(false, 'TTML does not have init segments');\n};\n\n\n/** @override */\nshaka.text.TtmlTextParser.prototype.parseMedia = function(data, time) {\n  const TtmlTextParser = shaka.text.TtmlTextParser;\n  const XmlUtils = shaka.util.XmlUtils;\n  const ttpNs = TtmlTextParser.parameterNs_;\n  let str = shaka.util.StringUtils.fromUTF8(data);\n  let ret = [];\n  let parser = new DOMParser();\n  let xml = null;\n\n  try {\n    xml = parser.parseFromString(str, 'text/xml');\n  } catch (exception) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_XML);\n  }\n\n  if (xml) {\n    // Try to get the framerate, subFrameRate and frameRateMultiplier\n    // if applicable\n    let frameRate = null;\n    let subFrameRate = null;\n    let frameRateMultiplier = null;\n    let tickRate = null;\n    let spaceStyle = null;\n    let tts = xml.getElementsByTagName('tt');\n    let tt = tts[0];\n    // TTML should always have tt element.\n    if (!tt) {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.TEXT,\n          shaka.util.Error.Code.INVALID_XML);\n    } else {\n      frameRate = XmlUtils.getAttributeNS(tt, ttpNs, 'frameRate');\n      subFrameRate = XmlUtils.getAttributeNS(tt, ttpNs, 'subFrameRate');\n      frameRateMultiplier =\n          XmlUtils.getAttributeNS(tt, ttpNs, 'frameRateMultiplier');\n      tickRate = XmlUtils.getAttributeNS(tt, ttpNs, 'tickRate');\n      spaceStyle = tt.getAttribute('xml:space') || 'default';\n    }\n\n    if (spaceStyle != 'default' && spaceStyle != 'preserve') {\n      throw new shaka.util.Error(\n          shaka.util.Error.Severity.CRITICAL,\n          shaka.util.Error.Category.TEXT,\n          shaka.util.Error.Code.INVALID_XML);\n    }\n    let whitespaceTrim = spaceStyle == 'default';\n\n    let rateInfo = new TtmlTextParser.RateInfo_(\n        frameRate, subFrameRate, frameRateMultiplier, tickRate);\n\n    let styles = TtmlTextParser.getLeafNodes_(\n        tt.getElementsByTagName('styling')[0]);\n    let regionElements = TtmlTextParser.getLeafNodes_(\n        tt.getElementsByTagName('layout')[0]);\n    let cueRegions = [];\n    for (let i = 0; i < regionElements.length; i++) {\n      let cueRegion = TtmlTextParser.parseCueRegion_(\n          regionElements[i], styles);\n      if (cueRegion) {\n        cueRegions.push(cueRegion);\n      }\n    }\n\n    let textNodes = TtmlTextParser.getLeafNodes_(\n        tt.getElementsByTagName('body')[0]);\n\n    for (let i = 0; i < textNodes.length; i++) {\n      let cue = TtmlTextParser.parseCue_(textNodes[i],\n                                         time.periodStart,\n                                         rateInfo,\n                                         styles,\n                                         regionElements,\n                                         cueRegions,\n                                         whitespaceTrim);\n      if (cue) {\n        ret.push(cue);\n      }\n    }\n  }\n\n  return ret;\n};\n\n\n/**\n * @const\n * @private {!RegExp}\n * @example 50% 10%\n */\nshaka.text.TtmlTextParser.percentValues_ = /^(\\d{1,2}|100)% (\\d{1,2}|100)%$/;\n\n\n/**\n * @const\n * @private {!RegExp}\n * @example 100px\n */\nshaka.text.TtmlTextParser.unitValues_ = /^(\\d+px|\\d+em)$/;\n\n\n/**\n * @const\n * @private {!RegExp}\n * @example 100px\n */\nshaka.text.TtmlTextParser.pixelValues_ = /^(\\d+)px (\\d+)px$/;\n\n/**\n * @const\n * @private {!RegExp}\n * @example 00:00:40:07 (7 frames) or 00:00:40:07.1 (7 frames, 1 subframe)\n */\nshaka.text.TtmlTextParser.timeColonFormatFrames_ =\n    /^(\\d{2,}):(\\d{2}):(\\d{2}):(\\d{2})\\.?(\\d+)?$/;\n\n\n/**\n * @const\n * @private {!RegExp}\n * @example 00:00:40 or 00:40\n */\nshaka.text.TtmlTextParser.timeColonFormat_ = /^(?:(\\d{2,}):)?(\\d{2}):(\\d{2})$/;\n\n\n/**\n * @const\n * @private {!RegExp}\n * @example 01:02:43.0345555 or 02:43.03\n */\nshaka.text.TtmlTextParser.timeColonFormatMilliseconds_ =\n    /^(?:(\\d{2,}):)?(\\d{2}):(\\d{2}\\.\\d{2,})$/;\n\n\n/**\n * @const\n * @private {!RegExp}\n * @example 75f or 75.5f\n */\nshaka.text.TtmlTextParser.timeFramesFormat_ = /^(\\d*(?:\\.\\d*)?)f$/;\n\n\n/**\n * @const\n * @private {!RegExp}\n * @example 50t or 50.5t\n */\nshaka.text.TtmlTextParser.timeTickFormat_ = /^(\\d*(?:\\.\\d*)?)t$/;\n\n\n/**\n * @const\n * @private {!RegExp}\n * @example 3.45h, 3m or 4.20s\n */\nshaka.text.TtmlTextParser.timeHMSFormat_ =\n    new RegExp(['^(?:(\\\\d*(?:\\\\.\\\\d*)?)h)?',\n                '(?:(\\\\d*(?:\\\\.\\\\d*)?)m)?',\n                '(?:(\\\\d*(?:\\\\.\\\\d*)?)s)?',\n                '(?:(\\\\d*(?:\\\\.\\\\d*)?)ms)?$'].join(''));\n\n\n/**\n * @const\n * @private {!Object.<string, shaka.text.Cue.lineAlign>}\n */\nshaka.text.TtmlTextParser.textAlignToLineAlign_ = {\n  'left': shaka.text.Cue.lineAlign.START,\n  'center': shaka.text.Cue.lineAlign.CENTER,\n  'right': shaka.text.Cue.lineAlign.END,\n  'start': shaka.text.Cue.lineAlign.START,\n  'end': shaka.text.Cue.lineAlign.END,\n};\n\n\n/**\n * @const\n * @private {!Object.<string, shaka.text.Cue.positionAlign>}\n */\nshaka.text.TtmlTextParser.textAlignToPositionAlign_ = {\n  'left': shaka.text.Cue.positionAlign.LEFT,\n  'center': shaka.text.Cue.positionAlign.CENTER,\n  'right': shaka.text.Cue.positionAlign.RIGHT,\n};\n\n\n/**\n * Gets the leaf nodes of the xml node tree. Ignores the text, br elements\n * and the spans positioned inside paragraphs\n *\n * @param {Element} element\n * @return {!Array.<!Element>}\n * @private\n */\nshaka.text.TtmlTextParser.getLeafNodes_ = function(element) {\n  let result = [];\n  if (!element) {\n    return result;\n  }\n\n  let childNodes = element.childNodes;\n  for (let i = 0; i < childNodes.length; i++) {\n    // Currently we don't support styles applicable to span\n    // elements, so they are ignored.\n    let isSpanChildOfP = childNodes[i].nodeName == 'span' &&\n        element.nodeName == 'p';\n    if (childNodes[i].nodeType == Node.ELEMENT_NODE &&\n        childNodes[i].nodeName != 'br' && !isSpanChildOfP) {\n      // Get the leaves the child might contain.\n      goog.asserts.assert(childNodes[i] instanceof Element,\n                          'Node should be Element!');\n      let leafChildren = shaka.text.TtmlTextParser.getLeafNodes_(\n          /** @type {Element} */(childNodes[i]));\n      goog.asserts.assert(leafChildren.length > 0,\n                          'Only a null Element should return no leaves!');\n      result = result.concat(leafChildren);\n    }\n  }\n\n  // if no result at this point, the element itself must be a leaf.\n  if (!result.length) {\n    result.push(element);\n  }\n  return result;\n};\n\n\n/**\n * Inserts \\n where <br> tags are found.\n *\n * @param {!Node} element\n * @param {boolean} whitespaceTrim\n * @private\n */\nshaka.text.TtmlTextParser.addNewLines_ = function(element, whitespaceTrim) {\n  let childNodes = element.childNodes;\n\n  for (let i = 0; i < childNodes.length; i++) {\n    if (childNodes[i].nodeName == 'br' && i > 0) {\n      childNodes[i - 1].textContent += '\\n';\n    } else if (childNodes[i].childNodes.length > 0) {\n      shaka.text.TtmlTextParser.addNewLines_(childNodes[i], whitespaceTrim);\n    } else if (whitespaceTrim) {\n      // Trim leading and trailing whitespace.\n      let trimmed = childNodes[i].textContent.trim();\n      // Collapse multiple spaces into one.\n      trimmed = trimmed.replace(/\\s+/g, ' ');\n\n      childNodes[i].textContent = trimmed;\n    }\n  }\n};\n\n\n/**\n * Parses an Element into a TextTrackCue or VTTCue.\n *\n * @param {!Element} cueElement\n * @param {number} offset\n * @param {!shaka.text.TtmlTextParser.RateInfo_} rateInfo\n * @param {!Array.<!Element>} styles\n * @param {!Array.<!Element>} regionElements\n * @param {!Array.<!shaka.text.CueRegion>} cueRegions\n * @param {boolean} whitespaceTrim\n * @return {shaka.text.Cue}\n * @private\n */\nshaka.text.TtmlTextParser.parseCue_ = function(\n    cueElement, offset, rateInfo, styles, regionElements,\n    cueRegions, whitespaceTrim) {\n  // Disregard empty elements:\n  // TTML allows for empty elements like <div></div>.\n  // If cueElement has neither time attributes, nor\n  // non-whitespace text, don't try to make a cue out of it.\n  if (!cueElement.hasAttribute('begin') &&\n      !cueElement.hasAttribute('end') &&\n      /^\\s*$/.test(cueElement.textContent)) {\n    return null;\n  }\n\n  shaka.text.TtmlTextParser.addNewLines_(cueElement, whitespaceTrim);\n\n  // Get time.\n  let start = shaka.text.TtmlTextParser.parseTime_(\n      cueElement.getAttribute('begin'), rateInfo);\n  let end = shaka.text.TtmlTextParser.parseTime_(\n      cueElement.getAttribute('end'), rateInfo);\n  let duration = shaka.text.TtmlTextParser.parseTime_(\n      cueElement.getAttribute('dur'), rateInfo);\n  let payload = cueElement.textContent;\n\n  if (end == null && duration != null) {\n    end = start + duration;\n  }\n\n  if (start == null || end == null) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_TEXT_CUE);\n  }\n\n  start += offset;\n  end += offset;\n\n  let cue = new shaka.text.Cue(start, end, payload);\n\n  // Get other properties if available.\n  let regionElement = shaka.text.TtmlTextParser.getElementFromCollection_(\n      cueElement, 'region', regionElements);\n  if (regionElement && regionElement.getAttribute('xml:id')) {\n    let regionId = regionElement.getAttribute('xml:id');\n    let regionsWithId = cueRegions.filter(function(region) {\n      return region.id == regionId;\n    });\n    cue.region = regionsWithId[0];\n  }\n  shaka.text.TtmlTextParser.addStyle_(cue, cueElement, regionElement, styles);\n\n  return cue;\n};\n\n\n/**\n * Parses an Element into a TextTrackCue or VTTCue.\n *\n * @param {!Element} regionElement\n * @param {!Array.<!Element>} styles\n * @return {shaka.text.CueRegion}\n * @private\n */\nshaka.text.TtmlTextParser.parseCueRegion_ = function(regionElement, styles) {\n  const TtmlTextParser = shaka.text.TtmlTextParser;\n  let region = new shaka.text.CueRegion();\n  let id = regionElement.getAttribute('xml:id');\n  if (!id) {\n    shaka.log.warning('TtmlTextParser parser encountered a region with ' +\n                      'no id. Region will be ignored.');\n    return null;\n  }\n  region.id = id;\n\n  let results = null;\n  let percentage = null;\n  let extent = TtmlTextParser.getStyleAttributeFromRegion_(\n      regionElement, styles, 'extent');\n  if (extent) {\n    percentage = TtmlTextParser.percentValues_.exec(extent);\n    results = percentage || TtmlTextParser.pixelValues_.exec(extent);\n    if (results != null) {\n      region.width = Number(results[1]);\n      region.height = Number(results[2]);\n      region.widthUnits = percentage ?\n                         shaka.text.CueRegion.units.PERCENTAGE :\n                         shaka.text.CueRegion.units.PX;\n\n      region.heightUnits = percentage ?\n                         shaka.text.CueRegion.units.PERCENTAGE :\n                         shaka.text.CueRegion.units.PX;\n    }\n  }\n\n  let origin = TtmlTextParser.getStyleAttributeFromRegion_(\n      regionElement, styles, 'origin');\n  if (origin) {\n    percentage = TtmlTextParser.percentValues_.exec(origin);\n    results = percentage || TtmlTextParser.pixelValues_.exec(origin);\n    if (results != null) {\n      region.viewportAnchorX = Number(results[1]);\n      region.viewportAnchorY = Number(results[2]);\n      region.viewportAnchorUnits = percentage ?\n                shaka.text.CueRegion.units.PERCENTAGE :\n                shaka.text.CueRegion.units.PX;\n    }\n  }\n\n  return region;\n};\n\n/**\n * Adds applicable style properties to a cue.\n *\n * @param {!shaka.text.Cue} cue\n * @param {!Element} cueElement\n * @param {Element} region\n * @param {!Array.<!Element>} styles\n * @private\n */\nshaka.text.TtmlTextParser.addStyle_ = function(\n    cue, cueElement, region, styles) {\n  const TtmlTextParser = shaka.text.TtmlTextParser;\n  const Cue = shaka.text.Cue;\n\n  let direction = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'direction');\n  if (direction == 'rtl') {\n    cue.writingDirection = Cue.writingDirection.HORIZONTAL_RIGHT_TO_LEFT;\n  }\n\n  // Direction attribute specifies one-dimentional writing direction\n  // (left to right or right to left). Writing mode specifies that\n  // plus whether text is vertical or horizontal.\n  // They should not contradict each other. If they do, we give\n  // preference to writing mode.\n  let writingMode = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'writingMode');\n  if (writingMode == 'tb' || writingMode == 'tblr') {\n    cue.writingDirection = Cue.writingDirection.VERTICAL_LEFT_TO_RIGHT;\n  } else if (writingMode == 'tbrl') {\n    cue.writingDirection = Cue.writingDirection.VERTICAL_RIGHT_TO_LEFT;\n  } else if (writingMode == 'rltb' || writingMode == 'rl') {\n    cue.writingDirection = Cue.writingDirection.HORIZONTAL_RIGHT_TO_LEFT;\n  } else if (writingMode) {\n    cue.writingDirection = Cue.writingDirection.HORIZONTAL_LEFT_TO_RIGHT;\n  }\n\n  let align = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'textAlign');\n  if (align) {\n    cue.positionAlign = TtmlTextParser.textAlignToPositionAlign_[align];\n    cue.lineAlign = TtmlTextParser.textAlignToLineAlign_[align];\n\n    goog.asserts.assert(align.toUpperCase() in Cue.textAlign,\n                        align.toUpperCase() +\n                        ' Should be in Cue.textAlign values!');\n\n    cue.textAlign = Cue.textAlign[align.toUpperCase()];\n  }\n\n  let displayAlign = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'displayAlign');\n  if (displayAlign) {\n    goog.asserts.assert(displayAlign.toUpperCase() in Cue.displayAlign,\n                        displayAlign.toUpperCase() +\n                        ' Should be in Cue.displayAlign values!');\n    cue.displayAlign = Cue.displayAlign[displayAlign.toUpperCase()];\n  }\n\n  let color = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'color');\n  if (color) {\n    cue.color = color;\n  }\n\n  let backgroundColor = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'backgroundColor');\n  if (backgroundColor) {\n    cue.backgroundColor = backgroundColor;\n  }\n\n  let fontFamily = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'fontFamily');\n  if (fontFamily) {\n    cue.fontFamily = fontFamily;\n  }\n\n  let fontWeight = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'fontWeight');\n  if (fontWeight && fontWeight == 'bold') {\n    cue.fontWeight = Cue.fontWeight.BOLD;\n  }\n\n  let wrapOption = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'wrapOption');\n  if (wrapOption && wrapOption == 'noWrap') {\n    cue.wrapLine = false;\n  }\n\n  let lineHeight = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'lineHeight');\n  if (lineHeight && lineHeight.match(TtmlTextParser.unitValues_)) {\n    cue.lineHeight = lineHeight;\n  }\n\n  let fontSize = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'fontSize');\n  if (fontSize && fontSize.match(TtmlTextParser.unitValues_)) {\n    cue.fontSize = fontSize;\n  }\n\n  let fontStyle = TtmlTextParser.getStyleAttribute_(\n      cueElement, region, styles, 'fontStyle');\n  if (fontStyle) {\n    goog.asserts.assert(fontStyle.toUpperCase() in Cue.fontStyle,\n                        fontStyle.toUpperCase() +\n                        ' Should be in Cue.fontStyle values!');\n    cue.fontStyle = Cue.fontStyle[fontStyle.toUpperCase()];\n  }\n\n  // Text decoration is an array of values which can come both from the\n  // element's style or be inherited from elements' parent nodes. All of those\n  // values should be applied as long as they don't contradict each other. If\n  // they do, elements' own style gets preference.\n  let textDecorationRegion = TtmlTextParser.getStyleAttributeFromRegion_(\n      region, styles, 'textDecoration');\n  if (textDecorationRegion) {\n    TtmlTextParser.addTextDecoration_(cue, textDecorationRegion);\n  }\n\n  let textDecorationElement = TtmlTextParser.getStyleAttributeFromElement_(\n      cueElement, styles, 'textDecoration');\n  if (textDecorationElement) {\n    TtmlTextParser.addTextDecoration_(cue, textDecorationElement);\n  }\n};\n\n\n/**\n * Parses text decoration values and adds/removes them to/from the cue.\n *\n * @param {!shaka.text.Cue} cue\n * @param {string} decoration\n * @private\n */\nshaka.text.TtmlTextParser.addTextDecoration_ = function(cue, decoration) {\n  const Cue = shaka.text.Cue;\n  let values = decoration.split(' ');\n  for (let i = 0; i < values.length; i++) {\n    switch (values[i]) {\n      case 'underline':\n        if (!cue.textDecoration.includes(Cue.textDecoration.UNDERLINE)) {\n          cue.textDecoration.push(Cue.textDecoration.UNDERLINE);\n        }\n        break;\n      case 'noUnderline':\n        if (cue.textDecoration.includes(Cue.textDecoration.UNDERLINE)) {\n          shaka.util.ArrayUtils.remove(cue.textDecoration,\n                                       Cue.textDecoration.UNDERLINE);\n        }\n        break;\n      case 'lineThrough':\n        if (!cue.textDecoration.includes(Cue.textDecoration.LINE_THROUGH)) {\n          cue.textDecoration.push(Cue.textDecoration.LINE_THROUGH);\n        }\n        break;\n      case 'noLineThrough':\n        if (cue.textDecoration.includes(Cue.textDecoration.LINE_THROUGH)) {\n          shaka.util.ArrayUtils.remove(cue.textDecoration,\n                                       Cue.textDecoration.LINE_THROUGH);\n        }\n        break;\n      case 'overline':\n        if (!cue.textDecoration.includes(Cue.textDecoration.OVERLINE)) {\n          cue.textDecoration.push(Cue.textDecoration.OVERLINE);\n        }\n        break;\n      case 'noOverline':\n        if (cue.textDecoration.includes(Cue.textDecoration.OVERLINE)) {\n          shaka.util.ArrayUtils.remove(cue.textDecoration,\n                                       Cue.textDecoration.OVERLINE);\n        }\n        break;\n    }\n  }\n};\n\n\n/**\n * Finds a specified attribute on either the original cue element or its\n * associated region and returns the value if the attribute was found.\n *\n * @param {!Element} cueElement\n * @param {Element} region\n * @param {!Array.<!Element>} styles\n * @param {string} attribute\n * @return {?string}\n * @private\n */\nshaka.text.TtmlTextParser.getStyleAttribute_ = function(\n    cueElement, region, styles, attribute) {\n  // An attribute can be specified on region level or in a styling block\n  // associated with the region or original element.\n  const TtmlTextParser = shaka.text.TtmlTextParser;\n  let attr = TtmlTextParser.getStyleAttributeFromElement_(\n      cueElement, styles, attribute);\n  if (attr) {\n    return attr;\n  }\n\n  return TtmlTextParser.getStyleAttributeFromRegion_(\n      region, styles, attribute);\n};\n\n\n/**\n * Finds a specified attribute on the element's associated region\n * and returns the value if the attribute was found.\n *\n * @param {Element} region\n * @param {!Array.<!Element>} styles\n * @param {string} attribute\n * @return {?string}\n * @private\n */\nshaka.text.TtmlTextParser.getStyleAttributeFromRegion_ = function(\n    region, styles, attribute) {\n  const XmlUtils = shaka.util.XmlUtils;\n  const ttsNs = shaka.text.TtmlTextParser.styleNs_;\n\n  let regionChildren = shaka.text.TtmlTextParser.getLeafNodes_(region);\n  for (let i = 0; i < regionChildren.length; i++) {\n    let attr = XmlUtils.getAttributeNS(regionChildren[i], ttsNs, attribute);\n    if (attr) {\n      return attr;\n    }\n  }\n\n  let style = shaka.text.TtmlTextParser.getElementFromCollection_(\n      region, 'style', styles);\n  if (style) {\n    return XmlUtils.getAttributeNS(style, ttsNs, attribute);\n  }\n  return null;\n};\n\n\n/**\n * Finds a specified attribute on the cue element and returns the value\n * if the attribute was found.\n *\n * @param {!Element} cueElement\n * @param {!Array.<!Element>} styles\n * @param {string} attribute\n * @return {?string}\n * @private\n */\nshaka.text.TtmlTextParser.getStyleAttributeFromElement_ = function(\n    cueElement, styles, attribute) {\n  const XmlUtils = shaka.util.XmlUtils;\n  const ttsNs = shaka.text.TtmlTextParser.styleNs_;\n\n  let getElementFromCollection_ =\n      shaka.text.TtmlTextParser.getElementFromCollection_;\n  let style = getElementFromCollection_(cueElement, 'style', styles);\n  if (style) {\n    return XmlUtils.getAttributeNS(style, ttsNs, attribute);\n  }\n  return null;\n};\n\n\n/**\n * Selects an item from |collection| whose id matches |attributeName|\n * from |element|.\n *\n * @param {Element} element\n * @param {string} attributeName\n * @param {!Array.<Element>} collection\n * @return {Element}\n * @private\n */\nshaka.text.TtmlTextParser.getElementFromCollection_ = function(\n    element, attributeName, collection) {\n  if (!element || collection.length < 1) {\n    return null;\n  }\n  let item = null;\n  let itemName = shaka.text.TtmlTextParser.getInheritedAttribute_(\n      element, attributeName);\n  if (itemName) {\n    for (let i = 0; i < collection.length; i++) {\n      if (collection[i].getAttribute('xml:id') == itemName) {\n        item = collection[i];\n        break;\n      }\n    }\n  }\n\n  return item;\n};\n\n\n/**\n * Traverses upwards from a given node until a given attribute is found.\n *\n * @param {!Element} element\n * @param {string} attributeName\n * @return {?string}\n * @private\n */\nshaka.text.TtmlTextParser.getInheritedAttribute_ = function(\n    element, attributeName) {\n  let ret = null;\n  while (element) {\n    ret = element.getAttribute(attributeName);\n    if (ret) {\n      break;\n    }\n\n    // Element.parentNode can lead to XMLDocument, which is not an Element and\n    // has no getAttribute().\n    let parentNode = element.parentNode;\n    if (parentNode instanceof Element) {\n      element = parentNode;\n    } else {\n      break;\n    }\n  }\n  return ret;\n};\n\n\n/**\n * Parses a TTML time from the given word.\n *\n * @param {string} text\n * @param {!shaka.text.TtmlTextParser.RateInfo_} rateInfo\n * @return {?number}\n * @private\n */\nshaka.text.TtmlTextParser.parseTime_ = function(text, rateInfo) {\n  let ret = null;\n  const TtmlTextParser = shaka.text.TtmlTextParser;\n\n  if (TtmlTextParser.timeColonFormatFrames_.test(text)) {\n    ret = TtmlTextParser.parseColonTimeWithFrames_(rateInfo, text);\n  } else if (TtmlTextParser.timeColonFormat_.test(text)) {\n    ret = TtmlTextParser.parseTimeFromRegex_(\n        TtmlTextParser.timeColonFormat_, text);\n  } else if (TtmlTextParser.timeColonFormatMilliseconds_.test(text)) {\n    ret = TtmlTextParser.parseTimeFromRegex_(\n        TtmlTextParser.timeColonFormatMilliseconds_, text);\n  } else if (TtmlTextParser.timeFramesFormat_.test(text)) {\n    ret = TtmlTextParser.parseFramesTime_(rateInfo, text);\n  } else if (TtmlTextParser.timeTickFormat_.test(text)) {\n    ret = TtmlTextParser.parseTickTime_(rateInfo, text);\n  } else if (TtmlTextParser.timeHMSFormat_.test(text)) {\n    ret = TtmlTextParser.parseTimeFromRegex_(\n        TtmlTextParser.timeHMSFormat_, text);\n  }\n\n  return ret;\n};\n\n\n/**\n * Parses a TTML time in frame format.\n *\n * @param {!shaka.text.TtmlTextParser.RateInfo_} rateInfo\n * @param {string} text\n * @return {?number}\n * @private\n */\nshaka.text.TtmlTextParser.parseFramesTime_ = function(rateInfo, text) {\n  // 75f or 75.5f\n  let results = shaka.text.TtmlTextParser.timeFramesFormat_.exec(text);\n  let frames = Number(results[1]);\n\n  return frames / rateInfo.frameRate;\n};\n\n\n/**\n * Parses a TTML time in tick format.\n *\n * @param {!shaka.text.TtmlTextParser.RateInfo_} rateInfo\n * @param {string} text\n * @return {?number}\n * @private\n */\nshaka.text.TtmlTextParser.parseTickTime_ = function(rateInfo, text) {\n  // 50t or 50.5t\n  let results = shaka.text.TtmlTextParser.timeTickFormat_.exec(text);\n  let ticks = Number(results[1]);\n\n  return ticks / rateInfo.tickRate;\n};\n\n\n/**\n * Parses a TTML colon formatted time containing frames.\n *\n * @param {!shaka.text.TtmlTextParser.RateInfo_} rateInfo\n * @param {string} text\n * @return {?number}\n * @private\n */\nshaka.text.TtmlTextParser.parseColonTimeWithFrames_ = function(\n    rateInfo, text) {\n  // 01:02:43:07 ('07' is frames) or 01:02:43:07.1 (subframes)\n  let results = shaka.text.TtmlTextParser.timeColonFormatFrames_.exec(text);\n\n  let hours = Number(results[1]);\n  let minutes = Number(results[2]);\n  let seconds = Number(results[3]);\n  let frames = Number(results[4]);\n  let subframes = Number(results[5]) || 0;\n\n  frames += subframes / rateInfo.subFrameRate;\n  seconds += frames / rateInfo.frameRate;\n\n  return seconds + (minutes * 60) + (hours * 3600);\n};\n\n\n/**\n * Parses a TTML time with a given regex. Expects regex to be some\n * sort of a time-matcher to match hours, minutes, seconds and milliseconds\n *\n * @param {!RegExp} regex\n * @param {string} text\n * @return {?number}\n * @private\n */\nshaka.text.TtmlTextParser.parseTimeFromRegex_ = function(regex, text) {\n  let results = regex.exec(text);\n  if (results == null || results[0] == '') {\n    return null;\n  }\n  // This capture is optional, but will still be in the array as undefined,\n  // in which case it is 0.\n  let hours = Number(results[1]) || 0;\n  let minutes = Number(results[2]) || 0;\n  let seconds = Number(results[3]) || 0;\n  let miliseconds = Number(results[4]) || 0;\n\n  return (miliseconds / 1000) + seconds + (minutes * 60) + (hours * 3600);\n};\n\n\n/**\n * Contains information about frame/subframe rate\n * and frame rate multiplier for time in frame format.\n *\n * @example 01:02:03:04(4 frames) or 01:02:03:04.1(4 frames, 1 subframe)\n * @param {?string} frameRate\n * @param {?string} subFrameRate\n * @param {?string} frameRateMultiplier\n * @param {?string} tickRate\n * @constructor\n * @struct\n * @private\n */\nshaka.text.TtmlTextParser.RateInfo_ = function(\n    frameRate, subFrameRate, frameRateMultiplier, tickRate) {\n  /**\n   * @type {number}\n   */\n  this.frameRate = Number(frameRate) || 30;\n\n  /**\n   * @type {number}\n   */\n  this.subFrameRate = Number(subFrameRate) || 1;\n\n  /**\n   * @type {number}\n   */\n  this.tickRate = Number(tickRate);\n  if (this.tickRate == 0) {\n    if (frameRate) {\n      this.tickRate = this.frameRate * this.subFrameRate;\n    } else {\n      this.tickRate = 1;\n    }\n  }\n\n  if (frameRateMultiplier) {\n    let multiplierResults = /^(\\d+) (\\d+)$/g.exec(frameRateMultiplier);\n    if (multiplierResults) {\n      let numerator = multiplierResults[1];\n      let denominator = multiplierResults[2];\n      let multiplierNum = numerator / denominator;\n      this.frameRate *= multiplierNum;\n    }\n  }\n};\n\n\nshaka.text.TextEngine.registerParser(\n    'application/ttml+xml',\n    shaka.text.TtmlTextParser);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.text.Mp4TtmlParser');\n\ngoog.require('shaka.text.TextEngine');\ngoog.require('shaka.text.TtmlTextParser');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.Mp4Parser');\n\n\n/**\n * @struct\n * @constructor\n * @implements {shaka.extern.TextParser}\n */\nshaka.text.Mp4TtmlParser = function() {\n  /**\n   * @type {!shaka.extern.TextParser}\n   * @private\n   */\n  this.parser_ = new shaka.text.TtmlTextParser();\n};\n\n\n/** @override **/\nshaka.text.Mp4TtmlParser.prototype.parseInit = function(data) {\n  const Mp4Parser = shaka.util.Mp4Parser;\n\n  let sawSTPP = false;\n\n  new Mp4Parser()\n      .box('moov', Mp4Parser.children)\n      .box('trak', Mp4Parser.children)\n      .box('mdia', Mp4Parser.children)\n      .box('minf', Mp4Parser.children)\n      .box('stbl', Mp4Parser.children)\n      .fullBox('stsd', Mp4Parser.sampleDescription)\n      .box('stpp', function(box) {\n        sawSTPP = true;\n        box.parser.stop();\n      }).parse(data);\n\n  if (!sawSTPP) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_MP4_TTML);\n  }\n};\n\n\n/** @override **/\nshaka.text.Mp4TtmlParser.prototype.parseMedia = function(data, time) {\n  const Mp4Parser = shaka.util.Mp4Parser;\n\n  let sawMDAT = false;\n  let payload = [];\n\n  new Mp4Parser()\n      .box('mdat', Mp4Parser.allData(function(data) {\n        sawMDAT = true;\n        // Join this to any previous payload, in case the mp4 has multiple\n        // mdats.\n        payload = payload.concat(this.parser_.parseMedia(data, time));\n      }.bind(this))).parse(data);\n\n  if (!sawMDAT) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_MP4_TTML);\n  }\n\n  return payload;\n};\n\n\nshaka.text.TextEngine.registerParser(\n    'application/mp4; codecs=\"stpp\"',\n    shaka.text.Mp4TtmlParser);\nshaka.text.TextEngine.registerParser(\n    'application/mp4; codecs=\"stpp.TTML.im1t\"',\n    shaka.text.Mp4TtmlParser);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.text.VttTextParser');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.text.Cue');\ngoog.require('shaka.text.CueRegion');\ngoog.require('shaka.text.TextEngine');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.StringUtils');\ngoog.require('shaka.util.TextParser');\n\n\n/**\n * @constructor\n * @implements {shaka.extern.TextParser}\n */\nshaka.text.VttTextParser = function() {};\n\n\n/** @override */\nshaka.text.VttTextParser.prototype.parseInit = function(data) {\n  goog.asserts.assert(false, 'VTT does not have init segments');\n};\n\n\n/**\n * @override\n * @throws {shaka.util.Error}\n */\nshaka.text.VttTextParser.prototype.parseMedia = function(data, time) {\n  const VttTextParser = shaka.text.VttTextParser;\n  // Get the input as a string.  Normalize newlines to \\n.\n  let str = shaka.util.StringUtils.fromUTF8(data);\n  str = str.replace(/\\r\\n|\\r(?=[^\\n]|$)/gm, '\\n');\n  let blocks = str.split(/\\n{2,}/m);\n\n  if (!/^WEBVTT($|[ \\t\\n])/m.test(blocks[0])) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_TEXT_HEADER);\n  }\n\n  let offset = time.segmentStart;\n  if (offset == null) {\n    // This is a probe, such as the HLS parser makes.  We don't know the segment\n    // start time, so we will use the X-TIMESTAMP-MAP header, if present, to get\n    // the segment start time.  By only doing this when segmentStart == null, we\n    // protect against rollover in the MPEGTS field.\n\n    // In case the attempt below doesn't work out, assume an offset of 0.\n    offset = 0;\n\n    if (blocks[0].includes('X-TIMESTAMP-MAP')) {\n      // https://bit.ly/2K92l7y\n      // The 'X-TIMESTAMP-MAP' header is used in HLS to align text with\n      // the rest of the media.\n      // The header format is 'X-TIMESTAMP-MAP=MPEGTS:n,LOCAL:m'\n      // (the attributes can go in any order)\n      // where n is MPEG-2 time and m is cue time it maps to.\n      // For example 'X-TIMESTAMP-MAP=LOCAL:00:00:00.000,MPEGTS:900000'\n      // means an offset of 10 seconds\n      // 900000/MPEG_TIMESCALE - cue time.\n      let cueTimeMatch =\n          blocks[0].match(/LOCAL:((?:(\\d{1,}):)?(\\d{2}):(\\d{2})\\.(\\d{3}))/m);\n\n      let mpegTimeMatch = blocks[0].match(/MPEGTS:(\\d+)/m);\n      if (cueTimeMatch && mpegTimeMatch) {\n        let parser = new shaka.util.TextParser(cueTimeMatch[1]);\n        let cueTime = shaka.text.VttTextParser.parseTime_(parser);\n        let mpegTime = Number(mpegTimeMatch[1]);\n        const mpegTimescale = shaka.text.VttTextParser.MPEG_TIMESCALE_;\n        // Apple-encoded HLS content uses absolute timestamps, so assume the\n        // presence of the map tag means the content uses absolute timestamps.\n        offset = time.periodStart + (mpegTime / mpegTimescale - cueTime);\n      }\n    }\n  }\n\n  // Parse VTT regions.\n  /* !Array.<!shaka.extern.CueRegion> */\n  let regions = [];\n  let lines = blocks[0].split('\\n');\n  for (let i = 1; i < lines.length; i++) {\n    if (/^Region:/.test(lines[i])) {\n      let region = VttTextParser.parseRegion_(lines[i]);\n      regions.push(region);\n    }\n  }\n\n  // Parse cues.\n  let ret = [];\n  for (let i = 1; i < blocks.length; i++) {\n    lines = blocks[i].split('\\n');\n    let cue = VttTextParser.parseCue_(lines, offset, regions);\n    if (cue) {\n      ret.push(cue);\n    }\n    }\n\n  return ret;\n};\n\n\n/**\n * Parses a string into a Region object.\n *\n * @param {string} text\n * @return {!shaka.extern.CueRegion}\n * @private\n */\nshaka.text.VttTextParser.parseRegion_ = function(text) {\n  const VttTextParser = shaka.text.VttTextParser;\n  let parser = new shaka.util.TextParser(text);\n  // The region string looks like this:\n  // Region: id=fred width=50% lines=3 regionanchor=0%,100%\n  //         viewportanchor=10%,90% scroll=up\n  let region = new shaka.text.CueRegion();\n\n  // Skip 'Region:'\n  parser.readWord();\n  parser.skipWhitespace();\n\n  let word = parser.readWord();\n  while (word) {\n    if (!VttTextParser.parseRegionSetting_(region, word)) {\n      shaka.log.warning('VTT parser encountered an invalid VTTRegion setting: ',\n                        word,\n                        ' The setting will be ignored.');\n    }\n    parser.skipWhitespace();\n    word = parser.readWord();\n  }\n\n  return region;\n};\n\n\n/**\n * Parses a text block into a Cue object.\n *\n * @param {!Array.<string>} text\n * @param {number} timeOffset\n * @param {!Array.<!shaka.extern.CueRegion>} regions\n * @return {shaka.text.Cue}\n * @private\n */\nshaka.text.VttTextParser.parseCue_ = function(text, timeOffset, regions) {\n  const VttTextParser = shaka.text.VttTextParser;\n\n  // Skip empty blocks.\n  if (text.length == 1 && !text[0]) {\n    return null;\n  }\n\n  // Skip comment blocks.\n  if (/^NOTE($|[ \\t])/.test(text[0])) {\n    return null;\n  }\n\n  // Skip style blocks.\n  if (text[0] == 'STYLE') {\n    return null;\n  }\n\n  let id = null;\n  if (!text[0].includes('--\u003e')) {\n    id = text[0];\n    text.splice(0, 1);\n  }\n\n  // Parse the times.\n  let parser = new shaka.util.TextParser(text[0]);\n  let start = VttTextParser.parseTime_(parser);\n  let expect = parser.readRegex(/[ \\t]+--\u003e[ \\t]+/g);\n  let end = VttTextParser.parseTime_(parser);\n\n  if (start == null || expect == null || end == null) {\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_TEXT_CUE);\n  }\n\n  start += timeOffset;\n  end += timeOffset;\n\n  // Get the payload.\n  let payload = text.slice(1).join('\\n').trim();\n\n  let cue = new shaka.text.Cue(start, end, payload);\n\n  // Parse optional settings.\n  parser.skipWhitespace();\n  let word = parser.readWord();\n  while (word) {\n    if (!VttTextParser.parseCueSetting(cue, word, regions)) {\n      shaka.log.warning('VTT parser encountered an invalid VTT setting: ',\n                        word,\n                        ' The setting will be ignored.');\n    }\n    parser.skipWhitespace();\n    word = parser.readWord();\n  }\n\n  if (id != null) {\n    cue.id = id;\n  }\n  return cue;\n};\n\n\n/**\n * Parses a WebVTT setting from the given word.\n *\n * @param {!shaka.text.Cue} cue\n * @param {string} word\n * @param {!Array.<!shaka.text.CueRegion>} regions\n * @return {boolean} True on success.\n */\nshaka.text.VttTextParser.parseCueSetting = function(cue, word, regions) {\n  const VttTextParser = shaka.text.VttTextParser;\n  let results = null;\n  if ((results = /^align:(start|middle|center|end|left|right)$/.exec(word))) {\n    VttTextParser.setTextAlign_(cue, results[1]);\n  } else if ((results = /^vertical:(lr|rl)$/.exec(word))) {\n    VttTextParser.setVerticalWritingDirection_(cue, results[1]);\n  } else if ((results = /^size:([\\d.]+)%$/.exec(word))) {\n    cue.size = Number(results[1]);\n  } else if ((results =\n      /^position:([\\d.]+)%(?:,(line-left|line-right|center|start|end))?$/\n      .exec(word))) {\n    cue.position = Number(results[1]);\n    if (results[2]) {\n      VttTextParser.setPositionAlign_(cue, results[2]);\n    }\n  } else if ((results = /^region:(.*)$/.exec(word))) {\n    let region = VttTextParser.getRegionById_(regions, results[1]);\n    if (region) {\n      cue.region = region;\n    }\n  } else {\n    return VttTextParser.parsedLineValueAndInterpretation_(cue, word);\n  }\n\n  return true;\n};\n\n\n/**\n *\n * @param {!Array.<!shaka.text.CueRegion>} regions\n * @param {string} id\n * @return {?shaka.text.CueRegion}\n * @private\n */\nshaka.text.VttTextParser.getRegionById_ = function(regions, id) {\n  let regionsWithId = regions.filter(function(region) {\n    return region.id == id;\n  });\n  if (!regionsWithId.length) {\n    shaka.log.warning('VTT parser could not find a region with id: ',\n                  id,\n                  ' The region will be ignored.');\n    return null;\n  }\n  goog.asserts.assert(regionsWithId.length == 1,\n                      'VTTRegion ids should be unique!');\n\n  return regionsWithId[0];\n};\n\n\n/**\n * Parses a WebVTTRegion setting from the given word.\n *\n * @param {!shaka.text.CueRegion} region\n * @param {string} word\n * @return {boolean} True on success.\n * @private\n */\nshaka.text.VttTextParser.parseRegionSetting_ = function(region, word) {\n  let results = null;\n  if ((results = /^id=(.*)$/.exec(word))) {\n    region.id = results[1];\n  } else if ((results = /^width=(\\d{1,2}|100)%$/.exec(word))) {\n    region.width = Number(results[1]);\n  } else if ((results = /^lines=(\\d+)$/.exec(word))) {\n    region.height = Number(results[1]);\n    region.heightUnits = shaka.text.CueRegion.units.LINES;\n  } else if ((results = /^regionanchor=(\\d{1,2}|100)%,(\\d{1,2}|100)%$/\n            .exec(word))) {\n    region.regionAnchorX = Number(results[1]);\n    region.regionAnchorY = Number(results[2]);\n  } else if ((results = /^viewportanchor=(\\d{1,2}|100)%,(\\d{1,2}|100)%$/\n            .exec(word))) {\n    region.viewportAnchorX = Number(results[1]);\n    region.viewportAnchorY = Number(results[2]);\n  } else if ((results = /^scroll=up$/.exec(word))) {\n    region.scroll = shaka.text.CueRegion.scrollMode.UP;\n  } else {\n    return false;\n  }\n\n  return true;\n};\n\n\n/**\n * @param {!shaka.text.Cue} cue\n * @param {string} align\n * @private\n */\nshaka.text.VttTextParser.setTextAlign_ = function(cue, align) {\n  const Cue = shaka.text.Cue;\n  if (align == 'middle') {\n    cue.textAlign = Cue.textAlign.CENTER;\n  } else {\n    goog.asserts.assert(align.toUpperCase() in Cue.textAlign,\n                        align.toUpperCase() +\n                        ' Should be in Cue.textAlign values!');\n\n    cue.textAlign = Cue.textAlign[align.toUpperCase()];\n  }\n};\n\n\n/**\n * @param {!shaka.text.Cue} cue\n * @param {string} align\n * @private\n */\nshaka.text.VttTextParser.setPositionAlign_ = function(cue, align) {\n  const Cue = shaka.text.Cue;\n  if (align == 'line-left' || align == 'start') {\n    cue.positionAlign = Cue.positionAlign.LEFT;\n  } else if (align == 'line-right' || align == 'end') {\n    cue.positionAlign = Cue.positionAlign.RIGHT;\n  } else {\n    cue.positionAlign = Cue.positionAlign.CENTER;\n  }\n};\n\n\n/**\n * @param {!shaka.text.Cue} cue\n * @param {string} value\n * @private\n */\nshaka.text.VttTextParser.setVerticalWritingDirection_ = function(cue, value) {\n  const Cue = shaka.text.Cue;\n  if (value == 'lr') {\n    cue.writingDirection = Cue.writingDirection.VERTICAL_LEFT_TO_RIGHT;\n  } else {\n    cue.writingDirection = Cue.writingDirection.VERTICAL_RIGHT_TO_LEFT;\n  }\n};\n\n\n/**\n * @param {!shaka.text.Cue} cue\n * @param {string} word\n * @return {boolean}\n * @private\n */\nshaka.text.VttTextParser.parsedLineValueAndInterpretation_ =\n    function(cue, word) {\n  const Cue = shaka.text.Cue;\n  let results = null;\n  if ((results = /^line:([\\d.]+)%(?:,(start|end|center))?$/.exec(word))) {\n    cue.lineInterpretation = Cue.lineInterpretation.PERCENTAGE;\n    cue.line = Number(results[1]);\n    if (results[2]) {\n      goog.asserts.assert(results[2].toUpperCase() in Cue.lineAlign,\n                          results[2].toUpperCase() +\n                          ' Should be in Cue.lineAlign values!');\n      cue.lineAlign = Cue.lineAlign[results[2].toUpperCase()];\n    }\n  } else if ((results = /^line:(-?\\d+)(?:,(start|end|center))?$/.exec(word))) {\n    cue.lineInterpretation = Cue.lineInterpretation.LINE_NUMBER;\n    cue.line = Number(results[1]);\n    if (results[2]) {\n      goog.asserts.assert(results[2].toUpperCase() in Cue.lineAlign,\n                          results[2].toUpperCase() +\n                          ' Should be in Cue.lineAlign values!');\n      cue.lineAlign = Cue.lineAlign[results[2].toUpperCase()];\n    }\n  } else {\n    return false;\n  }\n\n  return true;\n};\n\n\n/**\n * Parses a WebVTT time from the given parser.\n *\n * @param {!shaka.util.TextParser} parser\n * @return {?number}\n * @private\n */\nshaka.text.VttTextParser.parseTime_ = function(parser) {\n  // 00:00.000 or 00:00:00.000 or 0:00:00.000\n  let results = parser.readRegex(/(?:(\\d{1,}):)?(\\d{2}):(\\d{2})\\.(\\d{3})/g);\n  if (results == null) {\n    return null;\n  }\n  // This capture is optional, but will still be in the array as undefined,\n  // in which case it is 0.\n  let hours = Number(results[1]) || 0;\n  let minutes = Number(results[2]);\n  let seconds = Number(results[3]);\n  let miliseconds = Number(results[4]);\n  if (minutes > 59 || seconds > 59) {\n    return null;\n  }\n\n  return (miliseconds / 1000) + seconds + (minutes * 60) + (hours * 3600);\n};\n\n\n/**\n * @const {number}\n * @private\n */\nshaka.text.VttTextParser.MPEG_TIMESCALE_ = 90000;\n\nshaka.text.TextEngine.registerParser(\n    'text/vtt',\n    shaka.text.VttTextParser);\n\nshaka.text.TextEngine.registerParser(\n    'text/vtt; codecs=\"vtt\"',\n    shaka.text.VttTextParser);\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ngoog.provide('shaka.text.Mp4VttParser');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.log');\ngoog.require('shaka.text.Cue');\ngoog.require('shaka.text.TextEngine');\ngoog.require('shaka.text.VttTextParser');\ngoog.require('shaka.util.DataViewReader');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.Functional');\ngoog.require('shaka.util.Mp4Parser');\ngoog.require('shaka.util.StringUtils');\ngoog.require('shaka.util.TextParser');\n\n\n/**\n * @struct\n * @constructor\n * @implements {shaka.extern.TextParser}\n */\nshaka.text.Mp4VttParser = function() {\n  /**\n   * The current time scale used by the VTT parser.\n   *\n   * @type {?number}\n   * @private\n   */\n  this.timescale_ = null;\n};\n\n\n/** @override */\nshaka.text.Mp4VttParser.prototype.parseInit = function(data) {\n  const Mp4Parser = shaka.util.Mp4Parser;\n\n  let sawWVTT = false;\n\n  new Mp4Parser()\n      .box('moov', Mp4Parser.children)\n      .box('trak', Mp4Parser.children)\n      .box('mdia', Mp4Parser.children)\n      .fullBox('mdhd', function(box) {\n        goog.asserts.assert(\n            box.version == 0 || box.version == 1,\n            'MDHD version can only be 0 or 1');\n        if (box.version == 0) {\n          box.reader.skip(4); // Skip \"creation_time\".\n          box.reader.skip(4); // Skip \"modification_time\".\n          this.timescale_ = box.reader.readUint32();\n          box.reader.skip(4); // Skip \"duration\".\n        } else {\n          box.reader.skip(8); // Skip \"creation_time\".\n          box.reader.skip(8); // Skip \"modification_time\".\n          this.timescale_ = box.reader.readUint32();\n          box.reader.skip(8); // Skip \"duration\".\n        }\n        box.reader.skip(4); // Skip \"pad\", \"language\", and \"pre-defined\".\n      }.bind(this))\n      .box('minf', Mp4Parser.children)\n      .box('stbl', Mp4Parser.children)\n      .fullBox('stsd', Mp4Parser.sampleDescription)\n      .box('wvtt', function(box) {\n        // A valid vtt init segment, though we have no actual subtitles yet.\n        sawWVTT = true;\n      }).parse(data);\n\n  if (!this.timescale_) {\n    // Missing timescale for VTT content. It should be located in the MDHD.\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_MP4_VTT);\n  }\n\n  if (!sawWVTT) {\n    // A WVTT box should have been seen (a valid vtt init segment with no\n    // actual subtitles).\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_MP4_VTT);\n  }\n};\n\n\n/** @override */\nshaka.text.Mp4VttParser.prototype.parseMedia = function(data, time) {\n  if (!this.timescale_) {\n    // Missing timescale for VTT content. We should have seen the init segment.\n    shaka.log.error('No init segment for MP4+VTT!');\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_MP4_VTT);\n  }\n\n  const Mp4VttParser = shaka.text.Mp4VttParser;\n  const Mp4Parser = shaka.util.Mp4Parser;\n\n  let baseTime = 0;\n  /** @type {!Array.<shaka.text.Mp4VttParser.TimeSegment>} */\n  let presentations = [];\n  /** @type {Uint8Array} */\n  let rawPayload;\n  /** @type {!Array.<shaka.text.Cue>} */\n  let cues = [];\n\n  let sawTFDT = false;\n  let sawTRUN = false;\n  let sawMDAT = false;\n  let defaultDuration = null;\n\n  new Mp4Parser()\n      .box('moof', Mp4Parser.children)\n      .box('traf', Mp4Parser.children)\n      .fullBox('tfdt', function(box) {\n        sawTFDT = true;\n        goog.asserts.assert(\n            box.version == 0 || box.version == 1,\n            'TFDT version can only be 0 or 1');\n        baseTime = (box.version == 0) ?\n            box.reader.readUint32() :\n            box.reader.readUint64();\n      })\n      .fullBox('tfhd', function(box) {\n        goog.asserts.assert(\n            box.flags != null,\n            'A TFHD box should have a valid flags value');\n        defaultDuration = Mp4VttParser.parseTFHD_(\n            box.flags, box.reader);\n      })\n      .fullBox('trun', function(box) {\n        sawTRUN = true;\n        goog.asserts.assert(\n            box.version != null,\n            'A TRUN box should have a valid version value');\n        goog.asserts.assert(\n            box.flags != null,\n            'A TRUN box should have a valid flags value');\n        presentations = Mp4VttParser.parseTRUN_(\n            box.version, box.flags, box.reader);\n      })\n      .box('mdat', Mp4Parser.allData(function(data) {\n        goog.asserts.assert(!sawMDAT,\n            'VTT cues in mp4 with multiple MDAT are not currently supported!');\n        sawMDAT = true;\n        rawPayload = data;\n      })).parse(data);\n\n  if (!sawMDAT && !sawTFDT && !sawTRUN) {\n    // A required box is missing.\n    throw new shaka.util.Error(\n        shaka.util.Error.Severity.CRITICAL,\n        shaka.util.Error.Category.TEXT,\n        shaka.util.Error.Code.INVALID_MP4_VTT);\n  }\n\n  let currentTime = baseTime;\n\n  let dataView = new DataView(\n      rawPayload.buffer, rawPayload.byteOffset, rawPayload.byteLength);\n  /** @type {!shaka.util.DataViewReader} */\n  let reader = new shaka.util.DataViewReader(\n      dataView, shaka.util.DataViewReader.Endianness.BIG_ENDIAN);\n\n  presentations.forEach((presentation) => {\n    // If one presentation corresponds to multiple payloads, it is assumed\n    // that all of those payloads have the same start time and duration.\n    let duration = presentation.duration || defaultDuration;\n    let startTime = presentation.timeOffset ?\n                    baseTime + presentation.timeOffset :\n                    currentTime;\n    currentTime = startTime + (duration || 0);\n\n    // Read samples until it adds up to the given size.\n    let totalSize = 0;\n    do {\n      // Read the payload size.\n      let payloadSize = reader.readUint32();\n      totalSize += payloadSize;\n\n      // Skip the type.\n      let payloadType = reader.readUint32();\n      let payloadName = shaka.util.Mp4Parser.typeToString(payloadType);\n\n      // Read the data payload.\n      /** @type {Uint8Array} */\n      let payload = null;\n      if (payloadName == 'vttc') {\n        if (payloadSize > 8) {\n          payload = reader.readBytes(payloadSize - 8);\n        }\n      } else if (payloadName == 'vtte') {\n        // It's a vtte, which is a vtt cue that is empty. Ignore any data that\n        // does exist.\n        reader.skip(payloadSize - 8);\n      } else {\n        shaka.log.error('Unknown box ' + payloadName + '! Skipping!');\n        reader.skip(payloadSize - 8);\n      }\n\n      if (duration) {\n        if (payload) {\n          cues.push(shaka.text.Mp4VttParser.parseVTTC_(\n              payload,\n              time.periodStart + startTime / this.timescale_,\n              time.periodStart + currentTime / this.timescale_));\n        }\n      } else {\n        shaka.log.error('WVTT sample duration unknown, and no default found!');\n      }\n\n      goog.asserts.assert(\n          !presentation.sampleSize || totalSize <= presentation.sampleSize,\n          'The samples do not fit evenly into the sample sizes given in the ' +\n          'TRUN box!');\n\n      // If no sampleSize was specified, it's assumed that this presentation\n      // corresponds to only a single cue.\n    } while (presentation.sampleSize && (totalSize < presentation.sampleSize));\n  });\n\n  goog.asserts.assert(\n      !reader.hasMoreData(),\n      'MDAT which contain VTT cues and non-VTT data are not currently ' +\n      'supported!');\n\n  return /** @type {!Array.<!shaka.extern.Cue>} */ (\n      cues.filter(shaka.util.Functional.isNotNull));\n};\n\n\n/**\n * @typedef {{\n *    duration: ?number,\n *    sampleSize: ?number,\n *    timeOffset: ?number\n *  }}\n *\n * @property {?number} duration\n *    The length of the segment in timescale units.\n * @property {?number} sampleSize\n *    The size of the segment in bytes.\n * @property {?number} timeOffset\n *    The time since the start of the segment in timescale units. Time\n *    offset is based of the start of the segment. If this value is\n *    missing, the accumated durations preceeding this time segment will\n *    be used to create the start time.\n */\nshaka.text.Mp4VttParser.TimeSegment;\n\n\n/**\n * @param {number} flags\n * @param {!shaka.util.DataViewReader} reader\n * @return {?number} The default_sample_duration field, if present.\n * @private\n */\nshaka.text.Mp4VttParser.parseTFHD_ = function(flags, reader) {\n  // Skip \"track_ID\".\n  reader.skip(4);\n\n  // Skip \"base_data_offset\" if present.\n  if (flags & 0x000001) { reader.skip(8); }\n\n  // Skip \"sample_description_index\" if present.\n  if (flags & 0x000002) { reader.skip(4); }\n\n  // Read and return \"default_sample_duration\" if present.\n  if (flags & 0x000008) { return reader.readUint32(); }\n\n  // There is no \"default_sample_duration\".\n  return null;\n};\n\n\n/**\n * @param {number} version\n * @param {number} flags\n * @param {!shaka.util.DataViewReader} reader\n * @return {!Array.<shaka.text.Mp4VttParser.TimeSegment>}\n * @private\n */\nshaka.text.Mp4VttParser.parseTRUN_ = function(version, flags, reader) {\n  let sampleCount = reader.readUint32();\n\n  // Skip \"data_offset\" if present.\n  if (flags & 0x000001) { reader.skip(4); }\n\n  // Skip \"first_sample_flags\" if present.\n  if (flags & 0x000004) { reader.skip(4); }\n\n  let samples = [];\n\n  for (let sampleIndex = 0; sampleIndex < sampleCount; sampleIndex++) {\n    /** @type {shaka.text.Mp4VttParser.TimeSegment} */\n    let sample = {\n      duration: null,\n      sampleSize: null,\n      timeOffset: null,\n    };\n\n    // Read \"sample duration\" if present.\n    if (flags & 0x000100) { sample.duration = reader.readUint32(); }\n\n    // Read \"sample_size\" if present.\n    if (flags & 0x000200) { sample.sampleSize = reader.readUint32(); }\n\n    // Skip \"sample_flags\" if present.\n    if (flags & 0x000400) { reader.skip(4); }\n\n    // Read \"sample_time_offset\" if present.\n    if (flags & 0x000800) {\n      sample.timeOffset = version == 0 ?\n          reader.readUint32() :\n          reader.readInt32();\n    }\n\n    samples.push(sample);\n  }\n\n  return samples;\n};\n\n\n/**\n * Parses a vttc box into a cue.\n *\n * @param {!Uint8Array} data\n * @param {number} startTime\n * @param {number} endTime\n * @return {shaka.text.Cue}\n * @private\n */\nshaka.text.Mp4VttParser.parseVTTC_ = function(data, startTime, endTime) {\n  let payload;\n  let id;\n  let settings;\n\n  new shaka.util.Mp4Parser()\n      .box('payl', shaka.util.Mp4Parser.allData(function(data) {\n        payload = shaka.util.StringUtils.fromUTF8(data);\n      }))\n      .box('iden', shaka.util.Mp4Parser.allData(function(data) {\n        id = shaka.util.StringUtils.fromUTF8(data);\n      }))\n      .box('sttg', shaka.util.Mp4Parser.allData(function(data) {\n        settings = shaka.util.StringUtils.fromUTF8(data);\n      }))\n      .parse(data);\n\n  if (payload) {\n    return shaka.text.Mp4VttParser.assembleCue_(payload,\n                                                id,\n                                                settings,\n                                                startTime,\n                                                endTime);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Take the individual components that make a cue and create a vttc cue.\n *\n * @param {string} payload\n * @param {?string} id\n * @param {?string} settings\n * @param {number} startTime\n * @param {number} endTime\n * @return {!shaka.text.Cue}\n * @private\n */\nshaka.text.Mp4VttParser.assembleCue_ = function(payload,\n                                                id,\n                                                settings,\n                                                startTime,\n                                                endTime) {\n  let cue = new shaka.text.Cue(\n      startTime,\n      endTime,\n      payload);\n\n  if (id) {\n    cue.id = id;\n  }\n\n  if (settings) {\n    let parser = new shaka.util.TextParser(settings);\n\n    let word = parser.readWord();\n\n    while (word) {\n      // TODO: Check WebVTTConfigurationBox for region info.\n      if (!shaka.text.VttTextParser.parseCueSetting(cue, word,\n                                                    /* VTTRegions */ [])) {\n        shaka.log.warning('VTT parser encountered an invalid VTT setting: ',\n                          word,\n                          ' The setting will be ignored.');\n      }\n\n      parser.skipWhitespace();\n      word = parser.readWord();\n    }\n  }\n\n  return cue;\n};\n\n\nshaka.text.TextEngine.registerParser(\n    'application/mp4; codecs=\"wvtt\"',\n    shaka.text.Mp4VttParser);\n","/* eslint-disable */\ngoog.provide('lin.VstubParser');\n\ngoog.require('goog.asserts');\ngoog.require('lin.VstubSegmentList');\ngoog.require('shaka.dash.ContentProtection');\ngoog.require('shaka.dash.SegmentBase');\ngoog.require('shaka.dash.SegmentList');\ngoog.require('shaka.dash.SegmentTemplate');\ngoog.require('shaka.log');\ngoog.require('shaka.media.DrmEngine');\ngoog.require('shaka.media.ManifestParser');\ngoog.require('shaka.media.PresentationTimeline');\ngoog.require('shaka.media.SegmentReference');\ngoog.require('shaka.net.NetworkingEngine');\ngoog.require('shaka.util.Error');\ngoog.require('shaka.util.LanguageUtils');\ngoog.require('shaka.util.ManifestParserUtils');\ngoog.require('shaka.util.Uint8ArrayUtils');\ngoog.require('shaka.util.StreamUtils');\ngoog.require('shaka.util.StringUtils');\ngoog.require('shaka.util.XmlUtils');\n\nconst Uint8ArrayUtils = shaka.util.Uint8ArrayUtils;\nconst ManifestParserUtils = shaka.util.ManifestParserUtils;\n\nfunction limitCallN(fn, limitCallCount) {\n  let wrapper = function () {\n    if (limitCallCount > 0) {\n      limitCallCount -= 1\n      return fn.apply(this, arguments)\n    }\n  }\n\n  wrapper.unsafe = fn\n\n  return wrapper\n}\n\nconst getUniq = (items) => {\n  const uniqItems = new Set()\n\n  items.forEach((item) => {\n    uniqItems.add(item)\n  })\n\n  return [...uniqItems.values()]\n}\n\n/**\n * Creates a new DASH parser.\n *\n * @struct\n * @constructor\n * @implements {shakaExtern.ManifestParser}\n * @export\n */\nlin.VstubParser = function () {\n  /** @private {?shakaExtern.ManifestConfiguration} */\n  this.config_ = null;\n\n  /** @private {?shakaExtern.ManifestParser.PlayerInterface} */\n  this.playerInterface_ = null;\n\n  /** @private {!Array.<string>} */\n  this.manifestUris_ = [];\n\n  /** @private {string}*/\n  this.vstubUrl_ = null;\n\n  /** @private {Object}*/\n  this.playlist_ = null;\n\n  /** @private {?shakaExtern.Manifest} */\n  this.manifest_ = null;\n\n  /** @private {!Array.<string>} */\n  this.periodIds_ = [];\n\n  /** @private {number} */\n  this.globalId_ = 1;\n\n  /**\n   * A map of IDs to SegmentIndex objects.\n   * ID: Period@id,AdaptationSet@id,@Representation@id\n   * e.g.: '1,5,23'\n   * @private {!Object.<string, !shaka.media.SegmentIndex>}\n   */\n  this.segmentIndexMap_ = {};\n\n  /**\n   * The update period in seconds; or 0 for no updates.\n   * @private {number}\n   */\n  this.updatePeriod_ = 0;\n\n  /** @private {?number} */\n  this.updateTimer_ = null;\n};\n\n\n/**\n * Contains the minimum amount of time, in seconds, between manifest update\n * requests.\n *\n * @private\n * @const {number}\n */\nlin.VstubParser.MIN_UPDATE_PERIOD_ = 3;\n\n\nlin.VstubParser.defaultKeySystems_ = {\n  '1077efecc0b24d02ace33c1e52e2fb4b': 'org.w3.clearkey',\n  'edef8ba979d64acea3c827dcd51d21ed': 'com.widevine.alpha',\n  '9a04f07998404286ab92e65be0885f95': 'com.microsoft.playready',\n};\n\n/**\n * The default MPD@suggestedPresentationDelay in seconds.\n *\n * @private\n * @const {number}\n */\nlin.VstubParser.DEFAULT_SUGGESTED_PRESENTATION_DELAY_ = 10;\n\n\n/**\n * @typedef {\n *   !function(!Array.<string>, ?number, ?number):!Promise.<!ArrayBuffer>\n * }\n */\nlin.VstubParser.RequestInitSegmentCallback;\n\n\n/**\n * @typedef {{\n *   segmentBase: Element,\n *   segmentList: Element,\n *   segmentTemplate: Element,\n *   baseUris: !Array.<string>,\n *   width: (number|undefined),\n *   height: (number|undefined),\n *   contentType: string,\n *   mimeType: string,\n *   codecs: string,\n *   frameRate: (number|undefined),\n *   containsEmsgBoxes: boolean,\n *   id: string\n * }}\n *\n * @description\n * A collection of elements and properties which are inherited across levels\n * of a DASH manifest.\n *\n * @property {Element} segmentBase\n *   The XML node for SegmentBase.\n * @property {Element} segmentList\n *   The XML node for SegmentList.\n * @property {Element} segmentTemplate\n *   The XML node for SegmentTemplate.\n * @property {!Array.<string>} baseUris\n *   An array of absolute base URIs for the frame.\n * @property {(number|undefined)} width\n *   The inherited width value.\n * @property {(number|undefined)} height\n *   The inherited height value.\n * @property {string} contentType\n *   The inherited media type.\n * @property {string} mimeType\n *   The inherited MIME type value.\n * @property {string} codecs\n *   The inherited codecs value.\n * @property {(number|undefined)} frameRate\n *   The inherited framerate value.\n * @property {boolean} containsEmsgBoxes\n *   Whether there are 'emsg' boxes.\n * @property {string} id\n *   The ID of the element.\n */\nlin.VstubParser.InheritanceFrame;\n\n\n/**\n * @typedef {{\n *   dynamic: boolean,\n *   presentationTimeline: !shaka.media.PresentationTimeline,\n *   period: ?lin.VstubParser.InheritanceFrame,\n *   periodInfo: ?lin.VstubParser.PeriodInfo,\n *   adaptationSet: ?lin.VstubParser.InheritanceFrame,\n *   representation: ?lin.VstubParser.InheritanceFrame,\n *   bandwidth: (number|undefined),\n *   indexRangeWarningGiven: boolean\n * }}\n *\n * @description\n * Contains context data for the streams.\n *\n * @property {boolean} dynamic\n *   True if the MPD is dynamic (not all segments available at once)\n * @property {!shaka.media.PresentationTimeline} presentationTimeline\n *   The PresentationTimeline.\n * @property {?lin.VstubParser.InheritanceFrame} period\n *   The inheritance from the Period element.\n * @property {?lin.VstubParser.PeriodInfo} periodInfo\n *   The Period info for the current Period.\n * @property {?lin.VstubParser.InheritanceFrame} adaptationSet\n *   The inheritance from the AdaptationSet element.\n * @property {?lin.VstubParser.InheritanceFrame} representation\n *   The inheritance from the Representation element.\n * @property {(number|undefined)} bandwidth\n *   The bandwidth of the Representation.\n * @property {boolean} indexRangeWarningGiven\n *   True if the warning about SegmentURL@indexRange has been printed.\n */\nlin.VstubParser.Context;\n\n\n/**\n * @typedef {{\n *   start: number,\n *   duration: ?number,\n *   node: !Element,\n *   isLastPeriod: boolean\n * }}\n *\n * @description\n * Contains information about a Period element.\n *\n * @property {number} start\n *   The start time of the period.\n * @property {?number} duration\n *   The duration of the period; or null if the duration is not given.  This\n *   will be non-null for all periods except the last.\n * @property {!Element} node\n *   The XML Node for the Period.\n * @property {boolean} isLastPeriod\n *   Whether this Period is the last one in the manifest.\n */\nlin.VstubParser.PeriodInfo;\n\n\n/**\n * @typedef {{\n *   initSegment: Array,\n *   assetUrl: string,\n *   segments: !Array.<lin.VstubParser.VstubSegment>\n * }}\n */\nlin.VstubParser.Vstub;\n\n/**\n * @typedef {{\n *   sixdmoof: ArrayBuffer,\n *   mdatSize: number,\n *   startTime: number,\n *   endTime: number,\n *   mdatRanges: !Array.<lin.VstubSegmentList.Range>\n * }}\n */\nlin.VstubParser.VstubSegment;\n\n\n/**\n * @typedef {{\n *   id: string,\n *   contentType: ?string,\n *   language: string,\n *   main: boolean,\n *   streams: !Array.<shakaExtern.Stream>,\n *   drmInfos: !Array.<shakaExtern.DrmInfo>,\n *   trickModeFor: ?string,\n *   representationIds: !Array.<string>\n * }}\n *\n * @description\n * Contains information about an AdaptationSet element.\n *\n * @property {string} id\n *   The unique ID of the adaptation set.\n * @property {?string} contentType\n *   The content type of the AdaptationSet.\n * @property {string} language\n *   The language of the AdaptationSet.\n * @property {boolean} main\n *   Whether the AdaptationSet has the 'main' type.\n * @property {!Array.<shakaExtern.Stream>} streams\n *   The streams this AdaptationSet contains.\n * @property {!Array.<shakaExtern.DrmInfo>} drmInfos\n *   The DRM info for the AdaptationSet.\n * @property {?string} trickModeFor\n *   If non-null, this AdaptationInfo represents trick mode tracks.  This\n *   property is the ID of the normal AdaptationSet these tracks should be\n *   associated with.\n * @property {!Array.<string>} representationIds\n *   An array of the IDs of the Representations this AdaptationSet contains.\n */\nlin.VstubParser.AdaptationInfo;\n\n\n/**\n * @typedef {{\n *   createSegmentIndex: shakaExtern.CreateSegmentIndexFunction,\n *   findSegmentPosition: shakaExtern.FindSegmentPositionFunction,\n *   getSegmentReference: shakaExtern.GetSegmentReferenceFunction\n * }}\n *\n * @description\n * Contains functions used to create and find segment references.\n *\n * @property {shakaExtern.CreateSegmentIndexFunction} createSegmentIndex\n *   The createSegmentIndex function.\n * @property {shakaExtern.FindSegmentPositionFunction} findSegmentPosition\n *   The findSegmentPosition function.\n * @property {shakaExtern.GetSegmentReferenceFunction} getSegmentReference\n *   The getSegmentReference function.\n */\nlin.VstubParser.SegmentIndexFunctions;\n\n\n/**\n * @typedef {{\n *   createSegmentIndex: shakaExtern.CreateSegmentIndexFunction,\n *   findSegmentPosition: shakaExtern.FindSegmentPositionFunction,\n *   getSegmentReference: shakaExtern.GetSegmentReferenceFunction,\n *   initSegmentReference: shaka.media.InitSegmentReference,\n *   presentationTimeOffset: (number|undefined)\n * }}\n *\n * @description\n * Contains information about a Stream.  This is passed from the createStream\n * methods.\n *\n * @property {shakaExtern.CreateSegmentIndexFunction} createSegmentIndex\n *   The createSegmentIndex function for the stream.\n * @property {shakaExtern.FindSegmentPositionFunction} findSegmentPosition\n *   The findSegmentPosition function for the stream.\n * @property {shakaExtern.GetSegmentReferenceFunction} getSegmentReference\n *   The getSegmentReference function for the stream.\n * @property {shaka.media.InitSegmentReference} initSegmentReference\n *   The init segment for the stream.\n * @property {(number|undefined)} presentationTimeOffset\n *   The presentationTimeOffset for the stream.\n */\nlin.VstubParser.StreamInfo;\n\n\n/**\n * @override\n * @exportInterface\n */\nlin.VstubParser.prototype.configure = function (config) {\n  this.config_ = config;\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nlin.VstubParser.prototype.start = function (uri, playerInterface) {\n  goog.asserts.assert(this.config_, 'Must call configure() before start()!');\n  this.vstubUrl_ = uri;\n  this.playerInterface_ = playerInterface;\n\n  return this.requestVstubManifest_().then(function () {\n    var assetUrls = this.playlist_.periods.map(function (period) {\n      return period.assetUrl;\n    });\n    return this.warmUpUrls(assetUrls);\n  }.bind(this))\n    .then(function () {\n      if (this.playerInterface_.networkingEngine)\n        this.setUpdateTimer_(0);\n      return this.manifest_;\n    }.bind(this));\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nlin.VstubParser.prototype.stop = function () {\n  this.playerInterface_ = null;\n  this.config_ = null;\n\n  this.manifestUris_ = [];\n  this.manifest_ = null;\n  this.periodIds_ = [];\n  this.segmentIndexMap_ = {};\n  if (this.updateTimer_ != null) {\n    window.clearTimeout(this.updateTimer_);\n    this.updateTimer_ = null;\n  }\n\n  return Promise.resolve();\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nlin.VstubParser.prototype.update = function () {\n  this.requestVstubManifest_().catch(function (error) {\n    if (!this.playerInterface_) return;\n    this.playerInterface_.onError(error);\n  }.bind(this));\n};\n\n\n/**\n * @override\n * @exportInterface\n */\nlin.VstubParser.prototype.onExpirationUpdated = function (sessionId, expiration) {\n  // No-op\n};\n\n\n/**\n * Makes a network request for the manifest and parses the resulting data.\n *\n * @return {!Promise}\n * @private\n */\nlin.VstubParser.prototype.requestVstubManifest_ = function () {\n  var requestType = shaka.net.NetworkingEngine.RequestType.PVSTUB;\n  var request = shaka.net.NetworkingEngine.makeRequest([this.vstubUrl_], this.config_.retryParameters);\n  return this.playerInterface_.networkingEngine.request(requestType, request)\n    .promise\n    .then(function (response) {\n      // Detect calls to stop().\n      if (!this.playerInterface_.networkingEngine)\n        return;\n      // This may throw; but it will result in a failed promise.\n      return this.parsePlaylist_(response.data);\n    }.bind(this));\n};\n\n/**\n * Parses proto message to the shaka model\n *\n * @param {!ArrayBuffer} data\n *\n * @return {!Promise}\n *\n * @private\n */\nlin.VstubParser.prototype.parsePlaylist_ = function (data) {\n  var array = new Uint8Array(data);\n  var DASHPlayerMsg = window.VstubSchema.lookup(\"dash.DASHPlaylist\");\n  var dashPlaylist = DASHPlayerMsg.decode(array);\n  this.playlist_ = dashPlaylist;\n\n  var XmlUtils = shaka.util.XmlUtils;\n  var minBufferTime = XmlUtils.parseDuration(\"PT1.500S\");\n  this.updatePeriod_ = -1;//'minimumUpdatePeriod'\n\n  var presentationStartTime = 0;//'availabilityStartTime'\n  var segmentAvailabilityDuration = null;//'timeShiftBufferDepth'\n  var suggestedPresentationDelay = null;//suggestedPresentationDelay\n  var DASHABRVstubMsg = window.VstubSchema.lookup(\"dash.DASHABRVstub\");\n\n  //TODO: clean up\n\n  if (this.playlist_.abrPeriods && this.playlist_.abrPeriods.length > 0) {\n    this.playlist_.periods = [this.playlist_.abrPeriods[0].representation[0]];\n  } else if (this.playlist_.avPeriods && this.playlist_.avPeriods.length > 0) {\n    // Fallback to audio\n    this.playlist_.periods = this.playlist_.avPeriods.map(av => av.video || av.audio)\n\n    this.playlist_.abrPeriods = this.playlist_.avPeriods.map(function (av) {\n      var abrPeriodStub = DASHABRVstubMsg.create();\n      abrPeriodStub.representation = []\n\n      if (av.video) {\n        abrPeriodStub.representation.push(av.video);\n      }\n\n      if (av.audio) {\n        abrPeriodStub.representation.push(av.audio);\n      }\n\n      return abrPeriodStub;\n    });\n  } else {\n    this.playlist_.abrPeriods = this.playlist_.periods.map(function (period) {\n      var abrPeriodStub = DASHABRVstubMsg.create();\n      abrPeriodStub.representation = [period];\n      return abrPeriodStub;\n    });\n    /*var abrPeriodStub = DASHABRVstubMsg.create();\n    abrPeriodStub.representation = [];\n    abrPeriodStub.representation.push(this.playlist_.periods[0]);\n    this.playlist_.abrPeriods=[];\n    this.playlist_.abrPeriods.push(abrPeriodStub);*/\n  }\n\n  var maxSegmentDuration = Math.max.apply(null, this.playlist_.periods.map(function (vstub) {\n    return vstub.info.maxSegmentDuration;\n  }));\n\n  var presentationTimeline;\n  if (this.manifest_) {\n    presentationTimeline = this.manifest_.presentationTimeline;\n  } else {\n    // DASH IOP v3.0 suggests using a default delay between minBufferTime and\n    // timeShiftBufferDepth.  This is literally the range of all feasible\n    // choices for the value.  Nothing older than timeShiftBufferDepth is still\n    // available, and anything less than minBufferTime will cause buffering\n    // issues.\n    //\n    // We have decided that our default will be 1.5 * minBufferTime, or 10s,\n    // whichever is larger.  This is fairly conservative.  Content providers\n    // should provide a suggestedPresentationDelay whenever possible to optimize\n    // the live streaming experience.\n    var defaultPresentationDelay = Math.max(lin.VstubParser.DEFAULT_SUGGESTED_PRESENTATION_DELAY_, minBufferTime * 1.5);\n    var presentationDelay = suggestedPresentationDelay != null ? suggestedPresentationDelay : defaultPresentationDelay;\n    presentationTimeline = new shaka.media.PresentationTimeline(presentationStartTime, presentationDelay);\n  }\n\n  /** @type {lin.VstubParser.Context} */\n  var context = {\n    dynamic: false,//mpdType != 'static'\n    presentationTimeline: presentationTimeline,\n    period: null,\n    periodInfo: null,\n    adaptationSet: null,\n    representation: null,\n    bandwidth: undefined\n  };\n\n  var periodsAndDuration = this.parseVstubPeriods_(context);\n  var duration = periodsAndDuration.duration;\n  var periods = periodsAndDuration.periods;\n\n  presentationTimeline.setStatic(true);\n  presentationTimeline.setDuration(duration || Infinity);\n  presentationTimeline.setSegmentAvailabilityDuration(\n    segmentAvailabilityDuration != null ?\n      segmentAvailabilityDuration :\n      Infinity);\n  // Use @maxSegmentDuration to override smaller, derived values.\n  presentationTimeline.notifyMaxSegmentDuration(maxSegmentDuration || 1);\n  if (!COMPILED) presentationTimeline.assertIsValid();\n\n  if (this.manifest_) {\n    // This is a manifest update, so we're done.\n    return Promise.resolve();\n  }\n\n  this.manifest_ = {\n    presentationTimeline: presentationTimeline,\n    periods: periods,\n    offlineSessionIds: [],\n    minBufferTime: minBufferTime || 0\n  };\n};\n\n\n/**\n * Reads and parses the periods from the PVSTUB.\n *\n * @param {lin.VstubParser.Context} context\n *\n * @return {{periods: !Array.<shakaExtern.Period>,\n *          duration: ?number, containsInband: boolean}}\n * @private\n */\nlin.VstubParser.prototype.parseVstubPeriods_ = function () {\n  var periods = [];\n  var presentationDuration = 0;\n\n  for (var periodIndex = 0; periodIndex < this.playlist_.abrPeriods.length; periodIndex++) {\n    var abrPeriod = this.playlist_.abrPeriods[periodIndex];\n\n    var periodDuration = abrPeriod.representation[0].duration;\n    var periodInfo = { start: presentationDuration, duration: periodDuration, containsInband: false };\n    presentationDuration = presentationDuration + periodDuration;\n\n    var period = {\n      id: '__shaka_period_' + periodIndex,\n      startTime: periodInfo.start,\n      variants: [],\n      textStreams: []\n    };\n\n    this.parseVstubAbrPeriod_(period, abrPeriod);\n    //var period = this.parseVstubPeriod_(context, periodInfo, vstubPeriod, periodIndex);\n    periods.push(period);\n  }\n\n  var retValue = {\n    periods: periods,\n    duration: presentationDuration,\n    containsInband: false\n  };\n\n  return retValue;\n};\n\n// Retrieve combination of Pssh from ldash manifest\nlin.VstubParser.prototype.getCombinedDrmInfos = function (abrPeriod, vdStubs, audStubs) {\n  let keySystemNames = lin.VstubParser.defaultKeySystems_;\n\n  let keyIds = getUniq(vdStubs.concat(audStubs).map(function (s) {\n    return s.keyId;\n  }));\n\n  let drmInfos = [];\n  let reps = abrPeriod.representation;\n\n  for (let i = 0, l = reps.length; i < l; i += 1) {\n    let { psshAtoms } = reps[i];\n\n    for (let p = 0, pal = psshAtoms.length; p < pal; p += 1) {\n      let pssh = psshAtoms[p];\n      let keySystemId = Uint8ArrayUtils.toHex(pssh.systemId);\n      let drmInfo = ManifestParserUtils.createDrmInfo(\n        keySystemNames[keySystemId],\n        [{\n          initDataType: 'cenc',\n          // Convert to avoid byte offset\n          initData: new Uint8Array(pssh.atom),\n          keyId: keyIds[0],\n        }]\n      );\n\n      drmInfo.keyIds.push(...keyIds);\n\n      drmInfos.push(drmInfo);\n    }\n  }\n\n  return drmInfos;\n}\n\nlin.VstubParser.prototype.parseVstubAbrPeriod_ = function (period, abrPeriod) {\n  var ContentType = shaka.util.ManifestParserUtils.ContentType;\n  var vdStubs = [];\n  var audStubs = [];\n\n  for (var index = 0; index < abrPeriod.representation.length; index++) {\n    var repr = abrPeriod.representation[index];\n    var assetInfo = repr.info;\n    var streamInfo = lin.VstubSegmentList.createStream(period, repr);\n\n    var isVideo = (assetInfo.width != null && assetInfo.width > 0 && assetInfo.height > 0);\n    var streamType = ContentType.VIDEO;\n\n    if (!isVideo) {\n      streamType = ContentType.AUDIO;\n    }\n\n    var streamStub = {\n      //presentationTimeOffset: 0,\n      channelsCount: null,\n      bandwidth: assetInfo.bandwidth,\n      codecs: assetInfo.codecs,\n      createSegmentIndex: streamInfo.createSegmentIndex,\n      encrypted: Boolean(repr.encryptionKeyId), // isVideo ? Boolean(repr.encryptionKeyId) : false,\n      findSegmentPosition: streamInfo.findSegmentPosition,\n      frameRate: assetInfo.frameRate,\n      getSegmentReference: streamInfo.getSegmentReference,\n      width: assetInfo.width,\n      height: assetInfo.height,\n      kind: null,\n      mimeType: streamType + \"/mp4\",\n      keyId: (repr.encryptionKeyId || null), // isVideo ? (repr.encryptionKeyId || null) : null,\n      language: \"en\",\n      allowedByApplication: true,\n      allowedByKeySystem: true,\n      roles: [],\n      type: streamType,\n      id: this.globalId_++,\n      initSegmentReference: streamInfo.initSegmentReference,\n      presentationTimeOffset: streamInfo.presentationTimeOffset,\n      containsEmsgBoxes: false,\n      trickModeVideo: null\n    };\n\n    if (isVideo) {\n      vdStubs.push(streamStub);\n    }\n    else {\n      audStubs.push(streamStub);\n    }\n  }\n\n  if (audStubs.length == 0) {\n    let drmInfos = this.getCombinedDrmInfos(abrPeriod, vdStubs, audStubs);\n\n    for (var i = 0; i < vdStubs.length; i++) {\n      var stub = vdStubs[i];\n      var variant = {\n        allowedByApplication: true,\n        allowedByKeySystem: true,\n        audio: null,\n        bandwidth: stub.bandwidth,\n        drmInfos: drmInfos,\n        id: this.globalId_++,\n        language: stub.language,\n        type: stub.type,\n        primary: false,\n        video: stub\n      };\n\n      period.variants.push(variant);\n    }\n  } else if (vdStubs.length == 0) {\n    let drmInfos = this.getCombinedDrmInfos(abrPeriod, vdStubs, audStubs);\n\n    for (var i = 0; i < audStubs.length; i++) {\n      var stub = audStubs[i];\n      var variant = {\n        allowedByApplication: true,\n        allowedByKeySystem: true,\n        audio: stub,\n        bandwidth: stub.bandwidth,\n        drmInfos: drmInfos,\n        id: this.globalId_++,\n        language: stub.language,\n        type: stub.type,\n        primary: false,\n        video: null\n      };\n\n      period.variants.push(variant);\n    }\n  } else {\n    let drmInfos = this.getCombinedDrmInfos(abrPeriod, vdStubs, audStubs);\n\n    for (var i = 0; i < audStubs.length; i++) {\n      for (var j = 0; j < vdStubs.length; j++) {\n        var auStub = audStubs[i];\n        var vdStub = vdStubs[j];\n        var variant = {\n          id: this.globalId_++,\n          allowedByApplication: true,\n          allowedByKeySystem: true,\n          video: vdStub,\n          audio: auStub,\n          bandwidth: vdStub.bandwidth + auStub.bandwidth,\n          drmInfos: drmInfos,\n          language: vdStub.language || auStub.language,\n          type: vdStub.type || auStub.type,\n          primary: false\n        };\n\n        period.variants.push(variant);\n      }\n    }\n  }\n};\n\n\n/**\n * Parses a Period XML element.  Unlike the other parse methods, this is not\n * given the Node; it is given a PeriodInfo structure.  Also, partial parsing\n * was done before this was called so start and duration are valid.\n *\n * @param {lin.VstubParser.Context} context\n * @param {lin.VstubParser.PeriodInfo} periodInfo\n * @return {shakaExtern.Period}\n * @param {!Object} prdVstub\n * @throws shaka.util.Error When there is a parsing error.\n * @private\n */\nlin.VstubParser.prototype.parseVstubPeriod_ = function (context, periodInfo, prdVstub, periodIndex) {\n\n  //periodInfo.node is children of the <Period>\n\n  var assetInfo = prdVstub.info;\n\n  var period = {\n    startTime: periodInfo.start,\n    id: '__shaka_period_' + periodIndex,\n    variants: [{\n      id: this.globalId_++,\n      language: \"en\",\n      type: \"video\",\n      primary: true,\n      drmInfos: [],\n      \"bandwidth\": assetInfo.bandwidth,\n      video: {\n        \"presentationTimeOffset\": 0,\n        \"mimeType\": \"video/mp4\",\n        \"codecs\": assetInfo.codecs,\n        \"frameRate\": assetInfo.frameRate,\n        \"bandwidth\": assetInfo.bandwidth,\n        \"width\": assetInfo.width,\n        \"height\": assetInfo.height,\n        \"encrypted\": false,\n        \"keyId\": null,\n        \"language\": \"en\",\n        \"allowedByApplication\": true,\n        \"allowedByKeySystem\": true\n      },\n      audio: null,\n      allowedByApplication: true,\n      allowedByKeySystem: true\n    }],\n    textStreams: []\n  };\n\n  var stream = period.variants[0].video;\n  var streamInfo = lin.VstubSegmentList.createStream(period, prdVstub);\n\n  stream.id = this.globalId_++;\n  stream.createSegmentIndex = streamInfo.createSegmentIndex;\n  stream.findSegmentPosition = streamInfo.findSegmentPosition;\n  stream.getSegmentReference = streamInfo.getSegmentReference;\n  stream.initSegmentReference = streamInfo.initSegmentReference;\n  stream.presentationTimeOffset = streamInfo.presentationTimeOffset;\n\n  return period;\n};\n\n/**\n * Called when the update timer ticks.\n *\n * @private\n */\nlin.VstubParser.prototype.onUpdate_ = function () {\n  goog.asserts.assert(this.updateTimer_, 'Should only be called by timer');\n  goog.asserts.assert(this.updatePeriod_ >= 0,\n    'There should be an update period');\n\n  shaka.log.info('Updating manifest...');\n\n  this.updateTimer_ = null;\n  var startTime = Date.now();\n\n  this.requestVstubManifest_().then(function () {\n    // Detect a call to stop()\n    if (!this.playerInterface_)\n      return;\n\n    // Ensure the next update occurs within |updatePeriod_| seconds by taking\n    // into account the time it took to update the manifest.\n    var endTime = Date.now();\n    this.setUpdateTimer_((endTime - startTime) / 1000.0);\n  }.bind(this)).catch(function (error) {\n    goog.asserts.assert(error instanceof shaka.util.Error,\n      'Should only receive a Shaka error');\n\n    // Try updating again, but ensure we haven't been destroyed.\n    if (this.playerInterface_) {\n      // We will retry updating, so override the severity of the error.\n      error.severity = shaka.util.Error.Severity.RECOVERABLE;\n      this.playerInterface_.onError(error);\n\n      this.setUpdateTimer_(0);\n    }\n  }.bind(this));\n};\n\n\n/**\n * Sets the update timer.  Does nothing if the manifest does not specify an\n * update period.\n *\n * @param {number} offset An offset, in seconds, to apply to the manifest's\n *   update period.\n * @private\n */\nlin.VstubParser.prototype.setUpdateTimer_ = function (offset) {\n  // NOTE: An updatePeriod_ of -1 means the attribute was missing.\n  // An attribute which is present and set to 0 should still result in periodic\n  // updates. For more, see: https://github.com/google/shaka-player/issues/331\n  if (this.updatePeriod_ < 0)\n    return;\n  goog.asserts.assert(this.updateTimer_ == null,\n    'Timer should not be already set');\n\n  var period =\n    Math.max(lin.VstubParser.MIN_UPDATE_PERIOD_, this.updatePeriod_);\n  var interval = Math.max(period - offset, 0);\n  shaka.log.debug('updateInterval', interval);\n\n  var callback = this.onUpdate_.bind(this);\n  this.updateTimer_ = window.setTimeout(callback, 1000 * interval);\n};\n\n/**\n * Makes a network request on behalf of SegmentBase.createStream.\n *\n * @param {!Array.<string>} uris\n * @param {?number} startByte\n * @param {?number} endByte\n * @return {!Promise.<!ArrayBuffer>}\n * @private\n */\nlin.VstubParser.prototype.requestInitSegment_ = function (uris, startByte, endByte) {\n  var requestType = shaka.net.NetworkingEngine.RequestType.SEGMENT;\n  var request = shaka.net.NetworkingEngine.makeRequest(\n    uris, this.config_.retryParameters);\n  if (startByte != null) {\n    var end = (endByte != null ? endByte : '');\n    request.headers['Range'] = 'bytes=' + startByte + '-' + end;\n  }\n\n  return this.playerInterface_.networkingEngine.request(requestType, request)\n    .promise\n    .then(function (response) {\n      return response.data;\n    });\n};\n\n/**\n * Warm up URLs by making requests and validating http 206 response,\n *\n *\n * @param {!Array.<string>} assetUrls\n * @return {!Promise}\n * @private\n */\nlin.VstubParser.prototype.warmUpUrls = function (assetUrls) {\n  shaka.log.info('Starting warm up...');\n  var self = this;\n  var firstUrls = assetUrls.filter(function (url, index) {\n    return index < 2;\n  });\n\n  var otherUrls = assetUrls.filter(function (url, index) {\n    return index >= 2;\n  });\n\n  var warmupPromises = [];\n  firstUrls.forEach(function (url) {\n    var urlPromise = this.warmUpUrl(url);\n    warmupPromises.push(urlPromise);\n  }, this);\n\n  var first = Promise.all(warmupPromises);\n\n  Promise.all([first]).then(function () {\n    shaka.log.info('second stage warmup, items: ' + otherUrls.length);\n    otherUrls.forEach(function (link) {\n      self.warmUpUrl(link);\n    });\n  }.bind(this));\n};\n\n/**\n * Warm up URL by making requests and validating http 206 response,\n *\n *\n * @param {!string} url\n * @return {!Promise}\n * @private\n */\nlin.VstubParser.prototype.warmUpUrl = function (url) {\n  shaka.log.info('Warm up: ' + url);\n  if (url.indexOf('instagram') == -1) {\n    shaka.log.info('Skipping warmup for non-instagram assets');\n    return Promise.resolve();\n  }\n\n  var self = this;\n  return new Promise(function (resolve, reject) {\n    var completeWarmup = function (req, donecallback) {\n      var messageOk = 'Correct Response status: ' + req.status;\n      shaka.log.info(messageOk);\n      //console.log(messageOk);\n      //console.log('resolve url: ' + resolve);\n      req.abort();//probably we do not need to abort it\n      donecallback(req.status);\n    };\n\n    var retryWarmup = limitCallN(function (url, donecallback) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.setRequestHeader('Range', 'bytes=100-223');\n\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState == 4) {\n          if (xhr.status != 206) {\n            var messageFail = 'aborting request due to incorrect request status: ' + xhr.status;\n            shaka.log.info(messageFail);\n            //console.log(messageFail);\n            xhr.abort();\n            setTimeout(retryWarmup.bind(self, url, resolve), 1500);\n          } else {\n            completeWarmup(xhr, donecallback);\n          }\n        }\n      };\n      xhr.send();\n    }, 5);\n\n    retryWarmup.unsafe(url, resolve);\n  });\n}\n\nshaka.media.ManifestParser.registerParserByExtension('pvstub', lin.VstubParser);\nshaka.media.ManifestParser.registerParserByMime('application/octet-stream', lin.VstubParser);\nshaka.media.ManifestParser.registerParserByMime('linius/pvstub', lin.VstubParser);\n","/**\n * @license\n * Copyright 2013 Ali Al Dallal\n *\n * Licensed under the MIT license.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\ngoog.provide('mozilla.LanguageMapping');\n\n/**\n * A mapping from language code to the native and English names for that\n * language.  The language code can be specific and include a locale, such as\n * \"es-CL\" instead of merely \"es\".\n *\n * @type {!Object.<string, {nativeName: string, englishName: string}>}\n */\nmozilla.LanguageMapping = {\n  'ach': {\n    nativeName: \"Lwo\",\n    englishName: \"Acholi\"\n  },\n  'ady': {\n    nativeName: \"\u0410\u0434\u044b\u0433\u044d\u0431\u0437\u044d\",\n    englishName: \"Adyghe\"\n  },\n  'af': {\n    nativeName: \"Afrikaans\",\n    englishName: \"Afrikaans\"\n  },\n  'af-NA': {\n    nativeName: \"Afrikaans (Namibia)\",\n    englishName: \"Afrikaans (Namibia)\"\n  },\n  'af-ZA': {\n    nativeName: \"Afrikaans (South Africa)\",\n    englishName: \"Afrikaans (South Africa)\"\n  },\n  'ak': {\n    nativeName: \"T\u0255\u0265i\",\n    englishName: \"Akan\"\n  },\n  'ar': {\n    nativeName: \"\u0627\u0644\u0639\u0631\u0628\u064a\u0629\",\n    englishName: \"Arabic\"\n  },\n  'ar-AR': {\n    nativeName: \"\u0627\u0644\u0639\u0631\u0628\u064a\u0629\",\n    englishName: \"Arabic\"\n  },\n  'ar-MA': {\n    nativeName: \"\u0627\u0644\u0639\u0631\u0628\u064a\u0629\",\n    englishName: \"Arabic (Morocco)\"\n  },\n  'ar-SA': {\n    nativeName: \"\u0627\u0644\u0639\u0631\u0628\u064a\u0629 (\u0627\u0644\u0633\u0639\u0648\u062f\u064a\u0629)\",\n    englishName: \"Arabic (Saudi Arabia)\"\n  },\n  'ay-BO': {\n    nativeName: \"Aymar aru\",\n    englishName: \"Aymara\"\n  },\n  'az': {\n    nativeName: \"Az\u0259rbaycan dili\",\n    englishName: \"Azerbaijani\"\n  },\n  'az-AZ': {\n    nativeName: \"Az\u0259rbaycan dili\",\n    englishName: \"Azerbaijani\"\n  },\n  'be-BY': {\n    nativeName: \"\u0411\u0435\u043b\u0430\u0440\u0443\u0441\u043a\u0430\u044f\",\n    englishName: \"Belarusian\"\n  },\n  'bg': {\n    nativeName: \"\u0411\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438\",\n    englishName: \"Bulgarian\"\n  },\n  'bg-BG': {\n    nativeName: \"\u0411\u044a\u043b\u0433\u0430\u0440\u0441\u043a\u0438\",\n    englishName: \"Bulgarian\"\n  },\n  'bn': {\n    nativeName: \"\u09ac\u09be\u0982\u09b2\u09be\",\n    englishName: \"Bengali\"\n  },\n  'bn-IN': {\n    nativeName: \"\u09ac\u09be\u0982\u09b2\u09be (\u09ad\u09be\u09b0\u09a4)\",\n    englishName: \"Bengali (India)\"\n  },\n  'bn-BD': {\n    nativeName: \"\u09ac\u09be\u0982\u09b2\u09be(\u09ac\u09be\u0982\u09b2\u09be\u09a6\u09c7\u09b6)\",\n    englishName: \"Bengali (Bangladesh)\"\n  },\n  'bs-BA': {\n    nativeName: \"Bosanski\",\n    englishName: \"Bosnian\"\n  },\n  'ca': {\n    nativeName: \"Catal\u00e0\",\n    englishName: \"Catalan\"\n  },\n  'ca-ES': {\n    nativeName: \"Catal\u00e0\",\n    englishName: \"Catalan\"\n  },\n  'cak': {\n    nativeName: \"Maya Kaqchikel\",\n    englishName: \"Kaqchikel\"\n  },\n  'ck-US': {\n    nativeName: \"\u13e3\u13b3\u13a9 (tsalagi)\",\n    englishName: \"Cherokee\"\n  },\n  'cs': {\n    nativeName: \"\u010ce\u0161tina\",\n    englishName: \"Czech\"\n  },\n  'cs-CZ': {\n    nativeName: \"\u010ce\u0161tina\",\n    englishName: \"Czech\"\n  },\n  'cy': {\n    nativeName: \"Cymraeg\",\n    englishName: \"Welsh\"\n  },\n  'cy-GB': {\n    nativeName: \"Cymraeg\",\n    englishName: \"Welsh\"\n  },\n  'da': {\n    nativeName: \"Dansk\",\n    englishName: \"Danish\"\n  },\n  'da-DK': {\n    nativeName: \"Dansk\",\n    englishName: \"Danish\"\n  },\n  'de': {\n    nativeName: \"Deutsch\",\n    englishName: \"German\"\n  },\n  'de-AT': {\n    nativeName: \"Deutsch (\u00d6sterreich)\",\n    englishName: \"German (Austria)\"\n  },\n  'de-DE': {\n    nativeName: \"Deutsch (Deutschland)\",\n    englishName: \"German (Germany)\"\n  },\n  'de-CH': {\n    nativeName: \"Deutsch (Schweiz)\",\n    englishName: \"German (Switzerland)\"\n  },\n  'dsb': {\n    nativeName: \"Dolnoserb\u0161\u0107ina\",\n    englishName: \"Lower Sorbian\"\n  },\n  'el': {\n    nativeName: \"\u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac\",\n    englishName: \"Greek\"\n  },\n  'el-GR': {\n    nativeName: \"\u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac\",\n    englishName: \"Greek (Greece)\"\n  },\n  'en': {\n    nativeName: \"English\",\n    englishName: \"English\"\n  },\n  'en-GB': {\n    nativeName: \"English (UK)\",\n    englishName: \"English (UK)\"\n  },\n  'en-AU': {\n    nativeName: \"English (Australia)\",\n    englishName: \"English (Australia)\"\n  },\n  'en-CA': {\n    nativeName: \"English (Canada)\",\n    englishName: \"English (Canada)\"\n  },\n  'en-IE': {\n    nativeName: \"English (Ireland)\",\n    englishName: \"English (Ireland)\"\n  },\n  'en-IN': {\n    nativeName: \"English (India)\",\n    englishName: \"English (India)\"\n  },\n  'en-PI': {\n    nativeName: \"English (Pirate)\",\n    englishName: \"English (Pirate)\"\n  },\n  'en-UD': {\n    nativeName: \"English (Upside Down)\",\n    englishName: \"English (Upside Down)\"\n  },\n  'en-US': {\n    nativeName: \"English (US)\",\n    englishName: \"English (US)\"\n  },\n  'en-ZA': {\n    nativeName: \"English (South Africa)\",\n    englishName: \"English (South Africa)\"\n  },\n  'en@pirate': {\n    nativeName: \"English (Pirate)\",\n    englishName: \"English (Pirate)\"\n  },\n  'eo': {\n    nativeName: \"Esperanto\",\n    englishName: \"Esperanto\"\n  },\n  'eo-EO': {\n    nativeName: \"Esperanto\",\n    englishName: \"Esperanto\"\n  },\n  'es': {\n    nativeName: \"Espa\u00f1ol\",\n    englishName: \"Spanish\"\n  },\n  'es-AR': {\n    nativeName: \"Espa\u00f1ol (Argentine)\",\n    englishName: \"Spanish (Argentina)\"\n  },\n  'es-419': {\n    nativeName: \"Espa\u00f1ol (Latinoam\u00e9rica)\",\n    englishName: \"Spanish (Latin America)\"\n  },\n  'es-CL': {\n    nativeName: \"Espa\u00f1ol (Chile)\",\n    englishName: \"Spanish (Chile)\"\n  },\n  'es-CO': {\n    nativeName: \"Espa\u00f1ol (Colombia)\",\n    englishName: \"Spanish (Colombia)\"\n  },\n  'es-EC': {\n    nativeName: \"Espa\u00f1ol (Ecuador)\",\n    englishName: \"Spanish (Ecuador)\"\n  },\n  'es-ES': {\n    nativeName: \"Espa\u00f1ol (Espa\u00f1a)\",\n    englishName: \"Spanish (Spain)\"\n  },\n  'es-LA': {\n    nativeName: \"Espa\u00f1ol (Latinoam\u00e9rica)\",\n    englishName: \"Spanish (Latin America)\"\n  },\n  'es-NI': {\n    nativeName: \"Espa\u00f1ol (Nicaragua)\",\n    englishName: \"Spanish (Nicaragua)\"\n  },\n  'es-MX': {\n    nativeName: \"Espa\u00f1ol (M\u00e9xico)\",\n    englishName: \"Spanish (Mexico)\"\n  },\n  'es-US': {\n    nativeName: \"Espa\u00f1ol (Estados Unidos)\",\n    englishName: \"Spanish (United States)\"\n  },\n  'es-VE': {\n    nativeName: \"Espa\u00f1ol (Venezuela)\",\n    englishName: \"Spanish (Venezuela)\"\n  },\n  'et': {\n    nativeName: \"eesti keel\",\n    englishName: \"Estonian\"\n  },\n  'et-EE': {\n    nativeName: \"Eesti (Estonia)\",\n    englishName: \"Estonian (Estonia)\"\n  },\n  'eu': {\n    nativeName: \"Euskara\",\n    englishName: \"Basque\"\n  },\n  'eu-ES': {\n    nativeName: \"Euskara\",\n    englishName: \"Basque\"\n  },\n  'fa': {\n    nativeName: \"\u0641\u0627\u0631\u0633\u06cc\",\n    englishName: \"Persian\"\n  },\n  'fa-IR': {\n    nativeName: \"\u0641\u0627\u0631\u0633\u06cc\",\n    englishName: \"Persian\"\n  },\n  'fb-LT': {\n    nativeName: \"Leet Speak\",\n    englishName: \"Leet\"\n  },\n  'ff': {\n    nativeName: \"Fulah\",\n    englishName: \"Fulah\"\n  },\n  'fi': {\n    nativeName: \"Suomi\",\n    englishName: \"Finnish\"\n  },\n  'fi-FI': {\n    nativeName: \"Suomi\",\n    englishName: \"Finnish\"\n  },\n  'fo-FO': {\n    nativeName: \"F\u00f8royskt\",\n    englishName: \"Faroese\"\n  },\n  'fr': {\n    nativeName: \"Fran\u00e7ais\",\n    englishName: \"French\"\n  },\n  'fr-CA': {\n    nativeName: \"Fran\u00e7ais (Canada)\",\n    englishName: \"French (Canada)\"\n  },\n  'fr-FR': {\n    nativeName: \"Fran\u00e7ais (France)\",\n    englishName: \"French (France)\"\n  },\n  'fr-BE': {\n    nativeName: \"Fran\u00e7ais (Belgique)\",\n    englishName: \"French (Belgium)\"\n  },\n  'fr-CH': {\n    nativeName: \"Fran\u00e7ais (Suisse)\",\n    englishName: \"French (Switzerland)\"\n  },\n  'fy-NL': {\n    nativeName: \"Frysk\",\n    englishName: \"Frisian (West)\"\n  },\n  'ga': {\n    nativeName: \"Gaeilge\",\n    englishName: \"Irish\"\n  },\n  'ga-IE': {\n    nativeName: \"Gaeilge (Gaelic)\",\n    englishName: \"Irish (Gaelic)\"\n  },\n  'gl': {\n    nativeName: \"Galego\",\n    englishName: \"Galician\"\n  },\n  'gl-ES': {\n    nativeName: \"Galego\",\n    englishName: \"Galician\"\n  },\n  'gn-PY': {\n    nativeName: \"Ava\u00f1e'\u1ebd\",\n    englishName: \"Guarani\"\n  },\n  'gu-IN': {\n    nativeName: \"\u0a97\u0ac1\u0a9c\u0ab0\u0abe\u0aa4\u0ac0\",\n    englishName: \"Gujarati\"\n  },\n  'gx-GR': {\n    nativeName: \"\u1f19\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ae \u1f00\u03c1\u03c7\u03b1\u03af\u03b1\",\n    englishName: \"Classical Greek\"\n  },\n  'he': {\n    nativeName: \"\u05e2\u05d1\u05e8\u05d9\u05ea\u200f\",\n    englishName: \"Hebrew\"\n  },\n  'he-IL': {\n    nativeName: \"\u05e2\u05d1\u05e8\u05d9\u05ea\u200f\",\n    englishName: \"Hebrew\"\n  },\n  'hi': {\n    nativeName: \"\u0939\u093f\u0928\u094d\u0926\u0940\",\n    englishName: \"Hindi\"\n  },\n  'hi-IN': {\n    nativeName: \"\u0939\u093f\u0928\u094d\u0926\u0940\",\n    englishName: \"Hindi\"\n  },\n  'hr': {\n    nativeName: \"Hrvatski\",\n    englishName: \"Croatian\"\n  },\n  'hr-HR': {\n    nativeName: \"Hrvatski\",\n    englishName: \"Croatian\"\n  },\n  'hsb': {\n    nativeName: \"Hornjoserb\u0161\u0107ina\",\n    englishName: \"Upper Sorbian\"\n  },\n  'ht': {\n    nativeName: \"Krey\u00f2l\",\n    englishName: \"Haitian Creole\"\n  },\n  'hu': {\n    nativeName: \"Magyar\",\n    englishName: \"Hungarian\"\n  },\n  'hu-HU': {\n    nativeName: \"Magyar\",\n    englishName: \"Hungarian\"\n  },\n  'hy-AM': {\n    nativeName: \"\u0540\u0561\u0575\u0565\u0580\u0565\u0576\",\n    englishName: \"Armenian\"\n  },\n  'id': {\n    nativeName: \"Bahasa Indonesia\",\n    englishName: \"Indonesian\"\n  },\n  'id-ID': {\n    nativeName: \"Bahasa Indonesia\",\n    englishName: \"Indonesian\"\n  },\n  'is': {\n    nativeName: \"\u00cdslenska\",\n    englishName: \"Icelandic\"\n  },\n  'is-IS': {\n    nativeName: \"\u00cdslenska (Iceland)\",\n    englishName: \"Icelandic (Iceland)\"\n  },\n  'it': {\n    nativeName: \"Italiano\",\n    englishName: \"Italian\"\n  },\n  'it-IT': {\n    nativeName: \"Italiano\",\n    englishName: \"Italian\"\n  },\n  'ja': {\n    nativeName: \"\u65e5\u672c\u8a9e\",\n    englishName: \"Japanese\"\n  },\n  'ja-JP': {\n    nativeName: \"\u65e5\u672c\u8a9e\",\n    englishName: \"Japanese\"\n  },\n  'jv-ID': {\n    nativeName: \"Basa Jawa\",\n    englishName: \"Javanese\"\n  },\n  'ka-GE': {\n    nativeName: \"\u10e5\u10d0\u10e0\u10d7\u10e3\u10da\u10d8\",\n    englishName: \"Georgian\"\n  },\n  'kk-KZ': {\n    nativeName: \"\u049a\u0430\u0437\u0430\u049b\u0448\u0430\",\n    englishName: \"Kazakh\"\n  },\n  'km': {\n    nativeName: \"\u1797\u17b6\u179f\u17b6\u1781\u17d2\u1798\u17c2\u179a\",\n    englishName: \"Khmer\"\n  },\n  'km-KH': {\n    nativeName: \"\u1797\u17b6\u179f\u17b6\u1781\u17d2\u1798\u17c2\u179a\",\n    englishName: \"Khmer\"\n  },\n  'kab': {\n    nativeName: \"Taqbaylit\",\n    englishName: \"Kabyle\"\n  },\n  'kn': {\n    nativeName: \"\u0c95\u0ca8\u0ccd\u0ca8\u0ca1\",\n    englishName: \"Kannada\"\n  },\n  'kn-IN': {\n    nativeName: \"\u0c95\u0ca8\u0ccd\u0ca8\u0ca1 (India)\",\n    englishName: \"Kannada (India)\"\n  },\n  'ko': {\n    nativeName: \"\ud55c\uad6d\uc5b4\",\n    englishName: \"Korean\"\n  },\n  'ko-KR': {\n    nativeName: \"\ud55c\uad6d\uc5b4 (\u97e9\u56fd)\",\n    englishName: \"Korean (Korea)\"\n  },\n  'ku-TR': {\n    nativeName: \"Kurd\u00ee\",\n    englishName: \"Kurdish\"\n  },\n  'la': {\n    nativeName: \"Latin\",\n    englishName: \"Latin\"\n  },\n  'la-VA': {\n    nativeName: \"Latin\",\n    englishName: \"Latin\"\n  },\n  'lb': {\n    nativeName: \"L\u00ebtzebuergesch\",\n    englishName: \"Luxembourgish\"\n  },\n  'li-NL': {\n    nativeName: \"L\u00e8mb\u00f6rgs\",\n    englishName: \"Limburgish\"\n  },\n  'lt': {\n    nativeName: \"Lietuvi\u0173\",\n    englishName: \"Lithuanian\"\n  },\n  'lt-LT': {\n    nativeName: \"Lietuvi\u0173\",\n    englishName: \"Lithuanian\"\n  },\n  'lv': {\n    nativeName: \"Latvie\u0161u\",\n    englishName: \"Latvian\"\n  },\n  'lv-LV': {\n    nativeName: \"Latvie\u0161u\",\n    englishName: \"Latvian\"\n  },\n  'mai': {\n    nativeName: \"\u092e\u0948\u0925\u093f\u0932\u0940, \u09ae\u09c8\u09a5\u09bf\u09b2\u09c0\",\n    englishName: \"Maithili\"\n  },\n  'mg-MG': {\n    nativeName: \"Malagasy\",\n    englishName: \"Malagasy\"\n  },\n  'mk': {\n    nativeName: \"\u041c\u0430\u043a\u0435\u0434\u043e\u043d\u0441\u043a\u0438\",\n    englishName: \"Macedonian\"\n  },\n  'mk-MK': {\n    nativeName: \"\u041c\u0430\u043a\u0435\u0434\u043e\u043d\u0441\u043a\u0438 (\u041c\u0430\u043a\u0435\u0434\u043e\u043d\u0441\u043a\u0438)\",\n    englishName: \"Macedonian (Macedonian)\"\n  },\n  'ml': {\n    nativeName: \"\u0d2e\u0d32\u0d2f\u0d3e\u0d33\u0d02\",\n    englishName: \"Malayalam\"\n  },\n  'ml-IN': {\n    nativeName: \"\u0d2e\u0d32\u0d2f\u0d3e\u0d33\u0d02\",\n    englishName: \"Malayalam\"\n  },\n  'mn-MN': {\n    nativeName: \"\u041c\u043e\u043d\u0433\u043e\u043b\",\n    englishName: \"Mongolian\"\n  },\n  'mr': {\n    nativeName: \"\u092e\u0930\u093e\u0920\u0940\",\n    englishName: \"Marathi\"\n  },\n  'mr-IN': {\n    nativeName: \"\u092e\u0930\u093e\u0920\u0940\",\n    englishName: \"Marathi\"\n  },\n  'ms': {\n    nativeName: \"Bahasa Melayu\",\n    englishName: \"Malay\"\n  },\n  'ms-MY': {\n    nativeName: \"Bahasa Melayu\",\n    englishName: \"Malay\"\n  },\n  'mt': {\n    nativeName: \"Malti\",\n    englishName: \"Maltese\"\n  },\n  'mt-MT': {\n    nativeName: \"Malti\",\n    englishName: \"Maltese\"\n  },\n  'my': {\n    nativeName: \"\u1017\u1019\u102c\u1005\u1000\u102c\",\n    englishName: \"Burmese\"\n  },\n  'no': {\n    nativeName: \"Norsk\",\n    englishName: \"Norwegian\"\n  },\n  'nb': {\n    nativeName: \"Norsk (bokm\u00e5l)\",\n    englishName: \"Norwegian (bokmal)\"\n  },\n  'nb-NO': {\n    nativeName: \"Norsk (bokm\u00e5l)\",\n    englishName: \"Norwegian (bokmal)\"\n  },\n  'ne': {\n    nativeName: \"\u0928\u0947\u092a\u093e\u0932\u0940\",\n    englishName: \"Nepali\"\n  },\n  'ne-NP': {\n    nativeName: \"\u0928\u0947\u092a\u093e\u0932\u0940\",\n    englishName: \"Nepali\"\n  },\n  'nl': {\n    nativeName: \"Nederlands\",\n    englishName: \"Dutch\"\n  },\n  'nl-BE': {\n    nativeName: \"Nederlands (Belgi\u00eb)\",\n    englishName: \"Dutch (Belgium)\"\n  },\n  'nl-NL': {\n    nativeName: \"Nederlands (Nederland)\",\n    englishName: \"Dutch (Netherlands)\"\n  },\n  'nn-NO': {\n    nativeName: \"Norsk (nynorsk)\",\n    englishName: \"Norwegian (nynorsk)\"\n  },\n  'oc': {\n    nativeName: \"Occitan\",\n    englishName: \"Occitan\"\n  },\n  'or-IN': {\n    nativeName: \"\u0b13\u0b21\u0b3c\u0b3f\u0b06\",\n    englishName: \"Oriya\"\n  },\n  'pa': {\n    nativeName: \"\u0a2a\u0a70\u0a1c\u0a3e\u0a2c\u0a40\",\n    englishName: \"Punjabi\"\n  },\n  'pa-IN': {\n    nativeName: \"\u0a2a\u0a70\u0a1c\u0a3e\u0a2c\u0a40 (\u0a2d\u0a3e\u0a30\u0a24 \u0a28\u0a42\u0a70)\",\n    englishName: \"Punjabi (India)\"\n  },\n  'pl': {\n    nativeName: \"Polski\",\n    englishName: \"Polish\"\n  },\n  'pl-PL': {\n    nativeName: \"Polski\",\n    englishName: \"Polish\"\n  },\n  'ps-AF': {\n    nativeName: \"\u067e\u069a\u062a\u0648\",\n    englishName: \"Pashto\"\n  },\n  'pt': {\n    nativeName: \"Portugu\u00eas\",\n    englishName: \"Portuguese\"\n  },\n  'pt-BR': {\n    nativeName: \"Portugu\u00eas (Brasil)\",\n    englishName: \"Portuguese (Brazil)\"\n  },\n  'pt-PT': {\n    nativeName: \"Portugu\u00eas (Portugal)\",\n    englishName: \"Portuguese (Portugal)\"\n  },\n  'qu-PE': {\n    nativeName: \"Qhichwa\",\n    englishName: \"Quechua\"\n  },\n  'rm-CH': {\n    nativeName: \"Rumantsch\",\n    englishName: \"Romansh\"\n  },\n  'ro': {\n    nativeName: \"Rom\u00e2n\u0103\",\n    englishName: \"Romanian\"\n  },\n  'ro-RO': {\n    nativeName: \"Rom\u00e2n\u0103\",\n    englishName: \"Romanian\"\n  },\n  'ru': {\n    nativeName: \"\u0420\u0443\u0441\u0441\u043a\u0438\u0439\",\n    englishName: \"Russian\"\n  },\n  'ru-RU': {\n    nativeName: \"\u0420\u0443\u0441\u0441\u043a\u0438\u0439\",\n    englishName: \"Russian\"\n  },\n  'sa-IN': {\n    nativeName: \"\u0938\u0902\u0938\u094d\u0915\u0943\u0924\u092e\u094d\",\n    englishName: \"Sanskrit\"\n  },\n  'se-NO': {\n    nativeName: \"Davvis\u00e1megiella\",\n    englishName: \"Northern S\u00e1mi\"\n  },\n  'si-LK': {\n    nativeName: \"\u0db4\u0dc5\u0dcf\u0dad\",\n    englishName: \"Sinhala (Sri Lanka)\"\n  },\n  'sk': {\n    nativeName: \"Sloven\u010dina\",\n    englishName: \"Slovak\"\n  },\n  'sk-SK': {\n    nativeName: \"Sloven\u010dina (Slovakia)\",\n    englishName: \"Slovak (Slovakia)\"\n  },\n  'sl': {\n    nativeName: \"Sloven\u0161\u010dina\",\n    englishName: \"Slovenian\"\n  },\n  'sl-SI': {\n    nativeName: \"Sloven\u0161\u010dina\",\n    englishName: \"Slovenian\"\n  },\n  'so-SO': {\n    nativeName: \"Soomaaliga\",\n    englishName: \"Somali\"\n  },\n  'sq': {\n    nativeName: \"Shqip\",\n    englishName: \"Albanian\"\n  },\n  'sq-AL': {\n    nativeName: \"Shqip\",\n    englishName: \"Albanian\"\n  },\n  'sr': {\n    nativeName: \"\u0421\u0440\u043f\u0441\u043a\u0438\",\n    englishName: \"Serbian\"\n  },\n  'sr-RS': {\n    nativeName: \"\u0421\u0440\u043f\u0441\u043a\u0438 (Serbia)\",\n    englishName: \"Serbian (Serbia)\"\n  },\n  'su': {\n    nativeName: \"Basa Sunda\",\n    englishName: \"Sundanese\"\n  },\n  'sv': {\n    nativeName: \"Svenska\",\n    englishName: \"Swedish\"\n  },\n  'sv-SE': {\n    nativeName: \"Svenska\",\n    englishName: \"Swedish\"\n  },\n  'sw': {\n    nativeName: \"Kiswahili\",\n    englishName: \"Swahili\"\n  },\n  'sw-KE': {\n    nativeName: \"Kiswahili\",\n    englishName: \"Swahili (Kenya)\"\n  },\n  'ta': {\n    nativeName: \"\u0ba4\u0bae\u0bbf\u0bb4\u0bcd\",\n    englishName: \"Tamil\"\n  },\n  'ta-IN': {\n    nativeName: \"\u0ba4\u0bae\u0bbf\u0bb4\u0bcd\",\n    englishName: \"Tamil\"\n  },\n  'te': {\n    nativeName: \"\u0c24\u0c46\u0c32\u0c41\u0c17\u0c41\",\n    englishName: \"Telugu\"\n  },\n  'te-IN': {\n    nativeName: \"\u0c24\u0c46\u0c32\u0c41\u0c17\u0c41\",\n    englishName: \"Telugu\"\n  },\n  'tg': {\n    nativeName: \"\u0437\u0430\u0431\u043e\u0301\u043d\u0438 \u0442\u043e\u04b7\u0438\u043a\u04e3\u0301\",\n    englishName: \"Tajik\"\n  },\n  'tg-TJ': {\n    nativeName: \"\u0442\u043e\u04b7\u0438\u043a\u04e3\",\n    englishName: \"Tajik\"\n  },\n  'th': {\n    nativeName: \"\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22\",\n    englishName: \"Thai\"\n  },\n  'th-TH': {\n    nativeName: \"\u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22 (\u0e1b\u0e23\u0e30\u0e40\u0e17\u0e28\u0e44\u0e17\u0e22)\",\n    englishName: \"Thai (Thailand)\"\n  },\n  'tl': {\n    nativeName: \"Filipino\",\n    englishName: \"Filipino\"\n  },\n  'tl-PH': {\n    nativeName: \"Filipino\",\n    englishName: \"Filipino\"\n  },\n  'tlh': {\n    nativeName: \"tlhIngan-Hol\",\n    englishName: \"Klingon\"\n  },\n  'tr': {\n    nativeName: \"T\u00fcrk\u00e7e\",\n    englishName: \"Turkish\"\n  },\n  'tr-TR': {\n    nativeName: \"T\u00fcrk\u00e7e\",\n    englishName: \"Turkish\"\n  },\n  'tt-RU': {\n    nativeName: \"\u0442\u0430\u0442\u0430\u0440\u0447\u0430\",\n    englishName: \"Tatar\"\n  },\n  'uk': {\n    nativeName: \"\u0423\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430\",\n    englishName: \"Ukrainian\"\n  },\n  'uk-UA': {\n    nativeName: \"\u0423\u043a\u0440\u0430\u0457\u043d\u0441\u044c\u043a\u0430\",\n    englishName: \"Ukrainian\"\n  },\n  'ur': {\n    nativeName: \"\u0627\u0631\u062f\u0648\",\n    englishName: \"Urdu\"\n  },\n  'ur-PK': {\n    nativeName: \"\u0627\u0631\u062f\u0648\",\n    englishName: \"Urdu\"\n  },\n  'uz': {\n    nativeName: \"O'zbek\",\n    englishName: \"Uzbek\"\n  },\n  'uz-UZ': {\n    nativeName: \"O'zbek\",\n    englishName: \"Uzbek\"\n  },\n  'vi': {\n    nativeName: \"Ti\u1ebfng Vi\u1ec7t\",\n    englishName: \"Vietnamese\"\n  },\n  'vi-VN': {\n    nativeName: \"Ti\u1ebfng Vi\u1ec7t\",\n    englishName: \"Vietnamese\"\n  },\n  'xh-ZA': {\n    nativeName: \"isiXhosa\",\n    englishName: \"Xhosa\"\n  },\n  'yi': {\n    nativeName: \"\u05d9\u05d9\u05b4\u05d3\u05d9\u05e9\",\n    englishName: \"Yiddish\"\n  },\n  'yi-DE': {\n    nativeName: \"\u05d9\u05d9\u05b4\u05d3\u05d9\u05e9 (German)\",\n    englishName: \"Yiddish (German)\"\n  },\n  'zh': {\n    nativeName: \"\u4e2d\u6587\",\n    englishName: \"Chinese\"\n  },\n  'zh-Hans': {\n    nativeName: \"\u4e2d\u6587\u7b80\u4f53\",\n    englishName: \"Chinese Simplified\"\n  },\n  'zh-Hant': {\n    nativeName: \"\u4e2d\u6587\u7e41\u9ad4\",\n    englishName: \"Chinese Traditional\"\n  },\n  'zh-CN': {\n    nativeName: \"\u4e2d\u6587\uff08\u4e2d\u56fd\uff09\",\n    englishName: \"Chinese Simplified (China)\"\n  },\n  'zh-HK': {\n    nativeName: \"\u4e2d\u6587\uff08\u9999\u6e2f\uff09\",\n    englishName: \"Chinese Traditional (Hong Kong)\"\n  },\n  'zh-SG': {\n    nativeName: \"\u4e2d\u6587\uff08\u65b0\u52a0\u5761\uff09\",\n    englishName: \"Chinese Simplified (Singapore)\"\n  },\n  'zh-TW': {\n    nativeName: \"\u4e2d\u6587\uff08\u53f0\u7063\uff09\",\n    englishName: \"Chinese Traditional (Taiwan)\"\n  },\n  'zu-ZA': {\n    nativeName: \"isiZulu\",\n    englishName: \"Zulu\"\n  }\n};\n\n// We normalize language codes to all lower case, while this table\n// uses lower-UPPER format for 4 letter codes. This duplicates all entries\n// in lower case. It's a bit hacky, but lets us keep in sync with updates\n// to the table without needing to normalize it to lower-lower every time.\nfor (let key of Object.keys(mozilla.LanguageMapping)) {\n  mozilla.LanguageMapping[key.toLowerCase()] = mozilla.LanguageMapping[key];\n}","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\ngoog.provide('shaka.ui.Localization');\ngoog.provide('shaka.ui.Localization.ConflictResolution');\n\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.FakeEventTarget');\ngoog.require('shaka.util.Iterables');\ngoog.require('shaka.util.LanguageUtils');\n\n\n// TODO: link to the design and usage documentation here\n// b/117679670\n/**\n * Localization system provided by the shaka ui library.\n * It can be used to store the various localized forms of\n * strings that are expected to be displayed to the user.\n * If a string is not available, it will return the localized\n * form in the closest related locale.\n *\n * @implements {EventTarget}\n * @final\n * @export\n */\nshaka.ui.Localization = class {\n  /**\n   * @param {string} fallbackLocale\n   *    The fallback locale that should be used. It will be assumed that this\n   *    locale should have entries for just about every request.\n   */\n  constructor(fallbackLocale) {\n    /** @private {string} */\n    this.fallbackLocale_ = shaka.util.LanguageUtils.normalize(fallbackLocale);\n\n    /**\n     * The current mappings that will be used when requests are made. Since\n     * nothing has been loaded yet, there will be nothing in this map.\n     *\n     * @private {!Map.<string, string>}\n     */\n    this.currentMap_ = new Map();\n\n    /**\n     * The locales that were used when creating |currentMap_|. Since we don't\n     * have anything when we first initialize, an empty set means \"no\n     * preference\".\n     *\n     * @private {!Set.<string>}\n     */\n    this.currentLocales_ = new Set();\n\n    /**\n     * A map of maps where:\n     *  - The outer map is a mapping from locale code to localizations.\n     *  - The inner map is a mapping from id to localized text.\n     *\n     * @private {!Map.<string, !Map.<string, string>>}\n     */\n    this.localizations_ = new Map();\n\n    /**\n     * The event target that we will wrap so that we can fire events\n     * without having to manage the listeners directly.\n     *\n     * @private {!EventTarget}\n     */\n    this.events_ = new shaka.util.FakeEventTarget();\n  }\n\n  /**\n   * @override\n   * @export\n   */\n  addEventListener(type, listener, options) {\n    this.events_.addEventListener(type, listener, options);\n  }\n\n  /**\n   * @override\n   * @export\n   */\n  removeEventListener(type, listener, options) {\n    // Apparently Closure says we can be passed a null |option|, but we can't\n    // pass a null option, so if we get have a null-like |option|, force it to\n    // be undefined.\n    this.events_.removeEventListener(type, listener, options || undefined);\n  }\n\n  /**\n   * @override\n   * @export\n   */\n  dispatchEvent(event) {\n    return this.events_.dispatchEvent(event);\n  }\n\n  /**\n   * Request the localization system to change which locale it serves. If any of\n   * of the preferred locales cannot be found, the localization system will fire\n   * an event identifying which locales it does not know. The localization\n   * system will then continue to operate using the closest matches it has.\n   *\n   * @param {!Iterable.<string>} locales\n   *    The locale codes for the requested locales in order of preference.\n   * @export\n   */\n  changeLocale(locales) {\n    const Class = shaka.ui.Localization;\n\n    // Normalize the locale so that matching will be easier. We need to reset\n    // our internal set of locales so that we have the same order as the new\n    // set.\n    this.currentLocales_.clear();\n    for (const locale of locales) {\n      this.currentLocales_.add(shaka.util.LanguageUtils.normalize(locale));\n    }\n\n    this.updateCurrentMap_();\n\n    this.events_.dispatchEvent(new shaka.util.FakeEvent(Class.LOCALE_CHANGED));\n\n    // Check if we have support for the exact locale requested. Even through we\n    // will do our best to return the most relevant results, we need to tell\n    // app that some data may be missing.\n    const missing = shaka.util.Iterables.filter(\n        this.currentLocales_,\n        (locale) => !this.localizations_.has(locale));\n\n    if (missing.length) {\n      /** @type {shaka.ui.Localization.UnknownLocalesEvent} */\n      const e = {\n        locales: missing,\n      };\n\n      this.events_.dispatchEvent(new shaka.util.FakeEvent(\n          Class.UNKNOWN_LOCALES,\n          e));\n    }\n  }\n\n  /**\n   * Insert a set of localizations for a single locale. This will amend the\n   * existing localizations for the given locale.\n   *\n   * @param {string} locale\n   *   The locale that the localizations should be added to.\n   * @param {!Map.<string, string>} localizations\n   *   A mapping of id to localized text that should used to modify the internal\n   *   collection of localizations.\n   * @param {shaka.ui.Localization.ConflictResolution=} conflictResolution\n   *   The strategy used to resolve conflicts when the id of an existing entry\n   *   matches the id of a new entry. Default to |USE_NEW|, where the new\n   *   entry will replace the old entry.\n   * @return {!shaka.ui.Localization}\n   *   Returns |this| so that calls can be chained.\n   * @export\n   */\n  insert(locale, localizations, conflictResolution) {\n    const Class = shaka.ui.Localization;\n    const ConflictResolution = shaka.ui.Localization.ConflictResolution;\n    const FakeEvent = shaka.util.FakeEvent;\n\n    // Normalize the locale so that matching will be easier.\n    locale = shaka.util.LanguageUtils.normalize(locale);\n\n    // Default |conflictResolution| to |USE_NEW| if it was not given. Doing it\n    // here because it would create too long of a parameter list.\n    if (conflictResolution === undefined) {\n      conflictResolution = ConflictResolution.USE_NEW;\n    }\n\n    // Make sure we have an entry for the locale because we are about to\n    // write to it.\n    const table = this.localizations_.get(locale) || new Map();\n    localizations.forEach((value, id) => {\n      // Set the value if we don't have an old value or if we are to replace\n      // the old value with the new value.\n      if (!table.has(id) || conflictResolution == ConflictResolution.USE_NEW) {\n        table.set(id, value);\n      }\n    });\n    this.localizations_.set(locale, table);\n\n    // The data we use to make our map may have changed, update the map we pull\n    // data from.\n    this.updateCurrentMap_();\n\n    this.events_.dispatchEvent(new FakeEvent(Class.LOCALE_UPDATED));\n\n    return this;\n  }\n\n  /**\n   * Set the value under each key in |dictionary| to the resolved value.\n   * Convenient for apps with some kind of data binding system.\n   *\n   * Equivalent to:\n   *    for (const key of dictionary.keys()) {\n   *      dictionary.set(key, localization.resolve(key));\n   *    }\n   *\n   * @param {!Map.<string, string>} dictionary\n   * @export\n   */\n  resolveDictionary(dictionary) {\n    for (const key of dictionary.keys()) {\n      // Since we are not changing what keys are in the map, it is safe to\n      // update the map while iterating it.\n      dictionary.set(key, this.resolve(key));\n    }\n  }\n\n  /**\n   * Request the localized string under the given id. If there is no localized\n   * version of the string, then the fallback localization will be given\n   * (\"en\" version). If there is no fallback localization, a non-null empty\n   * string will be returned.\n   *\n   * @param {string} id The id for the localization entry.\n   * @return {string}\n   * @export\n   */\n  resolve(id) {\n    const Class = shaka.ui.Localization;\n    const FakeEvent = shaka.util.FakeEvent;\n\n    /** @type {string} */\n    const result = this.currentMap_.get(id);\n\n    // If we have a result, it means that it was found in either the current\n    // locale or one of the fall-backs.\n    if (result) {\n      return result;\n    }\n\n    // Since we could not find the result, it means it is missing from a large\n    // number of locales. Since we don't know which ones we actually checked,\n    // just tell them the preferred locale.\n\n    /** @type {shaka.ui.Localization.UnknownLocalizationEvent} */\n    const e = {\n      // Make a copy to avoid leaking references.\n      'locales': Array.from(this.currentLocales_),\n      'missing': id,\n    };\n\n    this.events_.dispatchEvent(new FakeEvent(Class.UNKNOWN_LOCALIZATION, e));\n\n    return '';\n  }\n\n  /**\n   * @private\n   */\n  updateCurrentMap_() {\n    const LanguageUtils = shaka.util.LanguageUtils;\n\n    /** @type {!Map.<string, !Map.<string, string>>} */\n    const localizations = this.localizations_;\n    /** @type {string} */\n    const fallbackLocale = this.fallbackLocale_;\n    /** @type {!Iterable.<string>} */\n    const preferredLocales = this.currentLocales_;\n\n    /**\n     * We want to create a single map that gives us the best possible responses\n     * for the current locale. To do this, we will go through be loosest\n     * matching locales to the best matching locales. By the time we finish\n     * flattening the maps, the best result will be left under each key.\n     *\n     * Get the locales we should use in order of preference. For example with\n     * preferred locales of \"elvish-WOODLAND\" and \"dwarfish-MOUNTAIN\" and a\n     * fallback of \"common-HUMAN\", this would look like:\n     *\n     * new Set([\n     *    // Preference 1\n     *    'elvish-WOODLAND',\n     *    // Preference 1 Base\n     *    'elvish',\n     *    // Preference 1 Siblings\n     *    'elvish-WOODLAND', 'elvish-WESTWOOD', 'elvish-MARSH,\n     *    // Preference 2\n     *    'dwarfish-MOUNTAIN',\n     *    // Preference 2 base\n     *    'dwarfish',\n     *    // Preference 2 Siblings\n     *    'dwarfish-MOUNTAIN', 'dwarfish-NORTH', \"dwarish-SOUTH\",\n     *    // Fallback\n     *    'common-HUMAN',\n     * ])\n     *\n     * @type {!Set.<string>}\n     */\n    const localeOrder = new Set();\n\n    for (const locale of preferredLocales) {\n      localeOrder.add(locale);\n      localeOrder.add(LanguageUtils.getBase(locale));\n\n      const siblings = shaka.util.Iterables.filter(\n          localizations.keys(),\n          (other) => LanguageUtils.areSiblings(other, locale));\n\n      // Sort the siblings so that they will always appear in the same order\n      // regardless of the order of |localizations|.\n      siblings.sort();\n      for (const locale of siblings) { localeOrder.add(locale); }\n\n      const children = shaka.util.Iterables.filter(\n          localizations.keys(),\n          (other) => LanguageUtils.getBase(other) == locale);\n\n      // Sort the children so that they will always appear in the same order\n      // regardless of the order of |localizations|.\n      children.sort();\n      for (const locale of children) { localeOrder.add(locale); }\n    }\n\n    // Finally we add our fallback (something that should have all expected\n    // entries).\n    localeOrder.add(fallbackLocale);\n\n    // Add all the sibling maps.\n    const mergeOrder = [];\n    for (const locale of localeOrder) {\n      const map = localizations.get(locale);\n      if (map) { mergeOrder.push(map); }\n    }\n\n    // We need to reverse the merge order. We build the order based on most\n    // preferred to least preferred. However, the merge will work in the\n    // opposite order so we must reverse our maps so that the most preferred\n    // options will be applied last.\n    mergeOrder.reverse();\n\n    // Merge all the options into our current map.\n    this.currentMap_.clear();\n    for (const map of mergeOrder) {\n      map.forEach((value, key) => {\n        this.currentMap_.set(key, value);\n      });\n    }\n\n    // Go through every key we have and see if any preferred locales are\n    // missing entries. This will allow app developers to find holes in their\n    // localizations.\n\n    /** @type {!Iterable.<string>} */\n    const allKeys = this.currentMap_.keys();\n\n    /** @type {!Set.<string>} */\n    const missing = new Set();\n\n    for (const locale of this.currentLocales_) {\n      // Make sure we have a non-null map. The diff will be easier that way.\n      const map = this.localizations_.get(locale) || new Map();\n      shaka.ui.Localization.findMissingKeys_(map, allKeys, missing);\n    }\n\n    if (missing.size > 0) {\n      /** @type {shaka.ui.Localization.MissingLocalizationsEvent} */\n      const e = {\n        // Make a copy of the preferred locales to avoid leaking references.\n        locales: Array.from(preferredLocales),\n        // Because most people like arrays more than sets, convert the set to\n        // an array.\n        missing: Array.from(missing),\n      };\n\n      this.events_.dispatchEvent(new shaka.util.FakeEvent(\n          shaka.ui.Localization.MISSING_LOCALIZATIONS,\n          e));\n    }\n  }\n\n  /**\n   * Go through a map and add all the keys that are in |keys| but not in\n   * |map| to |missing|.\n   *\n   * @param {!Map.<string, string>} map\n   * @param {!Iterable.<string>} keys\n   * @param {!Set.<string>} missing\n   * @private\n   */\n  static findMissingKeys_(map, keys, missing) {\n    for (const key of keys) {\n      // Check if the value is missing so that we are sure that it does not\n      // have a value. We get the value and not just |has| so that a null or\n      // empty string will fail this check.\n      if (!map.get(key)) {\n        missing.add(key);\n      }\n    }\n  }\n};\n\n\n/**\n * An enum for how the localization system should resolve conflicts between old\n * translations and new translations.\n *\n * @enum {number}\n * @export\n */\nshaka.ui.Localization.ConflictResolution = {\n  'USE_OLD': 0,\n  'USE_NEW': 1,\n};\n\n/**\n * The event name for when locales were requested, but we could not find any\n * entries for them. The localization system will continue to use the closest\n * matches it has.\n *\n * @const {string}\n */\nshaka.ui.Localization.UNKNOWN_LOCALES = 'unknown-locales';\n\n/**\n * The event name for when an entry could not be found in the preferred locale,\n * related locales, or the fallback locale.\n *\n * @const {string}\n */\nshaka.ui.Localization.UNKNOWN_LOCALIZATION = 'unknown-localization';\n\n/**\n * The event name for when entries are missing from the user's preferred\n * locale, but we were able to find an entry in a related locale or the fallback\n * locale.\n *\n * @const {string}\n */\nshaka.ui.Localization.MISSING_LOCALIZATIONS = 'missing-localizations';\n\n/**\n * The event name for when a new locale has been requested and any previously\n * resolved values should be updated.\n *\n * @const {string}\n */\nshaka.ui.Localization.LOCALE_CHANGED = 'locale-changed';\n\n/**\n * The event name for when |insert| was called and it changed entries that could\n * affect previously resolved values.\n *\n * @const {string}\n */\nshaka.ui.Localization.LOCALE_UPDATED = 'locale-updated';\n\n/**\n * @typedef {{\n *   'locales': !Array.<string>\n * }}\n *\n * @property {!Array.<string>} locales\n *    The locales that the user wanted but could not be found.\n * @exportDoc\n */\nshaka.ui.Localization.UnknownLocalesEvent;\n\n/**\n * @typedef {{\n *   'locales': !Array.<string>,\n *   'missing': string\n * }}\n *\n * @property {!Array.<string>} locales\n *    The locales that the user wanted.\n * @property {string} missing\n *    The id of the unknown entry.\n * @exportDoc\n */\nshaka.ui.Localization.UnknownLocalizationEvent;\n\n/**\n * @typedef {{\n *   'locales': !Array.<string>,\n *   'missing': !Array.<string>\n * }}\n *\n * @property {string} locale\n *    The locale that the user wanted.\n * @property {!Array.<string>} missing\n *    The ids of the missing entries.\n * @exportDoc\n */\nshaka.ui.Localization.MissingLocalizationsEvent;\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n// This file is auto-generated. DO NOT EDIT THIS FILE. If you need to:\n//   - change which locales are in this file, update \"build/locales.json\"\n//   - change an entry for a specific locale, update \"build/locales.json\"\n//   - change anything else, update \"build/generate-locales.py\".\n//\n// To regenerate this file, run \"build/generate-locales.py\".\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\ngoog.provide('shaka.ui.Locales');\ngoog.provide('shaka.ui.Locales.Ids');\ngoog.require('shaka.ui.Localization');\n\n/**\n * Insert all localization data for the UI into |localization|. This should be\n * done BEFORE any listeners are added to the localization system (to avoid\n * callbacks for each insert) and should be done BEFORE changing to the initial\n * preferred locale (reduces the work needed to update the internal state after\n * each insert).\n *\n * @param {!shaka.ui.Localization} localization\n */\n\nshaka.ui.Locales.apply = function(localization) {\n  localization.insert('ar', new Map([\n    ['1050953507607739202', '\u0627\u0644\u062d\u062c\u0645'],\n    ['1077325112364709655', '\u0631\u062c\u0648\u0639'],\n    ['1142734805932039923', '\u0625\u0631\u062c\u0627\u0639'],\n    ['1774834209035716827', '\u062a\u0642\u062f\u064a\u0645 \u0633\u0631\u064a\u0639'],\n    ['1911090580951495029', '\u0627\u0644\u062a\u0631\u062c\u0645\u0629'],\n    ['2023925063728908356', '\u0625\u0644\u063a\u0627\u0621 \u0643\u062a\u0645 \u0627\u0644\u0635\u0648\u062a'],\n    ['298626259350585300', '\u063a\u064a\u0631 \u0645\u0639\u0631\u0648\u0641\u0629'],\n    ['3045980486001972586', '\u0645\u0628\u0627\u0634\u0631'],\n    ['3278592358864783064', '\u0627\u0644\u0644\u063a\u0629'],\n    ['4259064532355692191', '\u062a\u0644\u0642\u0627\u0626\u064a'],\n    ['4388316720828367903', '\u0625\u0639\u062f\u0627\u062f\u0627\u062a \u0625\u0636\u0627\u0641\u064a\u0629'],\n    ['5553522235935533682', '\u0634\u0631\u064a\u0637 \u062a\u0645\u0631\u064a\u0631 \u0627\u0644\u0628\u062d\u062b'],\n    ['5963689277976480680', '\u0643\u062a\u0645 \u0627\u0644\u0635\u0648\u062a'],\n    ['6161306839322897077', '\u0625\u0646\u0647\u0627\u0621 \u0648\u0636\u0639 \u0645\u0644\u0621 \u0627\u0644\u0634\u0627\u0634\u0629'],\n    ['7071612439610534706', '\u0625\u0631\u0633\u0627\u0644...'],\n    ['8145129506114534451', '\u0625\u064a\u0642\u0627\u0641'],\n    ['8345190086337560158', '\u0645\u0644\u0621 \u0627\u0644\u0634\u0627\u0634\u0629'],\n    ['836055097473758014', '\u062a\u0634\u063a\u064a\u0644'],\n    ['9042260521669277115', '\u0625\u064a\u0642\u0627\u0641 \u0645\u0624\u0642\u062a'],\n  ]));\n  localization.insert('de', new Map([\n    ['1050953507607739202', 'Lautst\u00e4rke'],\n    ['1077325112364709655', 'Zur\u00fcck'],\n    ['1142734805932039923', 'Zur\u00fcckspulen'],\n    ['1774834209035716827', 'Vorspulen'],\n    ['1911090580951495029', 'Untertitel'],\n    ['2023925063728908356', 'Stummschaltung aufheben'],\n    ['298626259350585300', 'Unbekannt'],\n    ['3045980486001972586', 'Live'],\n    ['3278592358864783064', 'Sprache'],\n    ['411375375680850814', 'Nicht zutreffend'],\n    ['4259064532355692191', 'Automatisch'],\n    ['4388316720828367903', 'Weitere Einstellungen'],\n    ['5553522235935533682', 'Schieberegler f\u00fcr Suche'],\n    ['5963689277976480680', 'Stummschalten'],\n    ['6073266792045231479', 'Aufl\u00f6sung'],\n    ['6161306839322897077', 'Vollbildmodus beenden'],\n    ['7071612439610534706', 'Streamen\u2026'],\n    ['8145129506114534451', 'Aus'],\n    ['8345190086337560158', 'Vollbild'],\n    ['836055097473758014', 'Wiedergeben'],\n    ['9042260521669277115', 'Pausieren'],\n  ]));\n  localization.insert('en', new Map([\n    ['1050953507607739202', 'volume'],\n    ['1077325112364709655', 'Back'],\n    ['1142734805932039923', 'Rewind'],\n    ['1774834209035716827', 'Fast-forward'],\n    ['1911090580951495029', 'Captions'],\n    ['2023925063728908356', 'Unmute'],\n    ['298626259350585300', 'Unknown'],\n    ['3045980486001972586', 'Live'],\n    ['3278592358864783064', 'Language'],\n    ['411375375680850814', 'N/A'],\n    ['4259064532355692191', 'Auto'],\n    ['4388316720828367903', 'More settings'],\n    ['5553522235935533682', 'Seek slider'],\n    ['5963689277976480680', 'Mute'],\n    ['6073266792045231479', 'Resolution'],\n    ['6161306839322897077', 'Exit full screen'],\n    ['7071612439610534706', 'Cast...'],\n    ['8145129506114534451', 'Off'],\n    ['8345190086337560158', 'Full screen'],\n    ['836055097473758014', 'Play'],\n    ['9042260521669277115', 'Pause'],\n  ]));\n  localization.insert('en-GB', new Map([\n    ['1050953507607739202', 'volume'],\n    ['1077325112364709655', 'Back'],\n    ['1142734805932039923', 'Rewind'],\n    ['1774834209035716827', 'Fast-forward'],\n    ['1911090580951495029', 'Captions'],\n    ['2023925063728908356', 'Unmute'],\n    ['298626259350585300', 'Unknown'],\n    ['3045980486001972586', 'Live'],\n    ['3278592358864783064', 'Language'],\n    ['4259064532355692191', 'Auto'],\n    ['4388316720828367903', 'More settings'],\n    ['5553522235935533682', 'Seek slider'],\n    ['5963689277976480680', 'Mute'],\n    ['6073266792045231479', 'Resolution'],\n    ['6161306839322897077', 'Exit full screen'],\n    ['7071612439610534706', 'Cast...'],\n    ['8145129506114534451', 'Off'],\n    ['8345190086337560158', 'Full screen'],\n    ['836055097473758014', 'Play'],\n    ['9042260521669277115', 'Pause'],\n  ]));\n  localization.insert('es', new Map([\n    ['1050953507607739202', 'volumen'],\n    ['1077325112364709655', 'Atr\u00e1s'],\n    ['1142734805932039923', 'Retroceder'],\n    ['1774834209035716827', 'Avance r\u00e1pido'],\n    ['1911090580951495029', 'Subt\u00edtulos'],\n    ['2023925063728908356', 'Activar sonido'],\n    ['298626259350585300', 'Desconocido'],\n    ['3045980486001972586', 'En directo'],\n    ['3278592358864783064', 'Idioma'],\n    ['411375375680850814', 'No aplicable'],\n    ['4259064532355692191', 'Autom\u00e1tica'],\n    ['4388316720828367903', 'M\u00e1s ajustes'],\n    ['5553522235935533682', 'Barra deslizante de b\u00fasqueda'],\n    ['5963689277976480680', 'Silenciar'],\n    ['6073266792045231479', 'Resoluci\u00f3n'],\n    ['6161306839322897077', 'Salir del modo de pantalla completa'],\n    ['7071612439610534706', 'Reparto...'],\n    ['8145129506114534451', 'No'],\n    ['8345190086337560158', 'Pantalla completa'],\n    ['836055097473758014', 'Reproducir'],\n    ['9042260521669277115', 'Pausa'],\n  ]));\n  localization.insert('es-419', new Map([\n    ['1050953507607739202', 'volumen'],\n    ['1077325112364709655', 'Atr\u00e1s'],\n    ['1142734805932039923', 'Retroceder'],\n    ['1774834209035716827', 'Avance r\u00e1pido'],\n    ['1911090580951495029', 'Subt\u00edtulos'],\n    ['2023925063728908356', 'Activar sonido'],\n    ['298626259350585300', 'Desconocido'],\n    ['3045980486001972586', 'En vivo'],\n    ['3278592358864783064', 'Idioma'],\n    ['4259064532355692191', 'Auto'],\n    ['4388316720828367903', 'M\u00e1s opciones de configuraci\u00f3n'],\n    ['5553522235935533682', 'Barra deslizante de b\u00fasqueda'],\n    ['5963689277976480680', 'Silenciar'],\n    ['6073266792045231479', 'Resoluci\u00f3n'],\n    ['6161306839322897077', 'Salir de pantalla completa'],\n    ['7071612439610534706', 'Transmitir\u2026'],\n    ['8145129506114534451', 'Desactivado'],\n    ['8345190086337560158', 'Pantalla completa'],\n    ['836055097473758014', 'Jugar'],\n    ['9042260521669277115', 'Detener'],\n  ]));\n  localization.insert('fr', new Map([\n    ['1050953507607739202', 'volume'],\n    ['1077325112364709655', 'Retour'],\n    ['1142734805932039923', 'Retour arri\u00e8re'],\n    ['1774834209035716827', 'Avance rapide'],\n    ['1911090580951495029', 'Sous-titres'],\n    ['2023925063728908356', 'Activer le son'],\n    ['298626259350585300', 'Inconnue'],\n    ['3045980486001972586', 'En direct'],\n    ['3278592358864783064', 'Langue'],\n    ['411375375680850814', 'Sans objet'],\n    ['4259064532355692191', 'Auto'],\n    ['4388316720828367903', 'Autres param\u00e8tres'],\n    ['5553522235935533682', 'Barre de recherche'],\n    ['5963689277976480680', 'D\u00e9sactiver le son'],\n    ['6073266792045231479', 'R\u00e9solution'],\n    ['6161306839322897077', 'Quitter le mode plein \u00e9cran'],\n    ['7071612439610534706', 'Caster sur\u2026'],\n    ['8145129506114534451', 'D\u00e9sactiv\u00e9e'],\n    ['8345190086337560158', 'Plein \u00e9cran'],\n    ['836055097473758014', 'Lire'],\n    ['9042260521669277115', 'Mettre en veille'],\n  ]));\n  localization.insert('it', new Map([\n    ['1050953507607739202', 'volume'],\n    ['1077325112364709655', 'Indietro'],\n    ['1142734805932039923', 'Riavvolgi'],\n    ['1774834209035716827', 'Avanti veloce'],\n    ['1911090580951495029', 'Sottotitoli'],\n    ['2023925063728908356', 'Riattiva audio'],\n    ['298626259350585300', 'Sconosciuto'],\n    ['3045980486001972586', 'Dal vivo'],\n    ['3278592358864783064', 'Lingua'],\n    ['411375375680850814', 'N/A'],\n    ['4259064532355692191', 'Auto'],\n    ['4388316720828367903', 'Altre impostazioni'],\n    ['5553522235935533682', 'Dispositivo di scorrimento'],\n    ['5963689277976480680', 'Disattiva audio'],\n    ['6073266792045231479', 'Risoluzione'],\n    ['6161306839322897077', 'Esci dalla modalit\u00e0 a schermo intero'],\n    ['7071612439610534706', 'Trasmetti\u2026'],\n    ['8145129506114534451', 'Disattivato'],\n    ['8345190086337560158', 'Schermo intero'],\n    ['836055097473758014', 'Riproduci'],\n    ['9042260521669277115', 'Metti in pausa'],\n  ]));\n  localization.insert('ja', new Map([\n    ['1050953507607739202', '\u97f3\u91cf'],\n    ['1077325112364709655', '\u623b\u308b'],\n    ['1142734805932039923', '\u5dfb\u304d\u623b\u3057'],\n    ['1774834209035716827', '\u65e9\u9001\u308a'],\n    ['1911090580951495029', '\u5b57\u5e55'],\n    ['2023925063728908356', '\u30df\u30e5\u30fc\u30c8\u89e3\u9664'],\n    ['298626259350585300', '\u4e0d\u660e'],\n    ['3045980486001972586', '\u30e9\u30a4\u30d6'],\n    ['3278592358864783064', '\u8a00\u8a9e'],\n    ['411375375680850814', '\u8a72\u5f53\u306a\u3057'],\n    ['4259064532355692191', '\u81ea\u52d5'],\n    ['4388316720828367903', '\u305d\u306e\u4ed6\u306e\u8a2d\u5b9a'],\n    ['5553522235935533682', '\u30b7\u30fc\u30af \u30d0\u30fc'],\n    ['5963689277976480680', '\u30df\u30e5\u30fc\u30c8'],\n    ['6073266792045231479', '\u89e3\u50cf\u5ea6'],\n    ['6161306839322897077', '\u5168\u753b\u9762\u30e2\u30fc\u30c9\u306e\u7d42\u4e86'],\n    ['7071612439610534706', '\u30ad\u30e3\u30b9\u30c8...'],\n    ['8145129506114534451', '\u30aa\u30d5'],\n    ['8345190086337560158', '\u5168\u753b\u9762'],\n    ['836055097473758014', '\u518d\u751f'],\n    ['9042260521669277115', '\u4e00\u6642\u505c\u6b62'],\n  ]));\n  localization.insert('ko', new Map([\n    ['1050953507607739202', '\ubcfc\ub968'],\n    ['1077325112364709655', '\ub4a4\ub85c'],\n    ['1142734805932039923', '\ub418\uac10\uae30'],\n    ['1774834209035716827', '\ube68\ub9ac\uac10\uae30'],\n    ['1911090580951495029', '\uc790\ub9c9'],\n    ['2023925063728908356', '\uc74c\uc18c\uac70 \ud574\uc81c'],\n    ['298626259350585300', '\uc54c \uc218 \uc5c6\uc74c'],\n    ['3045980486001972586', '\ub77c\uc774\ube0c'],\n    ['3278592358864783064', '\uc5b8\uc5b4'],\n    ['411375375680850814', '\ud574\ub2f9 \uc5c6\uc74c'],\n    ['4259064532355692191', '\uc790\ub3d9'],\n    ['4388316720828367903', '\uc124\uc815 \ub354\ubcf4\uae30'],\n    ['5553522235935533682', '\ud0d0\uc0c9 \uc2ac\ub77c\uc774\ub354'],\n    ['5963689277976480680', '\uc74c\uc18c\uac70'],\n    ['6073266792045231479', '\ud574\uc0c1\ub3c4'],\n    ['6161306839322897077', '\uc804\uccb4\ud654\uba74 \uc885\ub8cc'],\n    ['7071612439610534706', '\uc804\uc1a1...'],\n    ['8145129506114534451', '\uc0ac\uc6a9 \uc548\ud568'],\n    ['8345190086337560158', '\uc804\uccb4\ud654\uba74'],\n    ['836055097473758014', '\uc7ac\uc0dd'],\n    ['9042260521669277115', '\uc77c\uc2dc\uc911\uc9c0'],\n  ]));\n  localization.insert('nl', new Map([\n    ['1050953507607739202', 'volume'],\n    ['1077325112364709655', 'Terug'],\n    ['1142734805932039923', 'Terugspoelen'],\n    ['1774834209035716827', 'Vooruitspoelen'],\n    ['1911090580951495029', 'Ondertiteling'],\n    ['2023925063728908356', 'Dempen opheffen'],\n    ['298626259350585300', 'Onbekend'],\n    ['3045980486001972586', 'Live'],\n    ['3278592358864783064', 'Taal'],\n    ['411375375680850814', 'N.v.t.'],\n    ['4259064532355692191', 'Automatisch'],\n    ['4388316720828367903', 'Meer instellingen'],\n    ['5553522235935533682', 'Zoekschuifbalk'],\n    ['5963689277976480680', 'Dempen'],\n    ['6073266792045231479', 'Resolutie'],\n    ['6161306839322897077', 'Volledig scherm afsluiten'],\n    ['7071612439610534706', 'Casten...'],\n    ['8145129506114534451', 'Uit'],\n    ['8345190086337560158', 'Volledig scherm'],\n    ['836055097473758014', 'Afspelen'],\n    ['9042260521669277115', 'Onderbreken'],\n  ]));\n  localization.insert('pl', new Map([\n    ['1050953507607739202', 'g\u0142o\u015bno\u015b\u0107'],\n    ['1077325112364709655', 'Wstecz'],\n    ['1142734805932039923', 'Przewi\u0144 do ty\u0142u'],\n    ['1774834209035716827', 'Przewi\u0144 do przodu'],\n    ['1911090580951495029', 'Napisy'],\n    ['2023925063728908356', 'Wy\u0142\u0105cz wyciszenie'],\n    ['298626259350585300', 'Nieznane'],\n    ['3045980486001972586', 'Na \u017cywo'],\n    ['3278592358864783064', 'J\u0119zyk'],\n    ['411375375680850814', 'N/d'],\n    ['4259064532355692191', 'Automatyczna'],\n    ['4388316720828367903', 'Wi\u0119cej ustawie\u0144'],\n    ['5553522235935533682', 'Suwak przewijania'],\n    ['5963689277976480680', 'Wycisz'],\n    ['6073266792045231479', 'Rozdzielczo\u015b\u0107'],\n    ['6161306839322897077', 'Zamknij pe\u0142ny ekran'],\n    ['7071612439610534706', 'Prze\u015blij...'],\n    ['8145129506114534451', 'Wy\u0142\u0105czone'],\n    ['8345190086337560158', 'Pe\u0142ny ekran'],\n    ['836055097473758014', 'Odtwarzaj'],\n    ['9042260521669277115', 'Wstrzymaj'],\n  ]));\n  localization.insert('pt-BR', new Map([\n    ['1050953507607739202', 'volume'],\n    ['1077325112364709655', 'Voltar'],\n    ['1142734805932039923', 'Retroceder'],\n    ['1774834209035716827', 'Avan\u00e7ar'],\n    ['1911090580951495029', 'Legendas ocultas'],\n    ['2023925063728908356', 'Ativar som'],\n    ['298626259350585300', 'Desconhecido'],\n    ['3045980486001972586', 'Ao vivo'],\n    ['3278592358864783064', 'Idioma'],\n    ['411375375680850814', 'N/A'],\n    ['4259064532355692191', 'Autom\u00e1tico'],\n    ['4388316720828367903', 'Mais configura\u00e7\u00f5es'],\n    ['5553522235935533682', 'Bot\u00e3o deslizante de busca'],\n    ['5963689277976480680', 'Desativar som'],\n    ['6073266792045231479', 'Resolu\u00e7\u00e3o'],\n    ['6161306839322897077', 'Sair da tela inteira'],\n    ['7071612439610534706', 'Elenco...'],\n    ['8145129506114534451', 'Desativado'],\n    ['8345190086337560158', 'Tela inteira'],\n    ['836055097473758014', 'Reproduzir'],\n    ['9042260521669277115', 'Pausar'],\n  ]));\n  localization.insert('pt-PT', new Map([\n    ['1050953507607739202', 'volume'],\n    ['1077325112364709655', 'Anterior'],\n    ['1142734805932039923', 'Recuar'],\n    ['1774834209035716827', 'Avan\u00e7ar'],\n    ['1911090580951495029', 'Legendas'],\n    ['2023925063728908356', 'Reativar o som'],\n    ['298626259350585300', 'Desconhecida'],\n    ['3045980486001972586', 'Em direto'],\n    ['3278592358864783064', 'Idioma'],\n    ['411375375680850814', 'N/A'],\n    ['4259064532355692191', 'Autom\u00e1tico'],\n    ['4388316720828367903', 'Mais defini\u00e7\u00f5es'],\n    ['5553522235935533682', 'Controlo de deslize da procura'],\n    ['5963689277976480680', 'Desativar o som'],\n    ['6073266792045231479', 'Resolu\u00e7\u00e3o'],\n    ['6161306839322897077', 'Sair do ecr\u00e3 inteiro'],\n    ['7071612439610534706', 'Transmitir...'],\n    ['8145129506114534451', 'Desativado'],\n    ['8345190086337560158', 'Ecr\u00e3 inteiro'],\n    ['836055097473758014', 'Reproduzir'],\n    ['9042260521669277115', 'Colocar em pausa'],\n  ]));\n  localization.insert('ru', new Map([\n    ['1050953507607739202', '\u0433\u0440\u043e\u043c\u043a\u043e\u0441\u0442\u044c'],\n    ['1077325112364709655', '\u041d\u0430\u0437\u0430\u0434'],\n    ['1142734805932039923', '\u041f\u0435\u0440\u0435\u043c\u043e\u0442\u0430\u0442\u044c \u043d\u0430\u0437\u0430\u0434'],\n    ['1774834209035716827', '\u041f\u0435\u0440\u0435\u043c\u043e\u0442\u0430\u0442\u044c \u0432\u043f\u0435\u0440\u0435\u0434'],\n    ['1911090580951495029', '\u0421\u0443\u0431\u0442\u0438\u0442\u0440\u044b'],\n    ['2023925063728908356', '\u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0437\u0432\u0443\u043a'],\n    ['298626259350585300', '\u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e'],\n    ['3045980486001972586', '\u0412 \u044d\u0444\u0438\u0440\u0435'],\n    ['3278592358864783064', '\u042f\u0437\u044b\u043a'],\n    ['411375375680850814', '\u2013'],\n    ['4259064532355692191', '\u0410\u0432\u0442\u043e\u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430'],\n    ['4388316720828367903', '\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438'],\n    ['5553522235935533682', '\u041f\u043e\u043b\u0437\u0443\u043d\u043e\u043a \u043f\u043e\u0438\u0441\u043a\u0430'],\n    ['5963689277976480680', '\u041e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0437\u0432\u0443\u043a'],\n    ['6073266792045231479', '\u0420\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0435'],\n    ['6161306839322897077', '\u0412\u044b\u0445\u043e\u0434 \u0438\u0437 \u043f\u043e\u043b\u043d\u043e\u044d\u043a\u0440\u0430\u043d\u043d\u043e\u0433\u043e \u0440\u0435\u0436\u0438\u043c\u0430'],\n    ['7071612439610534706', '\u0414\u043e\u0431\u0430\u0432\u0438\u0442\u044c'],\n    ['8145129506114534451', '\u0412\u044b\u043a\u043b.'],\n    ['8345190086337560158', '\u0412\u043e \u0432\u0435\u0441\u044c \u044d\u043a\u0440\u0430\u043d'],\n    ['836055097473758014', '\u0421\u043c\u043e\u0442\u0440\u0435\u0442\u044c'],\n    ['9042260521669277115', '\u041f\u0440\u0438\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c'],\n  ]));\n  localization.insert('th', new Map([\n    ['1050953507607739202', '\u0e23\u0e30\u0e14\u0e31\u0e1a\u0e40\u0e2a\u0e35\u0e22\u0e07'],\n    ['1077325112364709655', '\u0e01\u0e25\u0e31\u0e1a'],\n    ['1142734805932039923', '\u0e01\u0e23\u0e2d\u0e01\u0e25\u0e31\u0e1a'],\n    ['1774834209035716827', '\u0e01\u0e23\u0e2d\u0e44\u0e1b\u0e02\u0e49\u0e32\u0e07\u0e2b\u0e19\u0e49\u0e32'],\n    ['1911090580951495029', '\u0e04\u0e33\u0e2d\u0e18\u0e34\u0e1a\u0e32\u0e22\u0e27\u0e34\u0e14\u0e35\u0e42\u0e2d'],\n    ['2023925063728908356', '\u0e40\u0e1b\u0e34\u0e14\u0e40\u0e2a\u0e35\u0e22\u0e07'],\n    ['298626259350585300', '\u0e44\u0e21\u0e48\u0e17\u0e23\u0e32\u0e1a'],\n    ['3045980486001972586', '\u0e2a\u0e14'],\n    ['3278592358864783064', '\u0e20\u0e32\u0e29\u0e32'],\n    ['4259064532355692191', '\u0e2d\u0e31\u0e15\u0e42\u0e19\u0e21\u0e31\u0e15\u0e34'],\n    ['4388316720828367903', '\u0e01\u0e32\u0e23\u0e15\u0e31\u0e49\u0e07\u0e04\u0e48\u0e32\u0e40\u0e1e\u0e34\u0e48\u0e21\u0e40\u0e15\u0e34\u0e21'],\n    ['5553522235935533682', '\u0e41\u0e16\u0e1a\u0e40\u0e25\u0e37\u0e48\u0e2d\u0e19\u0e04\u0e49\u0e19\u0e2b\u0e32'],\n    ['5963689277976480680', '\u0e1b\u0e34\u0e14\u0e40\u0e2a\u0e35\u0e22\u0e07'],\n    ['6073266792045231479', '\u0e04\u0e27\u0e32\u0e21\u0e25\u0e30\u0e40\u0e2d\u0e35\u0e22\u0e14'],\n    ['6161306839322897077', '\u0e2d\u0e2d\u0e01\u0e08\u0e32\u0e01\u0e42\u0e2b\u0e21\u0e14\u0e40\u0e15\u0e47\u0e21\u0e2b\u0e19\u0e49\u0e32\u0e08\u0e2d'],\n    ['7071612439610534706', '\u0e41\u0e04\u0e2a\u0e15\u0e4c...'],\n    ['8145129506114534451', '\u0e1b\u0e34\u0e14'],\n    ['8345190086337560158', '\u0e40\u0e15\u0e47\u0e21\u0e2b\u0e19\u0e49\u0e32\u0e08\u0e2d'],\n    ['836055097473758014', '\u0e40\u0e25\u0e48\u0e19'],\n    ['9042260521669277115', '\u0e2b\u0e22\u0e38\u0e14\u0e0a\u0e31\u0e48\u0e27\u0e04\u0e23\u0e32\u0e27'],\n  ]));\n  localization.insert('tr', new Map([\n    ['1050953507607739202', 'ses d\u00fczeyi'],\n    ['1077325112364709655', 'Geri'],\n    ['1142734805932039923', 'Geri sar'],\n    ['1774834209035716827', '\u0130leri sar'],\n    ['1911090580951495029', 'Altyaz\u0131lar'],\n    ['2023925063728908356', 'Sesi a\u00e7'],\n    ['298626259350585300', 'Bilinmiyor'],\n    ['3045980486001972586', 'Canl\u0131'],\n    ['3278592358864783064', 'Dil'],\n    ['4259064532355692191', 'Otomatik'],\n    ['4388316720828367903', 'Di\u011fer ayarlar'],\n    ['5553522235935533682', 'Arama kayd\u0131rma \u00e7ubu\u011fu'],\n    ['5963689277976480680', 'Sesi kapat'],\n    ['6073266792045231479', '\u00c7\u00f6z\u00fcn\u00fcrl\u00fck'],\n    ['6161306839322897077', 'Tam ekrandan \u00e7\u0131k'],\n    ['7071612439610534706', 'Yay\u0131nla...'],\n    ['8145129506114534451', 'Kapal\u0131'],\n    ['8345190086337560158', 'Tam ekran'],\n    ['836055097473758014', 'Oynat'],\n    ['9042260521669277115', 'Duraklat'],\n  ]));\n  localization.insert('zh-CN', new Map([\n    ['1050953507607739202', '\u97f3\u91cf'],\n    ['1077325112364709655', '\u8fd4\u56de'],\n    ['1142734805932039923', '\u5feb\u9000'],\n    ['1774834209035716827', '\u5feb\u8fdb'],\n    ['1911090580951495029', '\u5b57\u5e55'],\n    ['2023925063728908356', '\u53d6\u6d88\u9759\u97f3'],\n    ['298626259350585300', '\u672a\u77e5'],\n    ['3045980486001972586', '\u76f4\u64ad'],\n    ['3278592358864783064', '\u8bed\u8a00'],\n    ['4259064532355692191', '\u81ea\u52a8'],\n    ['4388316720828367903', '\u66f4\u591a\u8bbe\u7f6e'],\n    ['5553522235935533682', '\u64ad\u653e\u6ed1\u5757'],\n    ['5963689277976480680', '\u9759\u97f3'],\n    ['6073266792045231479', '\u5206\u8fa8\u7387'],\n    ['6161306839322897077', '\u9000\u51fa\u5168\u5c4f'],\n    ['7071612439610534706', '\u6295\u5c04\u2026'],\n    ['8145129506114534451', '\u5173\u95ed'],\n    ['8345190086337560158', '\u5168\u5c4f'],\n    ['836055097473758014', '\u64ad\u653e'],\n    ['9042260521669277115', '\u6682\u505c'],\n  ]));\n  localization.insert('zh-HK', new Map([\n    ['1050953507607739202', '\u97f3\u91cf'],\n    ['1077325112364709655', '\u8fd4\u56de'],\n    ['1142734805932039923', '\u5012\u5e36'],\n    ['1774834209035716827', '\u5feb\u8f49'],\n    ['1911090580951495029', '\u5b57\u5e55'],\n    ['2023925063728908356', '\u89e3\u9664\u975c\u97f3'],\n    ['298626259350585300', '\u4e0d\u660e'],\n    ['3045980486001972586', '\u76f4\u64ad'],\n    ['3278592358864783064', '\u8a9e\u8a00'],\n    ['4259064532355692191', '\u81ea\u52d5'],\n    ['4388316720828367903', '\u66f4\u591a\u8a2d\u5b9a'],\n    ['5553522235935533682', '\u641c\u5c0b\u6ed1\u687f'],\n    ['5963689277976480680', '\u975c\u97f3'],\n    ['6161306839322897077', '\u7d50\u675f\u5168\u87a2\u5e55'],\n    ['7071612439610534706', '\u6295\u653e\u2026'],\n    ['8145129506114534451', '\u672a\u9078\u53d6'],\n    ['8345190086337560158', '\u5168\u87a2\u5e55'],\n    ['836055097473758014', '\u64ad\u653e'],\n    ['9042260521669277115', '\u66ab\u505c'],\n  ]));\n  localization.insert('zh-TW', new Map([\n    ['1050953507607739202', '\u97f3\u91cf'],\n    ['1077325112364709655', '\u8fd4\u56de'],\n    ['1142734805932039923', '\u5012\u8f49'],\n    ['1774834209035716827', '\u5feb\u8f49'],\n    ['1911090580951495029', '\u5b57\u5e55'],\n    ['2023925063728908356', '\u89e3\u9664\u975c\u97f3'],\n    ['298626259350585300', '\u672a\u77e5'],\n    ['3045980486001972586', '\u76f4\u64ad'],\n    ['3278592358864783064', '\u8a9e\u8a00'],\n    ['411375375680850814', '\u4e0d\u9069\u7528'],\n    ['4259064532355692191', '\u81ea\u52d5'],\n    ['4388316720828367903', '\u66f4\u591a\u8a2d\u5b9a'],\n    ['5553522235935533682', '\u641c\u5c0b\u6ed1\u687f'],\n    ['5963689277976480680', '\u975c\u97f3'],\n    ['6073266792045231479', '\u89e3\u6790\u5ea6'],\n    ['6161306839322897077', '\u7d50\u675f\u5168\u87a2\u5e55'],\n    ['7071612439610534706', '\u6295\u653e\u2026'],\n    ['8145129506114534451', '\u95dc\u9589'],\n    ['8345190086337560158', '\u5168\u87a2\u5e55'],\n    ['836055097473758014', '\u64ad\u653e'],\n    ['9042260521669277115', '\u66ab\u505c'],\n  ]));\n};\n\n/** @const {string} */\nshaka.ui.Locales.Ids.ARIA_LABEL_BACK = '1077325112364709655';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.ARIA_LABEL_CAPTIONS = '1911090580951495029';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.ARIA_LABEL_CAST = '7071612439610534706';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.ARIA_LABEL_EXIT_FULL_SCREEN = '6161306839322897077';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.ARIA_LABEL_FAST_FORWARD = '1774834209035716827';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.ARIA_LABEL_FULL_SCREEN = '8345190086337560158';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.ARIA_LABEL_LANGUAGE = '3278592358864783064';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.ARIA_LABEL_LIVE = '3045980486001972586';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.ARIA_LABEL_MORE_SETTINGS = '4388316720828367903';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.ARIA_LABEL_MUTE = '5963689277976480680';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.ARIA_LABEL_PAUSE = '9042260521669277115';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.ARIA_LABEL_PLAY = '836055097473758014';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.ARIA_LABEL_RESOLUTION = '6073266792045231479';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.ARIA_LABEL_REWIND = '1142734805932039923';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.ARIA_LABEL_SEEK = '5553522235935533682';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.ARIA_LABEL_UNMUTE = '2023925063728908356';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.ARIA_LABEL_VOLUME = '1050953507607739202';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.LABEL_AUTO_QUALITY = '4259064532355692191';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.LABEL_CAPTIONS = '1911090580951495029';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.LABEL_CAPTIONS_OFF = '8145129506114534451';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.LABEL_CAST = '7071612439610534706';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.LABEL_LANGUAGE = '3278592358864783064';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.LABEL_LIVE = '3045980486001972586';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.LABEL_MULTIPLE_LANGUAGES = '411375375680850814';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.LABEL_NOT_APPLICABLE = '411375375680850814';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.LABEL_NOT_CASTING = '8145129506114534451';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.LABEL_RESOLUTION = '6073266792045231479';\n\n/** @const {string} */\nshaka.ui.Locales.Ids.LABEL_UNKNOWN_LANGUAGE = '298626259350585300';\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\ngoog.provide('shaka.ui.Utils');\n\ngoog.require('goog.asserts');\n\n\n/**\n * @param {!HTMLElement} element\n * @param {string} className\n * @return {!HTMLElement}\n * @export\n */\nshaka.ui.Utils.getFirstDescendantWithClassName = function(element, className) {\n  let descendant = shaka.ui.Utils.getDescendantIfExists(element, className);\n  goog.asserts.assert(descendant != null, 'Should not be null!');\n\n  return descendant;\n};\n\n\n/**\n * @param {!HTMLElement} element\n * @param {string} className\n * @return {?HTMLElement}\n */\nshaka.ui.Utils.getDescendantIfExists = function(element, className) {\n  let childrenWithClassName = element.getElementsByClassName(className);\n  if (childrenWithClassName.length) {\n    return /** @type {!HTMLElement} */ (childrenWithClassName[0]);\n  }\n\n  return null;\n};\n\n\n/**\n * Return true if the content is Transport Stream.\n * Used to decide if caption button is shown all the time in the demo,\n * and whether to show 'Default Text' as a Text Track option.\n *\n * @param {shaka.Player} player\n * @return {boolean}\n */\nshaka.ui.Utils.isTsContent = function(player) {\n  let activeTracks = player.getVariantTracks().filter(function(track) {\n    return track.active == true;\n  });\n  let activeTrack = activeTracks[0];\n  if (activeTrack) {\n    return activeTrack.mimeType == 'video/mp2t';\n  }\n  return false;\n};\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\ngoog.provide('shaka.ui.Controls');\n\ngoog.require('goog.asserts');\ngoog.require('mozilla.LanguageMapping');\ngoog.require('shaka.ui.Locales');\ngoog.require('shaka.ui.Localization');\ngoog.require('shaka.ui.Utils');\ngoog.require('shaka.util.EventManager');\ngoog.require('shaka.util.FakeEvent');\ngoog.require('shaka.util.FakeEventTarget');\ngoog.require('shaka.util.Timer');\n\n\n/**\n * A container for custom video controls.\n * @param {!shaka.Player} player\n * @param {!HTMLElement} videoContainer\n * @param {!HTMLMediaElement} video\n * @param {shaka.extern.UIConfiguration} config\n * @constructor\n * @struct\n * @implements {shaka.util.IDestroyable}\n * @extends {shaka.util.FakeEventTarget}\n * @export\n */\nshaka.ui.Controls = function(player, videoContainer, video, config) {\n  shaka.util.FakeEventTarget.call(this);\n\n  /** @private {!Map.<string, !Function>} */\n  this.elementNamesToFunctions_ = new Map([\n    ['time_and_duration', () => { this.addCurrentTime_(); }],\n    ['mute', () => { this.addMuteButton_(); }],\n    ['volume', () => { this.addVolumeBar_(); }],\n    ['fullscreen', () => { this.addFullscreenButton_(); }],\n    ['overflow_menu', () => { this.addOverflowMenuButton_(); }],\n    ['captions', () => { this.addCaptionButton_(); }],\n    ['cast', () => { this.addCastButton_(); }],\n    ['rewind', () => { this.addRewindButton_(); }],\n    ['fast_forward', () => { this.addFastForwardButton_(); }],\n    ['quality', () => { this.addResolutionButton_(); }],\n    ['language', () => { this.addLanguagesButton_(); }],\n  ]);\n\n  /** @private {boolean} */\n  this.enabled_ = true;\n\n  /** @private {boolean} */\n  this.overrideCssShowControls_ = false;\n\n  /** shaka.extern.UIConfiguration */\n  this.config_ = config;\n\n  /** @private {!shaka.cast.CastProxy} */\n  this.castProxy_ = new shaka.cast.CastProxy(\n    video, player, this.config_.castReceiverAppId);\n\n  /** @private {boolean} */\n  this.castAllowed_ = true;\n\n  /** @private {!HTMLMediaElement} */\n  this.video_ = this.castProxy_.getVideo();\n\n  /** @private {!shaka.Player} */\n  this.player_ = this.castProxy_.getPlayer();\n\n  /** @private {!HTMLElement} */\n  this.videoContainer_ = videoContainer;\n\n  /** @private {boolean} */\n  this.isSeeking_ = false;\n\n  /** @private {number} */\n  this.trickPlayRate_ = 1;\n\n  /** @private {?number} */\n  this.seekTimeoutId_ = null;\n\n  /** @private {?number} */\n  this.mouseStillTimeoutId_ = null;\n\n  /** @private {?number} */\n  this.lastTouchEventTime_ = null;\n\n  /** @private {shaka.ui.Localization} */\n  this.localization_ = shaka.ui.Controls.createLocalization_();\n\n  this.createDOM_();\n\n  const LocIds = shaka.ui.Locales.Ids;\n\n  /** @private {!Map.<HTMLElement, string>} */\n  this.ariaLabels_ = new Map()\n    .set(this.seekBar_, LocIds.ARIA_LABEL_SEEK)\n    .set(this.captionButton_, LocIds.ARIA_LABEL_CAPTIONS)\n    .set(this.backFromCaptionsButton_, LocIds.ARIA_LABEL_BACK)\n    .set(this.backFromResolutionButton_, LocIds.ARIA_LABEL_BACK)\n    .set(this.backFromLanguageButton_, LocIds.ARIA_LABEL_BACK)\n    .set(this.rewindButton_, LocIds.ARIA_LABEL_REWIND)\n    .set(this.fastForwardButton_, LocIds.ARIA_LABEL_FAST_FORWARD)\n    .set(this.resolutionButton_, LocIds.ARIA_LABEL_RESOLUTION)\n    .set(this.languagesButton_, LocIds.ARIA_LABEL_LANGUAGE)\n    .set(this.castButton_, LocIds.ARIA_LABEL_CAST)\n    .set(this.volumeBar_, LocIds.ARIA_LABEL_VOLUME)\n    .set(this.overflowMenuButton_, LocIds.ARIA_LABEL_MORE_SETTINGS);\n\n  /** @private {!Map.<HTMLElement, string>} */\n  this.textContentToLocalize_ = new Map()\n    .set(this.captionsNameSpan_, LocIds.LABEL_CAPTIONS)\n    .set(this.backFromCaptionsSpan_, LocIds.LABEL_CAPTIONS)\n    .set(this.captionsOffSpan_, LocIds.LABEL_CAPTIONS_OFF)\n    .set(this.castNameSpan_, LocIds.LABEL_CAST)\n    .set(this.backFromResolutionSpan_, LocIds.LABEL_RESOLUTION)\n    .set(this.resolutionNameSpan_, LocIds.LABEL_RESOLUTION)\n    .set(this.abrOnSpan_, LocIds.LABEL_AUTO_QUALITY)\n    .set(this.languageNameSpan_, LocIds.LABEL_LANGUAGE)\n    .set(this.backFromLanguageSpan_, LocIds.LABEL_LANGUAGE);\n\n  this.updateLocalizedStrings_();\n\n  this.timeAndSeekRangeTimer_ =\n    new shaka.util.Timer(this.updateTimeAndSeekRange_.bind(this));\n\n  this.timeAndSeekRangeTimer_.scheduleRepeated(0.125);\n\n  /** @private {shaka.util.EventManager} */\n  this.eventManager_ = new shaka.util.EventManager();\n\n  this.addEventListeners_();\n\n  this.hideSettingsMenusTimer_ =\n    new shaka.util.Timer(() => {\n      this.hideSettingsMenus_();\n    });\n\n  // Initialize caption state with a fake event.\n  this.onCaptionStateChange_();\n\n  // We might've missed a caststatuschanged event from the proxy between\n  // the controls creation and initializing. Run onCastStatusChange_()\n  // to ensure we have the casting state right.\n  this.onCastStatusChange_(null);\n};\n\ngoog.inherits(shaka.ui.Controls, shaka.util.FakeEventTarget);\n\n\n/**\n * @override\n * @export\n */\nshaka.ui.Controls.prototype.destroy = async function() {\n  await this.eventManager_.destroy();\n  this.localization_ = null;\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.updateLocalizedStrings_ = function() {\n  const Controls = shaka.ui.Controls;\n  const LocIds = shaka.ui.Locales.Ids;\n\n  // Localize aria labels\n  let elements = this.ariaLabels_.keys();\n  for (const element of elements) {\n    if (element == null) {\n      continue;\n    }\n\n    const id = this.ariaLabels_.get(element);\n    element.setAttribute(Controls.ARIA_LABEL_,\n        this.localization_.resolve(id));\n  }\n\n  // Localize state-dependant labels\n  const makePlayNotPause = this.video_.paused && !this.isSeeking_;\n  const playButtonAriaLabelId = makePlayNotPause ? LocIds.ARIA_LABEL_PLAY :\n                                                   LocIds.ARIA_LABEL_PAUSE;\n  this.playButton_.setAttribute(Controls.ARIA_LABEL_,\n      this.localization_.resolve(playButtonAriaLabelId));\n\n  if (this.muteButton_) {\n    const muteButtonAriaLabelId = this.video_.muted ? LocIds.ARIA_LABEL_UNMUTE :\n                                                      LocIds.ARIA_LABEL_MUTE;\n    this.muteButton_.setAttribute(Controls.ARIA_LABEL_,\n        this.localization_.resolve(muteButtonAriaLabelId));\n  }\n\n  if (this.fullscreenButton_) {\n    const fullscreenAriaLabel = document.fullscreenElement ?\n                                LocIds.ARIA_LABEL_EXIT_FULL_SCREEN :\n                                LocIds.ARIA_LABEL_FULL_SCREEN;\n    this.fullscreenButton_.setAttribute(Controls.ARIA_LABEL_,\n        this.localization_.resolve(fullscreenAriaLabel));\n  }\n\n  // If we're not casting, string \"not casting\" will be displayed,\n  // which needs localization.\n  this.setCurrentCastSelection_();\n\n  // If we're at \"auto\" resolution, this string needs localization.\n  this.updateResolutionSelection_();\n\n  // If captions/subtitles are off, this string needs localization.\n  this.updateTextLanguages_();\n\n  // Localize text\n  elements = this.textContentToLocalize_.keys();\n  for (const element of elements) {\n    if (element == null) {\n      continue;\n    }\n\n    const id = this.textContentToLocalize_.get(element);\n    element.textContent = this.localization_.resolve(id);\n  }\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.initOptionalElementsToNull_ = function() {\n  // TODO: JSDoc needs to pick up UI classes. Make sure it picks up all\n  // the members of Controls. b/117615943\n  /** @private {HTMLInputElement} */\n  this.seekBar_ = null;\n\n  /** @private {HTMLElement} */\n  this.muteButton_ = null;\n\n  /** @private {HTMLInputElement} */\n  this.volumeBar_ = null;\n\n  /** @private {HTMLElement} */\n  this.captionButton_ = null;\n\n    /** @private {HTMLElement} */\n  this.captionIcon_ = null;\n\n  /** @private {HTMLElement} */\n  this.fullscreenButton_ = null;\n\n  /** @private {HTMLElement} */\n  this.currentTime_ = null;\n\n  /** @private {HTMLElement} */\n  this.castButton_ = null;\n\n  /** @private {HTMLElement} */\n  this.castIcon_ = null;\n\n  /** @private {HTMLElement} */\n  this.overflowMenuButton_ = null;\n\n  /** @private {HTMLElement} */\n  this.rewindButton_ = null;\n\n  /** @private {HTMLElement} */\n  this.fastForwardButton_ = null;\n\n  /** @private {HTMLElement} */\n  this.resolutionButton_ = null;\n\n  /** @private {HTMLElement} */\n  this.languagesButton_ = null;\n\n  /** @private {HTMLElement} */\n  this.resolutionMenu_ = null;\n\n  /** @private {HTMLElement} */\n  this.audioLangMenu_ = null;\n\n  /** @private {HTMLElement} */\n  this.textLangMenu_ = null;\n\n  /** @private {HTMLElement} */\n  this.currentResolution_ = null;\n\n  /** @private {HTMLElement} */\n  this.castNameSpan_ = null;\n\n  /** @private {HTMLElement} */\n  this.currentAudioLanguage_ = null;\n\n  /** @private {HTMLElement} */\n  this.currentCaptions_ = null;\n\n  /** @private {HTMLElement} */\n  this.captionsNameSpan_ = null;\n\n  /** @private {HTMLElement} */\n  this.backFromCaptionsSpan_ = null;\n\n  /** @private {HTMLElement} */\n  this.backFromResolutionButton_ = null;\n\n  /** @private {HTMLElement} */\n  this.backFromLanguageButton_ = null;\n\n  /** @private {HTMLElement} */\n  this.captionsOffSpan_ = null;\n\n  /** @private {HTMLElement} */\n  this.castCurrentSelectionSpan_ = null;\n\n  /** @private {HTMLElement} */\n  this.backFromResolutionSpan_ = null;\n\n  /** @private {HTMLElement} */\n  this.resolutionNameSpan_ = null;\n\n  /** @private {HTMLElement} */\n  this.languageNameSpan_ = null;\n\n  /** @private {HTMLElement} */\n  this.backFromLanguageSpan_ = null;\n\n  /** @private {HTMLElement} */\n  this.abrOnSpan_ = null;\n\n  /** @private {HTMLElement} */\n  this.backFromCaptionsButton_ = null;\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.createDOM_ = function() {\n  this.initOptionalElementsToNull_();\n\n  this.videoContainer_.classList.add('shaka-video-container');\n  this.videoContainer_.classList.add('shaka-overlay-parent');\n  this.video_.classList.add('shaka-video');\n\n  this.addControlsContainer_();\n\n  this.addPlayButton_();\n\n  this.addBufferingSpinner_();\n\n  this.addControlsButtonPanel_();\n\n  // Overflow menu\n  // Adding the overflow menu after the controls button panel, since the\n  // screen reader follows DOM orders.\n  this.addOverflowMenu_();\n\n  // Seek bar\n  if (this.config_.addSeekBar) {\n    this.addSeekBar_();\n  }\n\n  /** @private {!NodeList.<!Element>} */\n  this.backToOverflowMenuButtons_ = this.videoContainer_.\n    getElementsByClassName('shaka-back-to-overflow-button');\n\n  /** @private {!Array.<!Element>} */\n  this.settingsMenus_ = Array.from(\n    this.videoContainer_.getElementsByClassName('shaka-settings-menu'));\n\n  // Settings menus need to be positioned lower, if the seekbar is absent.\n  if (!this.seekBar_) {\n    for (let menu of this.settingsMenus_) {\n      menu.classList.add('shaka-low-position');\n    }\n  }\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addControlsContainer_ = function() {\n  /** @private {!HTMLElement} */\n  this.controlsContainer_ =\n    /** @type {!HTMLElement} */ (document.createElement('div'));\n  this.controlsContainer_.classList.add('shaka-controls-container');\n  this.controlsContainer_.classList.add('shaka-overlay');\n  this.videoContainer_.appendChild(this.controlsContainer_);\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addPlayButton_ = function() {\n  const playButtonContainer = document.createElement('div');\n  playButtonContainer.classList.add('shaka-play-button-container');\n  playButtonContainer.classList.add('shaka-overlay-parent');\n  this.controlsContainer_.appendChild(playButtonContainer);\n\n  /** @private {!HTMLElement} */\n  this.playButton_ =\n    /** @type {!HTMLElement} */ (document.createElement('button'));\n  this.playButton_.classList.add('shaka-play-button');\n  this.playButton_.setAttribute('icon', 'play');\n  playButtonContainer.appendChild(this.playButton_);\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addBufferingSpinner_ = function() {\n  /** @private {!HTMLElement} */\n  this.bufferingSpinner_ =\n    /** @type {!HTMLElement} */ (document.createElement('div'));\n  this.bufferingSpinner_.classList.add('shaka-buffering-spinner');\n  this.bufferingSpinner_.classList.add('shaka-overlay');\n  this.controlsContainer_.appendChild(this.bufferingSpinner_);\n\n  // Svg elements have to be created with the svg xml namespace.\n  const xmlns = 'http://www.w3.org/2000/svg';\n\n  const spinnerSvg = document.createElementNS(xmlns, 'svg');\n  // NOTE: SVG elements do not have a classList on IE, so use setAttribute.\n  spinnerSvg.setAttribute('class', 'shaka-spinner-svg');\n  spinnerSvg.setAttribute('viewBox', '25 25 50 50');\n  this.bufferingSpinner_.appendChild(spinnerSvg);\n\n  const spinnerCircle = document.createElementNS(xmlns, 'circle');\n  spinnerCircle.setAttribute('class', 'shaka-spinner-path');\n  spinnerCircle.setAttribute('cx', '50');\n  spinnerCircle.setAttribute('cy', '50');\n  spinnerCircle.setAttribute('r', '15');\n  spinnerCircle.setAttribute('fill', 'none');\n  spinnerCircle.setAttribute('stroke-width', '1');\n  spinnerCircle.setAttribute('stroke-miterlimit', '10');\n  spinnerSvg.appendChild(spinnerCircle);\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addControlsButtonPanel_ = function() {\n  /** @private {!HTMLElement} */\n  this.controlsButtonPanel_ =\n    /** @type {!HTMLElement} */ (document.createElement('div'));\n  this.controlsButtonPanel_.classList.add('shaka-controls-button-panel');\n  this.controlsButtonPanel_.classList.add('shaka-no-propagation');\n  this.controlsButtonPanel_.classList.add('shaka-show-controls-on-mouse-over');\n  this.controlsContainer_.appendChild(this.controlsButtonPanel_);\n\n  // Create the elements specified by controlPanelElements\n  for (let i = 0; i < this.config_.controlPanelElements.length; i++) {\n    const name = this.config_.controlPanelElements[i];\n    if (this.elementNamesToFunctions_.get(name)) {\n      if (shaka.ui.Controls.controlPanelElements_.indexOf(name) == -1) {\n        // Not a control panel element, skip\n        shaka.log.warning('Element is not part of control panel ' +\n          'elements and will be skipped', name);\n        continue;\n      }\n      this.elementNamesToFunctions_.get(name)();\n    }\n  }\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addEventListeners_ = function() {\n  // TODO: Convert adding event listers to the \"() =>\" form.\n\n  this.player_.addEventListener(\n      'buffering', this.onBufferingStateChange_.bind(this));\n\n  // Listen for key down events to detect tab and enable outline\n  // for focused elements.\n  this.eventManager_.listen(window, 'keydown', this.onKeyDown_.bind(this));\n\n  this.video_.addEventListener(\n      'play', this.onPlayStateChange_.bind(this));\n  this.video_.addEventListener(\n      'pause', this.onPlayStateChange_.bind(this));\n\n  // Since videos go into a paused state at the end, Chrome and Edge both fire\n  // the 'pause' event when a video ends.  IE 11 only fires the 'ended' event.\n  this.video_.addEventListener(\n      'ended', this.onPlayStateChange_.bind(this));\n\n  if (this.config_.adaptPlayButtonSize) {\n    this.video_.addEventListener(\n        'resize', this.resizePlayButtonAndSpinner_.bind(this));\n  }\n\n  if (this.seekBar_) {\n    this.seekBar_.addEventListener(\n        'mousedown', this.onSeekStart_.bind(this));\n    this.seekBar_.addEventListener(\n        'touchstart', this.onSeekStart_.bind(this), {passive: true});\n    this.seekBar_.addEventListener(\n        'input', this.onSeekInput_.bind(this));\n    this.seekBar_.addEventListener(\n        'touchend', this.onSeekEnd_.bind(this));\n    this.seekBar_.addEventListener(\n        'mouseup', this.onSeekEnd_.bind(this));\n  }\n\n  if (this.muteButton_) {\n    this.muteButton_.addEventListener(\n      'click', this.onMuteButtonClick_.bind(this));\n  }\n\n  if (this.volumeBar_) {\n    this.volumeBar_.addEventListener(\n      'input', this.onVolumeInput_.bind(this));\n  }\n\n  this.video_.addEventListener(\n      'volumechange', this.onVolumeStateChange_.bind(this));\n  // Initialize volume display with a fake event.\n  this.onVolumeStateChange_();\n\n  if (this.captionButton_) {\n    this.captionButton_.addEventListener(\n      'click', this.onCaptionClick_.bind(this));\n  }\n\n  this.player_.addEventListener(\n      'texttrackvisibility', this.onCaptionStateChange_.bind(this));\n  this.player_.addEventListener(\n      'trackschanged', this.onTracksChange_.bind(this));\n  this.player_.addEventListener(\n      'variantchanged', this.onVariantChange_.bind(this));\n  this.player_.addEventListener(\n      'textchanged', this.updateTextLanguages_.bind(this));\n\n  if (this.fullscreenButton_) {\n    this.fullscreenButton_.addEventListener(\n      'click', this.onFullscreenClick_.bind(this));\n  }\n\n  if (this.currentTime_) {\n    this.currentTime_.addEventListener(\n      'click', this.onCurrentTimeClick_.bind(this));\n  }\n\n  if (this.rewindButton_) {\n    this.rewindButton_.addEventListener(\n      'click', this.onRewindClick_.bind(this));\n  }\n\n  if (this.fastForwardButton_) {\n    this.fastForwardButton_.addEventListener(\n      'click', this.onFastForwardClick_.bind(this));\n  }\n\n  if (this.castButton_) {\n    this.castButton_.addEventListener(\n      'click', this.onCastClick_.bind(this));\n  }\n\n  this.controlsContainer_.addEventListener(\n      'touchstart', this.onContainerTouch_.bind(this), {passive: false});\n  this.controlsContainer_.addEventListener(\n      'click', this.onContainerClick_.bind(this));\n\n  this.overflowMenu_.addEventListener(\n      'touchstart', function(event) {\n        this.lastTouchEventTime_ = Date.now();\n        event.stopPropagation();\n      }.bind(this));\n\n  // Elements that should not propagate clicks (controls panel, menus)\n  const noPropagationElements = this.videoContainer_.getElementsByClassName(\n      'shaka-no-propagation');\n  for (let i = 0; i < noPropagationElements.length; i++) {\n    let element = noPropagationElements[i];\n    element.addEventListener(\n      'click', function(event) { event.stopPropagation(); });\n  }\n\n  // Keep showing controls if one of those elements is hovered\n  let showControlsElements = this.videoContainer_.getElementsByClassName(\n      'shaka-show-controls-on-mouse-over');\n  for (let i = 0; i < showControlsElements.length; i++) {\n    let element = showControlsElements[i];\n    element.addEventListener(\n      'mouseover', () => {\n        this.overrideCssShowControls_ = true;\n      });\n\n    element.addEventListener(\n      'mouseleave', () => {\n       this.overrideCssShowControls_ = false;\n      });\n  }\n\n  if (this.overflowMenuButton_) {\n    this.overflowMenuButton_.addEventListener(\n      'click', this.onOverflowMenuButtonClick_.bind(this));\n  }\n\n  if (this.resolutionButton_) {\n    this.resolutionButton_.addEventListener(\n        'click', this.onResolutionClick_.bind(this));\n  }\n\n  if (this.languagesButton_) {\n    this.languagesButton_.addEventListener(\n        'click', this.onLanguagesClick_.bind(this));\n  }\n\n  this.videoContainer_.addEventListener(\n      'mousemove', this.onMouseMove_.bind(this));\n  this.videoContainer_.addEventListener(\n      'touchmove', this.onMouseMove_.bind(this), {passive: true});\n  this.videoContainer_.addEventListener(\n      'touchend', this.onMouseMove_.bind(this), {passive: true});\n  this.videoContainer_.addEventListener(\n      'mouseout', this.onMouseOut_.bind(this));\n\n  // Overflow menus are supposed to hide once you click elsewhere\n  // on the video element. The code in onContainerClick_ ensures that.\n  // However, clicks on controls panel don't propagate to the container,\n  // so we have to explicitely hide the menus onclick here.\n  this.controlsButtonPanel_.addEventListener('click', () => {\n    if (this.anySettingsMenusAreOpen_()) {\n      this.hideSettingsMenus_();\n    }\n  });\n\n  this.castProxy_.addEventListener(\n      'caststatuschanged', this.onCastStatusChange_.bind(this));\n\n  this.videoContainer_.addEventListener('keyup', this.onKeyUp_.bind(this));\n\n  for (let i = 0; i < this.backToOverflowMenuButtons_.length; i++) {\n    let button = this.backToOverflowMenuButtons_[i];\n    button.addEventListener('click', () => {\n      // Hide the submenus, display the overflow menu\n      this.hideSettingsMenus_();\n      shaka.ui.Controls.setDisplay_(this.overflowMenu_, true);\n\n      // If there are back to overflow menu buttons, there must be\n      // overflow menu buttons, but oh well\n      if (this.overflowMenu_.childNodes.length) {\n        /** @type {!HTMLElement} */ (this.overflowMenu_.childNodes[0]).focus();\n      }\n\n      // Make sure controls are displayed\n      this.overrideCssShowControls_ = true;\n    });\n  }\n\n  if (screen.orientation) {\n    screen.orientation.addEventListener(\n        'change', this.onScreenRotation_.bind(this));\n  }\n\n  this.localization_.addEventListener(\n      shaka.ui.Localization.LOCALE_UPDATED,\n      (e) => this.updateLocalizedStrings_());\n\n  this.localization_.addEventListener(\n      shaka.ui.Localization.LOCALE_CHANGED,\n      (e) => this.updateLocalizedStrings_());\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addSeekBar_ = function() {\n  this.seekBar_ =\n    /** @type {!HTMLInputElement} */ (document.createElement('input'));\n  this.seekBar_.classList.add('shaka-seek-bar');\n  this.seekBar_.type = 'range';\n  this.seekBar_.setAttribute('step', 'any');\n  this.seekBar_.setAttribute('min', '0');\n  this.seekBar_.setAttribute('max', '1');\n  this.seekBar_.value = '0';\n  this.seekBar_.classList.add('shaka-no-propagation');\n  this.seekBar_.classList.add('shaka-show-controls-on-mouse-over');\n  this.controlsContainer_.appendChild(this.seekBar_);\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addOverflowMenu_ = function() {\n  /** @private {!HTMLElement} */\n  this.overflowMenu_ =\n   /** @type {!HTMLElement} */ (document.createElement('div'));\n  this.overflowMenu_.classList.add('shaka-overflow-menu');\n  this.overflowMenu_.classList.add('shaka-no-propagation');\n  this.overflowMenu_.classList.add('shaka-show-controls-on-mouse-over');\n  this.overflowMenu_.classList.add('shaka-settings-menu');\n  this.controlsContainer_.appendChild(this.overflowMenu_);\n\n  for (let i = 0; i < this.config_.overflowMenuButtons.length; i++) {\n    const name = this.config_.overflowMenuButtons[i];\n    if (this.elementNamesToFunctions_.get(name)) {\n      if (shaka.ui.Controls.overflowButtons_.indexOf(name) == -1) {\n        // Not an overflow button, skip\n        shaka.log.warning('Element is not part of overflow ' +\n          'button collection and will be skipped', name);\n        continue;\n      }\n      this.elementNamesToFunctions_.get(name)();\n    }\n  }\n\n  // Add settings menus\n  if (this.config_.overflowMenuButtons.indexOf('quality') > -1) {\n    this.addResolutionMenu_();\n  }\n\n  if (this.config_.overflowMenuButtons.indexOf('language') > -1) {\n    this.addAudioLangMenu_();\n  }\n\n  if (this.config_.overflowMenuButtons.indexOf('captions') > -1) {\n    this.addTextLangMenu_();\n  }\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addCurrentTime_ = function() {\n  const timeContainer = document.createElement('div');\n  timeContainer.classList.add('shaka-time-container');\n  this.currentTime_ =\n    /** @type {!HTMLElement} */ (document.createElement('div'));\n  this.currentTime_.textContent = '0:00';\n  timeContainer.appendChild(this.currentTime_);\n  this.controlsButtonPanel_.appendChild(timeContainer);\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addMuteButton_ = function() {\n  this.muteButton_ =\n    /** @type {!HTMLElement} */ (document.createElement('button'));\n  this.muteButton_.classList.add('shaka-mute-button');\n  this.muteButton_.classList.add('material-icons');\n  this.muteButton_.textContent = 'volume_up';\n  this.controlsButtonPanel_.appendChild(this.muteButton_);\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addVolumeBar_ = function() {\n  this.volumeBar_ =\n    /** @type {!HTMLInputElement} */ (document.createElement('input'));\n  this.volumeBar_.classList.add('shaka-volume-bar');\n  this.volumeBar_.setAttribute('type', 'range');\n  this.volumeBar_.setAttribute('step', 'any');\n  this.volumeBar_.setAttribute('min', '0');\n  this.volumeBar_.setAttribute('max', '1');\n  this.volumeBar_.setAttribute('value', '0');\n  this.controlsButtonPanel_.appendChild(this.volumeBar_);\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addFullscreenButton_ = function() {\n  this.fullscreenButton_ =\n    /** @type {!HTMLElement} */ (document.createElement('button'));\n  this.fullscreenButton_.classList.add('shaka-fullscreen-button');\n  this.fullscreenButton_.classList.add('material-icons');\n  // This text content is actually a material design icon.\n  // DO NOT LOCALIZE\n  this.fullscreenButton_.textContent = 'fullscreen';\n  this.controlsButtonPanel_.appendChild(this.fullscreenButton_);\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addOverflowMenuButton_ = function() {\n  this.overflowMenuButton_ =\n    /** @type {!HTMLElement} */ (document.createElement('button'));\n  this.overflowMenuButton_.classList.add('shaka-overflow-menu-button');\n  this.overflowMenuButton_.classList.add('shaka-no-propagation');\n  this.overflowMenuButton_.classList.add('material-icons');\n  this.overflowMenuButton_.textContent = 'more_vert';\n  this.controlsButtonPanel_.appendChild(this.overflowMenuButton_);\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addCaptionButton_ = function() {\n  this.captionButton_ =\n    /** @type {!HTMLElement} */ (document.createElement('button'));\n\n  this.captionButton_.classList.add('shaka-caption-button');\n  this.captionIcon_ = /** @type {!HTMLElement} */ (document.createElement('i'));\n  this.captionIcon_.classList.add('material-icons');\n  // This text content is actually a material design icon.\n  // DO NOT LOCALIZE\n  this.captionIcon_.textContent = 'closed_caption';\n\n  if (this.player_ && this.player_.isTextTrackVisible()) {\n    this.captionButton_.setAttribute('aria-pressed', 'true');\n  } else {\n    this.captionButton_.setAttribute('aria-pressed', 'false');\n  }\n  this.captionButton_.appendChild(this.captionIcon_);\n\n  const label = document.createElement('label');\n  label.classList.add('shaka-overflow-button-label');\n\n  this.captionsNameSpan_ =\n  /** @type {!HTMLElement} */ (document.createElement('span'));\n\n  label.appendChild(this.captionsNameSpan_);\n\n  this.currentCaptions_ =\n    /** @type {!HTMLElement} */ (document.createElement('span'));\n  this.currentCaptions_.classList.add('shaka-current-selection-span');\n  label.appendChild(this.currentCaptions_);\n  this.captionButton_.appendChild(label);\n  this.overflowMenu_.appendChild(this.captionButton_);\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addTextLangMenu_ = function() {\n  this.textLangMenu_ =\n    /** @type {!HTMLElement} */ (document.createElement('div'));\n  this.textLangMenu_.classList.add('shaka-text-languages');\n  this.textLangMenu_.classList.add('shaka-no-propagation');\n  this.textLangMenu_.classList.add('shaka-show-controls-on-mouse-over');\n  this.textLangMenu_.classList.add('shaka-settings-menu');\n\n  this.backFromCaptionsButton_ =\n    /** @type {!HTMLElement} */ (document.createElement('button'));\n  this.backFromCaptionsButton_.classList.add('shaka-back-to-overflow-button');\n  this.textLangMenu_.appendChild(this.backFromCaptionsButton_);\n\n  const backIcon = document.createElement('i');\n  backIcon.classList.add('material-icons');\n  backIcon.textContent = 'arrow_back';\n  this.backFromCaptionsButton_.appendChild(backIcon);\n\n  this.backFromCaptionsSpan_ =\n    /** @type {!HTMLElement} */ (document.createElement('span'));\n  this.backFromCaptionsButton_.appendChild(this.backFromCaptionsSpan_);\n\n  // Add the off option\n  const off = document.createElement('button');\n  off.setAttribute('aria-selected', 'true');\n  this.textLangMenu_.appendChild(off);\n\n  const chosenIcon = document.createElement('i');\n  chosenIcon.classList.add('material-icons');\n  chosenIcon.classList.add('shaka-chosen-item');\n  // This text content is actually a material design icon.\n  // DO NOT LOCALIZE\n  chosenIcon.textContent = 'done';\n  // Screen reader should ignore 'done'.\n  chosenIcon.setAttribute('aria-hidden', 'true');\n  off.appendChild(chosenIcon);\n\n  this.captionsOffSpan_ =\n     /** @type {!HTMLElement} */ (document.createElement('span'));\n\n  this.captionsOffSpan_.classList.add('shaka-auto-span');\n  off.appendChild(this.captionsOffSpan_);\n\n  this.controlsContainer_.appendChild(this.textLangMenu_);\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addCastButton_ = function() {\n  this.castButton_ =\n    /** @type {!HTMLElement} */ (document.createElement('button'));\n\n  this.castButton_.classList.add('shaka-cast-button');\n  this.castButton_.classList.add('shaka-hidden');\n  this.castButton_.setAttribute('aria-pressed', 'false');\n\n  this.castIcon_ = /** @type {!HTMLElement} */ (document.createElement('i'));\n  this.castIcon_.classList.add('material-icons');\n  // This text content is actually a material design icon.\n  // DO NOT LOCALIZE\n  this.castIcon_.textContent = 'cast';\n  this.castButton_.appendChild(this.castIcon_);\n\n  const label = document.createElement('label');\n  label.classList.add('shaka-overflow-button-label');\n  this.castNameSpan_ =\n    /** @type {!HTMLElement} */ (document.createElement('span'));\n  label.appendChild(this.castNameSpan_);\n\n  this.castCurrentSelectionSpan_ =\n    /** @type {!HTMLElement} */ (document.createElement('span'));\n  this.castCurrentSelectionSpan_.classList.add('shaka-current-selection-span');\n  label.appendChild(this.castCurrentSelectionSpan_);\n  this.castButton_.appendChild(label);\n  this.overflowMenu_.appendChild(this.castButton_);\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addRewindButton_ = function() {\n  this.rewindButton_ =\n    /** @type {!HTMLElement} */ (document.createElement('button'));\n  this.rewindButton_.classList.add('shaka-rewind-button');\n  this.rewindButton_.classList.add('material-icons');\n  this.rewindButton_.textContent = 'fast_rewind';\n  this.controlsButtonPanel_.appendChild(this.rewindButton_);\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addFastForwardButton_ = function() {\n  this.fastForwardButton_ =\n    /** @type {!HTMLElement} */ (document.createElement('button'));\n  this.fastForwardButton_.classList.add('shaka-fast-forward-button');\n  this.fastForwardButton_.classList.add('material-icons');\n  this.fastForwardButton_.textContent = 'fast_forward';\n  this.controlsButtonPanel_.appendChild(this.fastForwardButton_);\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addResolutionMenu_ = function() {\n  this.resolutionMenu_ =\n    /** @type {!HTMLElement} */ (document.createElement('div'));\n  this.resolutionMenu_.classList.add('shaka-resolutions');\n  this.resolutionMenu_.classList.add('shaka-no-propagation');\n  this.resolutionMenu_.classList.add('shaka-show-controls-on-mouse-over');\n  this.resolutionMenu_.classList.add('shaka-settings-menu');\n\n  this.backFromResolutionButton_ =\n     /** @type {!HTMLElement} */ (document.createElement('button'));\n  this.backFromResolutionButton_.classList.add('shaka-back-to-overflow-button');\n  this.resolutionMenu_.appendChild(this.backFromResolutionButton_);\n\n  const backIcon = document.createElement('i');\n  backIcon.classList.add('material-icons');\n  backIcon.textContent = 'arrow_back';\n  this.backFromResolutionButton_.appendChild(backIcon);\n\n  this.backFromResolutionSpan_ =\n    /** @type {!HTMLElement} */ (document.createElement('span'));\n  this.backFromResolutionButton_.appendChild(this.backFromResolutionSpan_);\n\n\n  // Add the abr option\n  const auto = document.createElement('button');\n  auto.setAttribute('aria-selected', 'true');\n  this.resolutionMenu_.appendChild(auto);\n\n  const chosenIcon = document.createElement('i');\n  chosenIcon.classList.add('material-icons');\n  chosenIcon.classList.add('shaka-chosen-item');\n  // In material-icons 'done' stands for a check mark.\n  chosenIcon.textContent = 'done';\n  // Screen reader should ignore 'done'.\n  chosenIcon.setAttribute('aria-hidden', 'true');\n  auto.appendChild(chosenIcon);\n\n  this.abrOnSpan_ =\n    /** @type {!HTMLElement} */ (document.createElement('span'));\n  this.abrOnSpan_.classList.add('shaka-auto-span');\n  auto.appendChild(this.abrOnSpan_);\n\n  this.controlsContainer_.appendChild(this.resolutionMenu_);\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addResolutionButton_ = function() {\n  this.resolutionButton_ =\n    /** @type {!HTMLElement} */ (document.createElement('button'));\n\n  this.resolutionButton_.classList.add('shaka-resolution-button');\n\n  const icon = document.createElement('i');\n  icon.classList.add('material-icons');\n  icon.textContent = 'settings';\n  this.resolutionButton_.appendChild(icon);\n\n  const label = document.createElement('label');\n  label.classList.add('shaka-overflow-button-label');\n  this.resolutionNameSpan_ =\n    /** @type {!HTMLElement} */ (document.createElement('span'));\n  label.appendChild(this.resolutionNameSpan_);\n\n  this.currentResolution_ =\n    /** @type {!HTMLElement} */ (document.createElement('span'));\n  this.currentResolution_.classList.add('shaka-current-selection-span');\n  label.appendChild(this.currentResolution_);\n  this.resolutionButton_.appendChild(label);\n\n  this.overflowMenu_.appendChild(this.resolutionButton_);\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addAudioLangMenu_ = function() {\n  this.audioLangMenu_ =\n    /** @type {!HTMLElement} */ (document.createElement('div'));\n  this.audioLangMenu_.classList.add('shaka-audio-languages');\n  this.audioLangMenu_.classList.add('shaka-no-propagation');\n  this.audioLangMenu_.classList.add('shaka-show-controls-on-mouse-over');\n  this.audioLangMenu_.classList.add('shaka-settings-menu');\n\n  this.backFromLanguageButton_ =\n     /** @type {!HTMLElement} */ (document.createElement('button'));\n  this.backFromLanguageButton_.classList.add('shaka-back-to-overflow-button');\n  this.audioLangMenu_.appendChild(this.backFromLanguageButton_);\n\n  const backIcon = document.createElement('i');\n  backIcon.classList.add('material-icons');\n  backIcon.textContent = 'arrow_back';\n  this.backFromLanguageButton_.appendChild(backIcon);\n\n  this.backFromLanguageSpan_ =\n    /** @type {!HTMLElement} */ (document.createElement('span'));\n  this.backFromLanguageButton_.appendChild(this.backFromLanguageSpan_);\n\n  this.controlsContainer_.appendChild(this.audioLangMenu_);\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.addLanguagesButton_ = function() {\n  this.languagesButton_ =\n    /** @type {!HTMLElement} */ (document.createElement('button'));\n  this.languagesButton_.classList.add('shaka-language-button');\n\n  const icon = document.createElement('i');\n  icon.classList.add('material-icons');\n  // This text content is actually a material design icon.\n  // DO NOT LOCALIZE\n  icon.textContent = 'language';\n  this.languagesButton_.appendChild(icon);\n\n  const label = document.createElement('label');\n  label.classList.add('shaka-overflow-button-label');\n  this.languageNameSpan_ =\n    /** @type {!HTMLElement} */ (document.createElement('span'));\n  this.languageNameSpan_.classList.add('languageSpan');\n  label.appendChild(this.languageNameSpan_);\n\n  this.currentAudioLanguage_ =\n    /** @type {!HTMLElement} */ (document.createElement('span'));\n  this.currentAudioLanguage_.classList.add('shaka-current-selection-span');\n  const language = this.player_.getConfiguration().preferredAudioLanguage;\n  this.setChosenLanguageName_(this.currentAudioLanguage_, language);\n  label.appendChild(this.currentAudioLanguage_);\n\n  this.languagesButton_.appendChild(label);\n\n  this.overflowMenu_.appendChild(this.languagesButton_);\n};\n\n\n/**\n * @param {!Element} element\n * @param {string} language\n * @private\n */\nshaka.ui.Controls.prototype.setChosenLanguageName_ =\n  function(element, language) {\n  if (language.length) {\n    let languageName;\n    if (mozilla.LanguageMapping[language]) {\n      languageName = mozilla.LanguageMapping[language].nativeName;\n    } else {\n      // We don't know this language\n      languageName = this.localization_.resolve(\n        shaka.ui.Controls.resolveSpecialLanguageCode_(language));\n    }\n    element.textContent = languageName;\n  }\n};\n\n\n/**\n * This allows the application to inhibit casting.\n *\n * @param {boolean} allow\n * @export\n */\nshaka.ui.Controls.prototype.allowCast = function(allow) {\n  this.castAllowed_ = allow;\n  this.onCastStatusChange_(null);\n};\n\n\n/**\n * Used by the application to notify the controls that a load operation is\n * complete.  This allows the controls to recalculate play/paused state, which\n * is important for platforms like Android where autoplay is disabled.\n * @export\n */\nshaka.ui.Controls.prototype.loadComplete = function() {\n  // If we are on Android or if autoplay is false, video.paused should be true.\n  // Otherwise, video.paused is false and the content is autoplaying.\n  this.onPlayStateChange_();\n};\n\n\n/**\n * Enable or disable the custom controls. Enabling disables native\n * browser controls.\n *\n * @param {boolean} enabled\n * @export\n */\nshaka.ui.Controls.prototype.setEnabledShakaControls = function(enabled) {\n  this.enabled_ = enabled;\n  if (enabled) {\n    shaka.ui.Controls.setDisplay_(\n      this.controlsButtonPanel_.parentElement, true);\n    this.video_.controls = false;\n  } else {\n    shaka.ui.Controls.setDisplay_(\n      this.controlsButtonPanel_.parentElement, false);\n  }\n\n  // The effects of play state changes are inhibited while showing native\n  // browser controls.  Recalculate that state now.\n  this.onPlayStateChange_();\n};\n\n\n/**\n * Enable or disable native browser controls. Enabling disables shaka\n * controls.\n *\n * @param {boolean} enabled\n * @export\n */\nshaka.ui.Controls.prototype.setEnabledNativeControls = function(enabled) {\n  this.video_.controls = enabled;\n\n  if (enabled) {\n    this.setEnabledShakaControls(false);\n  }\n};\n\n\n/**\n * @export\n * @return {!shaka.cast.CastProxy}\n */\nshaka.ui.Controls.prototype.getCastProxy = function() {\n  return this.castProxy_;\n};\n\n\n/**\n * @return {shaka.ui.Localization}\n * @export\n */\nshaka.ui.Controls.prototype.getLocalization = function() {\n  return this.localization_;\n};\n\n\n/**\n * When a mobile device is rotated to landscape layout, and the video is loaded,\n * make the demo app go into fullscreen.\n * Similarly, exit fullscreen when the device is rotated to portrait layout.\n * @private\n */\nshaka.ui.Controls.prototype.onScreenRotation_ = function() {\n  if (!this.video_ ||\n      this.video_.readyState == 0 ||\n      this.castProxy_.isCasting()) return;\n\n  if (screen.orientation.type.includes('landscape') &&\n      !document.fullscreenElement) {\n    this.videoContainer_.requestFullscreen();\n  } else if (screen.orientation.type.includes('portrait') &&\n      document.fullscreenElement) {\n    document.exitFullscreen();\n  }\n};\n\n\n/**\n * Hiding the cursor when the mouse stops moving seems to be the only decent UX\n * in fullscreen mode.  Since we can't use pure CSS for that, we use events both\n * in and out of fullscreen mode.\n * Showing the control bar when a key is pressed, and hiding it after some time.\n * @param {!Event} event\n * @private\n */\nshaka.ui.Controls.prototype.onMouseMove_ = function(event) {\n  if (event.type == 'touchstart' || event.type == 'touchmove' ||\n      event.type == 'touchend' || event.type == 'keyup') {\n    this.lastTouchEventTime_ = Date.now();\n  } else if (this.lastTouchEventTime_ + 1000 < Date.now()) {\n    // It has been a while since the last touch event, this is probably a real\n    // mouse moving, so treat it like a mouse.\n    this.lastTouchEventTime_ = null;\n  }\n\n  // When there is a touch, we can get a 'mousemove' event after touch events.\n  // This should be treated as part of the touch, which has already been handled\n  if (this.lastTouchEventTime_ && event.type == 'mousemove') {\n    return;\n  }\n\n  // Use the cursor specified in the CSS file.\n  this.videoContainer_.style.cursor = '';\n  // Show the controls.\n  this.setControlsOpacity_(shaka.ui.Controls.opacity_.OPAQUE);\n  this.hideSettingsMenusTimer_.cancel();\n  this.updateTimeAndSeekRange_();\n\n  // Hide the cursor when the mouse stops moving.\n  // Only applies while the cursor is over the video container.\n  if (this.mouseStillTimeoutId_) {\n    // Reset the timer.\n    window.clearTimeout(this.mouseStillTimeoutId_);\n  }\n\n  // Only start a timeout on 'touchend' or for 'mousemove' with no touch events.\n  if (event.type == 'touchend' ||\n      event.type == 'keyup'|| !this.lastTouchEventTime_) {\n    this.mouseStillTimeoutId_ = window.setTimeout(\n        this.onMouseStill_.bind(this), 3000);\n  }\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onMouseOut_ = function() {\n  // We sometimes get 'mouseout' events with touches.  Since we can never leave\n  // the video element when touching, ignore.\n  if (this.lastTouchEventTime_) return;\n\n  // Expire the timer early.\n  if (this.mouseStillTimeoutId_) {\n    window.clearTimeout(this.mouseStillTimeoutId_);\n  }\n  // Run the timeout callback to hide the controls.\n  // If we don't, the opacity style we set in onMouseMove_ will continue to\n  // override the opacity in CSS and force the controls to stay visible.\n  this.onMouseStill_();\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onMouseStill_ = function() {\n  // The mouse has stopped moving.\n  this.mouseStillTimeoutId_ = null;\n  // Hide the cursor.  (NOTE: not supported on IE)\n  this.videoContainer_.style.cursor = 'none';\n\n  // Keep showing the controls if video is paused or one of the control menus\n  // is hovered.\n  if ((this.video_.paused && !this.isSeeking_) ||\n       this.overrideCssShowControls_) {\n    this.setControlsOpacity_(shaka.ui.Controls.opacity_.OPAQUE);\n  } else {\n    this.setControlsOpacity_(shaka.ui.Controls.opacity_.TRANSPARENT);\n  }\n};\n\n\n/**\n * @param {!Event} event\n * @private\n */\nshaka.ui.Controls.prototype.onContainerTouch_ = function(event) {\n  if (!this.video_.duration) {\n    // Can't play yet.  Ignore.\n    return;\n  }\n\n  // If the overflow menu is showing, hide it on a touch event\n  if (this.overflowMenu_.classList.contains('shaka-displayed')) {\n    shaka.ui.Controls.setDisplay_(this.overflowMenu_, false);\n    // Stop this event from becoming a click event.\n    event.preventDefault();\n  }\n\n  if (this.isOpaque_()) {\n    this.lastTouchEventTime_ = Date.now();\n    // The controls are showing.\n    // Let this event continue and become a click.\n  } else {\n    // The controls are hidden, so show them.\n    this.onMouseMove_(event);\n    // Stop this event from becoming a click event.\n    event.preventDefault();\n  }\n};\n\n\n/**\n * @param {!Event} event\n * @private\n */\nshaka.ui.Controls.prototype.onContainerClick_ = function(event) {\n  if (!this.enabled_) return;\n\n  if (this.anySettingsMenusAreOpen_()) {\n    this.hideSettingsMenus_();\n  } else {\n    this.onPlayPauseClick_();\n  }\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onPlayPauseClick_ = function() {\n  if (!this.enabled_) return;\n\n  if (!this.video_.duration) {\n    // Can't play yet.  Ignore.\n    return;\n  }\n\n  this.player_.cancelTrickPlay();\n  this.trickPlayRate_ = 1;\n\n  if (this.video_.paused) {\n    this.video_.play();\n  } else {\n    this.video_.pause();\n  }\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onPlayStateChange_ = function() {\n  // On IE 11, a video may end without going into a paused state.  To correct\n  // both the UI state and the state of the video tag itself, we explicitly\n  // pause the video if that happens.\n  if (this.video_.ended && !this.video_.paused) {\n    this.video_.pause();\n  }\n\n  const Controls = shaka.ui.Controls;\n  // Video is paused during seek, so don't show the play arrow while seeking:\n  if (this.enabled_ && this.video_.paused && !this.isSeeking_) {\n    this.playButton_.setAttribute('icon', 'play');\n    this.playButton_.setAttribute(Controls.ARIA_LABEL_,\n      this.localization_.resolve(shaka.ui.Locales.Ids.ARIA_LABEL_PLAY));\n  } else {\n    this.playButton_.setAttribute('icon', 'pause');\n    this.playButton_.setAttribute(Controls.ARIA_LABEL_,\n      this.localization_.resolve(shaka.ui.Locales.Ids.ARIA_LABEL_PAUSE));\n  }\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onSeekStart_ = function() {\n  if (!this.enabled_) return;\n\n  this.isSeeking_ = true;\n  this.video_.pause();\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onSeekInput_ = function() {\n  if (!this.enabled_) return;\n\n  if (!this.video_.duration) {\n    // Can't seek yet.  Ignore.\n    return;\n  }\n\n  // Update the UI right away.\n  this.updateTimeAndSeekRange_();\n\n  // Collect input events and seek when things have been stable for 125ms.\n  if (this.seekTimeoutId_ != null) {\n    window.clearTimeout(this.seekTimeoutId_);\n  }\n  this.seekTimeoutId_ = window.setTimeout(\n      this.onSeekInputTimeout_.bind(this), 125);\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onSeekInputTimeout_ = function() {\n  goog.asserts.assert(this.seekBar_ != null, 'Seekbar should not be null!');\n  this.seekTimeoutId_ = null;\n  this.video_.currentTime = parseFloat(this.seekBar_.value);\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onSeekEnd_ = function() {\n  if (!this.enabled_) return;\n\n  if (this.seekTimeoutId_ != null) {\n    // They just let go of the seek bar, so end the timer early.\n    window.clearTimeout(this.seekTimeoutId_);\n    this.onSeekInputTimeout_();\n  }\n\n  this.isSeeking_ = false;\n  this.video_.play();\n};\n\n\n/**\n * Support controls with keyboard inputs.\n * @param {!Event} event\n * @private\n */\nshaka.ui.Controls.prototype.onKeyUp_ = function(event) {\n  let key = event.key;\n\n  let activeElement = document.activeElement;\n  let isVolumeBar = activeElement && activeElement.classList ?\n      activeElement.classList.contains('shaka-volume-bar') : false;\n  let isSeekBar = activeElement && activeElement.classList &&\n      activeElement.classList.contains('shaka-seek-bar');\n  // Show the control panel if it is on focus or any button is pressed.\n  if (this.controlsContainer_.contains(activeElement)) {\n    this.onMouseMove_(event);\n  }\n\n  switch (key) {\n    case 'ArrowLeft':\n      // If it's not focused on the volume bar, move the seek time backward\n      // for 5 sec. Otherwise, the volume will be adjusted automatically.\n      if (!isVolumeBar) {\n        this.seek_(this.video_.currentTime - 5, event);\n      }\n      break;\n    case 'ArrowRight':\n      // If it's not focused on the volume bar, move the seek time forward\n      // for 5 sec. Otherwise, the volume will be adjusted automatically.\n      if (!isVolumeBar) {\n        this.seek_(this.video_.currentTime + 5, event);\n      }\n      break;\n    // Jump to the beginning of the video's seek range.\n    case 'Home':\n      this.seek_(this.player_.seekRange().start, event);\n      break;\n    // Jump to the end of the video's seek range.\n    case 'End':\n      this.seek_(this.player_.seekRange().end, event);\n      break;\n    // Pause or play by pressing space on the seek bar.\n    case ' ':\n      if (isSeekBar) {\n        this.onPlayPauseClick_();\n      }\n      break;\n    }\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onMuteButtonClick_ = function() {\n  if (!this.enabled_) return;\n\n  this.video_.muted = !this.video_.muted;\n};\n\n\n/**\n * Updates the controls to reflect volume changes.\n * @private\n */\nshaka.ui.Controls.prototype.onVolumeStateChange_ = function() {\n  const Controls = shaka.ui.Controls;\n  if (this.video_.muted) {\n    if (this.muteButton_) {\n      this.muteButton_.textContent = 'volume_off';\n      this.muteButton_.setAttribute(Controls.ARIA_LABEL_,\n        this.localization_.resolve(shaka.ui.Locales.Ids.ARIA_LABEL_UNMUTE));\n    }\n    if (this.volumeBar_) {\n      this.volumeBar_.value = 0;\n    }\n  } else {\n    if (this.muteButton_) {\n      this.muteButton_.textContent = 'volume_up';\n      this.muteButton_.setAttribute(Controls.ARIA_LABEL_,\n        this.localization_.resolve(shaka.ui.Locales.Ids.ARIA_LABEL_MUTE));\n    }\n    if (this.volumeBar_) {\n      this.volumeBar_.value = this.video_.volume;\n    }\n  }\n\n  if (this.volumeBar_) {\n    let gradient = ['to right'];\n    gradient.push(shaka.ui.Controls.VOLUME_BAR_VOLUME_LEVEL_COLOR_ +\n                 (this.volumeBar_.value * 100) + '%');\n    gradient.push(shaka.ui.Controls.VOLUME_BAR_BASE_COLOR_ +\n                 (this.volumeBar_.value * 100) + '%');\n    gradient.push(shaka.ui.Controls.VOLUME_BAR_BASE_COLOR_ + '100%');\n    this.volumeBar_.style.background =\n        'linear-gradient(' + gradient.join(',') + ')';\n  }\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onVolumeInput_ = function() {\n  this.video_.volume = parseFloat(this.volumeBar_.value);\n  if (this.video_.volume == 0) {\n    this.video_.muted = true;\n  } else {\n    this.video_.muted = false;\n  }\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onCaptionClick_ = function() {\n  if (!this.enabled_) return;\n\n  shaka.ui.Controls.setDisplay_(this.overflowMenu_, false);\n  shaka.ui.Controls.setDisplay_(this.textLangMenu_, true);\n  // Focus on the currently selected language button.\n  this.focusOnTheChosenItem_(this.textLangMenu_);\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onResolutionClick_ = function() {\n  if (!this.enabled_) return;\n  shaka.ui.Controls.setDisplay_(this.overflowMenu_, false);\n  shaka.ui.Controls.setDisplay_(this.resolutionMenu_, true);\n  // Focus on the currently selected resolution button.\n  this.focusOnTheChosenItem_(this.resolutionMenu_);\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onLanguagesClick_ = function() {\n  if (!this.enabled_) return;\n  shaka.ui.Controls.setDisplay_(this.overflowMenu_, false);\n  shaka.ui.Controls.setDisplay_(this.audioLangMenu_, true);\n  // Focus on the currently selected language button.\n  this.focusOnTheChosenItem_(this.audioLangMenu_);\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onTracksChange_ = function() {\n  // TS content might have captions embedded in video stream, we can't know\n  // until we start transmuxing. So, always show caption button if we're\n  // playing TS content.\n  if (this.captionButton_) {\n    if (shaka.ui.Utils.isTsContent(this.player_)) {\n      shaka.ui.Controls.setDisplay_(this.captionButton_, true);\n    } else {\n      let hasText = this.player_.getTextTracks().length;\n      shaka.ui.Controls.setDisplay_(this.captionButton_, hasText > 0);\n    }\n  }\n\n  // Update language and resolution selections\n  this.updateResolutionSelection_();\n  this.updateAudioLanguages_();\n  this.updateTextLanguages_();\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onVariantChange_ = function() {\n  // Update language and resolution selections\n  this.updateResolutionSelection_();\n  this.updateAudioLanguages_();\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.updateResolutionSelection_ = function() {\n  // Only applicable if resolution button is a part of the UI\n  if (!this.resolutionButton_ || !this.resolutionMenu_) {\n    return;\n  }\n\n  let tracks = this.player_.getVariantTracks();\n  // Hide resolution menu and button for audio-only content.\n  if (tracks.length && !tracks[0].height) {\n    shaka.ui.Controls.setDisplay_(this.resolutionMenu_, false);\n    shaka.ui.Controls.setDisplay_(this.resolutionButton_, false);\n    return;\n  }\n  tracks.sort(function(t1, t2) {\n    return t1.height - t2.height;\n  });\n  tracks.reverse();\n\n  // If there is a selected variant track, then we filtering out any tracks in\n  // a different language.  Then we use those remaining tracks to display the\n  // available resolutions.\n  const selectedTrack = tracks.find((track) => track.active);\n  if (selectedTrack) {\n    const language = selectedTrack.language;\n    // Filter by current audio language.\n    tracks = tracks.filter(function(track) {\n      return track.language == language;\n    });\n  }\n\n  // Remove old shaka-resolutions\n  // 1. Save the back to menu button\n  const backButton = shaka.ui.Utils.getFirstDescendantWithClassName(\n      this.resolutionMenu_, 'shaka-back-to-overflow-button');\n\n  // 2. Remove everything\n  while (this.resolutionMenu_.firstChild) {\n    this.resolutionMenu_.removeChild(this.resolutionMenu_.firstChild);\n  }\n\n  // 3. Add the backTo Menu button back\n  this.resolutionMenu_.appendChild(backButton);\n\n  const abrEnabled = this.player_.getConfiguration().abr.enabled;\n\n  // Add new ones\n  tracks.forEach((track) => {\n    let button = document.createElement('button');\n    button.classList.add('explicit-resolution');\n    button.addEventListener('click',\n        this.onTrackSelected_.bind(this, track));\n\n    let span = document.createElement('span');\n    span.textContent = track.height + 'p';\n    button.appendChild(span);\n\n    if (!abrEnabled && track == selectedTrack) {\n      // If abr is disabled, mark the selected track's\n      // resolution.\n      button.setAttribute('aria-selected', 'true');\n      button.appendChild(this.chosenIcon_());\n      span.classList.add('shaka-chosen-item');\n      this.currentResolution_.textContent = span.textContent;\n    }\n    this.resolutionMenu_.appendChild(button);\n  });\n\n  // Add the Auto button\n  let autoButton = document.createElement('button');\n  autoButton.addEventListener('click', function() {\n    let config = {abr: {enabled: true}};\n    this.player_.configure(config);\n    this.updateResolutionSelection_();\n  }.bind(this));\n\n  let autoSpan = document.createElement('span');\n  autoSpan.textContent =\n    this.localization_.resolve(shaka.ui.Locales.Ids.LABEL_AUTO_QUALITY);\n  autoButton.appendChild(autoSpan);\n\n  // If abr is enabled reflect it by marking 'Auto'\n  // as selected.\n  if (abrEnabled) {\n    autoButton.setAttribute('aria-selected', 'true');\n    autoButton.appendChild(this.chosenIcon_());\n\n    autoSpan.classList.add('shaka-chosen-item');\n\n    this.currentResolution_.textContent =\n      this.localization_.resolve(shaka.ui.Locales.Ids.LABEL_AUTO_QUALITY);\n  }\n\n  this.resolutionMenu_.appendChild(autoButton);\n  this.focusOnTheChosenItem_(this.resolutionMenu_);\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.updateAudioLanguages_ = function() {\n  // Only applicable if language button is a part of the UI\n  if (!this.languagesButton_ ||\n      !this.audioLangMenu_ || !this.currentAudioLanguage_) {\n    return;\n  }\n\n  const tracks = this.player_.getVariantTracks();\n\n  const languagesAndRoles = this.player_.getAudioLanguagesAndRoles();\n  const languages = languagesAndRoles.map((langAndRole) => {\n    return langAndRole.language;\n  });\n\n  this.updateLanguages_(tracks, this.audioLangMenu_, languages,\n    this.onAudioLanguageSelected_, /* updateChosen */ true,\n    this.currentAudioLanguage_);\n  this.focusOnTheChosenItem_(this.audioLangMenu_);\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.updateTextLanguages_ = function() {\n  // Only applicable if captions button is a part of the UI\n  if (!this.captionButton_ || !this.textLangMenu_ ||\n      !this.currentCaptions_) {\n    return;\n  }\n\n  const tracks = this.player_.getTextTracks();\n\n  const languagesAndRoles = this.player_.getTextLanguagesAndRoles();\n  const languages = languagesAndRoles.map((langAndRole) => {\n    return langAndRole.language;\n  });\n\n  this.updateLanguages_(tracks, this.textLangMenu_, languages,\n    this.onTextLanguageSelected_,\n    /* Don't mark current text language as chosen unless captions are enabled */\n    this.player_.isTextTrackVisible(),\n    this.currentCaptions_);\n\n  // Add the Off button\n  let offButton = document.createElement('button');\n  offButton.addEventListener('click', () => {\n    this.player_.setTextTrackVisibility(false);\n    this.updateTextLanguages_();\n  });\n\n  offButton.appendChild(this.captionsOffSpan_);\n\n  this.textLangMenu_.appendChild(offButton);\n\n  if (!this.player_.isTextTrackVisible()) {\n    offButton.setAttribute('aria-selected', 'true');\n    offButton.appendChild(this.chosenIcon_());\n    this.captionsOffSpan_.classList.add('shaka-chosen-item');\n    this.currentCaptions_.textContent =\n        this.localization_.resolve(shaka.ui.Locales.Ids.LABEL_CAPTIONS_OFF);\n  }\n\n  this.focusOnTheChosenItem_(this.textLangMenu_);\n};\n\n\n/**\n * @param {!Array.<shaka.extern.Track>} tracks\n * @param {!HTMLElement} langMenu\n * @param {!Array.<string>} languages\n * @param {function(string)} onLanguageSelected\n * @param {boolean} updateChosen\n * @param {!HTMLElement} currentSelectionElement\n * @private\n */\nshaka.ui.Controls.prototype.updateLanguages_ = function(tracks, langMenu,\n  languages, onLanguageSelected, updateChosen, currentSelectionElement) {\n  // Using array.filter(f)[0] as an alternative to array.find(f) which is\n  // not supported in IE11.\n  const activeTracks = tracks.filter(function(track) {\n    return track.active == true;\n  });\n  const selectedTrack = activeTracks[0];\n\n  // Remove old languages\n  // 1. Save the back to menu button\n  const backButton = shaka.ui.Utils.getFirstDescendantWithClassName(\n    langMenu, 'shaka-back-to-overflow-button');\n\n  // 2. Remove everything\n  while (langMenu.firstChild) {\n    langMenu.removeChild(langMenu.firstChild);\n  }\n\n  // 3. Add the backTo Menu button back\n  langMenu.appendChild(backButton);\n\n  // 4. Add new buttons\n  languages.forEach((language) => {\n    let button = document.createElement('button');\n    button.addEventListener('click', onLanguageSelected.bind(this, language));\n\n    let span = document.createElement('span');\n    this.setChosenLanguageName_(span, language);\n    button.appendChild(span);\n\n    if (updateChosen && (language == selectedTrack.language)) {\n      button.appendChild(this.chosenIcon_());\n      span.classList.add('shaka-chosen-item');\n      button.setAttribute('aria-selected', 'true');\n      currentSelectionElement.textContent = span.textContent;\n    }\n    langMenu.appendChild(button);\n  });\n};\n\n\n/**\n * @param {!shaka.extern.Track} track\n * @private\n */\nshaka.ui.Controls.prototype.onTrackSelected_ = function(track) {\n  // Disable abr manager before changing tracks.\n  let config = {abr: {enabled: false}};\n  this.player_.configure(config);\n\n  this.player_.selectVariantTrack(track, /* clearBuffer */ true);\n};\n\n\n/**\n * @param {string} language\n * @private\n */\nshaka.ui.Controls.prototype.onAudioLanguageSelected_ = function(language) {\n  this.player_.selectAudioLanguage(language);\n};\n\n\n/**\n * @param {string} language\n * @return {!Promise}\n * @private\n */\nshaka.ui.Controls.prototype.onTextLanguageSelected_ = async function(language) {\n  await this.player_.setTextTrackVisibility(true);\n  this.player_.selectTextLanguage(language);\n};\n\n\n/**\n * @param {HTMLElement} menu\n * @private\n */\nshaka.ui.Controls.prototype.focusOnTheChosenItem_ = function(menu) {\n  if (!menu) return;\n  const chosenItem = shaka.ui.Utils.getDescendantIfExists(\n    menu, 'shaka-chosen-item');\n  if (chosenItem) {\n    chosenItem.parentElement.focus();\n  }\n};\n\n\n/**\n * @return {!Element}\n * @private\n */\nshaka.ui.Controls.prototype.chosenIcon_ = function() {\n  let chosenIcon = document.createElement('i');\n  chosenIcon.classList.add('material-icons');\n  // In material-icons 'done' stands for a check mark.\n  // Go figure.\n  // DO NOT LOCALIZE\n  chosenIcon.textContent = 'done';\n  // Screen reader should ignore 'done'.\n  chosenIcon.setAttribute('aria-hidden', 'true');\n  return chosenIcon;\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onCaptionStateChange_ = function() {\n  if (this.captionIcon_) {\n    if (this.player_.isTextTrackVisible()) {\n      this.captionIcon_.classList.add('shaka-captions-on');\n      this.captionIcon_.classList.remove('shaka-captions-off');\n    } else {\n      this.captionIcon_.classList.add('shaka-captions-off');\n      this.captionIcon_.classList.remove('shaka-captions-on');\n    }\n  }\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onFullscreenClick_ = async function() {\n  if (!this.enabled_) return;\n\n  const Controls = shaka.ui.Controls;\n  const LocIds = shaka.ui.Locales.Ids;\n  if (document.fullscreenElement) {\n    document.exitFullscreen();\n    // DO NOT LOCALIZE\n    this.fullscreenButton_.textContent = 'fullscreen';\n    this.fullscreenButton_.setAttribute(Controls.ARIA_LABEL_,\n      this.localization_.resolve(LocIds.ARIA_LABEL_FULL_SCREEN));\n  } else {\n    await this.videoContainer_.requestFullscreen();\n    this.fullscreenButton_.textContent = 'fullscreen_exit';\n    this.fullscreenButton_.setAttribute(Controls.ARIA_LABEL_,\n      this.localization_.resolve(LocIds.ARIA_LABEL_EXIT_FULL_SCREEN));\n  }\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onCurrentTimeClick_ = function() {\n  if (!this.enabled_) return;\n\n  // Jump to LIVE if the user clicks on the current time.\n  if (this.player_.isLive() && this.seekBar_) {\n    this.video_.currentTime = Number(this.seekBar_.max);\n  }\n};\n\n\n/**\n * Cycles trick play rate between -1, -2, -4, and -8.\n * @private\n */\nshaka.ui.Controls.prototype.onRewindClick_ = function() {\n  if (!this.enabled_) return;\n\n  if (!this.video_.duration) {\n    return;\n  }\n\n  this.trickPlayRate_ = (this.trickPlayRate_ > 0 || this.trickPlayRate_ < -4) ?\n      -1 : this.trickPlayRate_ * 2;\n  this.player_.trickPlay(this.trickPlayRate_);\n};\n\n\n/**\n * Cycles trick play rate between 1, 2, 4, and 8.\n * @private\n */\nshaka.ui.Controls.prototype.onFastForwardClick_ = function() {\n  if (!this.enabled_) return;\n\n  if (!this.video_.duration) {\n    return;\n  }\n\n  this.trickPlayRate_ = (this.trickPlayRate_ < 0 || this.trickPlayRate_ > 4) ?\n      1 : this.trickPlayRate_ * 2;\n  this.player_.trickPlay(this.trickPlayRate_);\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onCastClick_ = function() {\n  if (!this.enabled_) return;\n\n  if (this.castProxy_.isCasting()) {\n    this.castProxy_.suggestDisconnect();\n  } else {\n    this.castButton_.disabled = true;\n    this.castProxy_.cast().then(function() {\n      this.castButton_.disabled = false;\n      // Success!\n    }.bind(this), function(error) {\n      this.castButton_.disabled = false;\n      if (error.code != shaka.util.Error.Code.CAST_CANCELED_BY_USER) {\n        this.dispatchEvent(new shaka.util.FakeEvent('error', {\n          errorDetails: error,\n        }));\n      }\n    }.bind(this));\n  }\n};\n\n\n/** @private */\nshaka.ui.Controls.prototype.onOverflowMenuButtonClick_ = function() {\n  if (this.anySettingsMenusAreOpen_()) {\n    this.hideSettingsMenus_();\n  } else {\n    shaka.ui.Controls.setDisplay_(this.overflowMenu_, true);\n    this.overrideCssShowControls_ = true;\n    // If overflow menu has currently visible buttons, focus on the\n    // first one, when the menu opens.\n    const isDisplayed = function(element) {\n      return element.classList.contains('shaka-hidden') == false;\n    };\n\n    const Iterables = shaka.util.Iterables;\n    if (Iterables.some(this.overflowMenu_.childNodes, isDisplayed)) {\n      // Focus on the first visible child of the overflow menu\n      const visibleElements =\n        Iterables.filter(this.overflowMenu_.childNodes, isDisplayed);\n      /** @type {!HTMLElement} */ (visibleElements[0]).focus();\n    }\n  }\n};\n\n\n/**\n * @param {Event} event\n * @private\n */\nshaka.ui.Controls.prototype.onCastStatusChange_ = function(event) {\n  let canCast = this.castProxy_.canCast() && this.castAllowed_;\n  let isCasting = this.castProxy_.isCasting();\n  this.dispatchEvent(new shaka.util.FakeEvent('caststatuschanged', {\n    newStatus: isCasting,\n  }));\n\n  if (this.castButton_) {\n    shaka.ui.Controls.setDisplay_(this.castButton_, canCast);\n    this.castIcon_.textContent = isCasting ? 'cast_connected' : 'cast';\n\n    // Aria-pressed set to true when casting, set to false otherwise.\n    if (canCast) {\n      if (isCasting) {\n        this.castButton_.setAttribute('aria-pressed', 'true');\n      } else {\n        this.castButton_.setAttribute('aria-pressed', 'false');\n      }\n    }\n  }\n\n  this.setCurrentCastSelection_();\n\n  if (isCasting) {\n    this.controlsButtonPanel_.classList.add('shaka-casting');\n  } else {\n    this.controlsButtonPanel_.classList.remove('shaka-casting');\n  }\n};\n\n\n/**\n * @param {!Event} event\n * @private\n */\nshaka.ui.Controls.prototype.onBufferingStateChange_ = function(event) {\n  // Using [] notation to access buffering property to work around\n  // a compiler error.\n  const classToAdd = event['buffering'] ? 'shaka-displayed' : 'shaka-hidden';\n  const classToRemove = event['buffering'] ? 'shaka-hidden' : 'shaka-displayed';\n  this.bufferingSpinner_.classList.add(classToAdd);\n  this.bufferingSpinner_.classList.remove(classToRemove);\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.setCurrentCastSelection_ = function() {\n  if (!this.castCurrentSelectionSpan_) {\n    return;\n  }\n\n  if (this.castProxy_.isCasting()) {\n    this.castCurrentSelectionSpan_.textContent = this.castProxy_.receiverName();\n  } else {\n    this.castCurrentSelectionSpan_.textContent =\n        this.localization_.resolve(shaka.ui.Locales.Ids.LABEL_NOT_CASTING);\n  }\n};\n\n\n/**\n * @return {boolean}\n * @private\n */\nshaka.ui.Controls.prototype.isOpaque_ = function() {\n  if (!this.enabled_) return false;\n\n  // While you are casting, the UI is always opaque.\n  if (this.castProxy_ && this.castProxy_.isCasting()) return true;\n\n  return this.controlsContainer_.classList.contains('shaka-opaque');\n};\n\n\n/**\n * Update the video's current time based on the keyboard operations.\n * @param {number} currentTime\n * @param {!Event} event\n * @private\n */\nshaka.ui.Controls.prototype.seek_ = function(currentTime, event) {\n  this.video_.currentTime = currentTime;\n  this.updateTimeAndSeekRange_();\n};\n\n/**\n * Called when the seek range or current time need to be updated.\n * @private\n */\nshaka.ui.Controls.prototype.updateTimeAndSeekRange_ = function() {\n  // Suppress updates if the controls are hidden.\n  if (!this.isOpaque_()) {\n    return;\n  }\n\n  let Controls = shaka.ui.Controls;\n  let displayTime = this.isSeeking_ ?\n      Number(this.seekBar_.value) :\n      Number(this.video_.currentTime);\n  let duration = this.video_.duration;\n  let bufferedLength = this.video_.buffered.length;\n  let bufferedStart = bufferedLength ? this.video_.buffered.start(0) : 0;\n  let bufferedEnd =\n      bufferedLength ? this.video_.buffered.end(bufferedLength - 1) : 0;\n  let seekRange = this.player_.seekRange();\n  let seekRangeSize = seekRange.end - seekRange.start;\n\n  if (this.seekBar_) {\n    this.seekBar_.min = seekRange.start;\n    this.seekBar_.max = seekRange.end;\n  }\n\n  if (this.player_.isLive()) {\n    // The amount of time we are behind the live edge.\n    let behindLive = Math.floor(seekRange.end - displayTime);\n    displayTime = Math.max(0, behindLive);\n\n    let showHour = seekRangeSize >= 3600;\n\n    // Consider \"LIVE\" when less than 1 second behind the live-edge.  Always\n    // show the full time string when seeking, including the leading '-';\n    // otherwise, the time string \"flickers\" near the live-edge.\n    if (this.currentTime_) {\n      if ((displayTime >= 1) || this.isSeeking_) {\n        this.currentTime_.textContent =\n            '- ' + this.buildTimeString_(displayTime, showHour);\n        this.currentTime_.style.cursor = 'pointer';\n      } else {\n        this.currentTime_.textContent =\n          this.localization_.resolve(shaka.ui.Locales.Ids.LABEL_LIVE);\n        this.currentTime_.style.cursor = '';\n      }\n    }\n\n\n    if (!this.isSeeking_ && this.seekBar_) {\n      this.seekBar_.value = seekRange.end - displayTime;\n    }\n  } else {\n    let showHour = duration >= 3600;\n\n    if (this.currentTime_) {\n      this.currentTime_.textContent =\n      this.buildTimeString_(displayTime, showHour);\n    }\n\n\n    if (duration && this.currentTime_) {\n      this.currentTime_.textContent += ' / ' +\n          this.buildTimeString_(duration, showHour);\n    }\n\n    if (!this.isSeeking_ && this.seekBar_) {\n      this.seekBar_.value = displayTime;\n    }\n\n    if (this.currentTime_) {\n      this.currentTime_.style.cursor = '';\n    }\n  }\n\n  if (this.seekBar_) {\n    // Hide seekbar seek window is very small.\n    const seekRange = this.player_.seekRange();\n    const seekWindow = seekRange.end - seekRange.start;\n    if (seekWindow < shaka.ui.Controls.MIN_SEEK_WINDOW_TO_SHOW_SEEKBAR_ ) {\n      this.seekBar_.classList.add('shaka-hidden');\n      for (let menu of this.settingsMenus_) {\n        menu.classList.add('shaka-low-position');\n      }\n    } else {\n      // Removing a non-existent class doesn't throw, so, even if\n      // the element is not hidden, this should be fine.\n      this.seekBar_.classList.remove('shaka-hidden');\n      for (let menu of this.settingsMenus_) {\n        menu.classList.remove('shaka-low-position');\n      }\n\n      let gradient = ['to right'];\n      if (bufferedLength == 0) {\n        gradient.push('#000 0%');\n      } else {\n        const clampedBufferStart = Math.max(bufferedStart, seekRange.start);\n        const clampedBufferEnd = Math.min(bufferedEnd, seekRange.end);\n\n        const bufferStartDistance = clampedBufferStart - seekRange.start;\n        const bufferEndDistance = clampedBufferEnd - seekRange.start;\n        const playheadDistance = displayTime - seekRange.start;\n\n        // NOTE: the fallback to zero eliminates NaN.\n        const bufferStartFraction = (bufferStartDistance / seekRangeSize) || 0;\n        const bufferEndFraction = (bufferEndDistance / seekRangeSize) || 0;\n        const playheadFraction = (playheadDistance / seekRangeSize) || 0;\n\n        gradient.push(Controls.SEEK_BAR_BASE_COLOR_ + ' ' +\n                     (bufferStartFraction * 100) + '%');\n        gradient.push(Controls.SEEK_BAR_PLAYED_COLOR_ + ' ' +\n                     (bufferStartFraction * 100) + '%');\n        gradient.push(Controls.SEEK_BAR_PLAYED_COLOR_ + ' ' +\n                     (playheadFraction * 100) + '%');\n        gradient.push(Controls.SEEK_BAR_BUFFERED_COLOR_ + ' ' +\n                     (playheadFraction * 100) + '%');\n        gradient.push(Controls.SEEK_BAR_BUFFERED_COLOR_ + ' ' +\n                     (bufferEndFraction * 100) + '%');\n        gradient.push(Controls.SEEK_BAR_BASE_COLOR_ + ' ' +\n                     (bufferEndFraction * 100) + '%');\n      }\n      this.seekBar_.style.background =\n          'linear-gradient(' + gradient.join(',') + ')';\n    }\n  }\n};\n\n\n/**\n * Builds a time string, e.g., 01:04:23, from |displayTime|.\n *\n * @param {number} displayTime\n * @param {boolean} showHour\n * @return {string}\n * @private\n */\nshaka.ui.Controls.prototype.buildTimeString_ = function(displayTime, showHour) {\n  let h = Math.floor(displayTime / 3600);\n  let m = Math.floor((displayTime / 60) % 60);\n  let s = Math.floor(displayTime % 60);\n  if (s < 10) s = '0' + s;\n  let text = m + ':' + s;\n  if (showHour) {\n    if (m < 10) text = '0' + text;\n    text = h + ':' + text;\n  }\n  return text;\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.resizePlayButtonAndSpinner_ = function() {\n  // Play button size depends on the video dimensions and is\n  // calculated by taking the max of the smallest size we allow\n  // and the black magic Chrome designers came up with aka\n  // take min(video.width, video.height) and multiply it by a\n  // pre-determined ratio, depending on how big the video is.\n  const Controls = shaka.ui.Controls;\n  const width = this.video_.clientWidth;\n  const height = this.video_.clientHeight;\n  let sizingRatio = Controls.LARGE_PLAY_BUTTON_SIZE_RATIO_;\n  if (width < Controls.SIZING_MEDIUM_THRESHHOLD_) {\n    sizingRatio = Controls.SMALL_PLAY_BUTTON_SIZE_RATIO_;\n  } else if (width < Controls.SIZING_LARGE_THRESHHOLD_) {\n    sizingRatio = Controls.MEDIUM_PLAY_BUTTON_SIZE_RATIO_;\n  }\n\n  const minDimention = Math.min(width, height);\n  const playButtonSize =\n    Math.max(Controls.MIN_PLAY_BUTTON_WIDTH_, minDimention * sizingRatio);\n\n  this.playButton_.style.width = playButtonSize + 'px';\n  this.playButton_.style.height = playButtonSize + 'px';\n\n  // The spinner-to-button ratio is b/a+b = c where a is the play button\n  // size, b is the spinner size and c is equal to BUFFERING_SPINNER_DELIMETER_.\n  const delimeter = Controls.BUFFERING_SPINNER_DELIMETER_;\n  const spinnerSize = (playButtonSize * delimeter) / (1 - delimeter);\n  this.bufferingSpinner_.style.width = spinnerSize + 'px';\n  this.bufferingSpinner_.style.height = spinnerSize + 'px';\n};\n\n\n/**\n * Adds class for keyboard navigation if tab was pressed.\n *\n * @param {!Event} event\n * @private\n */\nshaka.ui.Controls.prototype.onKeyDown_ = function(event) {\n  if (event.keyCode == shaka.ui.Controls.KEYCODE_TAB_) {\n    // Enable blue outline for focused elements for keyboard\n    // navigation.\n    this.controlsContainer_.classList.add('shaka-keyboard-navigation');\n    this.eventManager_.listen(window, 'mousedown',\n                              this.onMouseDown_.bind(this));\n  } else if (event.keyCode == shaka.ui.Controls.KEYCODE_ESCAPE_ &&\n      this.anySettingsMenusAreOpen_()) {\n        this.hideSettingsMenus_();\n  }\n};\n\n\n/**\n * Removes class for keyboard navigation if mouse navigation\n * is active.\n * @private\n */\nshaka.ui.Controls.prototype.onMouseDown_ = function() {\n  // Disable blue outline for focused elements for mouse\n  // navigation.\n  this.controlsContainer_.classList.remove('shaka-keyboard-navigation');\n\n  this.eventManager_.unlisten(window, 'mousedown');\n  this.eventManager_.listen(window, 'keydown', this.onKeyDown_.bind(this));\n};\n\n\n/**\n * Depending on the value of display, sets/removes css class of element to\n * either display it or hide.\n *\n * @param {Element} element\n * @param {boolean} display\n * @private\n */\nshaka.ui.Controls.setDisplay_ = function(element, display) {\n  if (!element) return;\n  if (display) {\n    element.classList.add('shaka-displayed');\n    // Removing a non-existent class doesn't throw, so, even if\n    // the element is not hidden, this should be fine. Same for displayed\n    // below.\n    element.classList.remove('shaka-hidden');\n  } else {\n    element.classList.add('shaka-hidden');\n    element.classList.remove('shaka-displayed');\n  }\n};\n\n\n/**\n * @private\n */\nshaka.ui.Controls.prototype.hideSettingsMenus_ = function() {\n  for (let menu of this.settingsMenus_) {\n    shaka.ui.Controls.setDisplay_(/** @type {!HTMLElement} */ (menu), false);\n  }\n};\n\n\n/**\n * @private\n * @return {boolean}\n */\nshaka.ui.Controls.prototype.anySettingsMenusAreOpen_ = function() {\n  return this.settingsMenus_.some(\n    (menu) => menu.classList.contains('shaka-displayed'));\n};\n\n\n/**\n * @param {!shaka.ui.Controls.opacity_} opacity\n * @private\n */\nshaka.ui.Controls.prototype.setControlsOpacity_ = function(opacity) {\n  if (opacity == shaka.ui.Controls.opacity_.OPAQUE) {\n    this.controlsContainer_.classList.add('shaka-opaque');\n    this.controlsContainer_.classList.remove('shaka-transparent');\n  } else {\n    this.controlsContainer_.classList.add('shaka-transparent');\n    this.controlsContainer_.classList.remove('shaka-opaque');\n    // If there's an overflow menu open, keep it this way for a couple of\n    // seconds in case a user immidiately initiaites another mouse move to\n    // interact with the menus. If that didn't happen, go ahead and hide\n    // the menus.\n    this.hideSettingsMenusTimer_.schedule(2);\n  }\n};\n\n\n/**\n * Create a localization instance already pre-loaded with all the locales that\n * we support.\n *\n * @return {!shaka.ui.Localization}\n * @private\n */\nshaka.ui.Controls.createLocalization_ = function() {\n  /** @type {string} */\n  const fallbackLocale = 'en';\n\n  /** @type {!shaka.ui.Localization} */\n  const localization = new shaka.ui.Localization(fallbackLocale);\n  shaka.ui.Locales.apply(localization);\n  localization.changeLocale(navigator.languages || []);\n\n  return localization;\n};\n\n\n/**\n * Resolve a special language code to a name/description enum.\n *\n * @param {string} lang\n * @return {string}\n */\nshaka.ui.Controls.resolveSpecialLanguageCode_ = function(lang) {\n  if (lang == 'mul') {\n    return shaka.ui.Locales.Ids.LABEL_MULTIPLE_LANGUAGES;\n  } else if (lang == 'zxx') {\n    return shaka.ui.Locales.Ids.LABEL_NOT_APPLICABLE;\n  } else {\n    return shaka.ui.Locales.Ids.LABEL_UNKNOWN_LANGUAGE;\n  }\n};\n\n\n/**\n * @const {string}\n * @private\n */\nshaka.ui.Controls.SEEK_BAR_BASE_COLOR_ = 'rgba(255, 255, 255, 0.3)';\n\n\n/**\n * @const {string}\n * @private\n */\nshaka.ui.Controls.SEEK_BAR_PLAYED_COLOR_ = 'rgb(255, 255, 255)';\n\n\n/**\n * @const {string}\n * @private\n */\nshaka.ui.Controls.SEEK_BAR_BUFFERED_COLOR_ = 'rgba(255, 255, 255, 0.54)';\n\n\n/**\n * @const {string}\n * @private\n */\nshaka.ui.Controls.VOLUME_BAR_VOLUME_LEVEL_COLOR_ = 'rgb(255, 255, 255)';\n\n\n/**\n * @const {string}\n * @private\n */\nshaka.ui.Controls.VOLUME_BAR_BASE_COLOR_ = 'rgba(255, 255, 255, 0.54)';\n\n\n/**\n * Video width (in pixels) used for determining play button size.\n * @const {number}\n * @private\n */\nshaka.ui.Controls.SIZING_MEDIUM_THRESHHOLD_ = 741;\n\n\n/**\n * Video width (in pixels) used for determining play button size.\n * @const {number}\n * @private\n */\nshaka.ui.Controls.SIZING_LARGE_THRESHHOLD_ = 1441;\n\n\n/**\n * The ratio of width/height used for play button size.\n * (Dependant on sizing threashhold).\n * @const {number}\n * @private\n */\nshaka.ui.Controls.SMALL_PLAY_BUTTON_SIZE_RATIO_ = 0.25;\n\n\n/**\n * The ratio of width/height used for play button size.\n * (Dependant on sizing threashhold).\n * @const {number}\n * @private\n */\nshaka.ui.Controls.MEDIUM_PLAY_BUTTON_SIZE_RATIO_ = 0.15;\n\n\n/**\n * The ratio of width/height used for play button size.\n * (Dependant on sizing threashhold).\n * @const {number}\n * @private\n */\nshaka.ui.Controls.LARGE_PLAY_BUTTON_SIZE_RATIO_ = 0.11;\n\n\n/**\n * Minimal width (in pixels) a play button should have;\n * @const {number}\n * @private\n */\nshaka.ui.Controls.MIN_PLAY_BUTTON_WIDTH_ = 48;\n\n\n/**\n * @const {number}\n * @private\n */\nshaka.ui.Controls.BUFFERING_SPINNER_DELIMETER_ = 0.62;\n\n\n/**\n * @const {number}\n * @private\n */\nshaka.ui.Controls.MIN_SEEK_WINDOW_TO_SHOW_SEEKBAR_ = 5; // seconds\n\n\n/**\n * @enum {number}\n * @private\n */\nshaka.ui.Controls.opacity_ = {\n  'TRANSPARENT': 0,\n  'OPAQUE': 1,\n};\n\n\n/**\n * @const {number}\n * @private\n */\nshaka.ui.Controls.KEYCODE_TAB_ = 9;\n\n\n/**\n * @const {number}\n * @private\n */\nshaka.ui.Controls.KEYCODE_ESCAPE_ = 27;\n\n\n/** @private {!Array.<string>} */\nshaka.ui.Controls.controlPanelElements_ = [\n  'time_and_duration',\n  'mute',\n  'volume',\n  'fullscreen',\n  'overflow_menu',\n  'rewind',\n  'fast_forward',\n];\n\n\n/** @private {!Array.<string>} */\nshaka.ui.Controls.overflowButtons_ = [\n  'captions',\n  'cast',\n  'quality',\n  'language',\n];\n\n\n/**\n * @const {string}\n * @private\n */\nshaka.ui.Controls.ARIA_LABEL_= 'aria-label';\n","/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n\ngoog.provide('shaka.ui.Overlay');\n\ngoog.require('goog.asserts');\ngoog.require('shaka.polyfill.installAll');\ngoog.require('shaka.ui.Controls');\n\n\n/**\n * @param {!shaka.Player} player\n * @param {!HTMLElement} videoContainer\n * @param {!HTMLMediaElement} video\n * @param {!Object=} config This should follow the form of\n *   {@link shaka.extern.UIConfiguration}, but you may omit\n *   any field you do not wish to change.\n * @constructor\n * @export\n */\nshaka.ui.Overlay = function(player, videoContainer, video, config) {\n  /** @private {!shaka.Player} */\n  this.player_ = player;\n\n  /** @private {!shaka.extern.UIConfiguration} */\n  this.config_ = this.defaultConfig_();\n\n  if (config) {\n    shaka.util.ConfigUtils.mergeConfigObjects(\n        this.config_, config, this.defaultConfig_(),\n        /* overrides (only used for player config)*/ {}, /* path */ '');\n  }\n\n  // If a cast receiver app id has been given, add a cast button to the UI\n  if (this.config_.castReceiverAppId &&\n      !this.config_.overflowMenuButtons.includes('cast')) {\n    this.config_.overflowMenuButtons.push('cast');\n  }\n\n  /** @private {!shaka.ui.Controls} */\n  this.controls_ = new shaka.ui.Controls(\n      player, videoContainer, video, this.config_);\n};\n\n\n/**\n * @return {!shaka.Player}\n * @export\n */\nshaka.ui.Overlay.prototype.getPlayer = function() {\n  return this.player_;\n};\n\n\n/**\n * @return {!shaka.ui.Controls}\n * @export\n */\nshaka.ui.Overlay.prototype.getControls = function() {\n  return this.controls_;\n};\n\n\n/**\n * Enable or disable the custom controls.\n *\n * @param {boolean} enabled\n * @export\n */\nshaka.ui.Overlay.prototype.setEnabled = function(enabled) {\n  this.controls_.setEnabledShakaControls(enabled);\n};\n\n\n/**\n * @return {!shaka.extern.UIConfiguration}\n * @private\n */\nshaka.ui.Overlay.prototype.defaultConfig_ = function() {\n  return {\n    controlPanelElements: [\n      'time_and_duration',\n      'mute',\n      'volume',\n      'fullscreen',\n      'overflow_menu',\n    ],\n    overflowMenuButtons: [\n      'captions',\n      'quality',\n      'language',\n    ],\n    addSeekBar: true,\n    adaptPlayButtonSize: true,\n    castReceiverAppId: '',\n  };\n};\n\n\n/**\n * @private\n */\nshaka.ui.Overlay.scanPageForShakaElements_ = function() {\n  // Install built-in polyfills to patch browser incompatibilities.\n  shaka.polyfill.installAll();\n  // Check to see if the browser supports the basic APIs Shaka needs.\n  if (!shaka.Player.isBrowserSupported()) {\n    shaka.log.error('Shaka Player does not support this browser. ' +\n      'Please see https://tinyurl.com/y7s4j9tr for the list of ' +\n      'supported browsers.');\n\n    return;\n  }\n\n  // Look for elements marked 'data-shaka-player-container'\n  // on the page. These will be used to create our default\n  // UI.\n  const containers = document.querySelectorAll(\n      '[data-shaka-player-container]');\n  // Look for elements marked 'data-shaka-player'. They will\n  // either be used in our default UI or with native browser\n  // controls.\n  const videos = document.querySelectorAll(\n      '[data-shaka-player]');\n\n  if (!videos.length && !containers.length) {\n    // No elements have been tagged with shaka attributes.\n  } else if (videos.length && !containers.length) {\n    // Just the video elements were provided.\n    for (let i = 0; i < videos.length; i++) {\n      const video = videos[i];\n      video.classList.add('video');\n      goog.asserts.assert(video.tagName.toLowerCase() == 'video',\n        'Should be a video element!');\n\n      const container = document.createElement('div');\n      const videoParent = video.parentElement;\n      videoParent.replaceChild(container, video);\n      container.appendChild(video);\n\n      let castAppId = '';\n\n      // If cast receiver application id was provided, pass it to the\n      // UI constructor.\n      if (video['dataset'] && video['dataset']['shakaPlayerCastReceiverId']) {\n        castAppId = video['dataset']['shakaPlayerCastReceiverId'];\n      }\n\n      const videoAsMediaElement = /** @type {!HTMLMediaElement} */ (video);\n      const ui = shaka.ui.Overlay.createUI_(\n          /** @type {!HTMLElement} */ (container),\n          videoAsMediaElement,\n          {castReceiverAppId: castAppId});\n\n      if (videoAsMediaElement.controls) {\n        ui.getControls().setEnabledNativeControls(true);\n      }\n    }\n  } else {\n      for (let i = 0; i < containers.length; i++) {\n      const container = containers[i];\n      goog.asserts.assert(container.tagName.toLowerCase() == 'div',\n        'Container should be a div!');\n\n      let castAppId = '';\n\n      // Cast receiver id can be specified on either container or video.\n      // It should not be provided on both. If it was, we will use the last\n      // one we saw.\n      if (container['dataset'] &&\n          container['dataset']['shakaPlayerCastReceiverId']) {\n        castAppId = container['dataset']['shakaPlayerCastReceiverId'];\n      }\n\n      let video = null;\n      for (let j = 0; j < videos.length; j++) {\n        goog.asserts.assert(videos[j].tagName.toLowerCase() == 'video',\n          'Should be a video element!');\n        if (videos[j].parentElement == container) {\n          video = videos[j];\n          break;\n        }\n      }\n\n      if (!video) {\n        video = document.createElement('video');\n        container.appendChild(video);\n      }\n\n      if (video['dataset'] && video['dataset']['shakaPlayerCastReceiverId']) {\n        castAppId = video['dataset']['shakaPlayerCastReceiverId'];\n      }\n      shaka.ui.Overlay.createUI_(/** @type {!HTMLElement} */ (container),\n                                 /** @type {!HTMLMediaElement} */ (video),\n                                 {castReceiverAppId: castAppId});\n    }\n  }\n\n  // After scanning the page for elements, fire the \"loaded\" event.  This will\n  // let apps know they can use the UI library programatically now, even if they\n  // didn't have any Shaka-related elements declared in their HTML.\n\n  // \"Event\" is not constructable on IE, so we use this CustomEvent pattern.\n  const uiLoadedEvent = /** @type {!CustomEvent} */(\n      document.createEvent('CustomEvent'));\n  uiLoadedEvent.initCustomEvent('shaka-ui-loaded', false, false, null);\n\n  document.dispatchEvent(uiLoadedEvent);\n};\n\n\n/**\n * @param {!HTMLElement} container\n * @param {!HTMLMediaElement} video\n * @param {!Object} config (Possibly partial) config in the form of\n *   {@link shaka.extern.UIConfiguration}\n * @return {!shaka.ui.Overlay}\n * @private\n */\nshaka.ui.Overlay.createUI_ = function(container, video, config) {\n  const player = new shaka.Player(video);\n  const ui = new shaka.ui.Overlay(player, container, video, config);\n  container['ui'] = ui;\n  video['ui'] = ui;\n  return ui;\n};\n\n\nif (document.readyState == 'complete') {\n  // Don't fire this event synchronously.  In a compiled bundle, the \"shaka\"\n  // namespace might not be exported to the window until after this point.\n  Promise.resolve().then(shaka.ui.Overlay.scanPageForShakaElements_);\n} else {\n  window.addEventListener('load', shaka.ui.Overlay.scanPageForShakaElements_);\n}\n"],
"names":["COMPILED","goog","global","isDef","goog.isDef","val","exportPath_","goog.exportPath_","name","object","objectToExportTo","parts","split","cur","execScript","part","length","shift","define","goog.define","defaultValue","value","CLOSURE_UNCOMPILED_DEFINES","Object","prototype","hasOwnProperty","call","CLOSURE_DEFINES","DEBUG","provide","goog.provide","isProvided_","Error","implicitNamespaces_","namespace","substring","lastIndexOf","getObjectByName","forwardDeclare","goog.forwardDeclare","goog.isProvided_","isDefAndNotNull","goog.getObjectByName","obj","globalize","goog.globalize","x","addDependency","goog.addDependency","relPath","provides","requires","DEPENDENCIES_ENABLED","path","replace","deps","dependencies_","i","nameToPath","j","require","logToConsole_","goog.logToConsole_","msg","console","goog.require","ENABLE_DEBUG_LOADER","getPathFromDeps_","included_","writeScripts_","errorMessage","basePath","CLOSURE_NO_DEPS","visited","written","inHtmlDocument_","goog.inHtmlDocument_","doc","document","findBasePath_","goog.findBasePath_","CLOSURE_BASE_PATH","scripts","getElementsByTagName","src","qmark","l","substr","importScript_","goog.importScript_","sourceText","CLOSURE_IMPORT_SCRIPT","writeScriptTag_","goog.writeScriptTag_","readyState","test","isDeps","undefined","write","goog.writeScripts_","visitNode","requireName","seenScript","push","goog.getPathFromDeps_","rule","goog.isDefAndNotNull","isString","goog.isString","exportSymbol","goog.exportSymbol","publicPath","exportProperty","goog.exportProperty","publicName","symbol","inherits","goog.inherits","childCtor","parentCtor","tempCtor","superClass_","constructor","base","childCtor.base","me","methodName","var_args","args","Array","slice","arguments","apply","goog.asserts","asserts","assert","goog.asserts.assert","patchAssert_","goog.asserts.patchAssert_","bind","console.assert","ENABLE_ASSERTS","shaka","abr","Ewma","shaka.abr.Ewma","halfLife","alpha_","Math","exp","log","totalWeight_","estimate_","sample","shaka.abr.Ewma.prototype.sample","weight","adjAlpha","pow","newEstimate","isNaN","getEstimate","shaka.abr.Ewma.prototype.getEstimate","EwmaBandwidthEstimator","shaka.abr.EwmaBandwidthEstimator","fast_","slow_","bytesSampled_","minTotalBytes_","minBytes_","shaka.abr.EwmaBandwidthEstimator.prototype.sample","durationMs","numBytes","bandwidth","getBandwidthEstimate","shaka.abr.EwmaBandwidthEstimator.prototype.getBandwidthEstimate","defaultEstimate","min","hasGoodEstimate","shaka.abr.EwmaBandwidthEstimator.prototype.hasGoodEstimate","shaka.log","Level","NONE","ERROR","WARNING","INFO","V1","V2","alwaysWarn","shaka.log.alwaysWarn","error","shaka.log.error","warning","shaka.log.warning","info","shaka.log.info","debug","shaka.log.debug","v1","shaka.log.v1","v2","shaka.log.v2","window","warn","setLevel","shaka.log.setLevel","level","nop","currentLevel","MAX_LOG_LEVEL","goog.uri","goog.uri.utils","uri","utils","splitRe_","ComponentIndex","SCHEME","USER_INFO","DOMAIN","PORT","PATH","QUERY_DATA","FRAGMENT","goog.uri.utils.split","match","Uri","goog.Uri","m","setScheme","getScheme","setUserInfo","getUserInfo","setDomain","getDomain","setPort","getPort","setPath","getPath","setQueryData","getQueryData","clone","setFragment","getFragment","String","queryData_","QueryData","scheme_","userInfo_","domain_","port_","path_","fragment_","toString","goog.Uri.prototype.toString","out","scheme","encodeSpecialChars_","reDisallowedInSchemeOrUserInfo_","domain","userInfo","removeDoubleEncoding_","encodeURIComponent","port","hasDomain","charAt","reDisallowedInAbsolutePath_","reDisallowedInRelativePath_","query","getEncodedQuery","fragment","reDisallowedInFragment_","join","resolve","goog.Uri.prototype.resolve","relativeUri","absoluteUri","overridden","hasScheme","hasUserInfo","hasPort","hasPath","lastSlashIndex","removeDotSegments","hasQuery","hasFragment","goog.Uri.prototype.clone","goog.Uri.prototype.getScheme","goog.Uri.prototype.setScheme","newScheme","decode","decodeOrEmpty_","goog.Uri.prototype.hasScheme","goog.Uri.prototype.getUserInfo","goog.Uri.prototype.setUserInfo","newUserInfo","goog.Uri.prototype.hasUserInfo","goog.Uri.prototype.getDomain","goog.Uri.prototype.setDomain","newDomain","goog.Uri.prototype.hasDomain","goog.Uri.prototype.getPort","goog.Uri.prototype.setPort","newPort","Number","goog.Uri.prototype.hasPort","goog.Uri.prototype.getPath","goog.Uri.prototype.setPath","newPath","goog.Uri.prototype.hasPath","goog.Uri.prototype.hasQuery","goog.Uri.prototype.setQueryData","queryData","reDisallowedInQuery_","goog.Uri.prototype.getEncodedQuery","getDecodedQuery","goog.Uri.prototype.getDecodedQuery","toDecodedString","goog.Uri.prototype.getQueryData","goog.Uri.prototype.getFragment","goog.Uri.prototype.setFragment","newFragment","goog.Uri.prototype.hasFragment","goog.Uri.removeDotSegments","indexOf","leadingSlash","segments","pos","segment","pop","goog.Uri.decodeOrEmpty_","preserveReserved","decodeURI","decodeURIComponent","goog.Uri.encodeSpecialChars_","unescapedPart","extra","removeDoubleEncoding","encoded","encodeURI","encodeChar_","goog.Uri.encodeChar_","ch","n","charCodeAt","goog.Uri.removeDoubleEncoding_","doubleEncodedString","goog.Uri.QueryData","encodedQuery_","ensureKeyMapInitialized_","goog.Uri.QueryData.prototype.ensureKeyMapInitialized_","keyMap_","count_","pairs","indexOfEquals","add","getCount","goog.Uri.QueryData.prototype.getCount","goog.Uri.QueryData.prototype.add","key","values","goog.Uri.QueryData.prototype.toString","sb","encodedKey","param","goog.Uri.QueryData.prototype.toDecodedString","goog.Uri.QueryData.prototype.clone","rv","cloneMap","concat","shaka.util","util","PublicPromise","shaka.util.PublicPromise","resolvePromise","rejectPromise","promise","Promise","reject","shaka.util.PublicPromise.prototype.resolve","shaka.util.PublicPromise.prototype.reject","reason","shaka.net","net","Backoff","shaka.net.Backoff","parameters","autoReset","isCanceled","defaults","defaultRetryParameters","maxAttempts_","maxAttempts","baseDelay_","baseDelay","fuzzFactor_","fuzzFactor","backoffFactor_","backoffFactor","numAttempts_","nextUnfuzzedDelay_","autoReset_","isCanceled_","attempt","shaka.net.Backoff.prototype.attempt","reset_","p","fuzzedDelay","fuzz_","cancelableTimeout_","shaka.net.Backoff.defaultRetryParameters","timeout","shaka.net.Backoff.fuzz_","random","shaka.net.Backoff.prototype.reset_","shaka.net.Backoff.prototype.cancelableTimeout_","fn","timeoutMs","timeToUse","setTimeout_","shaka.net.Backoff.setTimeout_","setTimeout","shaka.util.Error","severity","category","code","data","varArgs","handled","codeName","categoryName","k","Category","Code","message","e","stack","shaka.util.Error.prototype.toString","JSON","stringify","Severity","AbortableOperation","onAbort","onAbort_","aborted_","shaka.util.AbortableOperation","failed","aborted","CRITICAL","PLAYER","OPERATION_ABORTED","catch","completed","notAbortable","abort","all","operations","map","op","finally","onFinal","then","chain","onSuccess","onError","newPromise","wrapChainCallback_","callback","ret","exception","FakeEvent","shaka.util.FakeEvent","type","dict","defaultPrevented","cancelable","bubbles","timeStamp","performance","now","Date","isTrusted","target","currentTarget","stopped","preventDefault","shaka.util.FakeEvent.prototype.preventDefault","stopImmediatePropagation","shaka.util.FakeEvent.prototype.stopImmediatePropagation","stopPropagation","shaka.util.FakeEvent.prototype.stopPropagation","MultiMap","shaka.util.MultiMap","map_","shaka.util.MultiMap.prototype.push","get","shaka.util.MultiMap.prototype.get","list","getAll","shaka.util.MultiMap.prototype.getAll","remove","shaka.util.MultiMap.prototype.remove","splice","clear","shaka.util.MultiMap.prototype.clear","forEach","shaka.util.MultiMap.prototype.forEach","FakeEventTarget","shaka.util.FakeEventTarget","listeners_","dispatchTarget","addEventListener","shaka.util.FakeEventTarget.prototype.addEventListener","listener","options","removeEventListener","shaka.util.FakeEventTarget.prototype.removeEventListener","dispatchEvent","shaka.util.FakeEventTarget.prototype.dispatchEvent","event","listeners","handleEvent","IDestroyable","destroy","ObjectUtils","cloneObject","arg","seenObjects","Set","buffer","ArrayBuffer","has","isArray","shaka.util.ArrayUtils","ArrayUtils","defaultEquals","shaka.util.ArrayUtils.defaultEquals","a","b","shaka.util.ArrayUtils.remove","array","element","index","count","shaka.util.ArrayUtils.count","check","hasSameElements","shaka.util.ArrayUtils.hasSameElements","compareFn","copy","item","idx","findIndex","other","OperationManager","operations_","manage","operation","cleanup","NetworkingEngine","shaka.net.NetworkingEngine","onProgressUpdated","destroyed_","operationManager_","requestFilters_","responseFilters_","onProgressUpdated_","RequestType","PluginPriority","schemes_","registerScheme","shaka.net.NetworkingEngine.registerScheme","plugin","priority","APPLICATION","existing","unregisterScheme","shaka.net.NetworkingEngine.unregisterScheme","registerRequestFilter","shaka.net.NetworkingEngine.prototype.registerRequestFilter","filter","unregisterRequestFilter","shaka.net.NetworkingEngine.prototype.unregisterRequestFilter","delete","clearAllRequestFilters","shaka.net.NetworkingEngine.prototype.clearAllRequestFilters","registerResponseFilter","shaka.net.NetworkingEngine.prototype.registerResponseFilter","unregisterResponseFilter","shaka.net.NetworkingEngine.prototype.unregisterResponseFilter","clearAllResponseFilters","shaka.net.NetworkingEngine.prototype.clearAllResponseFilters","makeRequest","shaka.net.NetworkingEngine.makeRequest","uris","retryParams","method","body","headers","allowCrossSiteCredentials","retryParameters","licenseRequestType","shaka.net.NetworkingEngine.prototype.destroy","shimRequests_","shaka.net.NetworkingEngine.shimRequests_","operation.then","operation.catch","request","shaka.net.NetworkingEngine.prototype.request","requestFilterOperation","filterRequest_","requestOperation","makeRequestWithRetry_","responseFilterOperation","responseAndGotProgress","filterResponse_","requestFilterStartTime","requestFilterMs","responseFilterStartTime","responseFilterMs","response","timeMs","gotProgress","fromCache","SEGMENT","byteLength","shaka.net.NetworkingEngine.prototype.filterRequest_","filterOperation","requestFilter","NETWORK","REQUEST_FILTER_ERROR","shaka.net.NetworkingEngine.prototype.makeRequestWithRetry_","backoff","send_","shaka.net.NetworkingEngine.prototype.send_","lastError","getLocationProtocol_","UNSUPPORTED_SCHEME","startTimeMs","backoffOperation","time","bytes","sendOperation","RECOVERABLE","errorOrNull","shaka.net.NetworkingEngine.prototype.filterResponse_","responseFilter","RESPONSE_FILTER_ERROR","shaka.net.NetworkingEngine.getLocationProtocol_","location","protocol","EventManager","shaka.util.EventManager","bindingMap_","shaka.util.EventManager.prototype.destroy","removeAll","listen","shaka.util.EventManager.prototype.listen","binding","Binding_","listenOnce","shaka.util.EventManager.prototype.listenOnce","unlisten","shaka.util.EventManager.prototype.unlisten","shaka.util.EventManager.prototype.removeAll","shaka.util.EventManager.Binding_","shaka.util.EventManager.Binding_.prototype.unlisten","shaka.util.Functional","Functional","createFallbackPromiseChain","shaka.util.Functional.createFallbackPromiseChain","reduce","elem","collapseArrays","shaka.util.Functional.collapseArrays","noop","shaka.util.Functional.noop","isNotNull","shaka.util.Functional.isNotNull","Iterables","iterable","mapping","every","some","shaka.util.MapUtils","MapUtils","shaka.util.MapUtils.values","keys","asMap","shaka.util.MapUtils.asMap","Map","set","asObject","shaka.util.MapUtils.asObject","asMap_","shaka.util.MapUtils.asMap_","asObject_","shaka.util.MapUtils.asObject_","MimeUtils","getFullType","mimeType","codecs","fullMimeType","getExtendedType","stream","components","EXTENDED_MIME_PARAMETERS_","mimeKey","streamKey","splitCodecs","getCodecBase","codecString","getCodecParts_","profile","CLOSED_CAPTION_MIMETYPE","shaka.util.StringUtils","StringUtils","fromUTF8","shaka.util.StringUtils.fromUTF8","uint8","Uint8Array","subarray","utf8","fromCharCode","escaped","escape","TEXT","BAD_ENCODING","fromUTF16","shaka.util.StringUtils.fromUTF16","littleEndian","noThrow","temp","floor","arr","Uint16Array","dataView","DataView","getUint16","fromBytesAutoDetect","shaka.util.StringUtils.fromBytesAutoDetect","isAscii","UNABLE_TO_DETECT_ENCODING","toUTF8","shaka.util.StringUtils.toUTF8","str","unescape","result","shaka.util.StringUtils.fromCharCode","max","subArray","Timer","shaka.util.Timer","id_","callback_","cancel","shaka.util.Timer.prototype.cancel","clearTimeout","schedule","shaka.util.Timer.prototype.schedule","seconds","scheduleRepeated","shaka.util.Timer.prototype.scheduleRepeated","repeat","shaka.util.Uint8ArrayUtils","Uint8ArrayUtils","toBase64","shaka.util.Uint8ArrayUtils.toBase64","padding","base64","btoa","fromBase64","shaka.util.Uint8ArrayUtils.fromBase64","atob","fromHex","shaka.util.Uint8ArrayUtils.fromHex","parseInt","toHex","shaka.util.Uint8ArrayUtils.toHex","hex","equal","shaka.util.Uint8ArrayUtils.equal","arr1","arr2","shaka.util.Uint8ArrayUtils.concat","totalLength","offset","shaka.media","media","DrmEngine","shaka.media.DrmEngine","playerInterface","playerInterface_","video_","mediaKeys_","supportedTypes_","initialized_","currentDrmInfo_","eventManager_","activeSessions_","offlineSessionIds_","allSessionsLoaded_","config_","onError_","this.onError_","err","keyStatusByKeyId_","announcedKeyStatusByKeyId_","keyStatusTimer_","processKeyStatusChanges_","usePersistentLicenses_","mediaKeyMessageEvents_","initialRequestsSent_","expirationTimer_","pollExpiration_","shaka.media.DrmEngine.prototype.destroy","async","sessions","session","sessionId","isClosed","close","closeTimeout","timeout_","CLOSE_TIMEOUT_","race","setMediaKeys","configure","shaka.media.DrmEngine.prototype.configure","config","initForStorage","shaka.media.DrmEngine.prototype.initForStorage","variants","usePersistentLicenses","init_","initForPlayback","shaka.media.DrmEngine.prototype.initForPlayback","offlineSessionIds","initForRemoval","shaka.media.DrmEngine.prototype.initForRemoval","keySystem","licenseServerUri","serverCertificate","audioCapabilities","videoCapabilities","configsByKeySystem","distinctiveIdentifier","persistentState","sessionTypes","label","drmInfos","distinctiveIdentifierRequired","persistentStateRequired","audioRobustness","videoRobustness","initData","keyIds","queryMediaKeys_","shaka.media.DrmEngine.prototype.init_","hadDrmInfo","v","servers","replaceDrmInfo_","clearKeyDrmInfo","configureClearKey_","variant","fillInDrmInfoDefaults_","advanced","prepareMediaKeyConfigsForVariants_","size","attach","shaka.media.DrmEngine.prototype.attach","video","DRM","ENCRYPTED_CONTENT_WITHOUT_DRM_INFO","onPlay_","FAILED_TO_ATTACH_TO_VIDEO","setServerCertificate","createOrLoad","cb","newInitData","initDataType","shaka.media.DrmEngine.prototype.setServerCertificate","supported","INVALID_SERVER_CERTIFICATE","removeSession","shaka.media.DrmEngine.prototype.removeSession","tasks","found","loadOfflineSession_","updatePromise","shaka.media.DrmEngine.prototype.createOrLoad","initDatas","initDataOverride","createTemporarySession_","shaka.media.DrmEngine.prototype.newInitData","metadatas","metadata","initialized","shaka.media.DrmEngine.prototype.initialized","shaka.media.DrmEngine.prototype.keySystem","getSupportedTypes","shaka.media.DrmEngine.prototype.getSupportedTypes","from","getSessionIds","shaka.media.DrmEngine.prototype.getSessionIds","ids","s","getExpiration","shaka.media.DrmEngine.prototype.getExpiration","Infinity","expiration","getDrmInfo","shaka.media.DrmEngine.prototype.getDrmInfo","getKeyStatuses","shaka.media.DrmEngine.prototype.getKeyStatuses","shaka.media.DrmEngine.prototype.prepareMediaKeyConfigsForVariants_","allDrmInfo","configs","audio","audioMimeType","videoMimeType","capability","robustness","contentType","shaka.media.DrmEngine.prototype.queryMediaKeys_","NO_RECOGNIZED_KEY_SYSTEMS","instigator","shouldHaveLicenseServer","hasLicenseServer","navigator","requestMediaKeySystemAccess","REQUESTED_KEY_SYSTEM_CONFIG_UNAVAILABLE","mediaKeySystemAccess","isEdge","userAgent","includes","realConfig","getConfiguration","audioCaps","videoCaps","cap","createDrmInfoFor_","createMediaKeys","NO_LICENSE_SERVER_GIVEN","mediaKeys","FAILED_TO_CREATE_CDM","shaka.media.DrmEngine.prototype.configureClearKey_","clearKeys","keyHex","keyIdHex","keyId","keyObj","kty","kid","license","jwkSet","initDataStr","shaka.media.DrmEngine.prototype.loadOfflineSession_","createSession","FAILED_TO_CREATE_SESSION","onSessionMessage_","onKeyStatusesChange_","loaded","oldExpiration","load","present","areAllSessionsLoaded_","OFFLINE_SESSION_REMOVED","shaka.media.DrmEngine.prototype.createTemporarySession_","generateRequest","FAILED_TO_GENERATE_LICENSE_REQUEST","shaka.media.DrmEngine.prototype.onSessionMessage_","delayLicenseRequest_","sendLicenseRequest_","shaka.media.DrmEngine.prototype.delayLicenseRequest_","delayLicenseRequestUntilPlayed","paused","shaka.media.DrmEngine.prototype.sendLicenseRequest_","url","advancedConfig","messageType","individualizationServer","requestType","LICENSE","unpackPlayReadyRequest_","netEngine","update","onEvent","loadTimeout","SESSION_LOAD_TIMEOUT_","shakaErr","LICENSE_REQUEST_FAILED","LICENSE_RESPONSE_REJECTED","shaka.media.DrmEngine.prototype.unpackPlayReadyRequest_","xml","dom","parseFromString","DOMParser","querySelector","textContent","challenge","getAttribute","shaka.media.DrmEngine.prototype.onKeyStatusesChange_","hasExpiredKeys","keyStatuses","status","tmp","part0","getUint32","part1","part2","setUint32","setUint16","msUntilExpiration","KEY_STATUS_BATCH_TIME_","shaka.media.DrmEngine.prototype.processKeyStatusChanges_","privateMap","publicMap","statuses","EXPIRED","onKeyStatus","isBrowserSupported","shaka.media.DrmEngine.isBrowserSupported","MediaKeys","MediaKeySystemAccess","probeSupport","shaka.media.DrmEngine.probeSupport","basicVideoCapabilities","offlineConfig","basicConfig","support","testSystem","access","tests","testKeySystems","shaka.media.DrmEngine.prototype.onPlay_","supportsVariant","shaka.media.DrmEngine.prototype.supportsVariant","encrypted","supportsStream","drmInfo","shaka.media.DrmEngine.prototype.supportsStream","streamType","areDrmCompatible","shaka.media.DrmEngine.areDrmCompatible","drms1","drms2","getCommonDrmInfos","shaka.media.DrmEngine.getCommonDrmInfos","commonDrms","drm1","drm2","mergedDrm","shaka.media.DrmEngine.prototype.pollExpiration_","oldTime","newTime","onExpirationUpdated","shaka.media.DrmEngine.prototype.areAllSessionsLoaded_","shaka.media.DrmEngine.timeout_","shaka.media.DrmEngine.replaceDrmInfo_","keySystems","shaka.media.DrmEngine.createDrmInfoFor_","licenseServers","serverCerts","processDrmInfos_","shaka.media.DrmEngine.processDrmInfos_","cert","shaka.media.DrmEngine.fillInDrmInfoDefaults_","advancedConfigs","server","cast","__platform__","shaka.media.TimeRangesUtils","TimeRangesUtils","bufferStart","shaka.media.TimeRangesUtils.bufferStart","end","start","bufferEnd","shaka.media.TimeRangesUtils.bufferEnd","isBuffered","shaka.media.TimeRangesUtils.isBuffered","smallGapLimit","bufferedAheadOf","shaka.media.TimeRangesUtils.bufferedAheadOf","getGapIndex","shaka.media.TimeRangesUtils.getGapIndex","threshold","getBufferedInfo","shaka.media.TimeRangesUtils.getBufferedInfo","shaka.text","text","Cue","shaka.text.Cue","startTime","endTime","payload","region","CueRegion","position","positionAlign","AUTO","textAlign","CENTER","writingDirection","HORIZONTAL_LEFT_TO_RIGHT","lineInterpretation","LINE_NUMBER","line","lineHeight","lineAlign","displayAlign","BEFORE","fontSize","backgroundColor","color","fontWeight","NORMAL","fontStyle","fontFamily","textDecoration","wrapLine","id","shaka.text.CueRegion","regionAnchorY","regionAnchorX","viewportAnchorY","viewportAnchorX","height","width","viewportAnchorUnits","widthUnits","heightUnits","units","PERCENTAGE","scroll","scrollMode","shaka.util.ManifestParserUtils","ManifestParserUtils","resolveUris","shaka.util.ManifestParserUtils.resolveUris","baseUris","relativeUris","relativeAsGoog","createDrmInfo","shaka.util.ManifestParserUtils.createDrmInfo","ContentType","VIDEO","AUDIO","TextStreamKind","SUBTITLE","CLOSED_CAPTION","GAP_OVERLAP_TOLERANCE_SECONDS","Transmuxer","shaka.media.Transmuxer","muxTransmuxer_","muxjs","mp4","transmuxPromise_","transmuxedData_","cues_","isTransmuxing_","on","onTransmuxed_","onTransmuxDone_","shaka.media.Transmuxer.prototype.destroy","dispose","isSupported","shaka.media.Transmuxer.isSupported","isTsContainer","convertTsCodecs","MediaSource","isTypeSupported","shaka.media.Transmuxer.isTsContainer","shaka.media.Transmuxer.convertTsCodecs","tsMimeType","mp4MimeType","exec","newCodecString","transmux","shaka.media.Transmuxer.prototype.transmux","dataArray","flush","MEDIA","TRANSMUXING_FAILED","shaka.media.Transmuxer.prototype.onTransmuxed_","captions","cue","segmentWithInit","initSegment","shaka.media.Transmuxer.prototype.onTransmuxDone_","output","cues","TextEngine","shaka.text.TextEngine","displayer","parser_","displayer_","appendWindowStart_","timestampOffset_","appendWindowEnd_","bufferEnd_","bufferStart_","selectedClosedCaptionId_","closedCaptionsMap_","parserMap_","registerParser","shaka.text.TextEngine.registerParser","unregisterParser","shaka.text.TextEngine.unregisterParser","shaka.text.TextEngine.isTypeSupported","shaka.text.TextEngine.prototype.destroy","setDisplayer","shaka.text.TextEngine.prototype.setDisplayer","initParser","shaka.text.TextEngine.prototype.initParser","Factory","getStartTime","shaka.text.TextEngine.prototype.getStartTime","periodStart","segmentStart","segmentEnd","parseMedia","allCues","UNABLE_TO_EXTRACT_CUE_START_TIME","appendBuffer","shaka.text.TextEngine.prototype.appendBuffer","parseInit","cuesToAppend","append","shaka.text.TextEngine.prototype.remove","setTimestampOffset","shaka.text.TextEngine.prototype.setTimestampOffset","timestampOffset","setAppendWindow","shaka.text.TextEngine.prototype.setAppendWindow","appendWindowStart","appendWindowEnd","shaka.text.TextEngine.prototype.bufferStart","shaka.text.TextEngine.prototype.bufferEnd","shaka.text.TextEngine.prototype.isBuffered","t","shaka.text.TextEngine.prototype.bufferedAheadOf","appendCues","shaka.text.TextEngine.prototype.appendCues","setSelectedClosedCaptionId","shaka.text.TextEngine.prototype.setSelectedClosedCaptionId","bufferEndTime","captionsMap","startAndEndTime","c","storeAndAppendClosedCaptions","shaka.text.TextEngine.prototype.storeAndAppendClosedCaptions","closedCaptions","caption","MediaSourceEngine","shaka.media.MediaSourceEngine","textDisplayer_","sourceBuffers_","textEngine_","queues_","transmuxers_","useEmbeddedText_","captionParser_","videoTrackIds_","timescales_","mediaSourceOpen_","mediaSource_","createMediaSource","shaka.media.MediaSourceEngine.prototype.createMediaSource","mediaSource","URL","createObjectURL","isStreamSupported","shaka.media.MediaSourceEngine.isStreamSupported","extendedMimeType","shaka.media.MediaSourceEngine.isBrowserSupported","shaka.media.MediaSourceEngine.probeSupport","testMimeTypes","basicType","shaka.media.MediaSourceEngine.prototype.destroy","q","inProgress","removeAttribute","open","shaka.media.MediaSourceEngine.prototype.open","init","shaka.media.MediaSourceEngine.prototype.init","streamsByType","forceTransmuxTS","reinitText","sourceBuffer","addSourceBuffer","onUpdateEnd_","setTextDisplayer","shaka.media.MediaSourceEngine.prototype.setTextDisplayer","textDisplayer","shaka.media.MediaSourceEngine.prototype.reinitText","ended","shaka.media.MediaSourceEngine.prototype.ended","shaka.media.MediaSourceEngine.prototype.bufferStart","getBuffered_","shaka.media.MediaSourceEngine.prototype.bufferEnd","shaka.media.MediaSourceEngine.prototype.isBuffered","buffered","shaka.media.MediaSourceEngine.prototype.bufferedAheadOf","shaka.media.MediaSourceEngine.prototype.getBufferedInfo","textRanges","total","shaka.media.MediaSourceEngine.prototype.getBuffered_","shaka.media.MediaSourceEngine.prototype.appendBuffer","hasClosedCaptions","transmuxedData","enqueueOperation_","append_","CaptionParser","probe","initBytes","videoTrackIds","timescale","segmentBytes","dashParsed","parse","clearParsedCaptions","setUseEmbeddedText","shaka.media.MediaSourceEngine.prototype.setUseEmbeddedText","useEmbeddedText","shaka.media.MediaSourceEngine.prototype.setSelectedClosedCaptionId","videoBufferEndTime","getUseEmbeddedText","shaka.media.MediaSourceEngine.prototype.getUseEmbeddedText","shaka.media.MediaSourceEngine.prototype.remove","MAX_VALUE","remove_","shaka.media.MediaSourceEngine.prototype.clear","resetCaptionStream","duration","shaka.media.MediaSourceEngine.prototype.flush","flush_","setStreamProperties","shaka.media.MediaSourceEngine.prototype.setStreamProperties","abort_","setTimestampOffset_","setAppendWindow_","endOfStream","shaka.media.MediaSourceEngine.prototype.endOfStream","enqueueBlockingOperation_","setDuration","shaka.media.MediaSourceEngine.prototype.setDuration","getDuration","shaka.media.MediaSourceEngine.prototype.getDuration","shaka.media.MediaSourceEngine.prototype.append_","shaka.media.MediaSourceEngine.prototype.remove_","shaka.media.MediaSourceEngine.prototype.abort_","shaka.media.MediaSourceEngine.prototype.flush_","currentTime","shaka.media.MediaSourceEngine.prototype.setTimestampOffset_","shaka.media.MediaSourceEngine.prototype.setAppendWindow_","shaka.media.MediaSourceEngine.prototype.onError_","updating","MEDIA_SOURCE_OPERATION_FAILED","shaka.media.MediaSourceEngine.prototype.onUpdateEnd_","popFromQueue_","shaka.media.MediaSourceEngine.prototype.enqueueOperation_","QUOTA_EXCEEDED_ERROR","MEDIA_SOURCE_OPERATION_THREW","shaka.media.MediaSourceEngine.prototype.enqueueBlockingOperation_","run","allWaiters","ready","shaka.media.MediaSourceEngine.prototype.popFromQueue_","next","setCaptionParser","shaka.media.MediaSourceEngine.prototype.setCaptionParser","captionParser","getCaptionParser","shaka.media.MediaSourceEngine.prototype.getCaptionParser","LanguageUtils","areLocaleCompatible","locale1","locale2","normalize","areLanguageCompatible","disassembleLocale","disassembleLocale_","locale1Components","locale2Components","isParentOf","possibleParent","possibleChild","possibleParentComponents","possibleChildComponents","isSiblingOf","localeA","localeB","localeAComponents","localeBComponents","locale","language","toLowerCase","isoMap_","toUpperCase","areSiblings","baseA","getBase","baseB","lang","splitAt","major","getLocaleForText","getLocaleForVariant","findClosestLocale","searchSpace","safeTarget","safeSearchSpace","option","shaka.util.StreamUtils","StreamUtils","meetsRestrictions","shaka.util.StreamUtils.meetsRestrictions","restrictions","maxHwRes","inRange","minWidth","maxWidth","minHeight","maxHeight","minPixels","maxPixels","minBandwidth","maxBandwidth","applyRestrictions","shaka.util.StreamUtils.applyRestrictions","tracksChanged","originalAllowed","allowedByApplication","filterNewPeriod","shaka.util.StreamUtils.filterNewPeriod","drmEngine","activeAudio","activeVideo","period","isAudio","isVideo","getStreamSummaryString_","areStreamsCompatible_","textStreams","keep","shaka.util.StreamUtils.areStreamsCompatible_","s0","s1","variantToTrack","shaka.util.StreamUtils.variantToTrack","audioCodec","videoCodec","mimeTypes","kinds","kind","roles","role","track","active","frameRate","primary","videoId","audioId","channelsCount","audioBandwidth","videoBandwidth","originalVideoId","originalAudioId","originalTextId","originalId","textStreamToTrack","shaka.util.StreamUtils.textStreamToTrack","getVariantTracks","shaka.util.StreamUtils.getVariantTracks","activeAudioId","activeVideoId","getPlayableVariants","getTextTracks","shaka.util.StreamUtils.getTextTracks","activeStreamId","findVariantForTrack","shaka.util.StreamUtils.findVariantForTrack","findTextStreamForTrack","shaka.util.StreamUtils.findTextStreamForTrack","isPlayable","shaka.util.StreamUtils.isPlayable","allowedByKeySystem","shaka.util.StreamUtils.getPlayableVariants","filterVariantsByAudioChannelCount","shaka.util.StreamUtils.filterVariantsByAudioChannelCount","preferredAudioChannelCount","variantsByChannelCount","channelCounts","countLessThanOrEqualtoConfig","filterStreamsByLanguageAndRole","shaka.util.StreamUtils.filterStreamsByLanguageAndRole","streams","preferredLanguage","preferredRole","chosen","firstLanguage","closestLocale","roleMatches","filterTextStreamsByRole_","noRoleMatches","allRoles","shaka.util.StreamUtils.filterTextStreamsByRole_","getVariantByStreams","shaka.util.StreamUtils.getVariantByStreams","getVariantByStreamIds","shaka.util.StreamUtils.getVariantByStreamIds","matchesId","findPeriodContainingTime","shaka.util.StreamUtils.findPeriodContainingTime","manifest","periods","findPeriodContainingStream","shaka.util.StreamUtils.findPeriodContainingStream","periodIdx","textStream","trickModeVideo","findPeriodContainingVariant","shaka.util.StreamUtils.findPeriodContainingVariant","shaka.util.StreamUtils.isAudio","shaka.util.StreamUtils.isVideo","getAllVariants","shaka.util.StreamUtils.getAllVariants","getVariantStreams","shaka.util.StreamUtils.getVariantStreams","shaka.util.StreamUtils.getStreamSummaryString_","SimpleAbrManager","shaka.abr.SimpleAbrManager","switch_","enabled_","bandwidthEstimator_","variants_","startupComplete_","lastTimeChosenMs_","stop","shaka.abr.SimpleAbrManager.prototype.stop","shaka.abr.SimpleAbrManager.prototype.init","switchCallback","chooseVariant","shaka.abr.SimpleAbrManager.prototype.chooseVariant","sortedVariants","filterAndSortVariants_","currentBandwidth","defaultBandwidthEstimate","bandwidthDowngradeTarget","bandwidthUpgradeTarget","toFixed","enable","shaka.abr.SimpleAbrManager.prototype.enable","disable","shaka.abr.SimpleAbrManager.prototype.disable","segmentDownloaded","shaka.abr.SimpleAbrManager.prototype.segmentDownloaded","deltaTimeMs","suggestStreams_","shaka.abr.SimpleAbrManager.prototype.getBandwidthEstimate","setVariants","shaka.abr.SimpleAbrManager.prototype.setVariants","shaka.abr.SimpleAbrManager.prototype.configure","shaka.abr.SimpleAbrManager.prototype.suggestStreams_","switchInterval","chosenVariant","bandwidthEstimate","round","currentBandwidthKbps","shaka.abr.SimpleAbrManager.filterAndSortVariants_","sort","shaka.cast","shaka.cast.CastUtils","CastUtils","VideoEvents","VideoAttributes","VideoInitStateAttributes","VideoVoidMethods","PlayerEvents","PlayerGetterMethods","PlayerGetterMethodsThatRequireLive","PlayerInitState","PlayerInitAfterLoadState","PlayerVoidMethods","PlayerPromiseMethods","SHAKA_MESSAGE_NAMESPACE","GENERIC_MESSAGE_NAMESPACE","serialize","shaka.cast.CastUtils.serialize","thing","Event","simpleEvent","eventKey","eventValue","TimeRanges","unpackTimeRanges_","isFinite","deserialize","shaka.cast.CastUtils.deserialize","NaN","simulateTimeRanges_","shaka.cast.CastUtils.unpackTimeRanges_","ranges","shaka.cast.CastUtils.simulateTimeRanges_","CastSender","shaka.cast.CastSender","receiverAppId","onStatusChanged","onFirstCastStateUpdate","onRemoteEvent","onResumeLocal","onInitStateRequired","receiverAppId_","onStatusChanged_","onFirstCastStateUpdate_","hasJoinedExistingSession_","onRemoteEvent_","onResumeLocal_","onInitStateRequired_","isCasting_","apiReady_","receiverName_","appData_","onConnectionStatusChangedBound_","onConnectionStatusChanged_","onMessageReceivedBound_","onMessageReceived_","cachedProperties_","nextAsyncCallId_","asyncCallPromises_","castPromise_","hasReceivers_","session_","shaka.cast.CastSender.prototype.destroy","rejectAllPromises_","removeListeners_","apiReady","shaka.cast.CastSender.prototype.apiReady","hasReceivers","shaka.cast.CastSender.prototype.hasReceivers","isCasting","shaka.cast.CastSender.prototype.isCasting","receiverName","shaka.cast.CastSender.prototype.receiverName","hasRemoteProperties","shaka.cast.CastSender.prototype.hasRemoteProperties","shaka.cast.CastSender.prototype.init","chrome","isAvailable","__onGCastApiAvailable","sessionRequest","SessionRequest","apiConfig","ApiConfig","onExistingSessionJoined_","onReceiverStatusChanged_","initialize","oldSession","SessionStatus","STOPPED","setAppData","shaka.cast.CastSender.prototype.setAppData","appData","sendMessage_","shaka.cast.CastSender.prototype.cast","initState","CAST","CAST_API_UNAVAILABLE","NO_CAST_RECEIVERS","ALREADY_CASTING","requestSession","onSessionInitiated_","onConnectionError_","showDisconnectDialog","shaka.cast.CastSender.prototype.showDisconnectDialog","forceDisconnect","shaka.cast.CastSender.prototype.forceDisconnect","shaka.cast.CastSender.prototype.get","targetName","property","remoteCall_","isLive","remoteAsyncCall_","propertyGetter_","shaka.cast.CastSender.prototype.set","shaka.cast.CastSender.prototype.onSessionInitiated_","onSessionCreated_","shaka.cast.CastSender.prototype.onConnectionError_","UNEXPECTED_CAST_ERROR","CAST_CANCELED_BY_USER","CAST_CONNECTION_TIMED_OUT","CAST_RECEIVER_APP_UNAVAILABLE","shaka.cast.CastSender.prototype.propertyGetter_","shaka.cast.CastSender.prototype.remoteCall_","shaka.cast.CastSender.prototype.remoteAsyncCall_","shaka.cast.CastSender.prototype.onExistingSessionJoined_","shaka.cast.CastSender.prototype.onReceiverStatusChanged_","availability","shaka.cast.CastSender.prototype.onSessionCreated_","addUpdateListener","addMessageListener","shaka.cast.CastSender.prototype.removeListeners_","removeUpdateListener","removeMessageListener","shaka.cast.CastSender.prototype.onConnectionStatusChanged_","connected","receiver","friendlyName","shaka.cast.CastSender.prototype.rejectAllPromises_","LOAD_INTERRUPTED","shaka.cast.CastSender.prototype.onMessageReceived_","serialized","fakeEvent","reconstructedError","shaka.cast.CastSender.prototype.sendMessage_","sendMessage","CastProxy","shaka.cast.CastProxy","player","localVideo_","localPlayer_","playerEventTarget_","videoEventTarget_","playerProxy_","videoProxy_","sender_","onCastStatusChanged_","getInitState_","shaka.cast.CastProxy.prototype.destroy","getVideo","shaka.cast.CastProxy.prototype.getVideo","getPlayer","shaka.cast.CastProxy.prototype.getPlayer","canCast","shaka.cast.CastProxy.prototype.canCast","shaka.cast.CastProxy.prototype.isCasting","shaka.cast.CastProxy.prototype.receiverName","shaka.cast.CastProxy.prototype.cast","unload","shaka.cast.CastProxy.prototype.setAppData","suggestDisconnect","shaka.cast.CastProxy.prototype.suggestDisconnect","shaka.cast.CastProxy.prototype.forceDisconnect","shaka.cast.CastProxy.prototype.init_","videoProxyLocalEvent_","playerProxyLocalEvent_","defineProperty","configurable","enumerable","videoProxyGet_","videoProxySet_","playerProxyGet_","shaka.cast.CastProxy.prototype.getInitState_","getAssetUri","pause","pair","setter","getter","shaka.cast.CastProxy.prototype.onCastStatusChanged_","shaka.cast.CastProxy.prototype.onFirstCastStateUpdate_","shaka.cast.CastProxy.prototype.onResumeLocal_","assetUri","manifestReady","autoplay","videoState","play","shaka.cast.CastProxy.prototype.videoProxyGet_","shaka.cast.CastProxy.prototype.videoProxySet_","shaka.cast.CastProxy.prototype.videoProxyLocalEvent_","shaka.cast.CastProxy.prototype.playerProxyGet_","getNetworkingEngine","shaka.cast.CastProxy.prototype.playerProxyLocalEvent_","shaka.cast.CastProxy.prototype.onRemoteEvent_","CastReceiver","shaka.cast.CastReceiver","appDataCallback","contentIdCallback","player_","targets_","appDataCallback_","contentIdCallback_","contentId","isConnected_","isIdle_","updateNumber_","startUpdatingUpdateNumber_","initialStatusUpdatePending_","pollTimerId_","genericBus_","shakaBus_","isConnected","shaka.cast.CastReceiver.prototype.isConnected","isIdle","shaka.cast.CastReceiver.prototype.isIdle","shaka.cast.CastReceiver.prototype.destroy","CastReceiverManager","getInstance","manager","shaka.cast.CastReceiver.prototype.init_","onSenderConnected","onSendersChanged_","onSenderDisconnected","onSystemVolumeChanged","fakeVolumeChangeEvent_","getCastMessageBus","onMessage","onGenericMessage_","onShakaMessage_","isChromecast","proxyEvent_","canDisplayType","setMaxHardwareResolution","shaka.cast.CastReceiver.prototype.onSendersChanged_","getSenders","shaka.cast.CastReceiver.prototype.onCastStatusChanged_","maybeSendMediaInfoMessage_","sendMediaStatus_","initState_","shaka.cast.CastReceiver.prototype.initState_","shaka.cast.CastReceiver.prototype.proxyEvent_","pollAttributes_","shaka.cast.CastReceiver.prototype.pollAttributes_","frequency","systemVolume","getSystemVolume","muted","shaka.cast.CastReceiver.prototype.maybeSendMediaInfoMessage_","sendMediaInfoMessage_","shaka.cast.CastReceiver.prototype.sendMediaInfoMessage_","shaka.cast.CastReceiver.prototype.fakeVolumeChangeEvent_","shaka.cast.CastReceiver.prototype.onShakaMessage_","setSystemVolumeLevel","setSystemVolumeMuted","senderId","sendAsyncComplete_","shaka.cast.CastReceiver.prototype.onGenericMessage_","resumeState","volumeObject","oldVolumeLevel","volume","oldVolumeMuted","mediaInfo","shaka.cast.CastReceiver.prototype.sendAsyncComplete_","shaka.cast.CastReceiver.prototype.sendMessage_","bus","getCastChannel","send","broadcast","getPlayState_","shaka.cast.CastReceiver.prototype.getPlayState_","playState","PLAY_STATE","IDLE","isBuffering","BUFFERING","PAUSED","PLAYING","shaka.cast.CastReceiver.prototype.sendMediaStatus_","requestId","mediaStatus","playbackRate","shaka.util.XmlUtils","XmlUtils","findChild","shaka.util.XmlUtils.findChild","children","findChildren","shaka.util.XmlUtils.findChildren","childNodes","child","Element","tagName","findChildrenNS","shaka.util.XmlUtils.findChildrenNS","ns","localName","namespaceURI","getAttributeNS","shaka.util.XmlUtils.getAttributeNS","hasAttributeNS","getContents","shaka.util.XmlUtils.getContents","isText","nodeType","Node","TEXT_NODE","CDATA_SECTION_NODE","trim","parseAttr","shaka.util.XmlUtils.parseAttr","parseFunction","parsedValue","parseDate","shaka.util.XmlUtils.parseDate","dateString","parseDuration","shaka.util.XmlUtils.parseDuration","durationString","matches","d","years","months","days","hours","minutes","parseRange","shaka.util.XmlUtils.parseRange","rangeString","shaka.util.XmlUtils.parseInt","intString","parsePositiveInt","shaka.util.XmlUtils.parsePositiveInt","parseNonNegativeInt","shaka.util.XmlUtils.parseNonNegativeInt","parseFloat","shaka.util.XmlUtils.parseFloat","floatString","evalDivision","shaka.util.XmlUtils.evalDivision","exprString","res","shaka.dash","shaka.dash.ContentProtection","dash","ContentProtection","defaultKeySystems_","MP4Protection_","CencNamespaceUri_","parseFromAdaptationSet","shaka.dash.ContentProtection.parseFromAdaptationSet","elems","ignoreDrmInfo","parsed","parseElements_","defaultInit","parsedNonCenc","MANIFEST","DASH_CONFLICTING_KEY_IDS","schemeUri","convertElements_","defaultKeyId","firstRepresentation","parseFromRepresentation","shaka.dash.ContentProtection.parseFromRepresentation","context","repContext","asUnknown","repUnencrypted","asInfo","repInfo","DASH_NO_COMMON_KEY_SYSTEM","shaka.dash.ContentProtection.convertElements_","elements","defaultKeySystems","infos","node","shaka.dash.ContentProtection.parseElements_","parseElement_","shaka.dash.ContentProtection.parseElement_","NS","psshs","DASH_MULTIPLE_KEY_IDS_NOT_SUPPORTED","pssh","DASH_PSSH_BAD_ENCODING","shaka.dash.MpdUtils","MpdUtils","XlinkNamespaceUri_","fillUriTemplate","shaka.dash.MpdUtils.fillUriTemplate","uriTemplate","representationId","number","valueTable","re","widthString","format","abs","valueString","paddingSize","createTimeline","shaka.dash.MpdUtils.createTimeline","segmentTimeline","unscaledPresentationTimeOffset","periodDuration","timePoints","timeline","lastEndTime","timePoint","r","nextStartTime","nextTimePoint","ceil","unscaledStart","parseSegmentInfo","shaka.dash.MpdUtils.parseSegmentInfo","representation","timescaleStr","inheritAttribute","durationStr","segmentDuration","startNumberStr","startNumber","timelineNode","inheritChild","periodInfo","scaledPresentationTimeOffset","shaka.dash.MpdUtils.inheritAttribute","attribute","adaptationSet","nodes","shaka.dash.MpdUtils.inheritChild","parseXml","shaka.dash.MpdUtils.parseXml","expectedRootElemName","parser","string","documentElement","rootElem","handleXlinkInElement_","shaka.dash.MpdUtils.handleXlinkInElement_","failGracefully","baseUri","networkingEngine","linkDepth","xlinkHref","xlinkActuate","attributes","removeAttributeNS","DASH_XLINK_DEPTH_LIMIT","DASH_UNSUPPORTED_XLINK_ACTUATE","DASH_INVALID_XML","removeChild","appendChild","nodeName","attributeValue","setAttribute","processXlinks","shaka.dash.MpdUtils.processXlinks","childOperations","resolveToZeroString","InitSegmentReference","shaka.media.InitSegmentReference","startByte","endByte","getUris","createUris","shaka.media.InitSegmentReference.prototype.createUris","getStartByte","shaka.media.InitSegmentReference.prototype.getStartByte","getEndByte","shaka.media.InitSegmentReference.prototype.getEndByte","SegmentReference","shaka.media.SegmentReference","getPosition","shaka.media.SegmentReference.prototype.getPosition","shaka.media.SegmentReference.prototype.getStartTime","getEndTime","shaka.media.SegmentReference.prototype.getEndTime","shaka.media.SegmentReference.prototype.createUris","shaka.media.SegmentReference.prototype.getStartByte","shaka.media.SegmentReference.prototype.getEndByte","DataViewReader","shaka.util.DataViewReader","endianness","dataView_","littleEndian_","Endianness","LITTLE_ENDIAN","position_","BIG_ENDIAN","hasMoreData","shaka.util.DataViewReader.prototype.hasMoreData","shaka.util.DataViewReader.prototype.getPosition","getLength","shaka.util.DataViewReader.prototype.getLength","readUint8","shaka.util.DataViewReader.prototype.readUint8","getUint8","throwOutOfBounds_","readUint16","shaka.util.DataViewReader.prototype.readUint16","readUint32","shaka.util.DataViewReader.prototype.readUint32","readInt32","shaka.util.DataViewReader.prototype.readInt32","getInt32","readUint64","shaka.util.DataViewReader.prototype.readUint64","low","high","JS_INTEGER_OVERFLOW","readBytes","shaka.util.DataViewReader.prototype.readBytes","byteOffset","skip","shaka.util.DataViewReader.prototype.skip","rewind","shaka.util.DataViewReader.prototype.rewind","seek","shaka.util.DataViewReader.prototype.seek","readTerminatedString","shaka.util.DataViewReader.prototype.readTerminatedString","shaka.util.DataViewReader.prototype.throwOutOfBounds_","BUFFER_READ_OUT_OF_BOUNDS","Mp4Parser","shaka.util.Mp4Parser","headers_","boxDefinitions_","done_","BoxType_","BASIC_BOX","FULL_BOX","box","shaka.util.Mp4Parser.prototype.box","definition","typeCode","typeFromString_","fullBox","shaka.util.Mp4Parser.prototype.fullBox","shaka.util.Mp4Parser.prototype.stop","shaka.util.Mp4Parser.prototype.parse","partialOkay","wrapped","reader","parseNext","shaka.util.Mp4Parser.prototype.parseNext","absStart","typeToString","boxDefinition","version","flags","versionAndFlags","payloadSize","payloadReader","skipLength","shaka.util.Mp4Parser.children","sampleDescription","shaka.util.Mp4Parser.sampleDescription","allData","shaka.util.Mp4Parser.allData","shaka.util.Mp4Parser.typeFromString_","shaka.util.Mp4Parser.typeToString","Mp4SegmentIndexParser","shaka.media.Mp4SegmentIndexParser","sidxData","sidxOffset","references","parseSIDX_","MP4_SIDX_WRONG_BOX_TYPE","shaka.media.Mp4SegmentIndexParser.parseSIDX_","MP4_SIDX_INVALID_TIMESCALE","earliestPresentationTime","firstOffset","referenceCount","chunk","referenceType","referenceSize","subsegmentDuration","MP4_SIDX_TYPE_NOT_SUPPORTED","unscaledStartTime","SegmentIndex","shaka.media.SegmentIndex","assertCorrectReferences_","references_","shaka.media.SegmentIndex.prototype.destroy","find","shaka.media.SegmentIndex.prototype.find","shaka.media.SegmentIndex.prototype.get","shaka.media.SegmentIndex.prototype.offset","merge","shaka.media.SegmentIndex.prototype.merge","newReferences","r1","r2","nextPosition","shaka.media.SegmentIndex.prototype.replace","evict","shaka.media.SegmentIndex.prototype.evict","fit","shaka.media.SegmentIndex.prototype.fit","lastReference","firstReference","shaka.media.SegmentIndex.assertCorrectReferences_","EbmlParser","shaka.util.EbmlParser","reader_","DYNAMIC_SIZES","shaka.util.EbmlParser.prototype.hasMoreData","parseElement","shaka.util.EbmlParser.prototype.parseElement","parseId_","vint","parseVint_","isDynamicSizeValue_","getVintValue_","elementSize","EbmlElement","shaka.util.EbmlParser.prototype.parseId_","EBML_OVERFLOW","shaka.util.EbmlParser.prototype.parseVint_","firstByte","shaka.util.EbmlParser.getVintValue_","shaka.util.EbmlParser.isDynamicSizeValue_","uint8ArrayEqual","shaka.util.EbmlElement","getOffset","shaka.util.EbmlElement.prototype.getOffset","createParser","shaka.util.EbmlElement.prototype.createParser","getUint","shaka.util.EbmlElement.prototype.getUint","getFloat","shaka.util.EbmlElement.prototype.getFloat","getFloat32","getFloat64","EBML_BAD_FLOATING_POINT_SIZE","WebmSegmentIndexParser","shaka.media.WebmSegmentIndexParser","EBML_ID","SEGMENT_ID","INFO_ID","TIMECODE_SCALE_ID","DURATION_ID","CUES_ID","CUE_POINT_ID","CUE_TIME_ID","CUE_TRACK_POSITIONS_ID","CUE_CLUSTER_POSITION","shaka.media.WebmSegmentIndexParser.prototype.parse","cuesData","tuple","parseWebmContainer_","cuesElement","WEBM_CUES_ELEMENT_MISSING","parseCues_","segmentOffset","timecodeScale","shaka.media.WebmSegmentIndexParser.prototype.parseWebmContainer_","ebmlElement","WEBM_EBML_HEADER_ELEMENT_MISSING","segmentElement","WEBM_SEGMENT_ELEMENT_MISSING","segmentInfo","parseSegment_","shaka.media.WebmSegmentIndexParser.prototype.parseSegment_","infoElement","WEBM_INFO_ELEMENT_MISSING","parseInfo_","shaka.media.WebmSegmentIndexParser.prototype.parseInfo_","timecodeScaleNanoseconds","durationScale","WEBM_DURATION_ELEMENT_MISSING","shaka.media.WebmSegmentIndexParser.prototype.parseCues_","lastTime","lastOffset","parseCuePoint_","unscaledTime","currentOffset","relativeOffset","shaka.media.WebmSegmentIndexParser.prototype.parseCuePoint_","cuePointElement","cueTimeElement","WEBM_CUE_TIME_ELEMENT_MISSING","cueTrackPositionsElement","WEBM_CUE_TRACK_POSITIONS_ELEMENT_MISSING","cueTrackParser","shaka.dash.SegmentBase","SegmentBase","createInitSegment","shaka.dash.SegmentBase.createInitSegment","initialization","resolvedUris","range","createStream","shaka.dash.SegmentBase.createStream","requestInitSegment","segmentBase","fromInheritance_","createSegmentIndex_","createSegmentIndex","findSegmentPosition","getSegmentReference","initSegmentReference","createSegmentIndexFromUris","shaka.dash.SegmentBase.createSegmentIndexFromUris","containerType","presentationTimeline","fitLast","dynamic","isLastPeriod","localRequest","segmentIndex","create","results","indexData","notifySegments","shaka.dash.SegmentBase.fromInheritance_","frame","shaka.dash.SegmentBase.createSegmentIndex_","DASH_UNSUPPORTED_CONTAINER","DASH_WEBM_MISSING_INIT","representationIndex","indexRangeElem","indexUris","indexRange","representationUri","DASH_NO_SEGMENT_INFO","shaka.dash.SegmentList","SegmentList","shaka.dash.SegmentList.createStream","segmentIndexMap","segmentList","parseSegmentListInfo_","checkSegmentListInfo_","createSegmentReferences_","getSegmentAvailabilityStart","shaka.dash.SegmentList.fromInheritance_","shaka.dash.SegmentList.parseSegmentListInfo_","mediaSegments","parseMediaSegments_","shaka.dash.SegmentList.checkSegmentListInfo_","shaka.dash.SegmentList.createSegmentReferences_","prevEndTime","mediaUri","shaka.dash.SegmentList.parseMediaSegments_","segmentLists","urlNode","indexRangeWarningGiven","shaka.dash.SegmentTemplate","SegmentTemplate","shaka.dash.SegmentTemplate.createStream","isUpdate","segmentTemplate","createInitSegment_","parseSegmentTemplateInfo_","checkSegmentTemplateInfo_","indexTemplate","segmentIndexFunctions","createFromIndexTemplate_","notifyMaxSegmentDuration","notifyMinSegmentStartTime","createFromDuration_","createFromTimeline_","shouldFit","wrapper","shaka.dash.SegmentTemplate.fromInheritance_","shaka.dash.SegmentTemplate.parseSegmentTemplateInfo_","mediaTemplate","shaka.dash.SegmentTemplate.checkSegmentTemplateInfo_","shaka.dash.SegmentTemplate.createFromIndexTemplate_","filledTemplate","shaka.dash.SegmentTemplate.createFromDuration_","template","periodTime","shaka.dash.SegmentTemplate.createFromTimeline_","segmentReplacement","repId","segmentId","g","shaka.dash.SegmentTemplate.createInitSegment_","shaka.media.ManifestParser","ManifestParser","parsersByMime","parsersByExtension","registerParserByExtension","shaka.media.ManifestParser.registerParserByExtension","extension","parserFactory","registerParserByMime","shaka.media.ManifestParser.registerParserByMime","shaka.media.ManifestParser.probeSupport","testExtensions","getFactory","shaka.media.ManifestParser.getFactory","getFactory_","shaka.media.ManifestParser.getFactory_","mime","factory","uriObj","uriPieces","uriFilename","filenamePieces","getMimeType_","UNABLE_TO_GUESS_MANIFEST_TYPE","shaka.media.ManifestParser.getMimeType_","PresentationTimeline","shaka.media.PresentationTimeline","presentationStartTime","presentationDelay","presentationStartTime_","presentationDelay_","segmentAvailabilityDuration_","duration_","maxSegmentDuration_","maxSegmentEndTime_","minSegmentStartTime_","clockOffset_","static_","userSeekStart_","shaka.media.PresentationTimeline.prototype.getDuration","getMaxSegmentDuration","shaka.media.PresentationTimeline.prototype.getMaxSegmentDuration","shaka.media.PresentationTimeline.prototype.setDuration","getPresentationStartTime","shaka.media.PresentationTimeline.prototype.getPresentationStartTime","setClockOffset","shaka.media.PresentationTimeline.prototype.setClockOffset","setStatic","shaka.media.PresentationTimeline.prototype.setStatic","isStatic","setSegmentAvailabilityDuration","shaka.media.PresentationTimeline.prototype.setSegmentAvailabilityDuration","segmentAvailabilityDuration","setDelay","shaka.media.PresentationTimeline.prototype.setDelay","delay","getDelay","shaka.media.PresentationTimeline.prototype.getDelay","shaka.media.PresentationTimeline.prototype.notifySegments","lastReferenceEndTime","shaka.media.PresentationTimeline.prototype.notifyMinSegmentStartTime","shaka.media.PresentationTimeline.prototype.notifyMaxSegmentDuration","maxSegmentDuration","shaka.media.PresentationTimeline.prototype.offset","shaka.media.PresentationTimeline.prototype.isLive","isInProgress","shaka.media.PresentationTimeline.prototype.isInProgress","shaka.media.PresentationTimeline.prototype.getSegmentAvailabilityStart","getSegmentAvailabilityEnd","setUserSeekStart","shaka.media.PresentationTimeline.prototype.setUserSeekStart","shaka.media.PresentationTimeline.prototype.getSegmentAvailabilityEnd","getLiveEdge_","getSafeSeekRangeStart","shaka.media.PresentationTimeline.prototype.getSafeSeekRangeStart","earliestSegmentTime","availabilityStart","availabilityEnd","desiredStart","getSeekRangeEnd","getSeekRangeStart","shaka.media.PresentationTimeline.prototype.getSeekRangeStart","shaka.media.PresentationTimeline.prototype.getSeekRangeEnd","usingPresentationStartTime","shaka.media.PresentationTimeline.prototype.usingPresentationStartTime","shaka.media.PresentationTimeline.prototype.getLiveEdge_","assertIsValid","shaka.media.PresentationTimeline.prototype.assertIsValid","DashParser","shaka.dash.DashParser","manifestUris_","manifest_","periodIds_","globalId_","segmentIndexMap_","updatePeriod_","averageUpdateDuration_","updateTimer_","MIN_UPDATE_PERIOD_","shaka.dash.DashParser.prototype.configure","shaka.dash.DashParser.prototype.start","requestManifest_","updateDuration","setUpdateTimer_","shaka.dash.DashParser.prototype.stop","shaka.dash.DashParser.prototype.update","shaka.dash.DashParser.prototype.onExpirationUpdated","shaka.dash.DashParser.prototype.requestManifest_","parseManifest_","shaka.dash.DashParser.prototype.parseManifest_","finalManifestUri","mpd","xlinkOperation","xlinkFailGracefully","finalMpd","processManifest_","shaka.dash.DashParser.prototype.processManifest_","manifestBaseUris","locations","ignoreMinBufferTime","minBufferTime","suggestedPresentationDelay","mpdType","defaultPresentationDelay","periodsAndDuration","timingElements","parsePeriods_","durationDerivedFromPeriods","availabilityWindowOverride","parseUtcTiming_","shaka.dash.DashParser.prototype.parsePeriods_","presentationDuration","prevEnd","periodNodes","givenDuration","nextStart","nextPeriod","parsePeriod_","periodId","filterAllPeriods","shaka.dash.DashParser.prototype.parsePeriod_","createFrame_","eventStreamNodes","parseEventStream_","adaptationSets","adaptationSetNodes","parseAdaptationSet_","representationIds","uniqueIds","DASH_DUPLICATE_REPRESENTATION_ID","normalAdaptationSets","as","trickModeFor","trickModeAdaptationSets","trickModeSet","targetId","normalSet","videoSets","getSetsOfType_","audioSets","DASH_EMPTY_PERIOD","createVariants_","audioSet","videoSet","textSets","shaka.dash.DashParser.prototype.getSetsOfType_","shaka.dash.DashParser.prototype.createVariants_","main","shaka.dash.DashParser.prototype.parseAdaptationSet_","roleElements","roleValues","unrecognizedEssentialProperty","essentialProperties","prop","schemeId","accessibilities","channelId","closedCaptionsValue","captionStr","channelAndLanguage","channel","startsWith","contentProtectionElems","contentProtection","customScheme","representations","parseRepresentation_","DASH_EMPTY_ADAPTATION_SET","guessContentType_","repIds","shaka.dash.DashParser.prototype.parseRepresentation_","isPrimary","verifyRepresentation_","requestInitSegment_","streamInfo","ref","presentationTimeOffset","emsgSchemeIdUris","numChannels","onUpdate_","shaka.dash.DashParser.prototype.onUpdate_","shaka.dash.DashParser.prototype.setUpdateTimer_","shaka.dash.DashParser.prototype.createFrame_","parent","parseNumber","emsgSchemeIdUris_","audioChannelConfigs","parseAudioChannels_","shaka.dash.DashParser.prototype.emsgSchemeIdUris_","inBandEventStreams","schemeIdUris","schemeIdUri","shaka.dash.DashParser.prototype.parseAudioChannels_","intValue","hexValue","numBits","shaka.dash.DashParser.prototype.verifyRepresentation_","requestForTiming_","shaka.dash.DashParser.prototype.requestForTiming_","requestUris","TIMING","date","shaka.dash.DashParser.prototype.parseUtcTiming_","schemesAndValues","clockSyncUri","sv","shaka.dash.DashParser.prototype.parseEventStream_","eventNode","presentationTime","eventElement","onTimelineRegionAdded","shaka.dash.DashParser.prototype.requestInitSegment_","shaka.dash.DashParser.guessContentType_","shaka.hls","hls","Playlist","shaka.hls.Playlist","tags","PlaylistType","MASTER","Tag","shaka.hls.Tag","shaka.hls.Tag.prototype.toString","attrToStr","attr","Attribute","shaka.hls.Attribute","addAttribute","shaka.hls.Tag.prototype.addAttribute","shaka.hls.Tag.prototype.getAttribute","getAttributeValue","shaka.hls.Tag.prototype.getAttributeValue","Segment","shaka.hls.Segment","shaka.hls.Utils","Utils","filterTagsByName","shaka.hls.Utils.filterTagsByName","tag","getFirstTagWithName","shaka.hls.Utils.getFirstTagWithName","tagsWithName","findMediaTags","shaka.hls.Utils.findMediaTags","groupId","typeAttr","groupIdAttr","constructAbsoluteUri","shaka.hls.Utils.constructAbsoluteUri","parentAbsoluteUri","isComment","shaka.hls.Utils.isComment","TextParser","shaka.util.TextParser","data_","atEnd","shaka.util.TextParser.prototype.atEnd","readLine","shaka.util.TextParser.prototype.readLine","readRegexReturnCapture_","readWord","shaka.util.TextParser.prototype.readWord","skipWhitespace","shaka.util.TextParser.prototype.skipWhitespace","readRegex","shaka.util.TextParser.prototype.readRegex","regex","indexOf_","shaka.util.TextParser.prototype.readRegexReturnCapture_","shaka.util.TextParser.prototype.indexOf_","lastIndex","ManifestTextParser","shaka.hls.ManifestTextParser","parsePlaylist","shaka.hls.ManifestTextParser.prototype.parsePlaylist","absolutePlaylistUri","MEDIA_PLAYLIST_TAGS","SEGMENT_TAGS","lines","HLS_PLAYLIST_HEADER_MISSING","playlistType","parseTag_","HLS_INVALID_PLAYLIST_HIERARCHY","segmentsData","parseSegments_","tagUri","shaka.hls.ManifestTextParser.prototype.parseSegments_","absoluteMediaPlaylistUri","playlistTags","segmentTags","verbatimSegmentUri","absoluteSegmentUri","shaka.hls.ManifestTextParser.prototype.parseTag_","word","parseTag","shaka.hls.ManifestTextParser.parseTag","blocks","INVALID_HLS_TAG","blockAttrs","attrName","DataUriPlugin","shaka.net.DataUriPlugin","shaka.net.DataUriPlugin.parse","MALFORMED_DATA_URI","infoAndData","dataStr","typeAndEncoding","encoding","UNKNOWN_DATA_URI_ENCODING","HlsParser","shaka.hls.HlsParser","mediaTagsToStreamInfosMap_","variantUriSet_","uriToStreamInfosMap_","presentationTimeline_","masterPlaylistUri_","manifestTextParser_","presentationType_","PresentationType_","VOD","maxTargetDuration_","minTargetDuration_","segmentsToNotifyByStream_","shaka.hls.HlsParser.prototype.configure","shaka.hls.HlsParser.prototype.start","shaka.hls.HlsParser.prototype.stop","shaka.hls.HlsParser.prototype.update","isLive_","promises","updateStream_","shaka.hls.HlsParser.prototype.updateStream_","PresentationType","playlist","mediaSequenceTag","createSegments_","verbatimMediaPlaylistUri","startPosition","newestSegment","endListTag","setPresentationType_","shaka.hls.HlsParser.prototype.onExpirationUpdated","shaka.hls.HlsParser.prototype.parseManifest_","HLS_MASTER_PLAYLIST_NOT_PROVIDED","createPeriod_","minFirstTimestamp","maxFirstTimestamp","maxLastTimestamp","minDuration","minTimestamp","maxTimestamp","createPresentationTimeline_","LIVE","rolloverSeconds","TS_ROLLOVER_","TS_TIMESCALE_","shaka.hls.HlsParser.prototype.createPeriod_","textStreamPromises","mediaTags","textStreamTags","getRequiredAttributeValue_","createTextStream_","variantsPromises","variantTags","createVariantsForTag_","allVariants","shaka.hls.HlsParser.prototype.createVariantsForTag_","codecsString","defaultCodecs","resolutionAttr","resBlocks","audioGroupId","videoGroupId","textCodecs","guessCodecsSafe_","subGroupId","textTags","textStreamInfo","createStreamInfoFromMediaTag_","audioStreamInfos","videoStreamInfos","ignoreStream","streamURI","videoCodecs","createStreamInfoFromVariantTag_","filterLegacyCodecs_","shaka.hls.HlsParser.prototype.filterLegacyCodecs_","streamInfos","codec","shaka.hls.HlsParser.prototype.createVariants_","audioInfos","videoInfos","addVideoAttributes_","audioStream","videoStream","audioDrmInfos","videoDrmInfos","variantUriKey","videoStreamUri","audioStreamUri","createVariant_","shaka.hls.HlsParser.prototype.createVariant_","shaka.hls.HlsParser.prototype.createTextStream_","shaka.hls.HlsParser.prototype.createStreamInfoFromMediaTag_","allCodecs","defaultAttr","autoselectAttr","channelsAttribute","getChannelCount_","createStreamInfo_","shaka.hls.HlsParser.prototype.getChannelCount_","channels","channelcountstring","shaka.hls.HlsParser.prototype.createStreamInfoFromVariantTag_","shaka.hls.HlsParser.prototype.createStreamInfo_","determinePresentationType_","guessCodecs_","guessMimeType_","mimeTypeArg","createInitSegmentReference_","drmTags","segmentKeyTags","drmTag","keyFormat","drmParser","KEYFORMATS_TO_DRM_PARSERS_","HLS_KEYFORMATS_NOT_SUPPORTED","shaka.hls.HlsParser.prototype.determinePresentationType_","presentationTypeTag","isVod","isEvent","EVENT","targetDurationTag","getRequiredTag_","targetDuration","shaka.hls.HlsParser.prototype.createPresentationTimeline_","lastTimestamp","notifySegments_","shaka.hls.HlsParser.prototype.createInitSegmentReference_","mapTags","HLS_MULTIPLE_MEDIA_INIT_SECTIONS_FOUND","mapTag","verbatimInitSegmentUri","absoluteInitSegmentUri","byterange","createSegmentReference_","shaka.hls.HlsParser.prototype.createSegmentReference_","previousReference","hlsSegment","extinfValues","extinfTag","shaka.hls.HlsParser.prototype.notifySegments_","shaka.hls.HlsParser.prototype.createSegments_","hlsSegments","firstSegmentUri","firstSegmentRef","initSegmentRef","getStartTime_","firstStartTime","reference","fetchPartialSegment_","shaka.hls.HlsParser.prototype.fetchPartialSegment_","segmentRef","partialSegmentHeaders","PARTIAL_SEGMENT_SIZE_","fullSegmentHeaders","shaka.hls.HlsParser.prototype.getStartTime_","fetches","responses","getStartTimeFromMp4Segment_","getStartTimeFromTsSegment_","getStartTimeFromTextSegment_","HLS_COULD_NOT_PARSE_SEGMENT_START_TIME","shaka.hls.HlsParser.prototype.getStartTimeFromMp4Segment_","mediaData","parsedMedia","baseTime","shaka.hls.HlsParser.prototype.getStartTimeFromTsSegment_","fail","packetStart","syncByte","flagsAndPacketId","adaptationFieldControl","startCode","ptsDtsIndicator","pesHeaderLengthRemaining","pts0","pts1","pts2","shaka.hls.HlsParser.prototype.getStartTimeFromTextSegment_","textEngine","shaka.hls.HlsParser.prototype.guessCodecsSafe_","formats","CODEC_REGEXPS_BY_CONTENT_TYPE_","shaka.hls.HlsParser.prototype.guessCodecs_","HLS_COULD_NOT_GUESS_CODECS","shaka.hls.HlsParser.prototype.guessMimeType_","parsedUri","EXTENSION_MAP_BY_CONTENT_TYPE_","headRequest","HLS_COULD_NOT_GUESS_MIME_TYPE","shaka.hls.HlsParser.getRequiredAttributeValue_","attributeName","HLS_REQUIRED_ATTRIBUTE_MISSING","shaka.hls.HlsParser.prototype.getRequiredTag_","HLS_REQUIRED_TAG_MISSING","shaka.hls.HlsParser.prototype.addVideoAttributes_","shaka.hls.HlsParser.prototype.requestManifest_","VIDEO_CODEC_REGEXPS_","AUDIO_CODEC_REGEXPS_","TEXT_CODEC_REGEXPS_","AUDIO_EXTENSIONS_TO_MIME_TYPES_","VIDEO_EXTENSIONS_TO_MIME_TYPES_","TEXT_EXTENSIONS_TO_MIME_TYPES_","widevineDrmParser_","shaka.hls.HlsParser.widevineDrmParser_","VALID_METHODS","parsedData","shaka.hls.HlsParser.prototype.onUpdate_","shaka.hls.HlsParser.prototype.setUpdateTimer_","shaka.hls.HlsParser.prototype.isLive_","shaka.hls.HlsParser.prototype.setPresentationType_","ActiveStreamMap","history_","hasPeriod","periodIndex","streamId","Frame","record","record_","AdaptationSet","root","candidates","root_","candidate","canInclude","areAdaptable","areAudiosCompatible","areAudiosCompatible_","areVideosCompatible","areVideosCompatible_","canTransitionBetween","canTransitionBetween_","areRolesEqual","areRolesEqual_","codecsA","codecsB","aSet","bSet","mainRole","AdaptationSetCriteria","ExampleBasedCriteria","example","example_","fallback_","PreferenceBasedCriteria","channelCount","shortList","language_","role_","channelCount_","Class","current","byLanguage","filterByLanguage_","byPrimary","byRole","filterVariantsByRole_","byChannel","preferredLocale","GapJumpingController","shaka.media.GapJumpingController","timeline_","onEvent_","gapJumpTimer_","seekingEventReceived_","prevReadyState_","didFireLargeGap_","stallPlayheadTime_","stallWallTime_","hadSegmentAppended_","stallCorrected_","pollGap","onPollGapJump_","BROWSER_GAP_TOLERANCE","shaka.media.GapJumpingController.prototype.destroy","onSegmentAppended","shaka.media.GapJumpingController.prototype.onSegmentAppended","onSeeking","shaka.media.GapJumpingController.prototype.onSeeking","shaka.media.GapJumpingController.prototype.onPollGapJump_","seeking","gapIndex","handleStall_","jumpTo","seekEnd","jumpSize","isGapSmall","jumpLargeGap","jumpLargeGaps","shaka.media.GapJumpingController.prototype.handleStall_","VideoWrapper","shaka.media.VideoWrapper","onSeek","onSeek_","startTime_","playbackRate_","buffering_","trickPlayTimer_","onLoadedMetadata_","onRateChange_","shaka.media.VideoWrapper.prototype.destroy","getTime","shaka.media.VideoWrapper.prototype.getTime","setTime","shaka.media.VideoWrapper.prototype.setTime","movePlayhead_","getPlaybackRate","shaka.media.VideoWrapper.prototype.getPlaybackRate","setPlaybackRate","shaka.media.VideoWrapper.prototype.setPlaybackRate","rate","trickPlay","setBuffering","shaka.media.VideoWrapper.prototype.setBuffering","buffering","shaka.media.VideoWrapper.prototype.onRateChange_","expectedRate","shaka.media.VideoWrapper.prototype.onLoadedMetadata_","onSeekingToStartTime_","shaka.media.VideoWrapper.prototype.onSeekingToStartTime_","shaka.media.VideoWrapper.prototype.movePlayhead_","targetTime","tries","recheck","Playhead","shaka.media.Playhead","minBufferTime_","checkWindowTimer_","gapController_","videoWrapper_","onSeeking_","poll","onPollWindow_","MIN_SEEK_RANGE_","shaka.media.Playhead.prototype.destroy","setStartTime","shaka.media.Playhead.prototype.setStartTime","shaka.media.Playhead.prototype.getTime","clampTime_","shaka.media.Playhead.prototype.getStartTime_","clampSeekToDuration_","shaka.media.Playhead.prototype.setBuffering","shaka.media.Playhead.prototype.getPlaybackRate","shaka.media.Playhead.prototype.setPlaybackRate","shaka.media.Playhead.prototype.onSegmentAppended","shaka.media.Playhead.prototype.onPollWindow_","seekStart","minRange","reposition_","shaka.media.Playhead.prototype.onSeeking_","lastCorrectiveSeek_","shaka.media.Playhead.prototype.clampSeekToDuration_","durationBackoff","shaka.media.Playhead.prototype.reposition_","rebufferingGoal","safe","seekSafe","shaka.media.Playhead.prototype.clampTime_","Destroyer","waitOnDestroy_","onDestroy_","destroyed","with","objs","PlayheadObserver","shaka.media.PlayheadObserver","onBuffering","onChangePeriod","impl","onBuffering_","onChangePeriod_","timelineRegions_","curPeriodIndex_","watchdogTimer_","impl_","destroyer_","cancelWatchdogTimer_","startWatchdogTimer_","UNDERFLOW_THRESHOLD_","RegionLocation_","FUTURE_REGION","INSIDE","PAST_REGION","Implementation","getPeriodIndex","isBufferedToEnd","bufferedEnd","shaka.media.PlayheadObserver.prototype.destroy","seeked","shaka.media.PlayheadObserver.prototype.seeked","updateTimelineRegion_","addTimelineRegion","shaka.media.PlayheadObserver.prototype.addTimelineRegion","regionInfo","hasExistingRegion","cloneTimelineInfo_","detail","shaka.media.PlayheadObserver.cloneTimelineInfo_","source","shaka.media.PlayheadObserver.prototype.updateTimelineRegion_","isSeek","RegionLocation","newStatus","wasInside","isInside","shaka.media.PlayheadObserver.prototype.startWatchdogTimer_","onWatchdogTimer_","shaka.media.PlayheadObserver.prototype.cancelWatchdogTimer_","shaka.media.PlayheadObserver.prototype.onWatchdogTimer_","newPeriod","bufferedAhead","bufferedToEnd","setBuffering_","shaka.media.PlayheadObserver.prototype.setBuffering_","VideoPlayheadObserver","MediaSourcePlayheadObserver","mediaSourceEngine","mediaSourceEngine_","liveEdge","bufferedToLiveEdge","noMoreSegments","lin","VstubSegmentList","lin.VstubSegmentList.InitSegmentReference","initFunc","this.getUris","initSegmentBytesFunc","lin.VstubSegmentList.createStream","vstub","getInitVstubBytes","assetUrl","segmentsArray","seg","mdatRanges","rg","to","mediaSegment","sixdmoofBytes","sixdmoof","byteRanges","mdatSize","findByTime","findByIndex","lin.VstubSegmentList.getInitVstubBytes","byteArray","lin.VstubSegmentList.findByTime","lin.VstubSegmentList.findByIndex","buildMdatHeader","lin.VstubSegmentList.buildMdatHeader","view","StreamingEngine","shaka.media.StreamingEngine","bufferingGoalScale_","setupPeriodPromise_","canSwitchPeriod_","canSwitchStream_","mediaStates_","failureCallbackBackoff_","unloadingTextStream_","fatalError_","textStreamSequenceId_","APPEND_WINDOW_START_FUDGE_","MAX_RUN_AHEAD_SEGMENTS_","shaka.media.StreamingEngine.prototype.destroy","cancelUpdate_","state","shaka.media.StreamingEngine.prototype.configure","failureRetryParams","shaka.media.StreamingEngine.prototype.init","playheadTime","playhead","needPeriodIndex","findPeriodContainingTime_","initialStreams","onChooseStreams","initStreams_","onInitialStreamsSetup","STREAMING","INVALID_STREAMS_CHOSEN","getCurrentPeriod","shaka.media.StreamingEngine.prototype.getCurrentPeriod","getActivePeriod","shaka.media.StreamingEngine.prototype.getActivePeriod","getActiveAudio","shaka.media.StreamingEngine.prototype.getActiveAudio","getStream_","getActiveVideo","shaka.media.StreamingEngine.prototype.getActiveVideo","getActiveText","shaka.media.StreamingEngine.prototype.getActiveText","shaka.media.StreamingEngine.prototype.getStream_","restoreStreamAfterTrickPlay","loadNewTextStream","shaka.media.StreamingEngine.prototype.loadNewTextStream","currentSequenceId","streamMap","streamSet","setupStreams_","createMediaState_","scheduleUpdate_","unloadTextStream","shaka.media.StreamingEngine.prototype.unloadTextStream","setTrickPlay","shaka.media.StreamingEngine.prototype.setTrickPlay","mediaState","switchInternal_","normalVideo","switchVariant","shaka.media.StreamingEngine.prototype.switchVariant","clearBuffer","safeMargin","switchTextStream","shaka.media.StreamingEngine.prototype.switchTextStream","shaka.media.StreamingEngine.prototype.switchInternal_","ignoreTextStreamFailures","findPeriodContainingStream_","clearAllBuffers_","canSwitchRecord","resolved","streamTag","logPrefix_","needInitSegment","clearingBuffer","waitingToFlushBuffer","performingUpdate","waitingToClearBuffer","clearBufferSafeMargin","clearBuffer_","shaka.media.StreamingEngine.prototype.seeked","isAllBuffered","shaka.media.StreamingEngine.prototype.clearAllBuffers_","logPrefix","updateTimer","shaka.media.StreamingEngine.prototype.initStreams_","chosenStreams","resumeAt","setDuration_","shaka.media.StreamingEngine.prototype.createMediaState_","lastStream","lastSegmentReference","recovering","hasError","setupPeriod_","shaka.media.StreamingEngine.prototype.setupPeriod_","shaka.media.StreamingEngine.prototype.setupStreams_","parallelWork","shaka.media.StreamingEngine.prototype.setDuration_","shaka.media.StreamingEngine.prototype.onUpdate_","update_","handleStreamingError_","mediaStates","handlePeriodTransition_","ms","shaka.media.StreamingEngine.prototype.update_","timeNeeded","getTimeNeeded_","currentPeriodIndex","scaledBufferingGoal","unscaledBufferingGoal","bufferingGoal","textState","getSegmentReferenceNeeded_","minTimeNeeded","otherState","maxRunAhead","fetchAndAppend_","shaka.media.StreamingEngine.prototype.getTimeNeeded_","lastPeriodIndex","lastPeriod","shaka.media.StreamingEngine.prototype.getSegmentReferenceNeeded_","getSegmentReferenceIfAvailable_","lookupSegmentPosition_","optimalPosition","shaka.media.StreamingEngine.prototype.lookupSegmentPosition_","currentPeriod","lookupTime","shaka.media.StreamingEngine.prototype.getSegmentReferenceIfAvailable_","shaka.media.StreamingEngine.prototype.fetchAndAppend_","followingPeriod","initSourceBuffer","initSourceBuffer_","fetchSegment","fetch_","handleStartup_","BAD_HTTP_STATUS","handleQuotaExceeded_","retry","shaka.media.StreamingEngine.prototype.retry","shaka.media.StreamingEngine.prototype.handleQuotaExceeded_","waitingForAnotherStreamToRecover","percentBefore","percentAfter","shaka.media.StreamingEngine.prototype.initSourceBuffer_","appendInit","fetchInit","shaka.media.StreamingEngine.prototype.append_","parseEMSG_","evict_","shaka.media.StreamingEngine.prototype.parseEMSG_","presentationTimeDelta","eventDuration","messageData","onManifestUpdate","emsg","shaka.media.StreamingEngine.prototype.evict_","bufferBehind","bufferedBehind","overflow","shaka.media.StreamingEngine.prototype.handleStartup_","onCanSwitch","onStartupComplete","shaka.media.StreamingEngine.prototype.handlePeriodTransition_","needSamePeriod","allAreIdle","allReady","needPeriod","shaka.media.StreamingEngine.isIdle_","shaka.media.StreamingEngine.prototype.findPeriodContainingTime_","shaka.media.StreamingEngine.prototype.findPeriodContainingStream_","shaka.media.StreamingEngine.prototype.fetch_","initSegmentBytes","segmentArray","mdatHeader","responseArray","samplesData","shaka.media.StreamingEngine.prototype.clearBuffer_","shaka.media.StreamingEngine.prototype.scheduleUpdate_","shaka.media.StreamingEngine.prototype.cancelUpdate_","shaka.media.StreamingEngine.prototype.handleStreamingError_","failureCallback","shaka.media.StreamingEngine.logPrefix_","shaka.net.HttpPluginUtils","HttpPluginUtils","makeResponse","shaka.net.HttpPluginUtils.makeResponse","responseURL","responseText","HttpFetchPlugin","shaka.net.HttpFetchPlugin","progressUpdated","Headers_","controller","AbortController_","signal","credentials","abortStatus","canceled","timedOut","onTimeout","request_","shaka.net.HttpFetchPlugin.request_","timeoutId","fetch","ReadableStream","arrayBuffer","lastLoaded","responseHeaders","ReadableStream_","getReader","readObj","read","done","enqueue","TIMEOUT","HTTP_ERROR","shaka.net.HttpFetchPlugin.isSupported","AbortController","Headers","PREFERRED","HttpXHRPlugin","shaka.net.HttpXHRPlugin","xhr","Xhr_","responseType","withCredentials","onabort","xhr.onabort","onload","xhr.onload","headerLines","getAllResponseHeaders","header","onerror","xhr.onerror","ontimeout","xhr.ontimeout","onprogress","xhr.onprogress","lengthComputable","lowercasedKey","setRequestHeader","XMLHttpRequest","FALLBACK","shaka.offline","offline","DownloadManager","shaka.offline.DownloadManager","onProgress","groups_","promise_","onProgress_","downloadedBytes_","expectedEstimatedBytes_","downloadedEstimatedBytes_","shaka.offline.DownloadManager.prototype.destroy","wait","requests_","queue","shaka.offline.DownloadManager.prototype.queue","group","estimatedByteLength","onDownloaded","download","shaka.offline.DownloadManager.prototype.download","groups","downloadGroup_","shaka.offline.DownloadManager.prototype.downloadGroup_","checkDestroyed_","downloadSegment_","shaka.offline.DownloadManager.prototype.downloadSegment_","progress","shaka.offline.DownloadManager.prototype.checkDestroyed_","STORAGE","shaka.offline.indexeddb","indexeddb","DBOperation","transaction","storeName","transaction_","store_","objectStore","transaction.onabort","transaction.onerror","oncomplete","transaction.oncomplete","forEachEntry","req","openCursor","onsuccess","req.onsuccess","cursor","continue","store","DBConnection","connection","connection_","pending_","startReadOnlyOperation","startOperation_","startReadWriteOperation","stopTracking_","EmeSessionStorageCell","sessionIds","StorageMuxer","mechanisms_","destroys","mechanism","getRegistry_","registry","mech","initPromises","getActive","handle","mechanismName","getCells","cell","cellName","hasFixedKeySpace","MISSING_STORAGE_CELL","forEachCell","getCell","forEachEmeSessionCell","getEmeSessionCell","mechanisms","STORAGE_NOT_SUPPORTED","resolvePath","erase","alreadyInitialized","register","registry_","shaka.offline.StorageMuxer.register","unregister","shaka.offline.StorageMuxer.unregister","instance","overrideSupport","override_","clearOverride","override","V1StorageCell","segmentStore","manifestStore","segmentStore_","manifestStore_","addSegments","rejectAdd_","removeSegments","onRemove","getSegments","convertSegmentData","convertSegmentData_","get_","addManifests","manifests","updateManifestExpiration","newExpiration","put","KEY_NOT_FOUND","removeManifests","getManifests","convertManifest","convertManifest_","getAllManifests","NEW_KEY_OPERATION_NOT_SUPPORTED","missing","old","originalManifestUri","appMetadata","convertPeriod_","convertStream","convertStream_","fillMissingVariants","fillMissingVariants_","variantIds","getKeyFromUri","getKeyFromSegmentUri_","convertSegment","convertSegment_","initSegmentKey","initSegmentUri","dataKey","MALFORMED_OFFLINE_URI","nextId","variantId","V2StorageCell","isFixedKey","isFixedKey_","add_","request.onsuccess","StorageMechanism","sessions_","v3_","v2_","v1_","db_","DB_NAME","VERSION","indexedDB","open.onsuccess","db","createV1_","createV2_","createV3_","createEmeSession_","onupgradeneeded","open.onupgradeneeded","createStores_","open.onerror","INDEXED_DB_ERROR","deleteAll_","V1_SEGMENT_STORE","V1_MANIFEST_STORE","stores","objectStoreNames","contains","V2_SEGMENT_STORE","V2_MANIFEST_STORE","V3_SEGMENT_STORE","V3_MANIFEST_STORE","SESSION_ID_STORE","storeNames","createObjectStore","autoIncrement","del","deleteDatabase","onblocked","del.onblocked","del.onsuccess","del.onerror","OfflineUri","type_","mechanism_","cell_","key_","asString_","isManifest","isSegment","ManifestConverter","fromManifestDB","manifestDB","fromPeriodDB","audioStreams","isAudio_","videoStreams","isVideo_","createVariants","isText_","fromStreamDB_","refs","fromSegmentDB_","audios","videos","variantMap","createEmptyVariant_","streamDB","fromInitSegmentDB_","segmentDB","OfflineManifestParser","shaka.offline.OfflineManifestParser","uri_","shaka.offline.OfflineManifestParser.prototype.configure","shaka.offline.OfflineManifestParser.prototype.start","uriString","muxer","converter","shaka.offline.OfflineManifestParser.prototype.stop","shaka.offline.OfflineManifestParser.prototype.update","shaka.offline.OfflineManifestParser.prototype.onExpirationUpdated","foundSession","OfflineScheme","shaka.offline.OfflineScheme","offlineUri","getManifest_","getSegment_","shaka.offline.OfflineScheme.getManifest_","shaka.offline.OfflineScheme.getSegment_","SessionDeleter","deleted","bucket","createBuckets_","doDelete_","licenseUri","isCompatible_","comp","y","SimpleTextDisplayer","shaka.text.SimpleTextDisplayer","textTrack_","textTracks","mode","TextTrackLabel_","addTextTrack","shaka.text.SimpleTextDisplayer.prototype.remove","removeWhere_","removeInRange","shaka.text.SimpleTextDisplayer.prototype.append","convertToTextTrackCue","convertToTextTrackCue_","textTrackCues","sortedCues","addCue","shaka.text.SimpleTextDisplayer.prototype.destroy","removeIt","isTextVisible","shaka.text.SimpleTextDisplayer.prototype.isTextVisible","setTextVisibility","shaka.text.SimpleTextDisplayer.prototype.setTextVisibility","shaka.text.SimpleTextDisplayer.convertToTextTrackCue_","shakaCue","vttCue","VTTCue","align","VERTICAL_LEFT_TO_RIGHT","vertical","VERTICAL_RIGHT_TO_LEFT","snapToLines","shaka.text.SimpleTextDisplayer.removeWhere_","predicate","oldState","tempState","removeCue","shaka.util.ConfigUtils","ConfigUtils","mergeConfigObjects","shaka.util.ConfigUtils.mergeConfigObjects","destination","overrides","ignoreKeys","isValid","subPath","subTemplate","subMergeValid","PlayerConfiguration","createDefault","abrMaxHeight","downlink","saveData","drm","streaming","alwaysStreamText","startAtSegmentBoundary","trackSelectionCallback","tracks","progressCallback","content","usePersistentLicense","abrFactory","enabled","preferredAudioLanguage","preferredTextLanguage","preferredVariantRole","preferredTextRole","playRangeStart","playRangeEnd","textDisplayFactory","offline.trackSelectionCallback","defaultTrackSelect","updates","selectedVariants","languages","tracksByHeight","selectedTracks","middleIndex","Player","shaka.Player","mediaElem","dependencyInjector","textVisibility_","abrManagerFactory_","abrManager_","assetUri_","streamingEngine_","playheadObserver_","playhead_","drmEngine_","networkingEngine_","nextExternalStreamId_","loadingTextStreamIds_","switchingPeriods_","deferredVariant_","unloadChain_","onCancelLoad_","deferredVariantClearBuffer_","deferredVariantClearBufferSafeMargin_","deferredTextStream_","pendingTimelineRegions_","activeStreams_","defaultConfig_","maxHwRes_","stats_","getCleanStats_","lastTimeStatsUpdateTimestamp_","currentAdaptationSetCriteria_","currentTextLanguage_","currentTextRole_","createNetworkingEngine","retryStreaming","cancelLoad_","shaka.Player.prototype.cancelLoad_","stopParser","shaka.Player.prototype.destroy","detach","restrictedStatuses_","supportPlugins_","registerSupportPlugin","shaka.Player.registerSupportPlugin","shaka.Player.isBrowserSupported","shaka.Player.probeSupport","plugins","shaka.Player.prototype.attach","initializeMediaSource","onVideoError_","createMediaSourceEngine","shaka.Player.prototype.detach","getParser_","shaka.Player.prototype.getParser_","loadManifest_","shaka.Player.prototype.loadManifest_","filterNewPeriod_","filterAllPeriods_","filterManifestForAVVariants_","shaka.Player.prototype.filterManifestForAVVariants_","isAVVariant","hasAVVariant","NO_PERIODS","shaka.Player.prototype.load","cancelValue","cancelPromise","cancelCallback","loadStartTime","unloadPromise","AbrManagerFactory","TextDisplayerFactory","contentMimeType","hasPrimary","NO_VIDEO_ELEMENT","updateState_","createDrmEngine","createTextStreamsForClosedCaptions_","applyPlayRange_","createPlayhead","createPlayheadObserver","createStreamingEngine","chooseCodecsAndFilterManifest_","adjustStartTime_","onTracksChanged_","onAdaptation_","chooseVariant_","latency","loadLatency","shaka.Player.prototype.chooseCodecsAndFilterManifest_","variantCodecs","baseVideoCodec","baseAudioCodec","variantsByCodecs","bestCodecs","lowestAverageBandwidth","sum","num","averageBandwidth","shaka.Player.prototype.createDrmEngine","onKeyStatus_","onExpirationUpdated_","shaka.Player.prototype.createNetworkingEngine","shaka.Player.prototype.createPlayhead","shaka.Player.prototype.createPlayheadObserver","shaka.Player.prototype.createMediaSourceEngine","shaka.Player.prototype.createStreamingEngine","onChooseStreams_","canSwitch_","onManifestUpdate_","onSegmentAppended_","shaka.Player.prototype.configure","convertToConfigObject_","applyConfig_","shaka.Player.prototype.convertToConfigObject_","fieldName","configObject","last","searchIndex","nameStart","shaka.Player.prototype.applyConfig_","activeVariant","chooseStreamsAndSwitch_","shaka.Player.prototype.getConfiguration","getSharedConfiguration","shaka.Player.prototype.getSharedConfiguration","resetConfiguration","shaka.Player.prototype.resetConfiguration","getMediaElement","shaka.Player.prototype.getMediaElement","shaka.Player.prototype.getNetworkingEngine","shaka.Player.prototype.getAssetUri","getManifestUri","shaka.Player.prototype.getManifestUri","shaka.Player.prototype.isLive","shaka.Player.prototype.isInProgress","isAudioOnly","shaka.Player.prototype.isAudioOnly","seekRange","shaka.Player.prototype.seekRange","shaka.Player.prototype.keySystem","shaka.Player.prototype.drmInfo","shaka.Player.prototype.getExpiration","shaka.Player.prototype.isBuffering","shaka.Player.prototype.unload","reinitializeMediaSource","destroyStreaming_","shaka.Player.prototype.getPlaybackRate","shaka.Player.prototype.trickPlay","cancelTrickPlay","shaka.Player.prototype.cancelTrickPlay","shaka.Player.prototype.getVariantTracks","assertCorrectActiveStreams_","shaka.Player.prototype.getTextTracks","selectTextTrack","shaka.Player.prototype.selectTextTrack","addTextStreamToSwitchHistory_","switchTextStream_","selectEmbeddedTextTrack","shaka.Player.prototype.selectEmbeddedTextTrack","usingEmbeddedTextTrack","shaka.Player.prototype.usingEmbeddedTextTrack","selectVariantTrack","shaka.Player.prototype.selectVariantTrack","variantIsPlayable","addVariantToSwitchHistory_","switchVariant_","getAudioLanguagesAndRoles","shaka.Player.prototype.getAudioLanguagesAndRoles","getLanguageAndRolesFromTracks_","getTextLanguagesAndRoles","shaka.Player.prototype.getTextLanguagesAndRoles","getAudioLanguages","shaka.Player.prototype.getAudioLanguages","getLanguagesFromTracks_","getTextLanguages","shaka.Player.prototype.getTextLanguages","selectAudioLanguage","shaka.Player.prototype.selectAudioLanguage","selectTextLanguage","shaka.Player.prototype.selectTextLanguage","isTextTrackVisible","shaka.Player.prototype.isTextTrackVisible","setTextTrackVisibility","shaka.Player.prototype.setTextTrackVisibility","onTextTrackVisibility_","getPlayheadTimeAsDate","shaka.Player.prototype.getPlayheadTimeAsDate","getPresentationStartTimeAsDate","shaka.Player.prototype.getPresentationStartTimeAsDate","shaka.Player.prototype.getBufferedInfo","getStats","shaka.Player.prototype.getStats","updateTimeStats_","videoElem","videoInfo","getVideoPlaybackQuality","streamBandwidth","decodedFrames","totalVideoFrames","droppedFrames","droppedVideoFrames","estimatedBandwidth","playTime","bufferingTime","switchHistory","stateHistory","shaka.Player.prototype.addTextTrack","nextPeriodIndex","nextPeriodStart","CANNOT_ADD_EXTERNAL_TEXT_TO_LIVE_STREAM","curPeriodIdx","activeText","shaka.Player.prototype.setMaxHardwareResolution","shaka.Player.prototype.retryStreaming","getManifest","shaka.Player.prototype.getManifest","shaka.Player.prototype.addVariantToSwitchHistory_","fromAdaptation","updateActiveStreams_","activePeriod","timestamp","shaka.Player.prototype.addTextStreamToSwitchHistory_","shaka.Player.prototype.updateActiveStreams_","shaka.Player.prototype.destroyStreaming_","shaka.Player.prototype.defaultConfig_","config.streaming.failureCallback","defaultStreamingFailureCallback_","self","config.textDisplayFactory","shaka.Player.prototype.defaultStreamingFailureCallback_","retryErrorCodes","shaka.Player.prototype.getCleanStats_","shaka.Player.prototype.createTextStreamsForClosedCaptions_","closedCaptionsMap","shaka.Player.prototype.filterAllPeriods_","filterPeriod","validPeriodsCount","CONTENT_UNSUPPORTED_BY_BROWSER","UNPLAYABLE_PERIOD","checkRestrictedVariants_","shaka.Player.prototype.filterNewPeriod_","hasPlayableVariant","curDrmInfo","shaka.Player.prototype.switchVariant_","onVariantChanged_","shaka.Player.prototype.switchTextStream_","onTextChanged_","shaka.Player.prototype.assertCorrectActiveStreams_","mainStream","streamingPeriodIndex","activeStreams","shaka.Player.prototype.updateTimeStats_","shaka.Player.prototype.adjustStartTime_","getAdjustedTime","refTime","audioStartTime","videoStartTime","shaka.Player.prototype.onBuffering_","shaka.Player.prototype.onChangePeriod_","shaka.Player.prototype.updateState_","newState","lastEntry","shaka.Player.prototype.onSeek_","shaka.Player.prototype.chooseVariant_","playableVariants","chooseTextStream_","shaka.Player.prototype.chooseTextStream_","subset","shaka.Player.prototype.chooseStreamsAndSwitch_","chosenText","shouldStreamText_","shaka.Player.prototype.onChooseStreams_","chooseStreams_","shaka.Player.prototype.chooseStreams_","deferredPeriodIndex","deferredPeriod","startingUp","chosenAudio","shouldShowText_","shaka.Player.prototype.shouldShowText_","audioLocale","textLocale","shaka.Player.prototype.canSwitch_","shaka.Player.prototype.onManifestUpdate_","shaka.Player.prototype.onSegmentAppended_","shaka.Player.prototype.switch_","shaka.Player.prototype.onAdaptation_","waitNextTick_","shaka.Player.prototype.onTracksChanged_","shaka.Player.prototype.onVariantChanged_","shaka.Player.prototype.onTextChanged_","shaka.Player.prototype.onTextTrackVisibility_","shaka.Player.prototype.onError_","shaka.Player.prototype.onEvent_","shaka.Player.prototype.onVideoError_","extended","msExtendedCode","VIDEO_ERROR","shaka.Player.prototype.onKeyStatus_","keyStatusMap","restrictedStatuses","isGlobalStatus","keyStatus","shaka.Player.prototype.onExpirationUpdated_","shaka.Player.prototype.shouldStreamText_","shaka.Player.applyPlayRange_","fullDuration","shaka.Player.prototype.checkRestrictedVariants_","hasPlayable","hasAppRestrict","missingKeys","badKeyStatuses","RESTRICTIONS_CANNOT_BE_MET","hasAppRestrictions","restrictedKeyStatuses","shaka.Player.prototype.waitNextTick_","shaka.Player.getLanguageAndRolesFromTracks_","rolesByLanguage","combos","shaka.Player.getLanguagesFromTracks_","StoredContentUtils","fromManifest","originalUri","getTracks_","firstPeriod","firstPeriodDB","StreamBandwidthEstimator","estimateByStreamId_","addVariant","setBitrate_","audioBitRate","DEFAULT_AUDIO_BITRATE_","videoBitRate","bitRate","addText","DEFAULT_TEXT_BITRATE_","getSegmentEstimate","getEstimate_","getInitSegmentEstimate","ManifestFilter","filterByRestrictions","maxHwResolution","filterByMediaSourceSupport","filterByDrmSupport","filterByCommonCodecs","common","VariantCodecSummarySet","fromVariants","includeAll","onlyKeep","summary","VariantCodecSummary","rollingFilter","previous","audioMime_","audioCodec_","videoMime_","videoCodec_","equals","all_","Storage","shaka.offline.Storage","LOCAL_PLAYER_INSTANCE_REQUIRED","storeInProgress_","segmentsFromStore_","openOperations_","destroyNetworkingEngine","shaka.offline.Storage.support","shaka.offline.Storage.prototype.destroy","shaka.offline.Storage.prototype.configure","verifyConfig_","shaka.offline.Storage.prototype.getNetworkingEngine","shaka.offline.Storage.prototype.store","getParser","shaka.offline.Storage.prototype.store_","canDownload","activeHandle","drmError","requireSupport_","STORE_ALREADY_IN_PROGRESS","parseManifest","CANNOT_STORE_LIVE_OFFLINE","filterManifest_","downloadManifest_","shaka.offline.Storage.prototype.filterManifest_","chosenTracks","textIds","validateManifest_","shaka.offline.Storage.prototype.downloadManifest_","storage","pendingContent","downloader","createOfflineManifest_","shaka.offline.Storage.prototype.remove","contentUri","shaka.offline.Storage.prototype.remove_","nullableUri","removeFromDRM_","removeFromStorage_","getCapabilities_","shaka.offline.Storage.getCapabilities_","manifestDb","shaka.offline.Storage.prototype.removeFromDRM_","deleteLicenseFor_","shaka.offline.Storage.prototype.removeFromStorage_","segmentIds","getAllSegmentIds_","toRemove","removed","removeEmeSessions","shaka.offline.Storage.prototype.removeEmeSessions","removeEmeSessions_","shaka.offline.Storage.prototype.removeEmeSessions_","hasRemaining","cells","sessionIdCell","deletedSessionIds","shaka.offline.Storage.prototype.list","list_","shaka.offline.Storage.prototype.list_","onCell","shaka.offline.Storage.prototype.parseManifest","shaka.offline.Storage.prototype.createDrmEngine","shaka.offline.Storage.prototype.createOfflineManifest_","estimator","NO_INIT_DATA_FOR_OFFLINE","shaka.offline.Storage.prototype.createPeriod_","getStreamSet_","streamDBs","createStream_","shaka.offline.Storage.prototype.createStream_","streamDb","downloadGroup","forEachSegment_","createRequest_","shaka.offline.Storage.forEachSegment_","shaka.offline.Storage.prototype.checkDestroyed_","shaka.offline.Storage.prototype.requireSupport_","shaka.offline.Storage.prototype.createRequest_","shaka.offline.Storage.prototype.startOperation_","action","shaka.offline.Storage.getAllSegmentIds_","deleteAll","shaka.offline.Storage.deleteAll","shaka.offline.Storage.deleteLicenseFor_","drmConfig","shaka.offline.Storage.getStreamSet_","shaka.offline.Storage.verifyConfig_","usedLegacyConfig","shaka.offline.Storage.validateManifest_","validatePeriod_","shaka.offline.Storage.validatePeriod_","texts","audio1","audio2","text1","text2","shaka.polyfill","polyfill","installAll","shaka.polyfill.installAll","polyfills_","shaka.polyfill.register","shaka.polyfill.Fullscreen","Fullscreen","install","shaka.polyfill.Fullscreen.install","Document","proto","requestFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullscreen","exitFullscreen","mozCancelFullScreen","msExitFullscreen","webkitExitFullscreen","mozFullScreenElement","msFullscreenElement","webkitFullscreenElement","mozFullScreenEnabled","msFullscreenEnabled","webkitFullscreenEnabled","proxy","shaka.polyfill.Fullscreen.proxyEvent_","eventType","newEvent","createEvent","initEvent","shaka.polyfill.IndexedDB","IndexedDB","shaka.polyfill.IndexedDB.install","agent","shaka.polyfill.InputEvent","InputEvent","shaka.polyfill.InputEvent.install","HTMLInputElement","addEventListener_","originalAddEventListener_","shaka.polyfill.InputEvent.addEventListener_","shaka.polyfill.MathRound","MathRound","MAX_ACCURATE_INPUT_","shaka.polyfill.MathRound.install","testNumber","originalMathRound","Math.round","shaka.polyfill.MediaSource","shaka.polyfill.MediaSource.install","patchCastIsTypeSupported_","vendor","appVersion","rejectTsContent_","blacklist_","stubAbort_","patchEndOfStreamEvents_","patchRemovalRange_","shaka.polyfill.MediaSource.blacklist_","shaka.polyfill.MediaSource.stubAbort_","MediaSource.prototype.addSourceBuffer","sourceBuffer.abort","shaka.polyfill.MediaSource.patchRemovalRange_","originalRemove","SourceBuffer","SourceBuffer.prototype.remove","shaka.polyfill.MediaSource.patchEndOfStreamEvents_","MediaSource.prototype.endOfStream","newDuration","sourceBuffers","ignoreUpdateEnd_","eventSuppressed_","cleanUpHandlerInstalled","cleanUpListeners_","shaka.polyfill.MediaSource.ignoreUpdateEnd_","shaka.polyfill.MediaSource.cleanUpListeners_","shaka.polyfill.MediaSource.rejectTsContent_","originalIsTypeSupported","MediaSource.isTypeSupported","pieces","basicMimeType","container","shaka.polyfill.MediaSource.patchCastIsTypeSupported_","dolbyVisionRegex","kv","isHDR","isDolbyVision","codecList","Pssh","shaka.util.Pssh","psshBox","systemIds","cencKeyIds","dataBoundaries","parseBox_","shaka.util.Pssh.prototype.parseBox_","systemId","numKeyIds","dataSize","shaka.polyfill.PatchedMediaKeysMs","PatchedMediaKeysMs","shaka.polyfill.PatchedMediaKeysMs.install","HTMLVideoElement","MSMediaKeys","MediaKeyStatusMap","KEY_ID_","HTMLMediaElement","shaka.polyfill.PatchedMediaKeysMs.requestMediaKeySystemAccess","supportedConfigurations","shaka.polyfill.PatchedMediaKeysMs.MediaKeySystemAccess","success","cfg","newCfg","initDataTypes","ranAnyTests","configuration_","unsupportedKeySystemError","DOMException","NOT_SUPPORTED_ERR","shaka.polyfill.PatchedMediaKeysMs.MediaKeySystemAccess.prototype.createMediaKeys","shaka.polyfill.PatchedMediaKeysMs.MediaKeySystemAccess.prototype.getConfiguration","shaka.polyfill.PatchedMediaKeysMs.setMediaKeys","oldMediaKeys","setMedia","shaka.polyfill.PatchedMediaKeysMs.MediaKeys","nativeMediaKeys_","shaka.polyfill.PatchedMediaKeysMs.MediaKeys.prototype.createSession","sessionType","TypeError","MediaKeySession","shaka.polyfill.PatchedMediaKeysMs.MediaKeys.prototype.setServerCertificate","shaka.polyfill.PatchedMediaKeysMs.MediaKeys.prototype.setMedia","setMediaKeysDeferred","msSetMediaKeys","onMsNeedKey_","shaka.polyfill.PatchedMediaKeysMs.MediaKeySession","nativeMediaKeys","nativeMediaKeySession_","updatePromise_","generateRequestPromise_","closed","shaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.generateRequest","onMsKeyMessage_","onMsKeyAdded_","onMsKeyError_","updateKeyStatus_","shaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.load","shaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.update","shaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.close","shaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.remove","shaka.polyfill.PatchedMediaKeysMs.onMsNeedKey_","event2","initCustomEvent","normaliseInitData_","shaka.polyfill.PatchedMediaKeysMs.normaliseInitData_","unfilteredInitDatas","currPssh","dedupedInitDatas","targetLength","normalisedInitData","shaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.onMsKeyMessage_","isNew","getStatus","shaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.onMsKeyAdded_","shaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.onMsKeyError_","errorCode","MSMediaKeyError","MS_MEDIA_KEYERR_OUTPUT","MS_MEDIA_KEYERR_HARDWARECHANGE","shaka.polyfill.PatchedMediaKeysMs.MediaKeySession.prototype.updateKeyStatus_","setStatus","shaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap","status_","shaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.setStatus","shaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.getStatus","shaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.forEach","shaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.get","shaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.has","fakeKeyId","entries","shaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.entries","shaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.keys","shaka.polyfill.PatchedMediaKeysMs.MediaKeyStatusMap.prototype.values","shaka.polyfill.PatchedMediaKeysNop","PatchedMediaKeysNop","shaka.polyfill.PatchedMediaKeysNop.install","shaka.polyfill.PatchedMediaKeysNop.requestMediaKeySystemAccess","shaka.polyfill.PatchedMediaKeysNop.setMediaKeys","shaka.polyfill.PatchedMediaKeysNop.MediaKeys","shaka.polyfill.PatchedMediaKeysNop.MediaKeys.prototype.createSession","shaka.polyfill.PatchedMediaKeysNop.MediaKeys.prototype.setServerCertificate","shaka.polyfill.PatchedMediaKeysNop.MediaKeySystemAccess","shaka.polyfill.PatchedMediaKeysNop.MediaKeySystemAccess.prototype.getConfiguration","shaka.polyfill.PatchedMediaKeysNop.MediaKeySystemAccess.prototype.createMediaKeys","shaka.polyfill.PatchedMediaKeysWebkit","PatchedMediaKeysWebkit","prefix_","shaka.polyfill.PatchedMediaKeysWebkit.install","prefixApi","prefixApi_","webkitGenerateKeyRequest","generateKeyRequest","shaka.polyfill.PatchedMediaKeysWebkit.prefixApi_","api","prefix","shaka.polyfill.PatchedMediaKeysWebkit.requestMediaKeySystemAccess","shaka.polyfill.PatchedMediaKeysWebkit.setMediaKeys","getVideoElement_","shaka.polyfill.PatchedMediaKeysWebkit.getVideoElement_","tmpVideo","createElement","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySystemAccess","internalKeySystem_","allowPersistentState","canPlayType","unsupportedError","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySystemAccess.prototype.createMediaKeys","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySystemAccess.prototype.getConfiguration","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeys","keySystem_","media_","newSessions_","sessionMap_","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.setMedia","onWebkitNeedKey_","onWebkitKeyMessage_","onWebkitKeyAdded_","onWebkitKeyError_","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.createSession","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.setServerCertificate","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.onWebkitNeedKey_","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.onWebkitKeyMessage_","findSession_","generated","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.onWebkitKeyAdded_","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.onWebkitKeyError_","handleError","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeys.prototype.findSession_","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession","generatePromise_","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.generated","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.ready","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.handleError","systemCode","MediaKeyError","generate_","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.generate_","offlineSessionId","mangledInitData","generateKeyRequestName","exception2","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.update_","licenseString","addKeyName","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.updateKeyStatus_","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.generateRequest","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.load","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.update","nextUpdatePromise","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.close","cancelKeyRequestName","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeySession.prototype.remove","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.setStatus","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.getStatus","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.forEach","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.get","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.has","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.entries","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.keys","shaka.polyfill.PatchedMediaKeysWebkit.MediaKeyStatusMap.prototype.values","shaka.polyfill.VideoPlayPromise","VideoPlayPromise","shaka.polyfill.VideoPlayPromise.install","originalPlay","HTMLMediaElement.prototype.play","shaka.polyfill.VideoPlaybackQuality","VideoPlaybackQuality","shaka.polyfill.VideoPlaybackQuality.install","webkit_","shaka.polyfill.VideoPlaybackQuality.webkit_","webkitDroppedFrameCount","webkitDecodedFrameCount","shaka.polyfill.VTTCue","shaka.polyfill.VTTCue.install","TextTrackCue","constructorLength","from3ArgsTextTrackCue_","from6ArgsTextTrackCue_","canUse3ArgsTextTrackCue_","shaka.polyfill.VTTCue.from3ArgsTextTrackCue_","shaka.polyfill.VTTCue.from6ArgsTextTrackCue_","shaka.polyfill.VTTCue.canUse3ArgsTextTrackCue_","TtmlTextParser","shaka.text.TtmlTextParser","parameterNs_","styleNs_","shaka.text.TtmlTextParser.prototype.parseInit","shaka.text.TtmlTextParser.prototype.parseMedia","ttpNs","INVALID_XML","tt","tts","subFrameRate","frameRateMultiplier","tickRate","spaceStyle","whitespaceTrim","rateInfo","RateInfo_","styles","getLeafNodes_","regionElements","cueRegions","cueRegion","parseCueRegion_","textNodes","parseCue_","percentValues_","unitValues_","pixelValues_","timeColonFormatFrames_","timeColonFormat_","timeColonFormatMilliseconds_","timeFramesFormat_","timeTickFormat_","timeHMSFormat_","textAlignToLineAlign_","START","END","textAlignToPositionAlign_","LEFT","RIGHT","shaka.text.TtmlTextParser.getLeafNodes_","isSpanChildOfP","ELEMENT_NODE","leafChildren","addNewLines_","shaka.text.TtmlTextParser.addNewLines_","trimmed","shaka.text.TtmlTextParser.parseCue_","cueElement","hasAttribute","parseTime_","INVALID_TEXT_CUE","regionElement","getElementFromCollection_","regionId","regionsWithId","addStyle_","shaka.text.TtmlTextParser.parseCueRegion_","extent","getStyleAttributeFromRegion_","percentage","PX","origin","shaka.text.TtmlTextParser.addStyle_","getStyleAttribute_","direction","HORIZONTAL_RIGHT_TO_LEFT","writingMode","BOLD","wrapOption","textDecorationRegion","addTextDecoration_","textDecorationElement","getStyleAttributeFromElement_","shaka.text.TtmlTextParser.addTextDecoration_","decoration","UNDERLINE","LINE_THROUGH","OVERLINE","shaka.text.TtmlTextParser.getStyleAttribute_","shaka.text.TtmlTextParser.getStyleAttributeFromRegion_","ttsNs","regionChildren","style","shaka.text.TtmlTextParser.getStyleAttributeFromElement_","shaka.text.TtmlTextParser.getElementFromCollection_","collection","itemName","getInheritedAttribute_","shaka.text.TtmlTextParser.getInheritedAttribute_","parentNode","shaka.text.TtmlTextParser.parseTime_","parseColonTimeWithFrames_","parseTimeFromRegex_","parseFramesTime_","parseTickTime_","shaka.text.TtmlTextParser.parseFramesTime_","frames","shaka.text.TtmlTextParser.parseTickTime_","ticks","shaka.text.TtmlTextParser.parseColonTimeWithFrames_","shaka.text.TtmlTextParser.parseTimeFromRegex_","shaka.text.TtmlTextParser.RateInfo_","multiplierResults","numerator","denominator","Mp4TtmlParser","shaka.text.Mp4TtmlParser","shaka.text.Mp4TtmlParser.prototype.parseInit","sawSTPP","INVALID_MP4_TTML","shaka.text.Mp4TtmlParser.prototype.parseMedia","sawMDAT","VttTextParser","shaka.text.VttTextParser","shaka.text.VttTextParser.prototype.parseInit","shaka.text.VttTextParser.prototype.parseMedia","INVALID_TEXT_HEADER","cueTimeMatch","mpegTimeMatch","cueTime","mpegTime","MPEG_TIMESCALE_","regions","parseRegion_","shaka.text.VttTextParser.parseRegion_","parseRegionSetting_","shaka.text.VttTextParser.parseCue_","timeOffset","expect","parseCueSetting","shaka.text.VttTextParser.parseCueSetting","setTextAlign_","setVerticalWritingDirection_","setPositionAlign_","getRegionById_","parsedLineValueAndInterpretation_","shaka.text.VttTextParser.getRegionById_","shaka.text.VttTextParser.parseRegionSetting_","LINES","UP","shaka.text.VttTextParser.setTextAlign_","shaka.text.VttTextParser.setPositionAlign_","shaka.text.VttTextParser.setVerticalWritingDirection_","shaka.text.VttTextParser.parsedLineValueAndInterpretation_","shaka.text.VttTextParser.parseTime_","miliseconds","Mp4VttParser","shaka.text.Mp4VttParser","timescale_","shaka.text.Mp4VttParser.prototype.parseInit","sawWVTT","INVALID_MP4_VTT","shaka.text.Mp4VttParser.prototype.parseMedia","presentations","rawPayload","sawTFDT","sawTRUN","defaultDuration","parseTFHD_","parseTRUN_","presentation","totalSize","payloadType","payloadName","parseVTTC_","sampleSize","shaka.text.Mp4VttParser.parseTFHD_","shaka.text.Mp4VttParser.parseTRUN_","sampleCount","samples","sampleIndex","shaka.text.Mp4VttParser.parseVTTC_","settings","assembleCue_","shaka.text.Mp4VttParser.assembleCue_","limitCallN","limitCallCount","unsafe","getUniq","items","uniqItems","VstubParser","lin.VstubParser","playlist_","vstubUrl_","DEFAULT_SUGGESTED_PRESENTATION_DELAY_","lin.VstubParser.prototype.configure","lin.VstubParser.prototype.start","requestVstubManifest_","assetUrls","warmUpUrls","lin.VstubParser.prototype.stop","lin.VstubParser.prototype.update","lin.VstubParser.prototype.onExpirationUpdated","lin.VstubParser.prototype.requestVstubManifest_","PVSTUB","parsePlaylist_","lin.VstubParser.prototype.parsePlaylist_","VstubSchema","lookup","DASHPlayerMsg","dashPlaylist","DASHABRVstubMsg","abrPeriods","avPeriods","av","abrPeriodStub","parseVstubPeriods_","lin.VstubParser.prototype.parseVstubPeriods_","abrPeriod","parseVstubAbrPeriod_","retValue","containsInband","getCombinedDrmInfos","lin.VstubParser.prototype.getCombinedDrmInfos","vdStubs","audStubs","keySystemNames","reps","psshAtoms","pal","keySystemId","atom","lin.VstubParser.prototype.parseVstubAbrPeriod_","repr","assetInfo","streamStub","encryptionKeyId","containsEmsgBoxes","stub","auStub","vdStub","parseVstubPeriod_","lin.VstubParser.prototype.parseVstubPeriod_","prdVstub","lin.VstubParser.prototype.onUpdate_","lin.VstubParser.prototype.setUpdateTimer_","interval","lin.VstubParser.prototype.requestInitSegment_","lin.VstubParser.prototype.warmUpUrls","firstUrls","otherUrls","warmupPromises","urlPromise","warmUpUrl","first","link","lin.VstubParser.prototype.warmUpUrl","retryWarmup","donecallback","onreadystatechange","xhr.onreadystatechange","nativeName","englishName","mozilla","LanguageMapping","shaka.ui","ui","Localization","fallbackLocale","fallbackLocale_","currentMap_","currentLocales_","localizations_","events_","shaka.ui.Localization","changeLocale","locales","updateCurrentMap_","LOCALE_CHANGED","UNKNOWN_LOCALES","insert","localizations","conflictResolution","ConflictResolution","USE_NEW","table","LOCALE_UPDATED","resolveDictionary","dictionary","UNKNOWN_LOCALIZATION","preferredLocales","localeOrder","siblings","mergeOrder","reverse","allKeys","findMissingKeys_","MISSING_LOCALIZATIONS","shaka.ui.Locales","shaka.ui.Locales.Ids","Locales","shaka.ui.Locales.apply","localization","Ids","ARIA_LABEL_BACK","ARIA_LABEL_CAPTIONS","ARIA_LABEL_CAST","ARIA_LABEL_EXIT_FULL_SCREEN","ARIA_LABEL_FAST_FORWARD","ARIA_LABEL_FULL_SCREEN","ARIA_LABEL_LANGUAGE","ARIA_LABEL_LIVE","ARIA_LABEL_MORE_SETTINGS","ARIA_LABEL_MUTE","ARIA_LABEL_PAUSE","ARIA_LABEL_PLAY","ARIA_LABEL_RESOLUTION","ARIA_LABEL_REWIND","ARIA_LABEL_SEEK","ARIA_LABEL_UNMUTE","ARIA_LABEL_VOLUME","LABEL_AUTO_QUALITY","LABEL_CAPTIONS","LABEL_CAPTIONS_OFF","LABEL_CAST","LABEL_LANGUAGE","LABEL_LIVE","LABEL_MULTIPLE_LANGUAGES","LABEL_NOT_APPLICABLE","LABEL_NOT_CASTING","LABEL_RESOLUTION","LABEL_UNKNOWN_LANGUAGE","shaka.ui.Utils","getFirstDescendantWithClassName","shaka.ui.Utils.getFirstDescendantWithClassName","className","descendant","getDescendantIfExists","shaka.ui.Utils.getDescendantIfExists","childrenWithClassName","getElementsByClassName","isTsContent","shaka.ui.Utils.isTsContent","activeTrack","activeTracks","Controls","shaka.ui.Controls","videoContainer","elementNamesToFunctions_","addCurrentTime_","addMuteButton_","addVolumeBar_","addFullscreenButton_","addOverflowMenuButton_","addCaptionButton_","addCastButton_","addRewindButton_","addFastForwardButton_","addResolutionButton_","addLanguagesButton_","overrideCssShowControls_","castProxy_","castReceiverAppId","castAllowed_","videoContainer_","isSeeking_","trickPlayRate_","lastTouchEventTime_","mouseStillTimeoutId_","seekTimeoutId_","localization_","createLocalization_","createDOM_","LocIds","ariaLabels_","seekBar_","captionButton_","backFromCaptionsButton_","backFromResolutionButton_","backFromLanguageButton_","rewindButton_","fastForwardButton_","resolutionButton_","languagesButton_","castButton_","volumeBar_","overflowMenuButton_","textContentToLocalize_","captionsNameSpan_","backFromCaptionsSpan_","captionsOffSpan_","castNameSpan_","backFromResolutionSpan_","resolutionNameSpan_","abrOnSpan_","languageNameSpan_","backFromLanguageSpan_","updateLocalizedStrings_","timeAndSeekRangeTimer_","updateTimeAndSeekRange_","addEventListeners_","hideSettingsMenusTimer_","hideSettingsMenus_","onCaptionStateChange_","onCastStatusChange_","shaka.ui.Controls.prototype.destroy","shaka.ui.Controls.prototype.updateLocalizedStrings_","ARIA_LABEL_","playButton_","playButtonAriaLabelId","muteButton_","muteButtonAriaLabelId","fullscreenButton_","fullscreenElement","fullscreenAriaLabel","setCurrentCastSelection_","updateResolutionSelection_","updateTextLanguages_","initOptionalElementsToNull_","shaka.ui.Controls.prototype.initOptionalElementsToNull_","castCurrentSelectionSpan_","currentCaptions_","currentAudioLanguage_","currentResolution_","textLangMenu_","audioLangMenu_","resolutionMenu_","castIcon_","currentTime_","captionIcon_","shaka.ui.Controls.prototype.createDOM_","classList","addControlsContainer_","addPlayButton_","addBufferingSpinner_","addControlsButtonPanel_","addOverflowMenu_","addSeekBar","addSeekBar_","backToOverflowMenuButtons_","settingsMenus_","menu","shaka.ui.Controls.prototype.addControlsContainer_","controlsContainer_","shaka.ui.Controls.prototype.addPlayButton_","playButtonContainer","shaka.ui.Controls.prototype.addBufferingSpinner_","bufferingSpinner_","spinnerSvg","createElementNS","xmlns","spinnerCircle","shaka.ui.Controls.prototype.addControlsButtonPanel_","controlsButtonPanel_","controlPanelElements","controlPanelElements_","shaka.ui.Controls.prototype.addEventListeners_","onBufferingStateChange_","onKeyDown_","onPlayStateChange_","adaptPlayButtonSize","resizePlayButtonAndSpinner_","onSeekStart_","passive","onSeekInput_","onSeekEnd_","onMuteButtonClick_","onVolumeInput_","onVolumeStateChange_","onCaptionClick_","onTracksChange_","onVariantChange_","onFullscreenClick_","onCurrentTimeClick_","onRewindClick_","onFastForwardClick_","onCastClick_","onContainerTouch_","onContainerClick_","overflowMenu_","noPropagationElements","showControlsElements","onOverflowMenuButtonClick_","onResolutionClick_","onLanguagesClick_","onMouseMove_","onMouseOut_","anySettingsMenusAreOpen_","onKeyUp_","button","setDisplay_","focus","screen","orientation","onScreenRotation_","shaka.ui.Controls.prototype.addSeekBar_","shaka.ui.Controls.prototype.addOverflowMenu_","overflowMenuButtons","overflowButtons_","addResolutionMenu_","addAudioLangMenu_","addTextLangMenu_","shaka.ui.Controls.prototype.addCurrentTime_","timeContainer","shaka.ui.Controls.prototype.addMuteButton_","shaka.ui.Controls.prototype.addVolumeBar_","shaka.ui.Controls.prototype.addFullscreenButton_","shaka.ui.Controls.prototype.addOverflowMenuButton_","shaka.ui.Controls.prototype.addCaptionButton_","shaka.ui.Controls.prototype.addTextLangMenu_","backIcon","off","chosenIcon","shaka.ui.Controls.prototype.addCastButton_","shaka.ui.Controls.prototype.addRewindButton_","shaka.ui.Controls.prototype.addFastForwardButton_","shaka.ui.Controls.prototype.addResolutionMenu_","auto","shaka.ui.Controls.prototype.addResolutionButton_","icon","shaka.ui.Controls.prototype.addAudioLangMenu_","shaka.ui.Controls.prototype.addLanguagesButton_","setChosenLanguageName_","shaka.ui.Controls.prototype.setChosenLanguageName_","languageName","resolveSpecialLanguageCode_","allowCast","shaka.ui.Controls.prototype.allowCast","allow","loadComplete","shaka.ui.Controls.prototype.loadComplete","setEnabledShakaControls","shaka.ui.Controls.prototype.setEnabledShakaControls","parentElement","controls","setEnabledNativeControls","shaka.ui.Controls.prototype.setEnabledNativeControls","getCastProxy","shaka.ui.Controls.prototype.getCastProxy","getLocalization","shaka.ui.Controls.prototype.getLocalization","shaka.ui.Controls.prototype.onScreenRotation_","shaka.ui.Controls.prototype.onMouseMove_","setControlsOpacity_","opacity_","OPAQUE","onMouseStill_","shaka.ui.Controls.prototype.onMouseOut_","shaka.ui.Controls.prototype.onMouseStill_","TRANSPARENT","shaka.ui.Controls.prototype.onContainerTouch_","isOpaque_","shaka.ui.Controls.prototype.onContainerClick_","onPlayPauseClick_","shaka.ui.Controls.prototype.onPlayPauseClick_","shaka.ui.Controls.prototype.onPlayStateChange_","shaka.ui.Controls.prototype.onSeekStart_","shaka.ui.Controls.prototype.onSeekInput_","onSeekInputTimeout_","shaka.ui.Controls.prototype.onSeekInputTimeout_","shaka.ui.Controls.prototype.onSeekEnd_","shaka.ui.Controls.prototype.onKeyUp_","activeElement","isVolumeBar","isSeekBar","seek_","shaka.ui.Controls.prototype.onMuteButtonClick_","shaka.ui.Controls.prototype.onVolumeStateChange_","gradient","VOLUME_BAR_VOLUME_LEVEL_COLOR_","VOLUME_BAR_BASE_COLOR_","background","shaka.ui.Controls.prototype.onVolumeInput_","shaka.ui.Controls.prototype.onCaptionClick_","focusOnTheChosenItem_","shaka.ui.Controls.prototype.onResolutionClick_","shaka.ui.Controls.prototype.onLanguagesClick_","shaka.ui.Controls.prototype.onTracksChange_","hasText","updateAudioLanguages_","shaka.ui.Controls.prototype.onVariantChange_","shaka.ui.Controls.prototype.updateResolutionSelection_","t1","t2","selectedTrack","backButton","firstChild","abrEnabled","onTrackSelected_","span","chosenIcon_","autoButton","autoSpan","shaka.ui.Controls.prototype.updateAudioLanguages_","languagesAndRoles","langAndRole","updateLanguages_","onAudioLanguageSelected_","shaka.ui.Controls.prototype.updateTextLanguages_","onTextLanguageSelected_","offButton","shaka.ui.Controls.prototype.updateLanguages_","langMenu","onLanguageSelected","updateChosen","currentSelectionElement","shaka.ui.Controls.prototype.onTrackSelected_","shaka.ui.Controls.prototype.onAudioLanguageSelected_","shaka.ui.Controls.prototype.onTextLanguageSelected_","shaka.ui.Controls.prototype.focusOnTheChosenItem_","chosenItem","shaka.ui.Controls.prototype.chosenIcon_","shaka.ui.Controls.prototype.onCaptionStateChange_","shaka.ui.Controls.prototype.onFullscreenClick_","shaka.ui.Controls.prototype.onCurrentTimeClick_","shaka.ui.Controls.prototype.onRewindClick_","shaka.ui.Controls.prototype.onFastForwardClick_","shaka.ui.Controls.prototype.onCastClick_","disabled","errorDetails","shaka.ui.Controls.prototype.onOverflowMenuButtonClick_","isDisplayed","visibleElements","shaka.ui.Controls.prototype.onCastStatusChange_","shaka.ui.Controls.prototype.onBufferingStateChange_","classToRemove","classToAdd","shaka.ui.Controls.prototype.setCurrentCastSelection_","shaka.ui.Controls.prototype.isOpaque_","shaka.ui.Controls.prototype.seek_","shaka.ui.Controls.prototype.updateTimeAndSeekRange_","displayTime","bufferedLength","bufferedStart","seekRangeSize","behindLive","showHour","buildTimeString_","MIN_SEEK_WINDOW_TO_SHOW_SEEKBAR_","bufferStartFraction","clampedBufferStart","bufferEndFraction","clampedBufferEnd","playheadFraction","SEEK_BAR_BASE_COLOR_","SEEK_BAR_PLAYED_COLOR_","SEEK_BAR_BUFFERED_COLOR_","shaka.ui.Controls.prototype.buildTimeString_","h","shaka.ui.Controls.prototype.resizePlayButtonAndSpinner_","clientWidth","clientHeight","sizingRatio","LARGE_PLAY_BUTTON_SIZE_RATIO_","SIZING_MEDIUM_THRESHHOLD_","SMALL_PLAY_BUTTON_SIZE_RATIO_","SIZING_LARGE_THRESHHOLD_","MEDIUM_PLAY_BUTTON_SIZE_RATIO_","playButtonSize","MIN_PLAY_BUTTON_WIDTH_","minDimention","delimeter","BUFFERING_SPINNER_DELIMETER_","spinnerSize","shaka.ui.Controls.prototype.onKeyDown_","keyCode","KEYCODE_TAB_","onMouseDown_","KEYCODE_ESCAPE_","shaka.ui.Controls.prototype.onMouseDown_","shaka.ui.Controls.setDisplay_","display","shaka.ui.Controls.prototype.hideSettingsMenus_","shaka.ui.Controls.prototype.anySettingsMenusAreOpen_","shaka.ui.Controls.prototype.setControlsOpacity_","opacity","shaka.ui.Controls.createLocalization_","shaka.ui.Controls.resolveSpecialLanguageCode_","Overlay","shaka.ui.Overlay","controls_","shaka.ui.Overlay.prototype.getPlayer","getControls","shaka.ui.Overlay.prototype.getControls","setEnabled","shaka.ui.Overlay.prototype.setEnabled","shaka.ui.Overlay.prototype.defaultConfig_","scanPageForShakaElements_","shaka.ui.Overlay.scanPageForShakaElements_","containers","querySelectorAll","replaceChild","castAppId","createUI_","videoAsMediaElement","uiLoadedEvent","shaka.ui.Overlay.createUI_"]
}
